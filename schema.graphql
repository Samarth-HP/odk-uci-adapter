schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'.
"""
input Float_comparison_exp {
  _eq: Float
  _gt: Float
  _gte: Float
  _in: [Float!]
  _is_null: Boolean
  _lt: Float
  _lte: Float
  _neq: Float
  _nin: [Float!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
columns and relationships of "Quiz_beforeWeek21"
"""
type Quiz_beforeWeek21 {
  Lessthan2quiztaken: String
  id: Int
}

"""
columns and relationships of "Quiz_beforeWeek21_2"
"""
type Quiz_beforeWeek21_2 {
  Lessthan5quiztaken: String
  id: Int
}

"""
aggregated selection of "Quiz_beforeWeek21_2"
"""
type Quiz_beforeWeek21_2_aggregate {
  aggregate: Quiz_beforeWeek21_2_aggregate_fields
  nodes: [Quiz_beforeWeek21_2!]!
}

"""
aggregate fields of "Quiz_beforeWeek21_2"
"""
type Quiz_beforeWeek21_2_aggregate_fields {
  avg: Quiz_beforeWeek21_2_avg_fields
  count(columns: [Quiz_beforeWeek21_2_select_column!], distinct: Boolean): Int!
  max: Quiz_beforeWeek21_2_max_fields
  min: Quiz_beforeWeek21_2_min_fields
  stddev: Quiz_beforeWeek21_2_stddev_fields
  stddev_pop: Quiz_beforeWeek21_2_stddev_pop_fields
  stddev_samp: Quiz_beforeWeek21_2_stddev_samp_fields
  sum: Quiz_beforeWeek21_2_sum_fields
  var_pop: Quiz_beforeWeek21_2_var_pop_fields
  var_samp: Quiz_beforeWeek21_2_var_samp_fields
  variance: Quiz_beforeWeek21_2_variance_fields
}

"""aggregate avg on columns"""
type Quiz_beforeWeek21_2_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "Quiz_beforeWeek21_2". All fields are combined with a logical 'AND'.
"""
input Quiz_beforeWeek21_2_bool_exp {
  Lessthan5quiztaken: String_comparison_exp
  _and: [Quiz_beforeWeek21_2_bool_exp!]
  _not: Quiz_beforeWeek21_2_bool_exp
  _or: [Quiz_beforeWeek21_2_bool_exp!]
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "Quiz_beforeWeek21_2"
"""
input Quiz_beforeWeek21_2_inc_input {
  id: Int
}

"""
input type for inserting data into table "Quiz_beforeWeek21_2"
"""
input Quiz_beforeWeek21_2_insert_input {
  Lessthan5quiztaken: String
  id: Int
}

"""aggregate max on columns"""
type Quiz_beforeWeek21_2_max_fields {
  Lessthan5quiztaken: String
  id: Int
}

"""aggregate min on columns"""
type Quiz_beforeWeek21_2_min_fields {
  Lessthan5quiztaken: String
  id: Int
}

"""
response of any mutation on the table "Quiz_beforeWeek21_2"
"""
type Quiz_beforeWeek21_2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Quiz_beforeWeek21_2!]!
}

"""Ordering options when selecting data from "Quiz_beforeWeek21_2"."""
input Quiz_beforeWeek21_2_order_by {
  Lessthan5quiztaken: order_by
  id: order_by
}

"""
select columns of table "Quiz_beforeWeek21_2"
"""
enum Quiz_beforeWeek21_2_select_column {
  """column name"""
  Lessthan5quiztaken

  """column name"""
  id
}

"""
input type for updating data in table "Quiz_beforeWeek21_2"
"""
input Quiz_beforeWeek21_2_set_input {
  Lessthan5quiztaken: String
  id: Int
}

"""aggregate stddev on columns"""
type Quiz_beforeWeek21_2_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type Quiz_beforeWeek21_2_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type Quiz_beforeWeek21_2_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type Quiz_beforeWeek21_2_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type Quiz_beforeWeek21_2_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type Quiz_beforeWeek21_2_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type Quiz_beforeWeek21_2_variance_fields {
  id: Float
}

"""
aggregated selection of "Quiz_beforeWeek21"
"""
type Quiz_beforeWeek21_aggregate {
  aggregate: Quiz_beforeWeek21_aggregate_fields
  nodes: [Quiz_beforeWeek21!]!
}

"""
aggregate fields of "Quiz_beforeWeek21"
"""
type Quiz_beforeWeek21_aggregate_fields {
  avg: Quiz_beforeWeek21_avg_fields
  count(columns: [Quiz_beforeWeek21_select_column!], distinct: Boolean): Int!
  max: Quiz_beforeWeek21_max_fields
  min: Quiz_beforeWeek21_min_fields
  stddev: Quiz_beforeWeek21_stddev_fields
  stddev_pop: Quiz_beforeWeek21_stddev_pop_fields
  stddev_samp: Quiz_beforeWeek21_stddev_samp_fields
  sum: Quiz_beforeWeek21_sum_fields
  var_pop: Quiz_beforeWeek21_var_pop_fields
  var_samp: Quiz_beforeWeek21_var_samp_fields
  variance: Quiz_beforeWeek21_variance_fields
}

"""aggregate avg on columns"""
type Quiz_beforeWeek21_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "Quiz_beforeWeek21". All fields are combined with a logical 'AND'.
"""
input Quiz_beforeWeek21_bool_exp {
  Lessthan2quiztaken: String_comparison_exp
  _and: [Quiz_beforeWeek21_bool_exp!]
  _not: Quiz_beforeWeek21_bool_exp
  _or: [Quiz_beforeWeek21_bool_exp!]
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "Quiz_beforeWeek21"
"""
input Quiz_beforeWeek21_inc_input {
  id: Int
}

"""
input type for inserting data into table "Quiz_beforeWeek21"
"""
input Quiz_beforeWeek21_insert_input {
  Lessthan2quiztaken: String
  id: Int
}

"""aggregate max on columns"""
type Quiz_beforeWeek21_max_fields {
  Lessthan2quiztaken: String
  id: Int
}

"""aggregate min on columns"""
type Quiz_beforeWeek21_min_fields {
  Lessthan2quiztaken: String
  id: Int
}

"""
response of any mutation on the table "Quiz_beforeWeek21"
"""
type Quiz_beforeWeek21_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Quiz_beforeWeek21!]!
}

"""Ordering options when selecting data from "Quiz_beforeWeek21"."""
input Quiz_beforeWeek21_order_by {
  Lessthan2quiztaken: order_by
  id: order_by
}

"""
select columns of table "Quiz_beforeWeek21"
"""
enum Quiz_beforeWeek21_select_column {
  """column name"""
  Lessthan2quiztaken

  """column name"""
  id
}

"""
input type for updating data in table "Quiz_beforeWeek21"
"""
input Quiz_beforeWeek21_set_input {
  Lessthan2quiztaken: String
  id: Int
}

"""aggregate stddev on columns"""
type Quiz_beforeWeek21_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type Quiz_beforeWeek21_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type Quiz_beforeWeek21_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type Quiz_beforeWeek21_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type Quiz_beforeWeek21_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type Quiz_beforeWeek21_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type Quiz_beforeWeek21_variance_fields {
  id: Float
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

scalar _varchar

"""
Boolean expression to compare columns of type "_varchar". All fields are combined with logical 'AND'.
"""
input _varchar_comparison_exp {
  _eq: _varchar
  _gt: _varchar
  _gte: _varchar
  _in: [_varchar!]
  _is_null: Boolean
  _lt: _varchar
  _lte: _varchar
  _neq: _varchar
  _nin: [_varchar!]
}

"""
columns and relationships of "activeusers2"
"""
type activeusers2 {
  case: String
  id: Int
}

"""
aggregated selection of "activeusers2"
"""
type activeusers2_aggregate {
  aggregate: activeusers2_aggregate_fields
  nodes: [activeusers2!]!
}

"""
aggregate fields of "activeusers2"
"""
type activeusers2_aggregate_fields {
  avg: activeusers2_avg_fields
  count(columns: [activeusers2_select_column!], distinct: Boolean): Int!
  max: activeusers2_max_fields
  min: activeusers2_min_fields
  stddev: activeusers2_stddev_fields
  stddev_pop: activeusers2_stddev_pop_fields
  stddev_samp: activeusers2_stddev_samp_fields
  sum: activeusers2_sum_fields
  var_pop: activeusers2_var_pop_fields
  var_samp: activeusers2_var_samp_fields
  variance: activeusers2_variance_fields
}

"""aggregate avg on columns"""
type activeusers2_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "activeusers2". All fields are combined with a logical 'AND'.
"""
input activeusers2_bool_exp {
  _and: [activeusers2_bool_exp!]
  _not: activeusers2_bool_exp
  _or: [activeusers2_bool_exp!]
  case: String_comparison_exp
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "activeusers2"
"""
input activeusers2_inc_input {
  id: Int
}

"""
input type for inserting data into table "activeusers2"
"""
input activeusers2_insert_input {
  case: String
  id: Int
}

"""aggregate max on columns"""
type activeusers2_max_fields {
  case: String
  id: Int
}

"""aggregate min on columns"""
type activeusers2_min_fields {
  case: String
  id: Int
}

"""
response of any mutation on the table "activeusers2"
"""
type activeusers2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [activeusers2!]!
}

"""Ordering options when selecting data from "activeusers2"."""
input activeusers2_order_by {
  case: order_by
  id: order_by
}

"""
select columns of table "activeusers2"
"""
enum activeusers2_select_column {
  """column name"""
  case

  """column name"""
  id
}

"""
input type for updating data in table "activeusers2"
"""
input activeusers2_set_input {
  case: String
  id: Int
}

"""aggregate stddev on columns"""
type activeusers2_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type activeusers2_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type activeusers2_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type activeusers2_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type activeusers2_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type activeusers2_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type activeusers2_variance_fields {
  id: Float
}

"""
columns and relationships of "application_daily_active_users"
"""
type application_daily_active_users {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  count: Int!

  """"""
  day: Int!
}

"""
aggregated selection of "application_daily_active_users"
"""
type application_daily_active_users_aggregate {
  """"""
  aggregate: application_daily_active_users_aggregate_fields

  """"""
  nodes: [application_daily_active_users!]!
}

"""
aggregate fields of "application_daily_active_users"
"""
type application_daily_active_users_aggregate_fields {
  """"""
  avg: application_daily_active_users_avg_fields

  """"""
  count(columns: [application_daily_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: application_daily_active_users_max_fields

  """"""
  min: application_daily_active_users_min_fields

  """"""
  stddev: application_daily_active_users_stddev_fields

  """"""
  stddev_pop: application_daily_active_users_stddev_pop_fields

  """"""
  stddev_samp: application_daily_active_users_stddev_samp_fields

  """"""
  sum: application_daily_active_users_sum_fields

  """"""
  var_pop: application_daily_active_users_var_pop_fields

  """"""
  var_samp: application_daily_active_users_var_samp_fields

  """"""
  variance: application_daily_active_users_variance_fields
}

"""
order by aggregate values of table "application_daily_active_users"
"""
input application_daily_active_users_aggregate_order_by {
  """"""
  avg: application_daily_active_users_avg_order_by

  """"""
  count: order_by

  """"""
  max: application_daily_active_users_max_order_by

  """"""
  min: application_daily_active_users_min_order_by

  """"""
  stddev: application_daily_active_users_stddev_order_by

  """"""
  stddev_pop: application_daily_active_users_stddev_pop_order_by

  """"""
  stddev_samp: application_daily_active_users_stddev_samp_order_by

  """"""
  sum: application_daily_active_users_sum_order_by

  """"""
  var_pop: application_daily_active_users_var_pop_order_by

  """"""
  var_samp: application_daily_active_users_var_samp_order_by

  """"""
  variance: application_daily_active_users_variance_order_by
}

"""
input type for inserting array relation for remote table "application_daily_active_users"
"""
input application_daily_active_users_arr_rel_insert_input {
  """"""
  data: [application_daily_active_users_insert_input!]!

  """on conflict condition"""
  on_conflict: application_daily_active_users_on_conflict
}

"""aggregate avg on columns"""
type application_daily_active_users_avg_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by avg() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_avg_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""
Boolean expression to filter rows from the table
"application_daily_active_users". All fields are combined with a logical 'AND'.
"""
input application_daily_active_users_bool_exp {
  """"""
  _and: [application_daily_active_users_bool_exp!]

  """"""
  _not: application_daily_active_users_bool_exp

  """"""
  _or: [application_daily_active_users_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  count: Int_comparison_exp

  """"""
  day: Int_comparison_exp
}

"""
unique or primary key constraints on table "application_daily_active_users"
"""
enum application_daily_active_users_constraint {
  """unique or primary key constraint"""
  application_daily_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "application_daily_active_users"
"""
input application_daily_active_users_inc_input {
  """"""
  count: Int

  """"""
  day: Int
}

"""
input type for inserting data into table "application_daily_active_users"
"""
input application_daily_active_users_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  day: Int
}

"""aggregate max on columns"""
type application_daily_active_users_max_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  day: Int
}

"""
order by max() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_max_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  day: order_by
}

"""aggregate min on columns"""
type application_daily_active_users_min_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  day: Int
}

"""
order by min() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_min_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  day: order_by
}

"""
response of any mutation on the table "application_daily_active_users"
"""
type application_daily_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [application_daily_active_users!]!
}

"""
on conflict condition type for table "application_daily_active_users"
"""
input application_daily_active_users_on_conflict {
  """"""
  constraint: application_daily_active_users_constraint!

  """"""
  update_columns: [application_daily_active_users_update_column!]!

  """"""
  where: application_daily_active_users_bool_exp
}

"""
Ordering options when selecting data from "application_daily_active_users".
"""
input application_daily_active_users_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  day: order_by
}

"""
select columns of table "application_daily_active_users"
"""
enum application_daily_active_users_select_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  day
}

"""
input type for updating data in table "application_daily_active_users"
"""
input application_daily_active_users_set_input {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  day: Int
}

"""aggregate stddev on columns"""
type application_daily_active_users_stddev_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by stddev() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_stddev_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""aggregate stddev_pop on columns"""
type application_daily_active_users_stddev_pop_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by stddev_pop() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_stddev_pop_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""aggregate stddev_samp on columns"""
type application_daily_active_users_stddev_samp_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by stddev_samp() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_stddev_samp_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""aggregate sum on columns"""
type application_daily_active_users_sum_fields {
  """"""
  count: Int

  """"""
  day: Int
}

"""
order by sum() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_sum_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""
update columns of table "application_daily_active_users"
"""
enum application_daily_active_users_update_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  day
}

"""aggregate var_pop on columns"""
type application_daily_active_users_var_pop_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by var_pop() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_var_pop_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""aggregate var_samp on columns"""
type application_daily_active_users_var_samp_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by var_samp() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_var_samp_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""aggregate variance on columns"""
type application_daily_active_users_variance_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
order by variance() on columns of table "application_daily_active_users"
"""
input application_daily_active_users_variance_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""
columns and relationships of "application_monthly_active_users"
"""
type application_monthly_active_users {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  count: Int!

  """"""
  month: Int!
}

"""
aggregated selection of "application_monthly_active_users"
"""
type application_monthly_active_users_aggregate {
  """"""
  aggregate: application_monthly_active_users_aggregate_fields

  """"""
  nodes: [application_monthly_active_users!]!
}

"""
aggregate fields of "application_monthly_active_users"
"""
type application_monthly_active_users_aggregate_fields {
  """"""
  avg: application_monthly_active_users_avg_fields

  """"""
  count(columns: [application_monthly_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: application_monthly_active_users_max_fields

  """"""
  min: application_monthly_active_users_min_fields

  """"""
  stddev: application_monthly_active_users_stddev_fields

  """"""
  stddev_pop: application_monthly_active_users_stddev_pop_fields

  """"""
  stddev_samp: application_monthly_active_users_stddev_samp_fields

  """"""
  sum: application_monthly_active_users_sum_fields

  """"""
  var_pop: application_monthly_active_users_var_pop_fields

  """"""
  var_samp: application_monthly_active_users_var_samp_fields

  """"""
  variance: application_monthly_active_users_variance_fields
}

"""
order by aggregate values of table "application_monthly_active_users"
"""
input application_monthly_active_users_aggregate_order_by {
  """"""
  avg: application_monthly_active_users_avg_order_by

  """"""
  count: order_by

  """"""
  max: application_monthly_active_users_max_order_by

  """"""
  min: application_monthly_active_users_min_order_by

  """"""
  stddev: application_monthly_active_users_stddev_order_by

  """"""
  stddev_pop: application_monthly_active_users_stddev_pop_order_by

  """"""
  stddev_samp: application_monthly_active_users_stddev_samp_order_by

  """"""
  sum: application_monthly_active_users_sum_order_by

  """"""
  var_pop: application_monthly_active_users_var_pop_order_by

  """"""
  var_samp: application_monthly_active_users_var_samp_order_by

  """"""
  variance: application_monthly_active_users_variance_order_by
}

"""
input type for inserting array relation for remote table "application_monthly_active_users"
"""
input application_monthly_active_users_arr_rel_insert_input {
  """"""
  data: [application_monthly_active_users_insert_input!]!

  """on conflict condition"""
  on_conflict: application_monthly_active_users_on_conflict
}

"""aggregate avg on columns"""
type application_monthly_active_users_avg_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by avg() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_avg_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""
Boolean expression to filter rows from the table
"application_monthly_active_users". All fields are combined with a logical 'AND'.
"""
input application_monthly_active_users_bool_exp {
  """"""
  _and: [application_monthly_active_users_bool_exp!]

  """"""
  _not: application_monthly_active_users_bool_exp

  """"""
  _or: [application_monthly_active_users_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  count: Int_comparison_exp

  """"""
  month: Int_comparison_exp
}

"""
unique or primary key constraints on table "application_monthly_active_users"
"""
enum application_monthly_active_users_constraint {
  """unique or primary key constraint"""
  application_monthly_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "application_monthly_active_users"
"""
input application_monthly_active_users_inc_input {
  """"""
  count: Int

  """"""
  month: Int
}

"""
input type for inserting data into table "application_monthly_active_users"
"""
input application_monthly_active_users_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  month: Int
}

"""aggregate max on columns"""
type application_monthly_active_users_max_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  month: Int
}

"""
order by max() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_max_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  month: order_by
}

"""aggregate min on columns"""
type application_monthly_active_users_min_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  month: Int
}

"""
order by min() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_min_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  month: order_by
}

"""
response of any mutation on the table "application_monthly_active_users"
"""
type application_monthly_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [application_monthly_active_users!]!
}

"""
on conflict condition type for table "application_monthly_active_users"
"""
input application_monthly_active_users_on_conflict {
  """"""
  constraint: application_monthly_active_users_constraint!

  """"""
  update_columns: [application_monthly_active_users_update_column!]!

  """"""
  where: application_monthly_active_users_bool_exp
}

"""
Ordering options when selecting data from "application_monthly_active_users".
"""
input application_monthly_active_users_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  month: order_by
}

"""
select columns of table "application_monthly_active_users"
"""
enum application_monthly_active_users_select_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  month
}

"""
input type for updating data in table "application_monthly_active_users"
"""
input application_monthly_active_users_set_input {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  month: Int
}

"""aggregate stddev on columns"""
type application_monthly_active_users_stddev_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by stddev() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_stddev_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""aggregate stddev_pop on columns"""
type application_monthly_active_users_stddev_pop_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by stddev_pop() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_stddev_pop_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""aggregate stddev_samp on columns"""
type application_monthly_active_users_stddev_samp_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by stddev_samp() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_stddev_samp_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""aggregate sum on columns"""
type application_monthly_active_users_sum_fields {
  """"""
  count: Int

  """"""
  month: Int
}

"""
order by sum() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_sum_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""
update columns of table "application_monthly_active_users"
"""
enum application_monthly_active_users_update_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  month
}

"""aggregate var_pop on columns"""
type application_monthly_active_users_var_pop_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by var_pop() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_var_pop_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""aggregate var_samp on columns"""
type application_monthly_active_users_var_samp_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by var_samp() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_var_samp_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""aggregate variance on columns"""
type application_monthly_active_users_variance_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
order by variance() on columns of table "application_monthly_active_users"
"""
input application_monthly_active_users_variance_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""
columns and relationships of "application_registration_counts"
"""
type application_registration_counts {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  count: Int!

  """"""
  decremented_count: Int!

  """"""
  hour: Int!
}

"""
aggregated selection of "application_registration_counts"
"""
type application_registration_counts_aggregate {
  """"""
  aggregate: application_registration_counts_aggregate_fields

  """"""
  nodes: [application_registration_counts!]!
}

"""
aggregate fields of "application_registration_counts"
"""
type application_registration_counts_aggregate_fields {
  """"""
  avg: application_registration_counts_avg_fields

  """"""
  count(columns: [application_registration_counts_select_column!], distinct: Boolean): Int!

  """"""
  max: application_registration_counts_max_fields

  """"""
  min: application_registration_counts_min_fields

  """"""
  stddev: application_registration_counts_stddev_fields

  """"""
  stddev_pop: application_registration_counts_stddev_pop_fields

  """"""
  stddev_samp: application_registration_counts_stddev_samp_fields

  """"""
  sum: application_registration_counts_sum_fields

  """"""
  var_pop: application_registration_counts_var_pop_fields

  """"""
  var_samp: application_registration_counts_var_samp_fields

  """"""
  variance: application_registration_counts_variance_fields
}

"""
order by aggregate values of table "application_registration_counts"
"""
input application_registration_counts_aggregate_order_by {
  """"""
  avg: application_registration_counts_avg_order_by

  """"""
  count: order_by

  """"""
  max: application_registration_counts_max_order_by

  """"""
  min: application_registration_counts_min_order_by

  """"""
  stddev: application_registration_counts_stddev_order_by

  """"""
  stddev_pop: application_registration_counts_stddev_pop_order_by

  """"""
  stddev_samp: application_registration_counts_stddev_samp_order_by

  """"""
  sum: application_registration_counts_sum_order_by

  """"""
  var_pop: application_registration_counts_var_pop_order_by

  """"""
  var_samp: application_registration_counts_var_samp_order_by

  """"""
  variance: application_registration_counts_variance_order_by
}

"""
input type for inserting array relation for remote table "application_registration_counts"
"""
input application_registration_counts_arr_rel_insert_input {
  """"""
  data: [application_registration_counts_insert_input!]!

  """on conflict condition"""
  on_conflict: application_registration_counts_on_conflict
}

"""aggregate avg on columns"""
type application_registration_counts_avg_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by avg() on columns of table "application_registration_counts"
"""
input application_registration_counts_avg_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""
Boolean expression to filter rows from the table
"application_registration_counts". All fields are combined with a logical 'AND'.
"""
input application_registration_counts_bool_exp {
  """"""
  _and: [application_registration_counts_bool_exp!]

  """"""
  _not: application_registration_counts_bool_exp

  """"""
  _or: [application_registration_counts_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  count: Int_comparison_exp

  """"""
  decremented_count: Int_comparison_exp

  """"""
  hour: Int_comparison_exp
}

"""
unique or primary key constraints on table "application_registration_counts"
"""
enum application_registration_counts_constraint {
  """unique or primary key constraint"""
  application_registration_counts_uk_1
}

"""
input type for incrementing numeric columns in table "application_registration_counts"
"""
input application_registration_counts_inc_input {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
input type for inserting data into table "application_registration_counts"
"""
input application_registration_counts_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""aggregate max on columns"""
type application_registration_counts_max_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
order by max() on columns of table "application_registration_counts"
"""
input application_registration_counts_max_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""aggregate min on columns"""
type application_registration_counts_min_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
order by min() on columns of table "application_registration_counts"
"""
input application_registration_counts_min_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""
response of any mutation on the table "application_registration_counts"
"""
type application_registration_counts_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [application_registration_counts!]!
}

"""
on conflict condition type for table "application_registration_counts"
"""
input application_registration_counts_on_conflict {
  """"""
  constraint: application_registration_counts_constraint!

  """"""
  update_columns: [application_registration_counts_update_column!]!

  """"""
  where: application_registration_counts_bool_exp
}

"""
Ordering options when selecting data from "application_registration_counts".
"""
input application_registration_counts_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""
select columns of table "application_registration_counts"
"""
enum application_registration_counts_select_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  decremented_count

  """column name"""
  hour
}

"""
input type for updating data in table "application_registration_counts"
"""
input application_registration_counts_set_input {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""aggregate stddev on columns"""
type application_registration_counts_stddev_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by stddev() on columns of table "application_registration_counts"
"""
input application_registration_counts_stddev_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""aggregate stddev_pop on columns"""
type application_registration_counts_stddev_pop_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by stddev_pop() on columns of table "application_registration_counts"
"""
input application_registration_counts_stddev_pop_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""aggregate stddev_samp on columns"""
type application_registration_counts_stddev_samp_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by stddev_samp() on columns of table "application_registration_counts"
"""
input application_registration_counts_stddev_samp_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""aggregate sum on columns"""
type application_registration_counts_sum_fields {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
order by sum() on columns of table "application_registration_counts"
"""
input application_registration_counts_sum_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""
update columns of table "application_registration_counts"
"""
enum application_registration_counts_update_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  decremented_count

  """column name"""
  hour
}

"""aggregate var_pop on columns"""
type application_registration_counts_var_pop_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by var_pop() on columns of table "application_registration_counts"
"""
input application_registration_counts_var_pop_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""aggregate var_samp on columns"""
type application_registration_counts_var_samp_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by var_samp() on columns of table "application_registration_counts"
"""
input application_registration_counts_var_samp_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""aggregate variance on columns"""
type application_registration_counts_variance_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
order by variance() on columns of table "application_registration_counts"
"""
input application_registration_counts_variance_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""
columns and relationships of "application_roles"
"""
type application_roles {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  description: String

  """An array relationship"""
  group_application_roles(
    """distinct select on columns"""
    distinct_on: [group_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_application_roles_order_by!]

    """filter the rows returned"""
    where: group_application_roles_bool_exp
  ): [group_application_roles!]!

  """An aggregate relationship"""
  group_application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [group_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_application_roles_order_by!]

    """filter the rows returned"""
    where: group_application_roles_bool_exp
  ): group_application_roles_aggregate!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  is_default: Boolean!

  """"""
  is_super_role: Boolean!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """An array relationship"""
  user_registrations_application_roles(
    """distinct select on columns"""
    distinct_on: [user_registrations_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_application_roles_order_by!]

    """filter the rows returned"""
    where: user_registrations_application_roles_bool_exp
  ): [user_registrations_application_roles!]!

  """An aggregate relationship"""
  user_registrations_application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_registrations_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_application_roles_order_by!]

    """filter the rows returned"""
    where: user_registrations_application_roles_bool_exp
  ): user_registrations_application_roles_aggregate!
}

"""
aggregated selection of "application_roles"
"""
type application_roles_aggregate {
  """"""
  aggregate: application_roles_aggregate_fields

  """"""
  nodes: [application_roles!]!
}

"""
aggregate fields of "application_roles"
"""
type application_roles_aggregate_fields {
  """"""
  avg: application_roles_avg_fields

  """"""
  count(columns: [application_roles_select_column!], distinct: Boolean): Int!

  """"""
  max: application_roles_max_fields

  """"""
  min: application_roles_min_fields

  """"""
  stddev: application_roles_stddev_fields

  """"""
  stddev_pop: application_roles_stddev_pop_fields

  """"""
  stddev_samp: application_roles_stddev_samp_fields

  """"""
  sum: application_roles_sum_fields

  """"""
  var_pop: application_roles_var_pop_fields

  """"""
  var_samp: application_roles_var_samp_fields

  """"""
  variance: application_roles_variance_fields
}

"""
order by aggregate values of table "application_roles"
"""
input application_roles_aggregate_order_by {
  """"""
  avg: application_roles_avg_order_by

  """"""
  count: order_by

  """"""
  max: application_roles_max_order_by

  """"""
  min: application_roles_min_order_by

  """"""
  stddev: application_roles_stddev_order_by

  """"""
  stddev_pop: application_roles_stddev_pop_order_by

  """"""
  stddev_samp: application_roles_stddev_samp_order_by

  """"""
  sum: application_roles_sum_order_by

  """"""
  var_pop: application_roles_var_pop_order_by

  """"""
  var_samp: application_roles_var_samp_order_by

  """"""
  variance: application_roles_variance_order_by
}

"""
input type for inserting array relation for remote table "application_roles"
"""
input application_roles_arr_rel_insert_input {
  """"""
  data: [application_roles_insert_input!]!

  """on conflict condition"""
  on_conflict: application_roles_on_conflict
}

"""aggregate avg on columns"""
type application_roles_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "application_roles"
"""
input application_roles_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "application_roles". All fields are combined with a logical 'AND'.
"""
input application_roles_bool_exp {
  """"""
  _and: [application_roles_bool_exp!]

  """"""
  _not: application_roles_bool_exp

  """"""
  _or: [application_roles_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  description: String_comparison_exp

  """"""
  group_application_roles: group_application_roles_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  is_default: Boolean_comparison_exp

  """"""
  is_super_role: Boolean_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  user_registrations_application_roles: user_registrations_application_roles_bool_exp
}

"""
unique or primary key constraints on table "application_roles"
"""
enum application_roles_constraint {
  """unique or primary key constraint"""
  application_roles_pkey

  """unique or primary key constraint"""
  application_roles_uk_1
}

"""
input type for incrementing numeric columns in table "application_roles"
"""
input application_roles_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "application_roles"
"""
input application_roles_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  description: String

  """"""
  group_application_roles: group_application_roles_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  is_default: Boolean

  """"""
  is_super_role: Boolean

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  user_registrations_application_roles: user_registrations_application_roles_arr_rel_insert_input
}

"""aggregate max on columns"""
type application_roles_max_fields {
  """"""
  applications_id: uuid

  """"""
  description: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
order by max() on columns of table "application_roles"
"""
input application_roles_max_order_by {
  """"""
  applications_id: order_by

  """"""
  description: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""aggregate min on columns"""
type application_roles_min_fields {
  """"""
  applications_id: uuid

  """"""
  description: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
order by min() on columns of table "application_roles"
"""
input application_roles_min_order_by {
  """"""
  applications_id: order_by

  """"""
  description: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""
response of any mutation on the table "application_roles"
"""
type application_roles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [application_roles!]!
}

"""
input type for inserting object relation for remote table "application_roles"
"""
input application_roles_obj_rel_insert_input {
  """"""
  data: application_roles_insert_input!

  """on conflict condition"""
  on_conflict: application_roles_on_conflict
}

"""
on conflict condition type for table "application_roles"
"""
input application_roles_on_conflict {
  """"""
  constraint: application_roles_constraint!

  """"""
  update_columns: [application_roles_update_column!]!

  """"""
  where: application_roles_bool_exp
}

"""Ordering options when selecting data from "application_roles"."""
input application_roles_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  description: order_by

  """"""
  group_application_roles_aggregate: group_application_roles_aggregate_order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  is_default: order_by

  """"""
  is_super_role: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  user_registrations_application_roles_aggregate: user_registrations_application_roles_aggregate_order_by
}

"""primary key columns input for table: application_roles"""
input application_roles_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "application_roles"
"""
enum application_roles_select_column {
  """column name"""
  applications_id

  """column name"""
  description

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  is_default

  """column name"""
  is_super_role

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""
input type for updating data in table "application_roles"
"""
input application_roles_set_input {
  """"""
  applications_id: uuid

  """"""
  description: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  is_default: Boolean

  """"""
  is_super_role: Boolean

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate stddev on columns"""
type application_roles_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "application_roles"
"""
input application_roles_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type application_roles_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "application_roles"
"""
input application_roles_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type application_roles_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "application_roles"
"""
input application_roles_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type application_roles_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "application_roles"
"""
input application_roles_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "application_roles"
"""
enum application_roles_update_column {
  """column name"""
  applications_id

  """column name"""
  description

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  is_default

  """column name"""
  is_super_role

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type application_roles_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "application_roles"
"""
input application_roles_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type application_roles_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "application_roles"
"""
input application_roles_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type application_roles_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "application_roles"
"""
input application_roles_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "applications"
"""
type applications {
  """"""
  access_token_populate_lambdas_id: uuid

  """"""
  access_token_signing_keys_id: uuid

  """"""
  active: Boolean!

  """An array relationship"""
  application_daily_active_users(
    """distinct select on columns"""
    distinct_on: [application_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_daily_active_users_order_by!]

    """filter the rows returned"""
    where: application_daily_active_users_bool_exp
  ): [application_daily_active_users!]!

  """An aggregate relationship"""
  application_daily_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [application_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_daily_active_users_order_by!]

    """filter the rows returned"""
    where: application_daily_active_users_bool_exp
  ): application_daily_active_users_aggregate!

  """An array relationship"""
  application_monthly_active_users(
    """distinct select on columns"""
    distinct_on: [application_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: application_monthly_active_users_bool_exp
  ): [application_monthly_active_users!]!

  """An aggregate relationship"""
  application_monthly_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [application_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: application_monthly_active_users_bool_exp
  ): application_monthly_active_users_aggregate!

  """An array relationship"""
  application_registration_counts(
    """distinct select on columns"""
    distinct_on: [application_registration_counts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_registration_counts_order_by!]

    """filter the rows returned"""
    where: application_registration_counts_bool_exp
  ): [application_registration_counts!]!

  """An aggregate relationship"""
  application_registration_counts_aggregate(
    """distinct select on columns"""
    distinct_on: [application_registration_counts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_registration_counts_order_by!]

    """filter the rows returned"""
    where: application_registration_counts_bool_exp
  ): application_registration_counts_aggregate!

  """An array relationship"""
  application_roles(
    """distinct select on columns"""
    distinct_on: [application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_roles_order_by!]

    """filter the rows returned"""
    where: application_roles_bool_exp
  ): [application_roles!]!

  """An aggregate relationship"""
  application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_roles_order_by!]

    """filter the rows returned"""
    where: application_roles_bool_exp
  ): application_roles_aggregate!

  """An array relationship"""
  clean_speak_applications(
    """distinct select on columns"""
    distinct_on: [clean_speak_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clean_speak_applications_order_by!]

    """filter the rows returned"""
    where: clean_speak_applications_bool_exp
  ): [clean_speak_applications!]!

  """An aggregate relationship"""
  clean_speak_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [clean_speak_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clean_speak_applications_order_by!]

    """filter the rows returned"""
    where: clean_speak_applications_bool_exp
  ): clean_speak_applications_aggregate!

  """"""
  data: String!

  """An object relationship"""
  emailTemplateByEmailVerificationEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateByPasswordlessEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates!

  """An object relationship"""
  email_template: email_templates!

  """"""
  email_verification_email_templates_id: uuid

  """An array relationship"""
  external_identifiers(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): [external_identifiers!]!

  """An aggregate relationship"""
  external_identifiers_aggregate(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): external_identifiers_aggregate!

  """"""
  forgot_password_email_templates_id: uuid

  """An object relationship"""
  form: forms!

  """"""
  forms_id: uuid

  """An array relationship"""
  hourly_logins(
    """distinct select on columns"""
    distinct_on: [hourly_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hourly_logins_order_by!]

    """filter the rows returned"""
    where: hourly_logins_bool_exp
  ): [hourly_logins!]!

  """An aggregate relationship"""
  hourly_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [hourly_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hourly_logins_order_by!]

    """filter the rows returned"""
    where: hourly_logins_bool_exp
  ): hourly_logins_aggregate!

  """"""
  id: uuid!

  """"""
  id_token_populate_lambdas_id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """
  fetch data from the table: "identity_providers_applications"
  """
  identity_providers_applications(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): [identity_providers_applications!]!

  """An aggregate relationship"""
  identity_providers_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): identity_providers_applications_aggregate!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  key: keys!

  """An object relationship"""
  keyByAccessTokenSigningKeysId: keys!

  """An object relationship"""
  keyBySamlv2KeysId: keys!

  """An object relationship"""
  lambda: lambdas!

  """An object relationship"""
  lambdaByAccessTokenPopulateLambdasId: lambdas!

  """An object relationship"""
  lambdaByIdTokenPopulateLambdasId: lambdas!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  passwordless_email_templates_id: uuid

  """An array relationship"""
  raw_logins(
    """distinct select on columns"""
    distinct_on: [raw_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_logins_order_by!]

    """filter the rows returned"""
    where: raw_logins_bool_exp
  ): [raw_logins!]!

  """An aggregate relationship"""
  raw_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_logins_order_by!]

    """filter the rows returned"""
    where: raw_logins_bool_exp
  ): raw_logins_aggregate!

  """An array relationship"""
  refresh_tokens(
    """distinct select on columns"""
    distinct_on: [refresh_tokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_tokens_order_by!]

    """filter the rows returned"""
    where: refresh_tokens_bool_exp
  ): [refresh_tokens!]!

  """An aggregate relationship"""
  refresh_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [refresh_tokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_tokens_order_by!]

    """filter the rows returned"""
    where: refresh_tokens_bool_exp
  ): refresh_tokens_aggregate!

  """"""
  samlv2_issuer: String

  """"""
  samlv2_keys_id: uuid

  """"""
  samlv2_populate_lambdas_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!

  """An array relationship"""
  user_action_logs_applications(
    """distinct select on columns"""
    distinct_on: [user_action_logs_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_applications_order_by!]

    """filter the rows returned"""
    where: user_action_logs_applications_bool_exp
  ): [user_action_logs_applications!]!

  """An aggregate relationship"""
  user_action_logs_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_applications_order_by!]

    """filter the rows returned"""
    where: user_action_logs_applications_bool_exp
  ): user_action_logs_applications_aggregate!

  """An array relationship"""
  user_registrations(
    """distinct select on columns"""
    distinct_on: [user_registrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_order_by!]

    """filter the rows returned"""
    where: user_registrations_bool_exp
  ): [user_registrations!]!

  """An aggregate relationship"""
  user_registrations_aggregate(
    """distinct select on columns"""
    distinct_on: [user_registrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_order_by!]

    """filter the rows returned"""
    where: user_registrations_bool_exp
  ): user_registrations_aggregate!

  """"""
  verification_email_templates_id: uuid

  """An array relationship"""
  webhooks_applications(
    """distinct select on columns"""
    distinct_on: [webhooks_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_applications_order_by!]

    """filter the rows returned"""
    where: webhooks_applications_bool_exp
  ): [webhooks_applications!]!

  """An aggregate relationship"""
  webhooks_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [webhooks_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_applications_order_by!]

    """filter the rows returned"""
    where: webhooks_applications_bool_exp
  ): webhooks_applications_aggregate!
}

"""
aggregated selection of "applications"
"""
type applications_aggregate {
  """"""
  aggregate: applications_aggregate_fields

  """"""
  nodes: [applications!]!
}

"""
aggregate fields of "applications"
"""
type applications_aggregate_fields {
  """"""
  avg: applications_avg_fields

  """"""
  count(columns: [applications_select_column!], distinct: Boolean): Int!

  """"""
  max: applications_max_fields

  """"""
  min: applications_min_fields

  """"""
  stddev: applications_stddev_fields

  """"""
  stddev_pop: applications_stddev_pop_fields

  """"""
  stddev_samp: applications_stddev_samp_fields

  """"""
  sum: applications_sum_fields

  """"""
  var_pop: applications_var_pop_fields

  """"""
  var_samp: applications_var_samp_fields

  """"""
  variance: applications_variance_fields
}

"""
order by aggregate values of table "applications"
"""
input applications_aggregate_order_by {
  """"""
  avg: applications_avg_order_by

  """"""
  count: order_by

  """"""
  max: applications_max_order_by

  """"""
  min: applications_min_order_by

  """"""
  stddev: applications_stddev_order_by

  """"""
  stddev_pop: applications_stddev_pop_order_by

  """"""
  stddev_samp: applications_stddev_samp_order_by

  """"""
  sum: applications_sum_order_by

  """"""
  var_pop: applications_var_pop_order_by

  """"""
  var_samp: applications_var_samp_order_by

  """"""
  variance: applications_variance_order_by
}

"""
input type for inserting array relation for remote table "applications"
"""
input applications_arr_rel_insert_input {
  """"""
  data: [applications_insert_input!]!

  """on conflict condition"""
  on_conflict: applications_on_conflict
}

"""aggregate avg on columns"""
type applications_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "applications"
"""
input applications_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "applications". All fields are combined with a logical 'AND'.
"""
input applications_bool_exp {
  """"""
  _and: [applications_bool_exp!]

  """"""
  _not: applications_bool_exp

  """"""
  _or: [applications_bool_exp!]

  """"""
  access_token_populate_lambdas_id: uuid_comparison_exp

  """"""
  access_token_signing_keys_id: uuid_comparison_exp

  """"""
  active: Boolean_comparison_exp

  """"""
  application_daily_active_users: application_daily_active_users_bool_exp

  """"""
  application_monthly_active_users: application_monthly_active_users_bool_exp

  """"""
  application_registration_counts: application_registration_counts_bool_exp

  """"""
  application_roles: application_roles_bool_exp

  """"""
  clean_speak_applications: clean_speak_applications_bool_exp

  """"""
  data: String_comparison_exp

  """"""
  emailTemplateByEmailVerificationEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateByPasswordlessEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates_bool_exp

  """"""
  email_template: email_templates_bool_exp

  """"""
  email_verification_email_templates_id: uuid_comparison_exp

  """"""
  external_identifiers: external_identifiers_bool_exp

  """"""
  forgot_password_email_templates_id: uuid_comparison_exp

  """"""
  form: forms_bool_exp

  """"""
  forms_id: uuid_comparison_exp

  """"""
  hourly_logins: hourly_logins_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  id_token_populate_lambdas_id: uuid_comparison_exp

  """"""
  id_token_signing_keys_id: uuid_comparison_exp

  """"""
  identity_providers_applications: identity_providers_applications_bool_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  key: keys_bool_exp

  """"""
  keyByAccessTokenSigningKeysId: keys_bool_exp

  """"""
  keyBySamlv2KeysId: keys_bool_exp

  """"""
  lambda: lambdas_bool_exp

  """"""
  lambdaByAccessTokenPopulateLambdasId: lambdas_bool_exp

  """"""
  lambdaByIdTokenPopulateLambdasId: lambdas_bool_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  passwordless_email_templates_id: uuid_comparison_exp

  """"""
  raw_logins: raw_logins_bool_exp

  """"""
  refresh_tokens: refresh_tokens_bool_exp

  """"""
  samlv2_issuer: String_comparison_exp

  """"""
  samlv2_keys_id: uuid_comparison_exp

  """"""
  samlv2_populate_lambdas_id: uuid_comparison_exp

  """"""
  set_password_email_templates_id: uuid_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp

  """"""
  user_action_logs_applications: user_action_logs_applications_bool_exp

  """"""
  user_registrations: user_registrations_bool_exp

  """"""
  verification_email_templates_id: uuid_comparison_exp

  """"""
  webhooks_applications: webhooks_applications_bool_exp
}

"""
unique or primary key constraints on table "applications"
"""
enum applications_constraint {
  """unique or primary key constraint"""
  applications_pkey

  """unique or primary key constraint"""
  applications_uk_1

  """unique or primary key constraint"""
  applications_uk_2
}

"""
input type for incrementing numeric columns in table "applications"
"""
input applications_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "applications"
"""
input applications_insert_input {
  """"""
  access_token_populate_lambdas_id: uuid

  """"""
  access_token_signing_keys_id: uuid

  """"""
  active: Boolean

  """"""
  application_daily_active_users: application_daily_active_users_arr_rel_insert_input

  """"""
  application_monthly_active_users: application_monthly_active_users_arr_rel_insert_input

  """"""
  application_registration_counts: application_registration_counts_arr_rel_insert_input

  """"""
  application_roles: application_roles_arr_rel_insert_input

  """"""
  clean_speak_applications: clean_speak_applications_arr_rel_insert_input

  """"""
  data: String

  """"""
  emailTemplateByEmailVerificationEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByPasswordlessEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  email_template: email_templates_obj_rel_insert_input

  """"""
  email_verification_email_templates_id: uuid

  """"""
  external_identifiers: external_identifiers_arr_rel_insert_input

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  form: forms_obj_rel_insert_input

  """"""
  forms_id: uuid

  """"""
  hourly_logins: hourly_logins_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  id_token_populate_lambdas_id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  identity_providers_applications: identity_providers_applications_arr_rel_insert_input

  """"""
  insert_instant: bigint

  """"""
  key: keys_obj_rel_insert_input

  """"""
  keyByAccessTokenSigningKeysId: keys_obj_rel_insert_input

  """"""
  keyBySamlv2KeysId: keys_obj_rel_insert_input

  """"""
  lambda: lambdas_obj_rel_insert_input

  """"""
  lambdaByAccessTokenPopulateLambdasId: lambdas_obj_rel_insert_input

  """"""
  lambdaByIdTokenPopulateLambdasId: lambdas_obj_rel_insert_input

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  passwordless_email_templates_id: uuid

  """"""
  raw_logins: raw_logins_arr_rel_insert_input

  """"""
  refresh_tokens: refresh_tokens_arr_rel_insert_input

  """"""
  samlv2_issuer: String

  """"""
  samlv2_keys_id: uuid

  """"""
  samlv2_populate_lambdas_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid

  """"""
  user_action_logs_applications: user_action_logs_applications_arr_rel_insert_input

  """"""
  user_registrations: user_registrations_arr_rel_insert_input

  """"""
  verification_email_templates_id: uuid

  """"""
  webhooks_applications: webhooks_applications_arr_rel_insert_input
}

"""aggregate max on columns"""
type applications_max_fields {
  """"""
  access_token_populate_lambdas_id: uuid

  """"""
  access_token_signing_keys_id: uuid

  """"""
  data: String

  """"""
  email_verification_email_templates_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  forms_id: uuid

  """"""
  id: uuid

  """"""
  id_token_populate_lambdas_id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  passwordless_email_templates_id: uuid

  """"""
  samlv2_issuer: String

  """"""
  samlv2_keys_id: uuid

  """"""
  samlv2_populate_lambdas_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  tenants_id: uuid

  """"""
  verification_email_templates_id: uuid
}

"""
order by max() on columns of table "applications"
"""
input applications_max_order_by {
  """"""
  access_token_populate_lambdas_id: order_by

  """"""
  access_token_signing_keys_id: order_by

  """"""
  data: order_by

  """"""
  email_verification_email_templates_id: order_by

  """"""
  forgot_password_email_templates_id: order_by

  """"""
  forms_id: order_by

  """"""
  id: order_by

  """"""
  id_token_populate_lambdas_id: order_by

  """"""
  id_token_signing_keys_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  passwordless_email_templates_id: order_by

  """"""
  samlv2_issuer: order_by

  """"""
  samlv2_keys_id: order_by

  """"""
  samlv2_populate_lambdas_id: order_by

  """"""
  set_password_email_templates_id: order_by

  """"""
  tenants_id: order_by

  """"""
  verification_email_templates_id: order_by
}

"""aggregate min on columns"""
type applications_min_fields {
  """"""
  access_token_populate_lambdas_id: uuid

  """"""
  access_token_signing_keys_id: uuid

  """"""
  data: String

  """"""
  email_verification_email_templates_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  forms_id: uuid

  """"""
  id: uuid

  """"""
  id_token_populate_lambdas_id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  passwordless_email_templates_id: uuid

  """"""
  samlv2_issuer: String

  """"""
  samlv2_keys_id: uuid

  """"""
  samlv2_populate_lambdas_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  tenants_id: uuid

  """"""
  verification_email_templates_id: uuid
}

"""
order by min() on columns of table "applications"
"""
input applications_min_order_by {
  """"""
  access_token_populate_lambdas_id: order_by

  """"""
  access_token_signing_keys_id: order_by

  """"""
  data: order_by

  """"""
  email_verification_email_templates_id: order_by

  """"""
  forgot_password_email_templates_id: order_by

  """"""
  forms_id: order_by

  """"""
  id: order_by

  """"""
  id_token_populate_lambdas_id: order_by

  """"""
  id_token_signing_keys_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  passwordless_email_templates_id: order_by

  """"""
  samlv2_issuer: order_by

  """"""
  samlv2_keys_id: order_by

  """"""
  samlv2_populate_lambdas_id: order_by

  """"""
  set_password_email_templates_id: order_by

  """"""
  tenants_id: order_by

  """"""
  verification_email_templates_id: order_by
}

"""
response of any mutation on the table "applications"
"""
type applications_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [applications!]!
}

"""
input type for inserting object relation for remote table "applications"
"""
input applications_obj_rel_insert_input {
  """"""
  data: applications_insert_input!

  """on conflict condition"""
  on_conflict: applications_on_conflict
}

"""
on conflict condition type for table "applications"
"""
input applications_on_conflict {
  """"""
  constraint: applications_constraint!

  """"""
  update_columns: [applications_update_column!]!

  """"""
  where: applications_bool_exp
}

"""Ordering options when selecting data from "applications"."""
input applications_order_by {
  """"""
  access_token_populate_lambdas_id: order_by

  """"""
  access_token_signing_keys_id: order_by

  """"""
  active: order_by

  """"""
  application_daily_active_users_aggregate: application_daily_active_users_aggregate_order_by

  """"""
  application_monthly_active_users_aggregate: application_monthly_active_users_aggregate_order_by

  """"""
  application_registration_counts_aggregate: application_registration_counts_aggregate_order_by

  """"""
  application_roles_aggregate: application_roles_aggregate_order_by

  """"""
  clean_speak_applications_aggregate: clean_speak_applications_aggregate_order_by

  """"""
  data: order_by

  """"""
  emailTemplateByEmailVerificationEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateByPasswordlessEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates_order_by

  """"""
  email_template: email_templates_order_by

  """"""
  email_verification_email_templates_id: order_by

  """"""
  external_identifiers_aggregate: external_identifiers_aggregate_order_by

  """"""
  forgot_password_email_templates_id: order_by

  """"""
  form: forms_order_by

  """"""
  forms_id: order_by

  """"""
  hourly_logins_aggregate: hourly_logins_aggregate_order_by

  """"""
  id: order_by

  """"""
  id_token_populate_lambdas_id: order_by

  """"""
  id_token_signing_keys_id: order_by

  """"""
  identity_providers_applications_aggregate: identity_providers_applications_aggregate_order_by

  """"""
  insert_instant: order_by

  """"""
  key: keys_order_by

  """"""
  keyByAccessTokenSigningKeysId: keys_order_by

  """"""
  keyBySamlv2KeysId: keys_order_by

  """"""
  lambda: lambdas_order_by

  """"""
  lambdaByAccessTokenPopulateLambdasId: lambdas_order_by

  """"""
  lambdaByIdTokenPopulateLambdasId: lambdas_order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  passwordless_email_templates_id: order_by

  """"""
  raw_logins_aggregate: raw_logins_aggregate_order_by

  """"""
  refresh_tokens_aggregate: refresh_tokens_aggregate_order_by

  """"""
  samlv2_issuer: order_by

  """"""
  samlv2_keys_id: order_by

  """"""
  samlv2_populate_lambdas_id: order_by

  """"""
  set_password_email_templates_id: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by

  """"""
  user_action_logs_applications_aggregate: user_action_logs_applications_aggregate_order_by

  """"""
  user_registrations_aggregate: user_registrations_aggregate_order_by

  """"""
  verification_email_templates_id: order_by

  """"""
  webhooks_applications_aggregate: webhooks_applications_aggregate_order_by
}

"""primary key columns input for table: applications"""
input applications_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "applications"
"""
enum applications_select_column {
  """column name"""
  access_token_populate_lambdas_id

  """column name"""
  access_token_signing_keys_id

  """column name"""
  active

  """column name"""
  data

  """column name"""
  email_verification_email_templates_id

  """column name"""
  forgot_password_email_templates_id

  """column name"""
  forms_id

  """column name"""
  id

  """column name"""
  id_token_populate_lambdas_id

  """column name"""
  id_token_signing_keys_id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  passwordless_email_templates_id

  """column name"""
  samlv2_issuer

  """column name"""
  samlv2_keys_id

  """column name"""
  samlv2_populate_lambdas_id

  """column name"""
  set_password_email_templates_id

  """column name"""
  tenants_id

  """column name"""
  verification_email_templates_id
}

"""
input type for updating data in table "applications"
"""
input applications_set_input {
  """"""
  access_token_populate_lambdas_id: uuid

  """"""
  access_token_signing_keys_id: uuid

  """"""
  active: Boolean

  """"""
  data: String

  """"""
  email_verification_email_templates_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  forms_id: uuid

  """"""
  id: uuid

  """"""
  id_token_populate_lambdas_id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  passwordless_email_templates_id: uuid

  """"""
  samlv2_issuer: String

  """"""
  samlv2_keys_id: uuid

  """"""
  samlv2_populate_lambdas_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  tenants_id: uuid

  """"""
  verification_email_templates_id: uuid
}

"""aggregate stddev on columns"""
type applications_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "applications"
"""
input applications_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type applications_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "applications"
"""
input applications_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type applications_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "applications"
"""
input applications_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type applications_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "applications"
"""
input applications_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "applications"
"""
enum applications_update_column {
  """column name"""
  access_token_populate_lambdas_id

  """column name"""
  access_token_signing_keys_id

  """column name"""
  active

  """column name"""
  data

  """column name"""
  email_verification_email_templates_id

  """column name"""
  forgot_password_email_templates_id

  """column name"""
  forms_id

  """column name"""
  id

  """column name"""
  id_token_populate_lambdas_id

  """column name"""
  id_token_signing_keys_id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  passwordless_email_templates_id

  """column name"""
  samlv2_issuer

  """column name"""
  samlv2_keys_id

  """column name"""
  samlv2_populate_lambdas_id

  """column name"""
  set_password_email_templates_id

  """column name"""
  tenants_id

  """column name"""
  verification_email_templates_id
}

"""aggregate var_pop on columns"""
type applications_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "applications"
"""
input applications_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type applications_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "applications"
"""
input applications_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type applications_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "applications"
"""
input applications_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "assessment"
"""
type assessment {
  """An array relationship"""
  assessment_au_lo_aggregates(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): [assessment_au_lo_aggregate!]!

  """An aggregate relationship"""
  assessment_au_lo_aggregates_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): assessment_au_lo_aggregate_aggregate!

  """An array relationship"""
  assessment_au_question_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): [assessment_au_question_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_question_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): assessment_au_question_aggregate_submission_aggregate!

  """An array relationship"""
  assessment_au_question_aggregates(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): [assessment_au_question_aggregate!]!

  """An aggregate relationship"""
  assessment_au_question_aggregates_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): assessment_au_question_aggregate_aggregate!

  """An object relationship"""
  assessment_builder: assessment_builder

  """An array relationship"""
  assessment_cache_v5s(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): [assessment_cache_v5!]!

  """An aggregate relationship"""
  assessment_cache_v5s_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): assessment_cache_v5_aggregate!

  """An array relationship"""
  assessment_caches(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): [assessment_cache!]!

  """An aggregate relationship"""
  assessment_caches_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): assessment_cache_aggregate!

  """An array relationship"""
  assessment_components(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): [assessment_components!]!

  """An aggregate relationship"""
  assessment_components_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): assessment_components_aggregate!

  """An array relationship"""
  assessment_ep_grades(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): [assessment_ep_grade!]!

  """An aggregate relationship"""
  assessment_ep_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): assessment_ep_grade_aggregate!

  """An array relationship"""
  assessment_ep_marks(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): [assessment_ep_marks!]!

  """An aggregate relationship"""
  assessment_ep_marks_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): assessment_ep_marks_aggregate!

  """An array relationship"""
  assessment_grades(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): [assessment_grade!]!

  """An aggregate relationship"""
  assessment_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): assessment_grade_aggregate!

  """An array relationship"""
  assessment_lo_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): [assessment_lo_bundles!]!

  """An aggregate relationship"""
  assessment_lo_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): assessment_lo_bundles_aggregate!

  """An array relationship"""
  assessment_question_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): [assessment_question_bundles!]!

  """An aggregate relationship"""
  assessment_question_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): assessment_question_bundles_aggregate!

  """An array relationship"""
  assessment_streams(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): [assessment_stream!]!

  """An aggregate relationship"""
  assessment_streams_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): assessment_stream_aggregate!

  """An array relationship"""
  assessment_subjects(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): [assessment_subjects!]!

  """An aggregate relationship"""
  assessment_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): assessment_subjects_aggregate!

  """An object relationship"""
  assessment_type: assessment_type

  """An array relationship"""
  assessment_unit_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): [assessment_unit_bundles!]!

  """An aggregate relationship"""
  assessment_unit_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): assessment_unit_bundles_aggregate!

  """An array relationship"""
  assessment_units(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): [assessment_unit!]!

  """An aggregate relationship"""
  assessment_units_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): assessment_unit_aggregate!
  builder_id: Int

  """An array relationship"""
  celery_duplicate_removes(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): [celery_duplicate_remove!]!

  """An aggregate relationship"""
  celery_duplicate_removes_aggregate(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): celery_duplicate_remove_aggregate!

  """An array relationship"""
  class_level_component_submissions(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): [class_level_component_submission!]!

  """An aggregate relationship"""
  class_level_component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): class_level_component_submission_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!

  """An array relationship"""
  component_submissions(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): [component_submission!]!

  """An aggregate relationship"""
  component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): component_submission_aggregate!
  created: timestamptz

  """An object relationship"""
  deadline: deadline
  deadline_id: Int
  end: timestamptz
  evaluation_params: String

  """An array relationship"""
  grade_assessments(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): [grade_assessment!]!

  """An aggregate relationship"""
  grade_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): grade_assessment_aggregate!
  id: Int!
  is_enabled: Boolean
  is_final: Boolean!

  """An array relationship"""
  lo_assessments(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): [lo_assessment!]!

  """An aggregate relationship"""
  lo_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): lo_assessment_aggregate!

  """An array relationship"""
  lo_submissions(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): [lo_submission!]!

  """An aggregate relationship"""
  lo_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): lo_submission_aggregate!

  """An object relationship"""
  mapping_detail: mapping_details
  mapping_id: Int

  """An array relationship"""
  mapping_submissions(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): [mapping_submission!]!

  """An aggregate relationship"""
  mapping_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): mapping_submission_aggregate!
  overall_pass_percentage: float8
  overall_total_marks: Int

  """An array relationship"""
  question_assessments(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): [question_assessment!]!

  """An aggregate relationship"""
  question_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): question_assessment_aggregate!

  """An array relationship"""
  question_submissions(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): [question_submission!]!

  """An aggregate relationship"""
  question_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): question_submission_aggregate!
  sms_template: String
  start: timestamptz

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An array relationship"""
  student_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """An aggregate relationship"""
  student_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!

  """An array relationship"""
  subject_submissions(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """An aggregate relationship"""
  subject_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!

  """An object relationship"""
  submissionTypeBySubmissionTypeV2Id: submission_type

  """An array relationship"""
  submission_summaries(
    """distinct select on columns"""
    distinct_on: [submission_summary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_summary_order_by!]

    """filter the rows returned"""
    where: submission_summary_bool_exp
  ): [submission_summary!]!

  """An aggregate relationship"""
  submission_summaries_aggregate(
    """distinct select on columns"""
    distinct_on: [submission_summary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_summary_order_by!]

    """filter the rows returned"""
    where: submission_summary_bool_exp
  ): submission_summary_aggregate!
  submission_type: String
  submission_type_v2_id: Int
  type: String!
  type_v2_id: Int
  updated: timestamptz
}

"""
aggregated selection of "assessment"
"""
type assessment_aggregate {
  aggregate: assessment_aggregate_fields
  nodes: [assessment!]!
}

"""
aggregate fields of "assessment"
"""
type assessment_aggregate_fields {
  avg: assessment_avg_fields
  count(columns: [assessment_select_column!], distinct: Boolean): Int!
  max: assessment_max_fields
  min: assessment_min_fields
  stddev: assessment_stddev_fields
  stddev_pop: assessment_stddev_pop_fields
  stddev_samp: assessment_stddev_samp_fields
  sum: assessment_sum_fields
  var_pop: assessment_var_pop_fields
  var_samp: assessment_var_samp_fields
  variance: assessment_variance_fields
}

"""
order by aggregate values of table "assessment"
"""
input assessment_aggregate_order_by {
  avg: assessment_avg_order_by
  count: order_by
  max: assessment_max_order_by
  min: assessment_min_order_by
  stddev: assessment_stddev_order_by
  stddev_pop: assessment_stddev_pop_order_by
  stddev_samp: assessment_stddev_samp_order_by
  sum: assessment_sum_order_by
  var_pop: assessment_var_pop_order_by
  var_samp: assessment_var_samp_order_by
  variance: assessment_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment"
"""
input assessment_arr_rel_insert_input {
  data: [assessment_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_on_conflict
}

"""
columns and relationships of "assessment_au_lo_aggregate"
"""
type assessment_au_lo_aggregate {
  """An object relationship"""
  assessment: assessment!

  """An array relationship"""
  assessment_au_lo_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): [assessment_au_lo_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_lo_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): assessment_au_lo_aggregate_submission_aggregate!
  assessment_id: Int!
  created: timestamptz
  id: Int!
  los_id: Int!

  """An object relationship"""
  server_logroup: server_logroup!
  updated: timestamptz
}

"""
aggregated selection of "assessment_au_lo_aggregate"
"""
type assessment_au_lo_aggregate_aggregate {
  aggregate: assessment_au_lo_aggregate_aggregate_fields
  nodes: [assessment_au_lo_aggregate!]!
}

"""
aggregate fields of "assessment_au_lo_aggregate"
"""
type assessment_au_lo_aggregate_aggregate_fields {
  avg: assessment_au_lo_aggregate_avg_fields
  count(columns: [assessment_au_lo_aggregate_select_column!], distinct: Boolean): Int!
  max: assessment_au_lo_aggregate_max_fields
  min: assessment_au_lo_aggregate_min_fields
  stddev: assessment_au_lo_aggregate_stddev_fields
  stddev_pop: assessment_au_lo_aggregate_stddev_pop_fields
  stddev_samp: assessment_au_lo_aggregate_stddev_samp_fields
  sum: assessment_au_lo_aggregate_sum_fields
  var_pop: assessment_au_lo_aggregate_var_pop_fields
  var_samp: assessment_au_lo_aggregate_var_samp_fields
  variance: assessment_au_lo_aggregate_variance_fields
}

"""
order by aggregate values of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_aggregate_order_by {
  avg: assessment_au_lo_aggregate_avg_order_by
  count: order_by
  max: assessment_au_lo_aggregate_max_order_by
  min: assessment_au_lo_aggregate_min_order_by
  stddev: assessment_au_lo_aggregate_stddev_order_by
  stddev_pop: assessment_au_lo_aggregate_stddev_pop_order_by
  stddev_samp: assessment_au_lo_aggregate_stddev_samp_order_by
  sum: assessment_au_lo_aggregate_sum_order_by
  var_pop: assessment_au_lo_aggregate_var_pop_order_by
  var_samp: assessment_au_lo_aggregate_var_samp_order_by
  variance: assessment_au_lo_aggregate_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_arr_rel_insert_input {
  data: [assessment_au_lo_aggregate_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_au_lo_aggregate_on_conflict
}

"""aggregate avg on columns"""
type assessment_au_lo_aggregate_avg_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by avg() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_avg_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_au_lo_aggregate". All fields are combined with a logical 'AND'.
"""
input assessment_au_lo_aggregate_bool_exp {
  _and: [assessment_au_lo_aggregate_bool_exp!]
  _not: assessment_au_lo_aggregate_bool_exp
  _or: [assessment_au_lo_aggregate_bool_exp!]
  assessment: assessment_bool_exp
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  los_id: Int_comparison_exp
  server_logroup: server_logroup_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_au_lo_aggregate"
"""
enum assessment_au_lo_aggregate_constraint {
  """unique or primary key constraint"""
  assessment_au_lo_aggregate_pkey
}

"""
input type for incrementing numeric columns in table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_inc_input {
  assessment_id: Int
  id: Int
  los_id: Int
}

"""
input type for inserting data into table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_arr_rel_insert_input
  assessment_id: Int
  created: timestamptz
  id: Int
  los_id: Int
  server_logroup: server_logroup_obj_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_au_lo_aggregate_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  los_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  los_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_au_lo_aggregate_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  los_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  los_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_au_lo_aggregate"
"""
type assessment_au_lo_aggregate_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_au_lo_aggregate!]!
}

"""
input type for inserting object relation for remote table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_obj_rel_insert_input {
  data: assessment_au_lo_aggregate_insert_input!

  """on conflict condition"""
  on_conflict: assessment_au_lo_aggregate_on_conflict
}

"""
on conflict condition type for table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_on_conflict {
  constraint: assessment_au_lo_aggregate_constraint!
  update_columns: [assessment_au_lo_aggregate_update_column!]! = []
  where: assessment_au_lo_aggregate_bool_exp
}

"""
Ordering options when selecting data from "assessment_au_lo_aggregate".
"""
input assessment_au_lo_aggregate_order_by {
  assessment: assessment_order_by
  assessment_au_lo_aggregate_submissions_aggregate: assessment_au_lo_aggregate_submission_aggregate_order_by
  assessment_id: order_by
  created: order_by
  id: order_by
  los_id: order_by
  server_logroup: server_logroup_order_by
  updated: order_by
}

"""primary key columns input for table: assessment_au_lo_aggregate"""
input assessment_au_lo_aggregate_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_au_lo_aggregate"
"""
enum assessment_au_lo_aggregate_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  los_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_set_input {
  assessment_id: Int
  created: timestamptz
  id: Int
  los_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_au_lo_aggregate_stddev_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by stddev() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_stddev_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_au_lo_aggregate_stddev_pop_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_au_lo_aggregate_stddev_samp_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""
columns and relationships of "assessment_au_lo_aggregate_submission"
"""
type assessment_au_lo_aggregate_submission {
  """An object relationship"""
  assessment_au_lo_aggregate: assessment_au_lo_aggregate!
  assessment_id: Int!
  created: timestamptz

  """An object relationship"""
  grade: grade!
  grade_id: Int!
  id: Int!

  """An object relationship"""
  lo: lo!
  lo_id: Int!

  """An object relationship"""
  school: school
  school_id: Int
  students_cleared: Int!
  updated: timestamptz
}

"""
aggregated selection of "assessment_au_lo_aggregate_submission"
"""
type assessment_au_lo_aggregate_submission_aggregate {
  aggregate: assessment_au_lo_aggregate_submission_aggregate_fields
  nodes: [assessment_au_lo_aggregate_submission!]!
}

"""
aggregate fields of "assessment_au_lo_aggregate_submission"
"""
type assessment_au_lo_aggregate_submission_aggregate_fields {
  avg: assessment_au_lo_aggregate_submission_avg_fields
  count(columns: [assessment_au_lo_aggregate_submission_select_column!], distinct: Boolean): Int!
  max: assessment_au_lo_aggregate_submission_max_fields
  min: assessment_au_lo_aggregate_submission_min_fields
  stddev: assessment_au_lo_aggregate_submission_stddev_fields
  stddev_pop: assessment_au_lo_aggregate_submission_stddev_pop_fields
  stddev_samp: assessment_au_lo_aggregate_submission_stddev_samp_fields
  sum: assessment_au_lo_aggregate_submission_sum_fields
  var_pop: assessment_au_lo_aggregate_submission_var_pop_fields
  var_samp: assessment_au_lo_aggregate_submission_var_samp_fields
  variance: assessment_au_lo_aggregate_submission_variance_fields
}

"""
order by aggregate values of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_aggregate_order_by {
  avg: assessment_au_lo_aggregate_submission_avg_order_by
  count: order_by
  max: assessment_au_lo_aggregate_submission_max_order_by
  min: assessment_au_lo_aggregate_submission_min_order_by
  stddev: assessment_au_lo_aggregate_submission_stddev_order_by
  stddev_pop: assessment_au_lo_aggregate_submission_stddev_pop_order_by
  stddev_samp: assessment_au_lo_aggregate_submission_stddev_samp_order_by
  sum: assessment_au_lo_aggregate_submission_sum_order_by
  var_pop: assessment_au_lo_aggregate_submission_var_pop_order_by
  var_samp: assessment_au_lo_aggregate_submission_var_samp_order_by
  variance: assessment_au_lo_aggregate_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_arr_rel_insert_input {
  data: [assessment_au_lo_aggregate_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_au_lo_aggregate_submission_on_conflict
}

"""aggregate avg on columns"""
type assessment_au_lo_aggregate_submission_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by avg() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
Boolean expression to filter rows from the table "assessment_au_lo_aggregate_submission". All fields are combined with a logical 'AND'.
"""
input assessment_au_lo_aggregate_submission_bool_exp {
  _and: [assessment_au_lo_aggregate_submission_bool_exp!]
  _not: assessment_au_lo_aggregate_submission_bool_exp
  _or: [assessment_au_lo_aggregate_submission_bool_exp!]
  assessment_au_lo_aggregate: assessment_au_lo_aggregate_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  lo: lo_bool_exp
  lo_id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  students_cleared: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_au_lo_aggregate_submission"
"""
enum assessment_au_lo_aggregate_submission_constraint {
  """unique or primary key constraint"""
  assessment_au_lo_aggregate_submission_pkey
}

"""
input type for incrementing numeric columns in table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
}

"""
input type for inserting data into table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_insert_input {
  assessment_au_lo_aggregate: assessment_au_lo_aggregate_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  lo: lo_obj_rel_insert_input
  lo_id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_au_lo_aggregate_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_au_lo_aggregate_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_au_lo_aggregate_submission"
"""
type assessment_au_lo_aggregate_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_au_lo_aggregate_submission!]!
}

"""
on conflict condition type for table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_on_conflict {
  constraint: assessment_au_lo_aggregate_submission_constraint!
  update_columns: [assessment_au_lo_aggregate_submission_update_column!]! = []
  where: assessment_au_lo_aggregate_submission_bool_exp
}

"""
Ordering options when selecting data from "assessment_au_lo_aggregate_submission".
"""
input assessment_au_lo_aggregate_submission_order_by {
  assessment_au_lo_aggregate: assessment_au_lo_aggregate_order_by
  assessment_id: order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  lo: lo_order_by
  lo_id: order_by
  school: school_order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""
primary key columns input for table: assessment_au_lo_aggregate_submission
"""
input assessment_au_lo_aggregate_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_au_lo_aggregate_submission"
"""
enum assessment_au_lo_aggregate_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_set_input {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_au_lo_aggregate_submission_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_au_lo_aggregate_submission_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_pop() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_au_lo_aggregate_submission_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_samp() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type assessment_au_lo_aggregate_submission_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
}

"""
order by sum() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
update columns of table "assessment_au_lo_aggregate_submission"
"""
enum assessment_au_lo_aggregate_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_au_lo_aggregate_submission_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_pop() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate var_samp on columns"""
type assessment_au_lo_aggregate_submission_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_samp() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate variance on columns"""
type assessment_au_lo_aggregate_submission_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by variance() on columns of table "assessment_au_lo_aggregate_submission"
"""
input assessment_au_lo_aggregate_submission_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type assessment_au_lo_aggregate_sum_fields {
  assessment_id: Int
  id: Int
  los_id: Int
}

"""
order by sum() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_sum_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""
update columns of table "assessment_au_lo_aggregate"
"""
enum assessment_au_lo_aggregate_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  los_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_au_lo_aggregate_var_pop_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by var_pop() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_au_lo_aggregate_var_samp_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by var_samp() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""aggregate variance on columns"""
type assessment_au_lo_aggregate_variance_fields {
  assessment_id: Float
  id: Float
  los_id: Float
}

"""
order by variance() on columns of table "assessment_au_lo_aggregate"
"""
input assessment_au_lo_aggregate_variance_order_by {
  assessment_id: order_by
  id: order_by
  los_id: order_by
}

"""
columns and relationships of "assessment_au_question_aggregate"
"""
type assessment_au_question_aggregate {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  created: timestamptz
  id: Int!
  question_id: Int

  """An object relationship"""
  server_questiongroup: server_questiongroup
  updated: timestamptz
}

"""
aggregated selection of "assessment_au_question_aggregate"
"""
type assessment_au_question_aggregate_aggregate {
  aggregate: assessment_au_question_aggregate_aggregate_fields
  nodes: [assessment_au_question_aggregate!]!
}

"""
aggregate fields of "assessment_au_question_aggregate"
"""
type assessment_au_question_aggregate_aggregate_fields {
  avg: assessment_au_question_aggregate_avg_fields
  count(columns: [assessment_au_question_aggregate_select_column!], distinct: Boolean): Int!
  max: assessment_au_question_aggregate_max_fields
  min: assessment_au_question_aggregate_min_fields
  stddev: assessment_au_question_aggregate_stddev_fields
  stddev_pop: assessment_au_question_aggregate_stddev_pop_fields
  stddev_samp: assessment_au_question_aggregate_stddev_samp_fields
  sum: assessment_au_question_aggregate_sum_fields
  var_pop: assessment_au_question_aggregate_var_pop_fields
  var_samp: assessment_au_question_aggregate_var_samp_fields
  variance: assessment_au_question_aggregate_variance_fields
}

"""
order by aggregate values of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_aggregate_order_by {
  avg: assessment_au_question_aggregate_avg_order_by
  count: order_by
  max: assessment_au_question_aggregate_max_order_by
  min: assessment_au_question_aggregate_min_order_by
  stddev: assessment_au_question_aggregate_stddev_order_by
  stddev_pop: assessment_au_question_aggregate_stddev_pop_order_by
  stddev_samp: assessment_au_question_aggregate_stddev_samp_order_by
  sum: assessment_au_question_aggregate_sum_order_by
  var_pop: assessment_au_question_aggregate_var_pop_order_by
  var_samp: assessment_au_question_aggregate_var_samp_order_by
  variance: assessment_au_question_aggregate_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_arr_rel_insert_input {
  data: [assessment_au_question_aggregate_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_au_question_aggregate_on_conflict
}

"""aggregate avg on columns"""
type assessment_au_question_aggregate_avg_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by avg() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_avg_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_au_question_aggregate". All fields are combined with a logical 'AND'.
"""
input assessment_au_question_aggregate_bool_exp {
  _and: [assessment_au_question_aggregate_bool_exp!]
  _not: assessment_au_question_aggregate_bool_exp
  _or: [assessment_au_question_aggregate_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  question_id: Int_comparison_exp
  server_questiongroup: server_questiongroup_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_au_question_aggregate"
"""
enum assessment_au_question_aggregate_constraint {
  """unique or primary key constraint"""
  assessment_au_question_aggregate_pkey
}

"""
input type for incrementing numeric columns in table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_inc_input {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""
input type for inserting data into table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  id: Int
  question_id: Int
  server_questiongroup: server_questiongroup_obj_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_au_question_aggregate_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  question_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  question_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_au_question_aggregate_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  question_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  question_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_au_question_aggregate"
"""
type assessment_au_question_aggregate_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_au_question_aggregate!]!
}

"""
on conflict condition type for table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_on_conflict {
  constraint: assessment_au_question_aggregate_constraint!
  update_columns: [assessment_au_question_aggregate_update_column!]! = []
  where: assessment_au_question_aggregate_bool_exp
}

"""
Ordering options when selecting data from "assessment_au_question_aggregate".
"""
input assessment_au_question_aggregate_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  created: order_by
  id: order_by
  question_id: order_by
  server_questiongroup: server_questiongroup_order_by
  updated: order_by
}

"""primary key columns input for table: assessment_au_question_aggregate"""
input assessment_au_question_aggregate_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_au_question_aggregate"
"""
enum assessment_au_question_aggregate_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_set_input {
  assessment_id: Int
  created: timestamptz
  id: Int
  question_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_au_question_aggregate_stddev_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by stddev() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_stddev_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_au_question_aggregate_stddev_pop_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_au_question_aggregate_stddev_samp_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""
columns and relationships of "assessment_au_question_aggregate_submission"
"""
type assessment_au_question_aggregate_submission {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  created: timestamptz

  """An object relationship"""
  grade: grade!
  grade_id: Int!
  id: Int!

  """An object relationship"""
  question: question!
  question_id: Int!

  """An object relationship"""
  school: school
  school_id: Int
  students_cleared: Int!
  updated: timestamptz
}

"""
aggregated selection of "assessment_au_question_aggregate_submission"
"""
type assessment_au_question_aggregate_submission_aggregate {
  aggregate: assessment_au_question_aggregate_submission_aggregate_fields
  nodes: [assessment_au_question_aggregate_submission!]!
}

"""
aggregate fields of "assessment_au_question_aggregate_submission"
"""
type assessment_au_question_aggregate_submission_aggregate_fields {
  avg: assessment_au_question_aggregate_submission_avg_fields
  count(columns: [assessment_au_question_aggregate_submission_select_column!], distinct: Boolean): Int!
  max: assessment_au_question_aggregate_submission_max_fields
  min: assessment_au_question_aggregate_submission_min_fields
  stddev: assessment_au_question_aggregate_submission_stddev_fields
  stddev_pop: assessment_au_question_aggregate_submission_stddev_pop_fields
  stddev_samp: assessment_au_question_aggregate_submission_stddev_samp_fields
  sum: assessment_au_question_aggregate_submission_sum_fields
  var_pop: assessment_au_question_aggregate_submission_var_pop_fields
  var_samp: assessment_au_question_aggregate_submission_var_samp_fields
  variance: assessment_au_question_aggregate_submission_variance_fields
}

"""
order by aggregate values of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_aggregate_order_by {
  avg: assessment_au_question_aggregate_submission_avg_order_by
  count: order_by
  max: assessment_au_question_aggregate_submission_max_order_by
  min: assessment_au_question_aggregate_submission_min_order_by
  stddev: assessment_au_question_aggregate_submission_stddev_order_by
  stddev_pop: assessment_au_question_aggregate_submission_stddev_pop_order_by
  stddev_samp: assessment_au_question_aggregate_submission_stddev_samp_order_by
  sum: assessment_au_question_aggregate_submission_sum_order_by
  var_pop: assessment_au_question_aggregate_submission_var_pop_order_by
  var_samp: assessment_au_question_aggregate_submission_var_samp_order_by
  variance: assessment_au_question_aggregate_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_arr_rel_insert_input {
  data: [assessment_au_question_aggregate_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_au_question_aggregate_submission_on_conflict
}

"""aggregate avg on columns"""
type assessment_au_question_aggregate_submission_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by avg() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
Boolean expression to filter rows from the table "assessment_au_question_aggregate_submission". All fields are combined with a logical 'AND'.
"""
input assessment_au_question_aggregate_submission_bool_exp {
  _and: [assessment_au_question_aggregate_submission_bool_exp!]
  _not: assessment_au_question_aggregate_submission_bool_exp
  _or: [assessment_au_question_aggregate_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  question: question_bool_exp
  question_id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  students_cleared: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_au_question_aggregate_submission"
"""
enum assessment_au_question_aggregate_submission_constraint {
  """unique or primary key constraint"""
  assessment_au_question_aggregate_submission_pkey
}

"""
input type for incrementing numeric columns in table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
}

"""
input type for inserting data into table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  question: question_obj_rel_insert_input
  question_id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_au_question_aggregate_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_au_question_aggregate_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_au_question_aggregate_submission"
"""
type assessment_au_question_aggregate_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_au_question_aggregate_submission!]!
}

"""
on conflict condition type for table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_on_conflict {
  constraint: assessment_au_question_aggregate_submission_constraint!
  update_columns: [assessment_au_question_aggregate_submission_update_column!]! = []
  where: assessment_au_question_aggregate_submission_bool_exp
}

"""
Ordering options when selecting data from "assessment_au_question_aggregate_submission".
"""
input assessment_au_question_aggregate_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  question: question_order_by
  question_id: order_by
  school: school_order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""
primary key columns input for table: assessment_au_question_aggregate_submission
"""
input assessment_au_question_aggregate_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_au_question_aggregate_submission"
"""
enum assessment_au_question_aggregate_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_set_input {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_au_question_aggregate_submission_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_au_question_aggregate_submission_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_pop() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_au_question_aggregate_submission_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_samp() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type assessment_au_question_aggregate_submission_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
}

"""
order by sum() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
update columns of table "assessment_au_question_aggregate_submission"
"""
enum assessment_au_question_aggregate_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_au_question_aggregate_submission_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_pop() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate var_samp on columns"""
type assessment_au_question_aggregate_submission_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_samp() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate variance on columns"""
type assessment_au_question_aggregate_submission_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by variance() on columns of table "assessment_au_question_aggregate_submission"
"""
input assessment_au_question_aggregate_submission_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type assessment_au_question_aggregate_sum_fields {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""
order by sum() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_sum_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""
update columns of table "assessment_au_question_aggregate"
"""
enum assessment_au_question_aggregate_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_au_question_aggregate_var_pop_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by var_pop() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_au_question_aggregate_var_samp_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by var_samp() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate variance on columns"""
type assessment_au_question_aggregate_variance_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by variance() on columns of table "assessment_au_question_aggregate"
"""
input assessment_au_question_aggregate_variance_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate avg on columns"""
type assessment_avg_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by avg() on columns of table "assessment"
"""
input assessment_avg_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment". All fields are combined with a logical 'AND'.
"""
input assessment_bool_exp {
  _and: [assessment_bool_exp!]
  _not: assessment_bool_exp
  _or: [assessment_bool_exp!]
  assessment_au_lo_aggregates: assessment_au_lo_aggregate_bool_exp
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_bool_exp
  assessment_au_question_aggregates: assessment_au_question_aggregate_bool_exp
  assessment_builder: assessment_builder_bool_exp
  assessment_cache_v5s: assessment_cache_v5_bool_exp
  assessment_caches: assessment_cache_bool_exp
  assessment_components: assessment_components_bool_exp
  assessment_ep_grades: assessment_ep_grade_bool_exp
  assessment_ep_marks: assessment_ep_marks_bool_exp
  assessment_grades: assessment_grade_bool_exp
  assessment_lo_bundles: assessment_lo_bundles_bool_exp
  assessment_question_bundles: assessment_question_bundles_bool_exp
  assessment_streams: assessment_stream_bool_exp
  assessment_subjects: assessment_subjects_bool_exp
  assessment_type: assessment_type_bool_exp
  assessment_unit_bundles: assessment_unit_bundles_bool_exp
  assessment_units: assessment_unit_bool_exp
  builder_id: Int_comparison_exp
  celery_duplicate_removes: celery_duplicate_remove_bool_exp
  class_level_component_submissions: class_level_component_submission_bool_exp
  class_submissions: class_submission_bool_exp
  component_submissions: component_submission_bool_exp
  created: timestamptz_comparison_exp
  deadline: deadline_bool_exp
  deadline_id: Int_comparison_exp
  end: timestamptz_comparison_exp
  evaluation_params: String_comparison_exp
  grade_assessments: grade_assessment_bool_exp
  id: Int_comparison_exp
  is_enabled: Boolean_comparison_exp
  is_final: Boolean_comparison_exp
  lo_assessments: lo_assessment_bool_exp
  lo_submissions: lo_submission_bool_exp
  mapping_detail: mapping_details_bool_exp
  mapping_id: Int_comparison_exp
  mapping_submissions: mapping_submission_bool_exp
  overall_pass_percentage: float8_comparison_exp
  overall_total_marks: Int_comparison_exp
  question_assessments: question_assessment_bool_exp
  question_submissions: question_submission_bool_exp
  sms_template: String_comparison_exp
  start: timestamptz_comparison_exp
  student_submission_v2s: student_submission_v2_bool_exp
  student_submissions: student_submission_bool_exp
  subject_submissions: subject_submission_bool_exp
  submissionTypeBySubmissionTypeV2Id: submission_type_bool_exp
  submission_summaries: submission_summary_bool_exp
  submission_type: String_comparison_exp
  submission_type_v2_id: Int_comparison_exp
  type: String_comparison_exp
  type_v2_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
columns and relationships of "assessment_builder"
"""
type assessment_builder {
  """An array relationship"""
  assessments(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """An aggregate relationship"""
  assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!
  created: timestamptz
  id: Int!
  updated: timestamptz
  xml_string: String!
}

"""
aggregated selection of "assessment_builder"
"""
type assessment_builder_aggregate {
  aggregate: assessment_builder_aggregate_fields
  nodes: [assessment_builder!]!
}

"""
aggregate fields of "assessment_builder"
"""
type assessment_builder_aggregate_fields {
  avg: assessment_builder_avg_fields
  count(columns: [assessment_builder_select_column!], distinct: Boolean): Int!
  max: assessment_builder_max_fields
  min: assessment_builder_min_fields
  stddev: assessment_builder_stddev_fields
  stddev_pop: assessment_builder_stddev_pop_fields
  stddev_samp: assessment_builder_stddev_samp_fields
  sum: assessment_builder_sum_fields
  var_pop: assessment_builder_var_pop_fields
  var_samp: assessment_builder_var_samp_fields
  variance: assessment_builder_variance_fields
}

"""aggregate avg on columns"""
type assessment_builder_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "assessment_builder". All fields are combined with a logical 'AND'.
"""
input assessment_builder_bool_exp {
  _and: [assessment_builder_bool_exp!]
  _not: assessment_builder_bool_exp
  _or: [assessment_builder_bool_exp!]
  assessments: assessment_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  updated: timestamptz_comparison_exp
  xml_string: String_comparison_exp
}

"""
unique or primary key constraints on table "assessment_builder"
"""
enum assessment_builder_constraint {
  """unique or primary key constraint"""
  assessment_builder_pkey
}

"""
input type for incrementing numeric columns in table "assessment_builder"
"""
input assessment_builder_inc_input {
  id: Int
}

"""
input type for inserting data into table "assessment_builder"
"""
input assessment_builder_insert_input {
  assessments: assessment_arr_rel_insert_input
  created: timestamptz
  id: Int
  updated: timestamptz
  xml_string: String
}

"""aggregate max on columns"""
type assessment_builder_max_fields {
  created: timestamptz
  id: Int
  updated: timestamptz
  xml_string: String
}

"""aggregate min on columns"""
type assessment_builder_min_fields {
  created: timestamptz
  id: Int
  updated: timestamptz
  xml_string: String
}

"""
response of any mutation on the table "assessment_builder"
"""
type assessment_builder_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_builder!]!
}

"""
input type for inserting object relation for remote table "assessment_builder"
"""
input assessment_builder_obj_rel_insert_input {
  data: assessment_builder_insert_input!

  """on conflict condition"""
  on_conflict: assessment_builder_on_conflict
}

"""
on conflict condition type for table "assessment_builder"
"""
input assessment_builder_on_conflict {
  constraint: assessment_builder_constraint!
  update_columns: [assessment_builder_update_column!]! = []
  where: assessment_builder_bool_exp
}

"""Ordering options when selecting data from "assessment_builder"."""
input assessment_builder_order_by {
  assessments_aggregate: assessment_aggregate_order_by
  created: order_by
  id: order_by
  updated: order_by
  xml_string: order_by
}

"""primary key columns input for table: assessment_builder"""
input assessment_builder_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_builder"
"""
enum assessment_builder_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  updated

  """column name"""
  xml_string
}

"""
input type for updating data in table "assessment_builder"
"""
input assessment_builder_set_input {
  created: timestamptz
  id: Int
  updated: timestamptz
  xml_string: String
}

"""aggregate stddev on columns"""
type assessment_builder_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type assessment_builder_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type assessment_builder_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type assessment_builder_sum_fields {
  id: Int
}

"""
update columns of table "assessment_builder"
"""
enum assessment_builder_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  updated

  """column name"""
  xml_string
}

"""aggregate var_pop on columns"""
type assessment_builder_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type assessment_builder_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type assessment_builder_variance_fields {
  id: Float
}

"""
columns and relationships of "assessment_cache"
"""
type assessment_cache {
  """An object relationship"""
  assessment: assessment
  assessment_id: Int
  class_progress(
    """JSON select path"""
    path: String
  ): jsonb
  created: timestamptz
  id: Int!
  los_data(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  school: school
  school_id: Int
  subject_progress(
    """JSON select path"""
    path: String
  ): jsonb
  submission_data(
    """JSON select path"""
    path: String
  ): jsonb
  updated: timestamptz
}

"""
aggregated selection of "assessment_cache"
"""
type assessment_cache_aggregate {
  aggregate: assessment_cache_aggregate_fields
  nodes: [assessment_cache!]!
}

"""
aggregate fields of "assessment_cache"
"""
type assessment_cache_aggregate_fields {
  avg: assessment_cache_avg_fields
  count(columns: [assessment_cache_select_column!], distinct: Boolean): Int!
  max: assessment_cache_max_fields
  min: assessment_cache_min_fields
  stddev: assessment_cache_stddev_fields
  stddev_pop: assessment_cache_stddev_pop_fields
  stddev_samp: assessment_cache_stddev_samp_fields
  sum: assessment_cache_sum_fields
  var_pop: assessment_cache_var_pop_fields
  var_samp: assessment_cache_var_samp_fields
  variance: assessment_cache_variance_fields
}

"""
order by aggregate values of table "assessment_cache"
"""
input assessment_cache_aggregate_order_by {
  avg: assessment_cache_avg_order_by
  count: order_by
  max: assessment_cache_max_order_by
  min: assessment_cache_min_order_by
  stddev: assessment_cache_stddev_order_by
  stddev_pop: assessment_cache_stddev_pop_order_by
  stddev_samp: assessment_cache_stddev_samp_order_by
  sum: assessment_cache_sum_order_by
  var_pop: assessment_cache_var_pop_order_by
  var_samp: assessment_cache_var_samp_order_by
  variance: assessment_cache_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input assessment_cache_append_input {
  class_progress: jsonb
  los_data: jsonb
  subject_progress: jsonb
  submission_data: jsonb
}

"""
input type for inserting array relation for remote table "assessment_cache"
"""
input assessment_cache_arr_rel_insert_input {
  data: [assessment_cache_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_cache_on_conflict
}

"""aggregate avg on columns"""
type assessment_cache_avg_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by avg() on columns of table "assessment_cache"
"""
input assessment_cache_avg_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_cache". All fields are combined with a logical 'AND'.
"""
input assessment_cache_bool_exp {
  _and: [assessment_cache_bool_exp!]
  _not: assessment_cache_bool_exp
  _or: [assessment_cache_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  class_progress: jsonb_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  los_data: jsonb_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  subject_progress: jsonb_comparison_exp
  submission_data: jsonb_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_cache"
"""
enum assessment_cache_constraint {
  """unique or primary key constraint"""
  assessment_cache_pkey

  """unique or primary key constraint"""
  assessment_cache_school_id_assessment_id_9084dd95_uniq
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input assessment_cache_delete_at_path_input {
  class_progress: [String!]
  los_data: [String!]
  subject_progress: [String!]
  submission_data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input assessment_cache_delete_elem_input {
  class_progress: Int
  los_data: Int
  subject_progress: Int
  submission_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input assessment_cache_delete_key_input {
  class_progress: String
  los_data: String
  subject_progress: String
  submission_data: String
}

"""
input type for incrementing numeric columns in table "assessment_cache"
"""
input assessment_cache_inc_input {
  assessment_id: Int
  id: Int
  school_id: Int
}

"""
input type for inserting data into table "assessment_cache"
"""
input assessment_cache_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  class_progress: jsonb
  created: timestamptz
  id: Int
  los_data: jsonb
  school: school_obj_rel_insert_input
  school_id: Int
  subject_progress: jsonb
  submission_data: jsonb
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_cache_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_cache"
"""
input assessment_cache_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_cache_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_cache"
"""
input assessment_cache_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_cache"
"""
type assessment_cache_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_cache!]!
}

"""
on conflict condition type for table "assessment_cache"
"""
input assessment_cache_on_conflict {
  constraint: assessment_cache_constraint!
  update_columns: [assessment_cache_update_column!]! = []
  where: assessment_cache_bool_exp
}

"""Ordering options when selecting data from "assessment_cache"."""
input assessment_cache_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  class_progress: order_by
  created: order_by
  id: order_by
  los_data: order_by
  school: school_order_by
  school_id: order_by
  subject_progress: order_by
  submission_data: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_cache"""
input assessment_cache_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input assessment_cache_prepend_input {
  class_progress: jsonb
  los_data: jsonb
  subject_progress: jsonb
  submission_data: jsonb
}

"""
select columns of table "assessment_cache"
"""
enum assessment_cache_select_column {
  """column name"""
  assessment_id

  """column name"""
  class_progress

  """column name"""
  created

  """column name"""
  id

  """column name"""
  los_data

  """column name"""
  school_id

  """column name"""
  subject_progress

  """column name"""
  submission_data

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_cache"
"""
input assessment_cache_set_input {
  assessment_id: Int
  class_progress: jsonb
  created: timestamptz
  id: Int
  los_data: jsonb
  school_id: Int
  subject_progress: jsonb
  submission_data: jsonb
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_cache_stddev_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev() on columns of table "assessment_cache"
"""
input assessment_cache_stddev_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_cache_stddev_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_cache"
"""
input assessment_cache_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_cache_stddev_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_cache"
"""
input assessment_cache_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type assessment_cache_sum_fields {
  assessment_id: Int
  id: Int
  school_id: Int
}

"""
order by sum() on columns of table "assessment_cache"
"""
input assessment_cache_sum_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""
update columns of table "assessment_cache"
"""
enum assessment_cache_update_column {
  """column name"""
  assessment_id

  """column name"""
  class_progress

  """column name"""
  created

  """column name"""
  id

  """column name"""
  los_data

  """column name"""
  school_id

  """column name"""
  subject_progress

  """column name"""
  submission_data

  """column name"""
  updated
}

"""
columns and relationships of "assessment_cache_v5"
"""
type assessment_cache_v5 {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  class_submission_data(
    """JSON select path"""
    path: String
  ): jsonb
  created: timestamptz
  id: Int!
  meta_data(
    """JSON select path"""
    path: String
  ): jsonb
  meta_data_byte: bytea

  """An object relationship"""
  school: school!
  school_id: Int!
  student_submission_data(
    """JSON select path"""
    path: String
  ): jsonb
  updated: timestamptz
}

"""
aggregated selection of "assessment_cache_v5"
"""
type assessment_cache_v5_aggregate {
  aggregate: assessment_cache_v5_aggregate_fields
  nodes: [assessment_cache_v5!]!
}

"""
aggregate fields of "assessment_cache_v5"
"""
type assessment_cache_v5_aggregate_fields {
  avg: assessment_cache_v5_avg_fields
  count(columns: [assessment_cache_v5_select_column!], distinct: Boolean): Int!
  max: assessment_cache_v5_max_fields
  min: assessment_cache_v5_min_fields
  stddev: assessment_cache_v5_stddev_fields
  stddev_pop: assessment_cache_v5_stddev_pop_fields
  stddev_samp: assessment_cache_v5_stddev_samp_fields
  sum: assessment_cache_v5_sum_fields
  var_pop: assessment_cache_v5_var_pop_fields
  var_samp: assessment_cache_v5_var_samp_fields
  variance: assessment_cache_v5_variance_fields
}

"""
order by aggregate values of table "assessment_cache_v5"
"""
input assessment_cache_v5_aggregate_order_by {
  avg: assessment_cache_v5_avg_order_by
  count: order_by
  max: assessment_cache_v5_max_order_by
  min: assessment_cache_v5_min_order_by
  stddev: assessment_cache_v5_stddev_order_by
  stddev_pop: assessment_cache_v5_stddev_pop_order_by
  stddev_samp: assessment_cache_v5_stddev_samp_order_by
  sum: assessment_cache_v5_sum_order_by
  var_pop: assessment_cache_v5_var_pop_order_by
  var_samp: assessment_cache_v5_var_samp_order_by
  variance: assessment_cache_v5_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input assessment_cache_v5_append_input {
  class_submission_data: jsonb
  meta_data: jsonb
  student_submission_data: jsonb
}

"""
input type for inserting array relation for remote table "assessment_cache_v5"
"""
input assessment_cache_v5_arr_rel_insert_input {
  data: [assessment_cache_v5_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_cache_v5_on_conflict
}

"""aggregate avg on columns"""
type assessment_cache_v5_avg_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by avg() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_avg_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_cache_v5". All fields are combined with a logical 'AND'.
"""
input assessment_cache_v5_bool_exp {
  _and: [assessment_cache_v5_bool_exp!]
  _not: assessment_cache_v5_bool_exp
  _or: [assessment_cache_v5_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  class_submission_data: jsonb_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  meta_data: jsonb_comparison_exp
  meta_data_byte: bytea_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  student_submission_data: jsonb_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_cache_v5"
"""
enum assessment_cache_v5_constraint {
  """unique or primary key constraint"""
  assessment_cache_v5_pkey

  """unique or primary key constraint"""
  assessment_cache_v5_school_id_assessment_id_7820243f_uniq
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input assessment_cache_v5_delete_at_path_input {
  class_submission_data: [String!]
  meta_data: [String!]
  student_submission_data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input assessment_cache_v5_delete_elem_input {
  class_submission_data: Int
  meta_data: Int
  student_submission_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input assessment_cache_v5_delete_key_input {
  class_submission_data: String
  meta_data: String
  student_submission_data: String
}

"""
input type for incrementing numeric columns in table "assessment_cache_v5"
"""
input assessment_cache_v5_inc_input {
  assessment_id: Int
  id: Int
  school_id: Int
}

"""
input type for inserting data into table "assessment_cache_v5"
"""
input assessment_cache_v5_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  class_submission_data: jsonb
  created: timestamptz
  id: Int
  meta_data: jsonb
  meta_data_byte: bytea
  school: school_obj_rel_insert_input
  school_id: Int
  student_submission_data: jsonb
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_cache_v5_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_cache_v5_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_cache_v5"
"""
type assessment_cache_v5_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_cache_v5!]!
}

"""
on conflict condition type for table "assessment_cache_v5"
"""
input assessment_cache_v5_on_conflict {
  constraint: assessment_cache_v5_constraint!
  update_columns: [assessment_cache_v5_update_column!]! = []
  where: assessment_cache_v5_bool_exp
}

"""Ordering options when selecting data from "assessment_cache_v5"."""
input assessment_cache_v5_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  class_submission_data: order_by
  created: order_by
  id: order_by
  meta_data: order_by
  meta_data_byte: order_by
  school: school_order_by
  school_id: order_by
  student_submission_data: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_cache_v5"""
input assessment_cache_v5_pk_columns_input {
  assessment_id: Int!
  school_id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input assessment_cache_v5_prepend_input {
  class_submission_data: jsonb
  meta_data: jsonb
  student_submission_data: jsonb
}

"""
select columns of table "assessment_cache_v5"
"""
enum assessment_cache_v5_select_column {
  """column name"""
  assessment_id

  """column name"""
  class_submission_data

  """column name"""
  created

  """column name"""
  id

  """column name"""
  meta_data

  """column name"""
  meta_data_byte

  """column name"""
  school_id

  """column name"""
  student_submission_data

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_cache_v5"
"""
input assessment_cache_v5_set_input {
  assessment_id: Int
  class_submission_data: jsonb
  created: timestamptz
  id: Int
  meta_data: jsonb
  meta_data_byte: bytea
  school_id: Int
  student_submission_data: jsonb
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_cache_v5_stddev_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_stddev_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_cache_v5_stddev_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_cache_v5_stddev_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type assessment_cache_v5_sum_fields {
  assessment_id: Int
  id: Int
  school_id: Int
}

"""
order by sum() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_sum_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""
update columns of table "assessment_cache_v5"
"""
enum assessment_cache_v5_update_column {
  """column name"""
  assessment_id

  """column name"""
  class_submission_data

  """column name"""
  created

  """column name"""
  id

  """column name"""
  meta_data

  """column name"""
  meta_data_byte

  """column name"""
  school_id

  """column name"""
  student_submission_data

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_cache_v5_var_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_cache_v5_var_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type assessment_cache_v5_variance_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by variance() on columns of table "assessment_cache_v5"
"""
input assessment_cache_v5_variance_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate var_pop on columns"""
type assessment_cache_var_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "assessment_cache"
"""
input assessment_cache_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_cache_var_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "assessment_cache"
"""
input assessment_cache_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type assessment_cache_variance_fields {
  assessment_id: Float
  id: Float
  school_id: Float
}

"""
order by variance() on columns of table "assessment_cache"
"""
input assessment_cache_variance_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
}

"""
columns and relationships of "assessment_category"
"""
type assessment_category {
  abbreviation: String

  """An array relationship"""
  assessment_types(
    """distinct select on columns"""
    distinct_on: [assessment_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_type_order_by!]

    """filter the rows returned"""
    where: assessment_type_bool_exp
  ): [assessment_type!]!

  """An aggregate relationship"""
  assessment_types_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_type_order_by!]

    """filter the rows returned"""
    where: assessment_type_bool_exp
  ): assessment_type_aggregate!
  created: timestamptz
  desc: String
  id: Int!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "assessment_category"
"""
type assessment_category_aggregate {
  aggregate: assessment_category_aggregate_fields
  nodes: [assessment_category!]!
}

"""
aggregate fields of "assessment_category"
"""
type assessment_category_aggregate_fields {
  avg: assessment_category_avg_fields
  count(columns: [assessment_category_select_column!], distinct: Boolean): Int!
  max: assessment_category_max_fields
  min: assessment_category_min_fields
  stddev: assessment_category_stddev_fields
  stddev_pop: assessment_category_stddev_pop_fields
  stddev_samp: assessment_category_stddev_samp_fields
  sum: assessment_category_sum_fields
  var_pop: assessment_category_var_pop_fields
  var_samp: assessment_category_var_samp_fields
  variance: assessment_category_variance_fields
}

"""aggregate avg on columns"""
type assessment_category_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "assessment_category". All fields are combined with a logical 'AND'.
"""
input assessment_category_bool_exp {
  _and: [assessment_category_bool_exp!]
  _not: assessment_category_bool_exp
  _or: [assessment_category_bool_exp!]
  abbreviation: String_comparison_exp
  assessment_types: assessment_type_bool_exp
  created: timestamptz_comparison_exp
  desc: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_category"
"""
enum assessment_category_constraint {
  """unique or primary key constraint"""
  assessment_category_pkey
}

"""
input type for incrementing numeric columns in table "assessment_category"
"""
input assessment_category_inc_input {
  id: Int
}

"""
input type for inserting data into table "assessment_category"
"""
input assessment_category_insert_input {
  abbreviation: String
  assessment_types: assessment_type_arr_rel_insert_input
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_category_max_fields {
  abbreviation: String
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type assessment_category_min_fields {
  abbreviation: String
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "assessment_category"
"""
type assessment_category_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_category!]!
}

"""
input type for inserting object relation for remote table "assessment_category"
"""
input assessment_category_obj_rel_insert_input {
  data: assessment_category_insert_input!

  """on conflict condition"""
  on_conflict: assessment_category_on_conflict
}

"""
on conflict condition type for table "assessment_category"
"""
input assessment_category_on_conflict {
  constraint: assessment_category_constraint!
  update_columns: [assessment_category_update_column!]! = []
  where: assessment_category_bool_exp
}

"""Ordering options when selecting data from "assessment_category"."""
input assessment_category_order_by {
  abbreviation: order_by
  assessment_types_aggregate: assessment_type_aggregate_order_by
  created: order_by
  desc: order_by
  id: order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_category"""
input assessment_category_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_category"
"""
enum assessment_category_select_column {
  """column name"""
  abbreviation

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_category"
"""
input assessment_category_set_input {
  abbreviation: String
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_category_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type assessment_category_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type assessment_category_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type assessment_category_sum_fields {
  id: Int
}

"""
update columns of table "assessment_category"
"""
enum assessment_category_update_column {
  """column name"""
  abbreviation

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_category_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type assessment_category_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type assessment_category_variance_fields {
  id: Float
}

"""
columns and relationships of "assessment_compliance_grade_aggregation"
"""
type assessment_compliance_grade_aggregation {
  block: String
  count: bigint
  district: String
  name: String
  udise: Int
}

"""
aggregated selection of "assessment_compliance_grade_aggregation"
"""
type assessment_compliance_grade_aggregation_aggregate {
  aggregate: assessment_compliance_grade_aggregation_aggregate_fields
  nodes: [assessment_compliance_grade_aggregation!]!
}

"""
aggregate fields of "assessment_compliance_grade_aggregation"
"""
type assessment_compliance_grade_aggregation_aggregate_fields {
  avg: assessment_compliance_grade_aggregation_avg_fields
  count(columns: [assessment_compliance_grade_aggregation_select_column!], distinct: Boolean): Int!
  max: assessment_compliance_grade_aggregation_max_fields
  min: assessment_compliance_grade_aggregation_min_fields
  stddev: assessment_compliance_grade_aggregation_stddev_fields
  stddev_pop: assessment_compliance_grade_aggregation_stddev_pop_fields
  stddev_samp: assessment_compliance_grade_aggregation_stddev_samp_fields
  sum: assessment_compliance_grade_aggregation_sum_fields
  var_pop: assessment_compliance_grade_aggregation_var_pop_fields
  var_samp: assessment_compliance_grade_aggregation_var_samp_fields
  variance: assessment_compliance_grade_aggregation_variance_fields
}

"""aggregate avg on columns"""
type assessment_compliance_grade_aggregation_avg_fields {
  count: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "assessment_compliance_grade_aggregation". All fields are combined with a logical 'AND'.
"""
input assessment_compliance_grade_aggregation_bool_exp {
  _and: [assessment_compliance_grade_aggregation_bool_exp!]
  _not: assessment_compliance_grade_aggregation_bool_exp
  _or: [assessment_compliance_grade_aggregation_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  district: String_comparison_exp
  name: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "assessment_compliance_grade_aggregation"
"""
input assessment_compliance_grade_aggregation_inc_input {
  count: bigint
  udise: Int
}

"""
input type for inserting data into table "assessment_compliance_grade_aggregation"
"""
input assessment_compliance_grade_aggregation_insert_input {
  block: String
  count: bigint
  district: String
  name: String
  udise: Int
}

"""aggregate max on columns"""
type assessment_compliance_grade_aggregation_max_fields {
  block: String
  count: bigint
  district: String
  name: String
  udise: Int
}

"""aggregate min on columns"""
type assessment_compliance_grade_aggregation_min_fields {
  block: String
  count: bigint
  district: String
  name: String
  udise: Int
}

"""
response of any mutation on the table "assessment_compliance_grade_aggregation"
"""
type assessment_compliance_grade_aggregation_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_compliance_grade_aggregation!]!
}

"""
Ordering options when selecting data from "assessment_compliance_grade_aggregation".
"""
input assessment_compliance_grade_aggregation_order_by {
  block: order_by
  count: order_by
  district: order_by
  name: order_by
  udise: order_by
}

"""
select columns of table "assessment_compliance_grade_aggregation"
"""
enum assessment_compliance_grade_aggregation_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  district

  """column name"""
  name

  """column name"""
  udise
}

"""
input type for updating data in table "assessment_compliance_grade_aggregation"
"""
input assessment_compliance_grade_aggregation_set_input {
  block: String
  count: bigint
  district: String
  name: String
  udise: Int
}

"""aggregate stddev on columns"""
type assessment_compliance_grade_aggregation_stddev_fields {
  count: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type assessment_compliance_grade_aggregation_stddev_pop_fields {
  count: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type assessment_compliance_grade_aggregation_stddev_samp_fields {
  count: Float
  udise: Float
}

"""aggregate sum on columns"""
type assessment_compliance_grade_aggregation_sum_fields {
  count: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type assessment_compliance_grade_aggregation_var_pop_fields {
  count: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type assessment_compliance_grade_aggregation_var_samp_fields {
  count: Float
  udise: Float
}

"""aggregate variance on columns"""
type assessment_compliance_grade_aggregation_variance_fields {
  count: Float
  udise: Float
}

"""
columns and relationships of "assessment_components"
"""
type assessment_components {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!

  """An object relationship"""
  component: component!
  components_id: Int!
  id: Int!
}

"""
aggregated selection of "assessment_components"
"""
type assessment_components_aggregate {
  aggregate: assessment_components_aggregate_fields
  nodes: [assessment_components!]!
}

"""
aggregate fields of "assessment_components"
"""
type assessment_components_aggregate_fields {
  avg: assessment_components_avg_fields
  count(columns: [assessment_components_select_column!], distinct: Boolean): Int!
  max: assessment_components_max_fields
  min: assessment_components_min_fields
  stddev: assessment_components_stddev_fields
  stddev_pop: assessment_components_stddev_pop_fields
  stddev_samp: assessment_components_stddev_samp_fields
  sum: assessment_components_sum_fields
  var_pop: assessment_components_var_pop_fields
  var_samp: assessment_components_var_samp_fields
  variance: assessment_components_variance_fields
}

"""
order by aggregate values of table "assessment_components"
"""
input assessment_components_aggregate_order_by {
  avg: assessment_components_avg_order_by
  count: order_by
  max: assessment_components_max_order_by
  min: assessment_components_min_order_by
  stddev: assessment_components_stddev_order_by
  stddev_pop: assessment_components_stddev_pop_order_by
  stddev_samp: assessment_components_stddev_samp_order_by
  sum: assessment_components_sum_order_by
  var_pop: assessment_components_var_pop_order_by
  var_samp: assessment_components_var_samp_order_by
  variance: assessment_components_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_components"
"""
input assessment_components_arr_rel_insert_input {
  data: [assessment_components_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_components_on_conflict
}

"""aggregate avg on columns"""
type assessment_components_avg_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by avg() on columns of table "assessment_components"
"""
input assessment_components_avg_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_components". All fields are combined with a logical 'AND'.
"""
input assessment_components_bool_exp {
  _and: [assessment_components_bool_exp!]
  _not: assessment_components_bool_exp
  _or: [assessment_components_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  component: component_bool_exp
  components_id: Int_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_components"
"""
enum assessment_components_constraint {
  """unique or primary key constraint"""
  assessment_components_assessment_id_components_id_d6f08a1a_uniq

  """unique or primary key constraint"""
  assessment_components_pkey
}

"""
input type for incrementing numeric columns in table "assessment_components"
"""
input assessment_components_inc_input {
  assessment_id: Int
  components_id: Int
  id: Int
}

"""
input type for inserting data into table "assessment_components"
"""
input assessment_components_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  component: component_obj_rel_insert_input
  components_id: Int
  id: Int
}

"""aggregate max on columns"""
type assessment_components_max_fields {
  assessment_id: Int
  components_id: Int
  id: Int
}

"""
order by max() on columns of table "assessment_components"
"""
input assessment_components_max_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type assessment_components_min_fields {
  assessment_id: Int
  components_id: Int
  id: Int
}

"""
order by min() on columns of table "assessment_components"
"""
input assessment_components_min_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""
response of any mutation on the table "assessment_components"
"""
type assessment_components_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_components!]!
}

"""
on conflict condition type for table "assessment_components"
"""
input assessment_components_on_conflict {
  constraint: assessment_components_constraint!
  update_columns: [assessment_components_update_column!]! = []
  where: assessment_components_bool_exp
}

"""Ordering options when selecting data from "assessment_components"."""
input assessment_components_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  component: component_order_by
  components_id: order_by
  id: order_by
}

"""primary key columns input for table: assessment_components"""
input assessment_components_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_components"
"""
enum assessment_components_select_column {
  """column name"""
  assessment_id

  """column name"""
  components_id

  """column name"""
  id
}

"""
input type for updating data in table "assessment_components"
"""
input assessment_components_set_input {
  assessment_id: Int
  components_id: Int
  id: Int
}

"""aggregate stddev on columns"""
type assessment_components_stddev_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by stddev() on columns of table "assessment_components"
"""
input assessment_components_stddev_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_components_stddev_pop_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "assessment_components"
"""
input assessment_components_stddev_pop_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_components_stddev_samp_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "assessment_components"
"""
input assessment_components_stddev_samp_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type assessment_components_sum_fields {
  assessment_id: Int
  components_id: Int
  id: Int
}

"""
order by sum() on columns of table "assessment_components"
"""
input assessment_components_sum_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""
update columns of table "assessment_components"
"""
enum assessment_components_update_column {
  """column name"""
  assessment_id

  """column name"""
  components_id

  """column name"""
  id
}

"""aggregate var_pop on columns"""
type assessment_components_var_pop_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "assessment_components"
"""
input assessment_components_var_pop_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type assessment_components_var_samp_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "assessment_components"
"""
input assessment_components_var_samp_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type assessment_components_variance_fields {
  assessment_id: Float
  components_id: Float
  id: Float
}

"""
order by variance() on columns of table "assessment_components"
"""
input assessment_components_variance_order_by {
  assessment_id: order_by
  components_id: order_by
  id: order_by
}

"""
unique or primary key constraints on table "assessment"
"""
enum assessment_constraint {
  """unique or primary key constraint"""
  assessment_pkey
}

"""
columns and relationships of "assessment_ep_grade"
"""
type assessment_ep_grade {
  """An object relationship"""
  assessment: assessment!

  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An object relationship"""
  assessment_grade_mapping: assessment_grade_mapping
  assessment_id: Int!
  created: timestamptz
  grade_mapping_id: Int
  id: Int!
  is_sms_enabled: Boolean!
  sms_template_id: uuid
  updated: timestamptz
}

"""
aggregated selection of "assessment_ep_grade"
"""
type assessment_ep_grade_aggregate {
  aggregate: assessment_ep_grade_aggregate_fields
  nodes: [assessment_ep_grade!]!
}

"""
aggregate fields of "assessment_ep_grade"
"""
type assessment_ep_grade_aggregate_fields {
  avg: assessment_ep_grade_avg_fields
  count(columns: [assessment_ep_grade_select_column!], distinct: Boolean): Int!
  max: assessment_ep_grade_max_fields
  min: assessment_ep_grade_min_fields
  stddev: assessment_ep_grade_stddev_fields
  stddev_pop: assessment_ep_grade_stddev_pop_fields
  stddev_samp: assessment_ep_grade_stddev_samp_fields
  sum: assessment_ep_grade_sum_fields
  var_pop: assessment_ep_grade_var_pop_fields
  var_samp: assessment_ep_grade_var_samp_fields
  variance: assessment_ep_grade_variance_fields
}

"""
order by aggregate values of table "assessment_ep_grade"
"""
input assessment_ep_grade_aggregate_order_by {
  avg: assessment_ep_grade_avg_order_by
  count: order_by
  max: assessment_ep_grade_max_order_by
  min: assessment_ep_grade_min_order_by
  stddev: assessment_ep_grade_stddev_order_by
  stddev_pop: assessment_ep_grade_stddev_pop_order_by
  stddev_samp: assessment_ep_grade_stddev_samp_order_by
  sum: assessment_ep_grade_sum_order_by
  var_pop: assessment_ep_grade_var_pop_order_by
  var_samp: assessment_ep_grade_var_samp_order_by
  variance: assessment_ep_grade_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_ep_grade"
"""
input assessment_ep_grade_arr_rel_insert_input {
  data: [assessment_ep_grade_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_ep_grade_on_conflict
}

"""aggregate avg on columns"""
type assessment_ep_grade_avg_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by avg() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_avg_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_ep_grade". All fields are combined with a logical 'AND'.
"""
input assessment_ep_grade_bool_exp {
  _and: [assessment_ep_grade_bool_exp!]
  _not: assessment_ep_grade_bool_exp
  _or: [assessment_ep_grade_bool_exp!]
  assessment: assessment_bool_exp
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_grade_mapping: assessment_grade_mapping_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade_mapping_id: Int_comparison_exp
  id: Int_comparison_exp
  is_sms_enabled: Boolean_comparison_exp
  sms_template_id: uuid_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_ep_grade"
"""
enum assessment_ep_grade_constraint {
  """unique or primary key constraint"""
  assessment_ep_grade_pkey
}

"""
input type for incrementing numeric columns in table "assessment_ep_grade"
"""
input assessment_ep_grade_inc_input {
  assessment_id: Int
  grade_mapping_id: Int
  id: Int
}

"""
input type for inserting data into table "assessment_ep_grade"
"""
input assessment_ep_grade_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_grade_mapping: assessment_grade_mapping_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  grade_mapping_id: Int
  id: Int
  is_sms_enabled: Boolean
  sms_template_id: uuid
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_ep_grade_max_fields {
  assessment_id: Int
  created: timestamptz
  grade_mapping_id: Int
  id: Int
  sms_template_id: uuid
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_max_order_by {
  assessment_id: order_by
  created: order_by
  grade_mapping_id: order_by
  id: order_by
  sms_template_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_ep_grade_min_fields {
  assessment_id: Int
  created: timestamptz
  grade_mapping_id: Int
  id: Int
  sms_template_id: uuid
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_min_order_by {
  assessment_id: order_by
  created: order_by
  grade_mapping_id: order_by
  id: order_by
  sms_template_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_ep_grade"
"""
type assessment_ep_grade_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_ep_grade!]!
}

"""
input type for inserting object relation for remote table "assessment_ep_grade"
"""
input assessment_ep_grade_obj_rel_insert_input {
  data: assessment_ep_grade_insert_input!

  """on conflict condition"""
  on_conflict: assessment_ep_grade_on_conflict
}

"""
on conflict condition type for table "assessment_ep_grade"
"""
input assessment_ep_grade_on_conflict {
  constraint: assessment_ep_grade_constraint!
  update_columns: [assessment_ep_grade_update_column!]! = []
  where: assessment_ep_grade_bool_exp
}

"""Ordering options when selecting data from "assessment_ep_grade"."""
input assessment_ep_grade_order_by {
  assessment: assessment_order_by
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_grade_mapping: assessment_grade_mapping_order_by
  assessment_id: order_by
  created: order_by
  grade_mapping_id: order_by
  id: order_by
  is_sms_enabled: order_by
  sms_template_id: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_ep_grade"""
input assessment_ep_grade_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_ep_grade"
"""
enum assessment_ep_grade_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_mapping_id

  """column name"""
  id

  """column name"""
  is_sms_enabled

  """column name"""
  sms_template_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_ep_grade"
"""
input assessment_ep_grade_set_input {
  assessment_id: Int
  created: timestamptz
  grade_mapping_id: Int
  id: Int
  is_sms_enabled: Boolean
  sms_template_id: uuid
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_ep_grade_stddev_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by stddev() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_stddev_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_ep_grade_stddev_pop_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_stddev_pop_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_ep_grade_stddev_samp_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_stddev_samp_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""
columns and relationships of "assessment_ep_grade_submission"
"""
type assessment_ep_grade_submission {
  """An object relationship"""
  assessment_ep_grade: assessment_ep_grade!
  assessment_grade: String!
  assessment_id: Int!
  created: timestamptz
  form_id: Int

  """An object relationship"""
  grade: grade

  """An object relationship"""
  grade_assessment: grade_assessment
  grade_id: Int
  id: Int!

  """An object relationship"""
  school: school
  school_id: Int

  """An object relationship"""
  sm: sms
  sms_id: Int

  """An object relationship"""
  student: student!
  student_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
  updated: timestamptz
}

"""
aggregated selection of "assessment_ep_grade_submission"
"""
type assessment_ep_grade_submission_aggregate {
  aggregate: assessment_ep_grade_submission_aggregate_fields
  nodes: [assessment_ep_grade_submission!]!
}

"""
aggregate fields of "assessment_ep_grade_submission"
"""
type assessment_ep_grade_submission_aggregate_fields {
  avg: assessment_ep_grade_submission_avg_fields
  count(columns: [assessment_ep_grade_submission_select_column!], distinct: Boolean): Int!
  max: assessment_ep_grade_submission_max_fields
  min: assessment_ep_grade_submission_min_fields
  stddev: assessment_ep_grade_submission_stddev_fields
  stddev_pop: assessment_ep_grade_submission_stddev_pop_fields
  stddev_samp: assessment_ep_grade_submission_stddev_samp_fields
  sum: assessment_ep_grade_submission_sum_fields
  var_pop: assessment_ep_grade_submission_var_pop_fields
  var_samp: assessment_ep_grade_submission_var_samp_fields
  variance: assessment_ep_grade_submission_variance_fields
}

"""
order by aggregate values of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_aggregate_order_by {
  avg: assessment_ep_grade_submission_avg_order_by
  count: order_by
  max: assessment_ep_grade_submission_max_order_by
  min: assessment_ep_grade_submission_min_order_by
  stddev: assessment_ep_grade_submission_stddev_order_by
  stddev_pop: assessment_ep_grade_submission_stddev_pop_order_by
  stddev_samp: assessment_ep_grade_submission_stddev_samp_order_by
  sum: assessment_ep_grade_submission_sum_order_by
  var_pop: assessment_ep_grade_submission_var_pop_order_by
  var_samp: assessment_ep_grade_submission_var_samp_order_by
  variance: assessment_ep_grade_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_arr_rel_insert_input {
  data: [assessment_ep_grade_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_ep_grade_submission_on_conflict
}

"""aggregate avg on columns"""
type assessment_ep_grade_submission_avg_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_avg_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_ep_grade_submission". All fields are combined with a logical 'AND'.
"""
input assessment_ep_grade_submission_bool_exp {
  _and: [assessment_ep_grade_submission_bool_exp!]
  _not: assessment_ep_grade_submission_bool_exp
  _or: [assessment_ep_grade_submission_bool_exp!]
  assessment_ep_grade: assessment_ep_grade_bool_exp
  assessment_grade: String_comparison_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  form_id: Int_comparison_exp
  grade: grade_bool_exp
  grade_assessment: grade_assessment_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  sm: sms_bool_exp
  sms_id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_ep_grade_submission"
"""
enum assessment_ep_grade_submission_constraint {
  """unique or primary key constraint"""
  assessment_ep_grade_submission_pkey
}

"""
input type for incrementing numeric columns in table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_inc_input {
  assessment_id: Int
  form_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_insert_input {
  assessment_ep_grade: assessment_ep_grade_obj_rel_insert_input
  assessment_grade: String
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade: grade_obj_rel_insert_input
  grade_assessment: grade_assessment_obj_rel_insert_input
  grade_id: Int
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  sm: sms_obj_rel_insert_input
  sms_id: Int
  student: student_obj_rel_insert_input
  student_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_ep_grade_submission_max_fields {
  assessment_grade: String
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_max_order_by {
  assessment_grade: order_by
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_ep_grade_submission_min_fields {
  assessment_grade: String
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_min_order_by {
  assessment_grade: order_by
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_ep_grade_submission"
"""
type assessment_ep_grade_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_ep_grade_submission!]!
}

"""
on conflict condition type for table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_on_conflict {
  constraint: assessment_ep_grade_submission_constraint!
  update_columns: [assessment_ep_grade_submission_update_column!]! = []
  where: assessment_ep_grade_submission_bool_exp
}

"""
Ordering options when selecting data from "assessment_ep_grade_submission".
"""
input assessment_ep_grade_submission_order_by {
  assessment_ep_grade: assessment_ep_grade_order_by
  assessment_grade: order_by
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade: grade_order_by
  grade_assessment: grade_assessment_order_by
  grade_id: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  sm: sms_order_by
  sms_id: order_by
  student: student_order_by
  student_id: order_by
  subject: subject_order_by
  subject_id: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_ep_grade_submission"""
input assessment_ep_grade_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_ep_grade_submission"
"""
enum assessment_ep_grade_submission_select_column {
  """column name"""
  assessment_grade

  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  sms_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_set_input {
  assessment_grade: String
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_ep_grade_submission_stddev_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_stddev_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_ep_grade_submission_stddev_pop_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_stddev_pop_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_ep_grade_submission_stddev_samp_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_stddev_samp_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_ep_grade_submission_sum_fields {
  assessment_id: Int
  form_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_sum_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
update columns of table "assessment_ep_grade_submission"
"""
enum assessment_ep_grade_submission_update_column {
  """column name"""
  assessment_grade

  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  sms_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_ep_grade_submission_var_pop_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_var_pop_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_ep_grade_submission_var_samp_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_var_samp_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type assessment_ep_grade_submission_variance_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "assessment_ep_grade_submission"
"""
input assessment_ep_grade_submission_variance_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_ep_grade_sum_fields {
  assessment_id: Int
  grade_mapping_id: Int
  id: Int
}

"""
order by sum() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_sum_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""
update columns of table "assessment_ep_grade"
"""
enum assessment_ep_grade_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_mapping_id

  """column name"""
  id

  """column name"""
  is_sms_enabled

  """column name"""
  sms_template_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_ep_grade_var_pop_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_var_pop_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type assessment_ep_grade_var_samp_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_var_samp_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type assessment_ep_grade_variance_fields {
  assessment_id: Float
  grade_mapping_id: Float
  id: Float
}

"""
order by variance() on columns of table "assessment_ep_grade"
"""
input assessment_ep_grade_variance_order_by {
  assessment_id: order_by
  grade_mapping_id: order_by
  id: order_by
}

"""
columns and relationships of "assessment_ep_marks"
"""
type assessment_ep_marks {
  """An object relationship"""
  assessment: assessment!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!
  assessment_id: Int!
  created: timestamptz
  id: Int!
  is_sms_enabled: Boolean!
  max_marks: Int!
  max_marks_range_id: Int
  pass_percentage: float8!

  """An object relationship"""
  server_marksrange: server_marksrange
  sms_template_id: uuid
  updated: timestamptz
}

"""
aggregated selection of "assessment_ep_marks"
"""
type assessment_ep_marks_aggregate {
  aggregate: assessment_ep_marks_aggregate_fields
  nodes: [assessment_ep_marks!]!
}

"""
aggregate fields of "assessment_ep_marks"
"""
type assessment_ep_marks_aggregate_fields {
  avg: assessment_ep_marks_avg_fields
  count(columns: [assessment_ep_marks_select_column!], distinct: Boolean): Int!
  max: assessment_ep_marks_max_fields
  min: assessment_ep_marks_min_fields
  stddev: assessment_ep_marks_stddev_fields
  stddev_pop: assessment_ep_marks_stddev_pop_fields
  stddev_samp: assessment_ep_marks_stddev_samp_fields
  sum: assessment_ep_marks_sum_fields
  var_pop: assessment_ep_marks_var_pop_fields
  var_samp: assessment_ep_marks_var_samp_fields
  variance: assessment_ep_marks_variance_fields
}

"""
order by aggregate values of table "assessment_ep_marks"
"""
input assessment_ep_marks_aggregate_order_by {
  avg: assessment_ep_marks_avg_order_by
  count: order_by
  max: assessment_ep_marks_max_order_by
  min: assessment_ep_marks_min_order_by
  stddev: assessment_ep_marks_stddev_order_by
  stddev_pop: assessment_ep_marks_stddev_pop_order_by
  stddev_samp: assessment_ep_marks_stddev_samp_order_by
  sum: assessment_ep_marks_sum_order_by
  var_pop: assessment_ep_marks_var_pop_order_by
  var_samp: assessment_ep_marks_var_samp_order_by
  variance: assessment_ep_marks_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_ep_marks"
"""
input assessment_ep_marks_arr_rel_insert_input {
  data: [assessment_ep_marks_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_ep_marks_on_conflict
}

"""aggregate avg on columns"""
type assessment_ep_marks_avg_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by avg() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_avg_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""
Boolean expression to filter rows from the table "assessment_ep_marks". All fields are combined with a logical 'AND'.
"""
input assessment_ep_marks_bool_exp {
  _and: [assessment_ep_marks_bool_exp!]
  _not: assessment_ep_marks_bool_exp
  _or: [assessment_ep_marks_bool_exp!]
  assessment: assessment_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  is_sms_enabled: Boolean_comparison_exp
  max_marks: Int_comparison_exp
  max_marks_range_id: Int_comparison_exp
  pass_percentage: float8_comparison_exp
  server_marksrange: server_marksrange_bool_exp
  sms_template_id: uuid_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_ep_marks"
"""
enum assessment_ep_marks_constraint {
  """unique or primary key constraint"""
  assessment_ep_marks_pkey
}

"""
input type for incrementing numeric columns in table "assessment_ep_marks"
"""
input assessment_ep_marks_inc_input {
  assessment_id: Int
  id: Int
  max_marks: Int
  max_marks_range_id: Int
  pass_percentage: float8
}

"""
input type for inserting data into table "assessment_ep_marks"
"""
input assessment_ep_marks_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  assessment_id: Int
  created: timestamptz
  id: Int
  is_sms_enabled: Boolean
  max_marks: Int
  max_marks_range_id: Int
  pass_percentage: float8
  server_marksrange: server_marksrange_obj_rel_insert_input
  sms_template_id: uuid
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_ep_marks_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  max_marks: Int
  max_marks_range_id: Int
  pass_percentage: float8
  sms_template_id: uuid
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
  sms_template_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_ep_marks_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  max_marks: Int
  max_marks_range_id: Int
  pass_percentage: float8
  sms_template_id: uuid
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
  sms_template_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_ep_marks"
"""
type assessment_ep_marks_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_ep_marks!]!
}

"""
input type for inserting object relation for remote table "assessment_ep_marks"
"""
input assessment_ep_marks_obj_rel_insert_input {
  data: assessment_ep_marks_insert_input!

  """on conflict condition"""
  on_conflict: assessment_ep_marks_on_conflict
}

"""
on conflict condition type for table "assessment_ep_marks"
"""
input assessment_ep_marks_on_conflict {
  constraint: assessment_ep_marks_constraint!
  update_columns: [assessment_ep_marks_update_column!]! = []
  where: assessment_ep_marks_bool_exp
}

"""Ordering options when selecting data from "assessment_ep_marks"."""
input assessment_ep_marks_order_by {
  assessment: assessment_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  assessment_id: order_by
  created: order_by
  id: order_by
  is_sms_enabled: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
  server_marksrange: server_marksrange_order_by
  sms_template_id: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_ep_marks"""
input assessment_ep_marks_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_ep_marks"
"""
enum assessment_ep_marks_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  is_sms_enabled

  """column name"""
  max_marks

  """column name"""
  max_marks_range_id

  """column name"""
  pass_percentage

  """column name"""
  sms_template_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_ep_marks"
"""
input assessment_ep_marks_set_input {
  assessment_id: Int
  created: timestamptz
  id: Int
  is_sms_enabled: Boolean
  max_marks: Int
  max_marks_range_id: Int
  pass_percentage: float8
  sms_template_id: uuid
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_ep_marks_stddev_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by stddev() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_stddev_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_ep_marks_stddev_pop_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by stddev_pop() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_ep_marks_stddev_samp_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by stddev_samp() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""
columns and relationships of "assessment_ep_marks_submission"
"""
type assessment_ep_marks_submission {
  """An object relationship"""
  assessment_ep_mark: assessment_ep_marks!
  assessment_id: Int!
  created: timestamptz
  form_id: Int

  """An object relationship"""
  grade: grade

  """An object relationship"""
  grade_assessment: grade_assessment
  grade_id: Int
  id: Int!
  marks: float8!

  """An object relationship"""
  school: school
  school_id: Int

  """An object relationship"""
  sm: sms
  sms_id: Int

  """An object relationship"""
  student: student!
  student_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
  updated: timestamptz
}

"""
aggregated selection of "assessment_ep_marks_submission"
"""
type assessment_ep_marks_submission_aggregate {
  aggregate: assessment_ep_marks_submission_aggregate_fields
  nodes: [assessment_ep_marks_submission!]!
}

"""
aggregate fields of "assessment_ep_marks_submission"
"""
type assessment_ep_marks_submission_aggregate_fields {
  avg: assessment_ep_marks_submission_avg_fields
  count(columns: [assessment_ep_marks_submission_select_column!], distinct: Boolean): Int!
  max: assessment_ep_marks_submission_max_fields
  min: assessment_ep_marks_submission_min_fields
  stddev: assessment_ep_marks_submission_stddev_fields
  stddev_pop: assessment_ep_marks_submission_stddev_pop_fields
  stddev_samp: assessment_ep_marks_submission_stddev_samp_fields
  sum: assessment_ep_marks_submission_sum_fields
  var_pop: assessment_ep_marks_submission_var_pop_fields
  var_samp: assessment_ep_marks_submission_var_samp_fields
  variance: assessment_ep_marks_submission_variance_fields
}

"""
order by aggregate values of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_aggregate_order_by {
  avg: assessment_ep_marks_submission_avg_order_by
  count: order_by
  max: assessment_ep_marks_submission_max_order_by
  min: assessment_ep_marks_submission_min_order_by
  stddev: assessment_ep_marks_submission_stddev_order_by
  stddev_pop: assessment_ep_marks_submission_stddev_pop_order_by
  stddev_samp: assessment_ep_marks_submission_stddev_samp_order_by
  sum: assessment_ep_marks_submission_sum_order_by
  var_pop: assessment_ep_marks_submission_var_pop_order_by
  var_samp: assessment_ep_marks_submission_var_samp_order_by
  variance: assessment_ep_marks_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_arr_rel_insert_input {
  data: [assessment_ep_marks_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_ep_marks_submission_on_conflict
}

"""aggregate avg on columns"""
type assessment_ep_marks_submission_avg_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_avg_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_ep_marks_submission". All fields are combined with a logical 'AND'.
"""
input assessment_ep_marks_submission_bool_exp {
  _and: [assessment_ep_marks_submission_bool_exp!]
  _not: assessment_ep_marks_submission_bool_exp
  _or: [assessment_ep_marks_submission_bool_exp!]
  assessment_ep_mark: assessment_ep_marks_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  form_id: Int_comparison_exp
  grade: grade_bool_exp
  grade_assessment: grade_assessment_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  marks: float8_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  sm: sms_bool_exp
  sms_id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_ep_marks_submission"
"""
enum assessment_ep_marks_submission_constraint {
  """unique or primary key constraint"""
  assessment_ep_marks_submission_pkey
}

"""
input type for incrementing numeric columns in table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_inc_input {
  assessment_id: Int
  form_id: Int
  grade_id: Int
  id: Int
  marks: float8
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_insert_input {
  assessment_ep_mark: assessment_ep_marks_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade: grade_obj_rel_insert_input
  grade_assessment: grade_assessment_obj_rel_insert_input
  grade_id: Int
  id: Int
  marks: float8
  school: school_obj_rel_insert_input
  school_id: Int
  sm: sms_obj_rel_insert_input
  sms_id: Int
  student: student_obj_rel_insert_input
  student_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_ep_marks_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade_id: Int
  id: Int
  marks: float8
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_ep_marks_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade_id: Int
  id: Int
  marks: float8
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_ep_marks_submission"
"""
type assessment_ep_marks_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_ep_marks_submission!]!
}

"""
on conflict condition type for table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_on_conflict {
  constraint: assessment_ep_marks_submission_constraint!
  update_columns: [assessment_ep_marks_submission_update_column!]! = []
  where: assessment_ep_marks_submission_bool_exp
}

"""
Ordering options when selecting data from "assessment_ep_marks_submission".
"""
input assessment_ep_marks_submission_order_by {
  assessment_ep_mark: assessment_ep_marks_order_by
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade: grade_order_by
  grade_assessment: grade_assessment_order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school: school_order_by
  school_id: order_by
  sm: sms_order_by
  sms_id: order_by
  student: student_order_by
  student_id: order_by
  subject: subject_order_by
  subject_id: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_ep_marks_submission"""
input assessment_ep_marks_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_ep_marks_submission"
"""
enum assessment_ep_marks_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  marks

  """column name"""
  school_id

  """column name"""
  sms_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_set_input {
  assessment_id: Int
  created: timestamptz
  form_id: Int
  grade_id: Int
  id: Int
  marks: float8
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_ep_marks_submission_stddev_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_stddev_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_ep_marks_submission_stddev_pop_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_stddev_pop_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_ep_marks_submission_stddev_samp_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_stddev_samp_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_ep_marks_submission_sum_fields {
  assessment_id: Int
  form_id: Int
  grade_id: Int
  id: Int
  marks: float8
  school_id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_sum_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
update columns of table "assessment_ep_marks_submission"
"""
enum assessment_ep_marks_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  marks

  """column name"""
  school_id

  """column name"""
  sms_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_ep_marks_submission_var_pop_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_var_pop_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_ep_marks_submission_var_samp_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_var_samp_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type assessment_ep_marks_submission_variance_fields {
  assessment_id: Float
  form_id: Float
  grade_id: Float
  id: Float
  marks: Float
  school_id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "assessment_ep_marks_submission"
"""
input assessment_ep_marks_submission_variance_order_by {
  assessment_id: order_by
  form_id: order_by
  grade_id: order_by
  id: order_by
  marks: order_by
  school_id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_ep_marks_sum_fields {
  assessment_id: Int
  id: Int
  max_marks: Int
  max_marks_range_id: Int
  pass_percentage: float8
}

"""
order by sum() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_sum_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""
update columns of table "assessment_ep_marks"
"""
enum assessment_ep_marks_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  is_sms_enabled

  """column name"""
  max_marks

  """column name"""
  max_marks_range_id

  """column name"""
  pass_percentage

  """column name"""
  sms_template_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_ep_marks_var_pop_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by var_pop() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""aggregate var_samp on columns"""
type assessment_ep_marks_var_samp_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by var_samp() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""aggregate variance on columns"""
type assessment_ep_marks_variance_fields {
  assessment_id: Float
  id: Float
  max_marks: Float
  max_marks_range_id: Float
  pass_percentage: Float
}

"""
order by variance() on columns of table "assessment_ep_marks"
"""
input assessment_ep_marks_variance_order_by {
  assessment_id: order_by
  id: order_by
  max_marks: order_by
  max_marks_range_id: order_by
  pass_percentage: order_by
}

"""
columns and relationships of "assessment_grade"
"""
type assessment_grade {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!

  """An object relationship"""
  grade: grade!
  grade_id: Int!
  id: Int!
}

"""
aggregated selection of "assessment_grade"
"""
type assessment_grade_aggregate {
  aggregate: assessment_grade_aggregate_fields
  nodes: [assessment_grade!]!
}

"""
aggregate fields of "assessment_grade"
"""
type assessment_grade_aggregate_fields {
  avg: assessment_grade_avg_fields
  count(columns: [assessment_grade_select_column!], distinct: Boolean): Int!
  max: assessment_grade_max_fields
  min: assessment_grade_min_fields
  stddev: assessment_grade_stddev_fields
  stddev_pop: assessment_grade_stddev_pop_fields
  stddev_samp: assessment_grade_stddev_samp_fields
  sum: assessment_grade_sum_fields
  var_pop: assessment_grade_var_pop_fields
  var_samp: assessment_grade_var_samp_fields
  variance: assessment_grade_variance_fields
}

"""
order by aggregate values of table "assessment_grade"
"""
input assessment_grade_aggregate_order_by {
  avg: assessment_grade_avg_order_by
  count: order_by
  max: assessment_grade_max_order_by
  min: assessment_grade_min_order_by
  stddev: assessment_grade_stddev_order_by
  stddev_pop: assessment_grade_stddev_pop_order_by
  stddev_samp: assessment_grade_stddev_samp_order_by
  sum: assessment_grade_sum_order_by
  var_pop: assessment_grade_var_pop_order_by
  var_samp: assessment_grade_var_samp_order_by
  variance: assessment_grade_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_grade"
"""
input assessment_grade_arr_rel_insert_input {
  data: [assessment_grade_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_grade_on_conflict
}

"""aggregate avg on columns"""
type assessment_grade_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by avg() on columns of table "assessment_grade"
"""
input assessment_grade_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_grade". All fields are combined with a logical 'AND'.
"""
input assessment_grade_bool_exp {
  _and: [assessment_grade_bool_exp!]
  _not: assessment_grade_bool_exp
  _or: [assessment_grade_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_grade"
"""
enum assessment_grade_constraint {
  """unique or primary key constraint"""
  assessment_grade_assessment_id_grade_id_0e2a0f97_uniq

  """unique or primary key constraint"""
  assessment_grade_pkey
}

"""
input type for incrementing numeric columns in table "assessment_grade"
"""
input assessment_grade_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
}

"""
input type for inserting data into table "assessment_grade"
"""
input assessment_grade_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
}

"""
columns and relationships of "assessment_grade_mapping"
"""
type assessment_grade_mapping {
  """An array relationship"""
  assessment_ep_grades(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): [assessment_ep_grade!]!

  """An aggregate relationship"""
  assessment_ep_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): assessment_ep_grade_aggregate!
  created: timestamptz
  id: Int!
  mapping(
    """JSON select path"""
    path: String
  ): jsonb!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "assessment_grade_mapping"
"""
type assessment_grade_mapping_aggregate {
  aggregate: assessment_grade_mapping_aggregate_fields
  nodes: [assessment_grade_mapping!]!
}

"""
aggregate fields of "assessment_grade_mapping"
"""
type assessment_grade_mapping_aggregate_fields {
  avg: assessment_grade_mapping_avg_fields
  count(columns: [assessment_grade_mapping_select_column!], distinct: Boolean): Int!
  max: assessment_grade_mapping_max_fields
  min: assessment_grade_mapping_min_fields
  stddev: assessment_grade_mapping_stddev_fields
  stddev_pop: assessment_grade_mapping_stddev_pop_fields
  stddev_samp: assessment_grade_mapping_stddev_samp_fields
  sum: assessment_grade_mapping_sum_fields
  var_pop: assessment_grade_mapping_var_pop_fields
  var_samp: assessment_grade_mapping_var_samp_fields
  variance: assessment_grade_mapping_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input assessment_grade_mapping_append_input {
  mapping: jsonb
}

"""aggregate avg on columns"""
type assessment_grade_mapping_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "assessment_grade_mapping". All fields are combined with a logical 'AND'.
"""
input assessment_grade_mapping_bool_exp {
  _and: [assessment_grade_mapping_bool_exp!]
  _not: assessment_grade_mapping_bool_exp
  _or: [assessment_grade_mapping_bool_exp!]
  assessment_ep_grades: assessment_ep_grade_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  mapping: jsonb_comparison_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_grade_mapping"
"""
enum assessment_grade_mapping_constraint {
  """unique or primary key constraint"""
  assessment_grade_mapping_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input assessment_grade_mapping_delete_at_path_input {
  mapping: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input assessment_grade_mapping_delete_elem_input {
  mapping: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input assessment_grade_mapping_delete_key_input {
  mapping: String
}

"""
input type for incrementing numeric columns in table "assessment_grade_mapping"
"""
input assessment_grade_mapping_inc_input {
  id: Int
}

"""
input type for inserting data into table "assessment_grade_mapping"
"""
input assessment_grade_mapping_insert_input {
  assessment_ep_grades: assessment_ep_grade_arr_rel_insert_input
  created: timestamptz
  id: Int
  mapping: jsonb
  name: String
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_grade_mapping_max_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type assessment_grade_mapping_min_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "assessment_grade_mapping"
"""
type assessment_grade_mapping_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_grade_mapping!]!
}

"""
input type for inserting object relation for remote table "assessment_grade_mapping"
"""
input assessment_grade_mapping_obj_rel_insert_input {
  data: assessment_grade_mapping_insert_input!

  """on conflict condition"""
  on_conflict: assessment_grade_mapping_on_conflict
}

"""
on conflict condition type for table "assessment_grade_mapping"
"""
input assessment_grade_mapping_on_conflict {
  constraint: assessment_grade_mapping_constraint!
  update_columns: [assessment_grade_mapping_update_column!]! = []
  where: assessment_grade_mapping_bool_exp
}

"""Ordering options when selecting data from "assessment_grade_mapping"."""
input assessment_grade_mapping_order_by {
  assessment_ep_grades_aggregate: assessment_ep_grade_aggregate_order_by
  created: order_by
  id: order_by
  mapping: order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_grade_mapping"""
input assessment_grade_mapping_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input assessment_grade_mapping_prepend_input {
  mapping: jsonb
}

"""
select columns of table "assessment_grade_mapping"
"""
enum assessment_grade_mapping_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_grade_mapping"
"""
input assessment_grade_mapping_set_input {
  created: timestamptz
  id: Int
  mapping: jsonb
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_grade_mapping_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type assessment_grade_mapping_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type assessment_grade_mapping_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type assessment_grade_mapping_sum_fields {
  id: Int
}

"""
update columns of table "assessment_grade_mapping"
"""
enum assessment_grade_mapping_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_grade_mapping_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type assessment_grade_mapping_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type assessment_grade_mapping_variance_fields {
  id: Float
}

"""aggregate max on columns"""
type assessment_grade_max_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
}

"""
order by max() on columns of table "assessment_grade"
"""
input assessment_grade_max_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type assessment_grade_min_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
}

"""
order by min() on columns of table "assessment_grade"
"""
input assessment_grade_min_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""
response of any mutation on the table "assessment_grade"
"""
type assessment_grade_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_grade!]!
}

"""
on conflict condition type for table "assessment_grade"
"""
input assessment_grade_on_conflict {
  constraint: assessment_grade_constraint!
  update_columns: [assessment_grade_update_column!]! = []
  where: assessment_grade_bool_exp
}

"""Ordering options when selecting data from "assessment_grade"."""
input assessment_grade_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
}

"""primary key columns input for table: assessment_grade"""
input assessment_grade_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_grade"
"""
enum assessment_grade_select_column {
  """column name"""
  assessment_id

  """column name"""
  grade_id

  """column name"""
  id
}

"""
input type for updating data in table "assessment_grade"
"""
input assessment_grade_set_input {
  assessment_id: Int
  grade_id: Int
  id: Int
}

"""aggregate stddev on columns"""
type assessment_grade_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by stddev() on columns of table "assessment_grade"
"""
input assessment_grade_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_grade_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "assessment_grade"
"""
input assessment_grade_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_grade_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "assessment_grade"
"""
input assessment_grade_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type assessment_grade_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
}

"""
order by sum() on columns of table "assessment_grade"
"""
input assessment_grade_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""
update columns of table "assessment_grade"
"""
enum assessment_grade_update_column {
  """column name"""
  assessment_id

  """column name"""
  grade_id

  """column name"""
  id
}

"""aggregate var_pop on columns"""
type assessment_grade_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "assessment_grade"
"""
input assessment_grade_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type assessment_grade_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "assessment_grade"
"""
input assessment_grade_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type assessment_grade_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
}

"""
order by variance() on columns of table "assessment_grade"
"""
input assessment_grade_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
}

"""
input type for incrementing numeric columns in table "assessment"
"""
input assessment_inc_input {
  builder_id: Int
  deadline_id: Int
  id: Int
  mapping_id: Int
  overall_pass_percentage: float8
  overall_total_marks: Int
  submission_type_v2_id: Int
  type_v2_id: Int
}

"""
input type for inserting data into table "assessment"
"""
input assessment_insert_input {
  assessment_au_lo_aggregates: assessment_au_lo_aggregate_arr_rel_insert_input
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_arr_rel_insert_input
  assessment_au_question_aggregates: assessment_au_question_aggregate_arr_rel_insert_input
  assessment_builder: assessment_builder_obj_rel_insert_input
  assessment_cache_v5s: assessment_cache_v5_arr_rel_insert_input
  assessment_caches: assessment_cache_arr_rel_insert_input
  assessment_components: assessment_components_arr_rel_insert_input
  assessment_ep_grades: assessment_ep_grade_arr_rel_insert_input
  assessment_ep_marks: assessment_ep_marks_arr_rel_insert_input
  assessment_grades: assessment_grade_arr_rel_insert_input
  assessment_lo_bundles: assessment_lo_bundles_arr_rel_insert_input
  assessment_question_bundles: assessment_question_bundles_arr_rel_insert_input
  assessment_streams: assessment_stream_arr_rel_insert_input
  assessment_subjects: assessment_subjects_arr_rel_insert_input
  assessment_type: assessment_type_obj_rel_insert_input
  assessment_unit_bundles: assessment_unit_bundles_arr_rel_insert_input
  assessment_units: assessment_unit_arr_rel_insert_input
  builder_id: Int
  celery_duplicate_removes: celery_duplicate_remove_arr_rel_insert_input
  class_level_component_submissions: class_level_component_submission_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  component_submissions: component_submission_arr_rel_insert_input
  created: timestamptz
  deadline: deadline_obj_rel_insert_input
  deadline_id: Int
  end: timestamptz
  evaluation_params: String
  grade_assessments: grade_assessment_arr_rel_insert_input
  id: Int
  is_enabled: Boolean
  is_final: Boolean
  lo_assessments: lo_assessment_arr_rel_insert_input
  lo_submissions: lo_submission_arr_rel_insert_input
  mapping_detail: mapping_details_obj_rel_insert_input
  mapping_id: Int
  mapping_submissions: mapping_submission_arr_rel_insert_input
  overall_pass_percentage: float8
  overall_total_marks: Int
  question_assessments: question_assessment_arr_rel_insert_input
  question_submissions: question_submission_arr_rel_insert_input
  sms_template: String
  start: timestamptz
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  student_submissions: student_submission_arr_rel_insert_input
  subject_submissions: subject_submission_arr_rel_insert_input
  submissionTypeBySubmissionTypeV2Id: submission_type_obj_rel_insert_input
  submission_summaries: submission_summary_arr_rel_insert_input
  submission_type: String
  submission_type_v2_id: Int
  type: String
  type_v2_id: Int
  updated: timestamptz
}

"""
columns and relationships of "assessment_lo_bundles"
"""
type assessment_lo_bundles {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  lo_bundle: lo_bundle!
  lobundle_id: Int!
}

"""
aggregated selection of "assessment_lo_bundles"
"""
type assessment_lo_bundles_aggregate {
  aggregate: assessment_lo_bundles_aggregate_fields
  nodes: [assessment_lo_bundles!]!
}

"""
aggregate fields of "assessment_lo_bundles"
"""
type assessment_lo_bundles_aggregate_fields {
  avg: assessment_lo_bundles_avg_fields
  count(columns: [assessment_lo_bundles_select_column!], distinct: Boolean): Int!
  max: assessment_lo_bundles_max_fields
  min: assessment_lo_bundles_min_fields
  stddev: assessment_lo_bundles_stddev_fields
  stddev_pop: assessment_lo_bundles_stddev_pop_fields
  stddev_samp: assessment_lo_bundles_stddev_samp_fields
  sum: assessment_lo_bundles_sum_fields
  var_pop: assessment_lo_bundles_var_pop_fields
  var_samp: assessment_lo_bundles_var_samp_fields
  variance: assessment_lo_bundles_variance_fields
}

"""
order by aggregate values of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_aggregate_order_by {
  avg: assessment_lo_bundles_avg_order_by
  count: order_by
  max: assessment_lo_bundles_max_order_by
  min: assessment_lo_bundles_min_order_by
  stddev: assessment_lo_bundles_stddev_order_by
  stddev_pop: assessment_lo_bundles_stddev_pop_order_by
  stddev_samp: assessment_lo_bundles_stddev_samp_order_by
  sum: assessment_lo_bundles_sum_order_by
  var_pop: assessment_lo_bundles_var_pop_order_by
  var_samp: assessment_lo_bundles_var_samp_order_by
  variance: assessment_lo_bundles_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_lo_bundles"
"""
input assessment_lo_bundles_arr_rel_insert_input {
  data: [assessment_lo_bundles_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_lo_bundles_on_conflict
}

"""aggregate avg on columns"""
type assessment_lo_bundles_avg_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by avg() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_avg_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_lo_bundles". All fields are combined with a logical 'AND'.
"""
input assessment_lo_bundles_bool_exp {
  _and: [assessment_lo_bundles_bool_exp!]
  _not: assessment_lo_bundles_bool_exp
  _or: [assessment_lo_bundles_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  lo_bundle: lo_bundle_bool_exp
  lobundle_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_lo_bundles"
"""
enum assessment_lo_bundles_constraint {
  """unique or primary key constraint"""
  assessment_lo_bundles_assessment_id_lobundle_id_d09ea9cb_uniq

  """unique or primary key constraint"""
  assessment_lo_bundles_pkey
}

"""
input type for incrementing numeric columns in table "assessment_lo_bundles"
"""
input assessment_lo_bundles_inc_input {
  assessment_id: Int
  id: Int
  lobundle_id: Int
}

"""
input type for inserting data into table "assessment_lo_bundles"
"""
input assessment_lo_bundles_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  lo_bundle: lo_bundle_obj_rel_insert_input
  lobundle_id: Int
}

"""aggregate max on columns"""
type assessment_lo_bundles_max_fields {
  assessment_id: Int
  id: Int
  lobundle_id: Int
}

"""
order by max() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_max_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate min on columns"""
type assessment_lo_bundles_min_fields {
  assessment_id: Int
  id: Int
  lobundle_id: Int
}

"""
order by min() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_min_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""
response of any mutation on the table "assessment_lo_bundles"
"""
type assessment_lo_bundles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_lo_bundles!]!
}

"""
on conflict condition type for table "assessment_lo_bundles"
"""
input assessment_lo_bundles_on_conflict {
  constraint: assessment_lo_bundles_constraint!
  update_columns: [assessment_lo_bundles_update_column!]! = []
  where: assessment_lo_bundles_bool_exp
}

"""Ordering options when selecting data from "assessment_lo_bundles"."""
input assessment_lo_bundles_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  lo_bundle: lo_bundle_order_by
  lobundle_id: order_by
}

"""primary key columns input for table: assessment_lo_bundles"""
input assessment_lo_bundles_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_lo_bundles"
"""
enum assessment_lo_bundles_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  lobundle_id
}

"""
input type for updating data in table "assessment_lo_bundles"
"""
input assessment_lo_bundles_set_input {
  assessment_id: Int
  id: Int
  lobundle_id: Int
}

"""aggregate stddev on columns"""
type assessment_lo_bundles_stddev_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by stddev() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_stddev_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_lo_bundles_stddev_pop_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_lo_bundles_stddev_samp_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate sum on columns"""
type assessment_lo_bundles_sum_fields {
  assessment_id: Int
  id: Int
  lobundle_id: Int
}

"""
order by sum() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_sum_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""
update columns of table "assessment_lo_bundles"
"""
enum assessment_lo_bundles_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  lobundle_id
}

"""aggregate var_pop on columns"""
type assessment_lo_bundles_var_pop_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by var_pop() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_lo_bundles_var_samp_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by var_samp() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate variance on columns"""
type assessment_lo_bundles_variance_fields {
  assessment_id: Float
  id: Float
  lobundle_id: Float
}

"""
order by variance() on columns of table "assessment_lo_bundles"
"""
input assessment_lo_bundles_variance_order_by {
  assessment_id: order_by
  id: order_by
  lobundle_id: order_by
}

"""aggregate max on columns"""
type assessment_max_fields {
  builder_id: Int
  created: timestamptz
  deadline_id: Int
  end: timestamptz
  evaluation_params: String
  id: Int
  mapping_id: Int
  overall_pass_percentage: float8
  overall_total_marks: Int
  sms_template: String
  start: timestamptz
  submission_type: String
  submission_type_v2_id: Int
  type: String
  type_v2_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment"
"""
input assessment_max_order_by {
  builder_id: order_by
  created: order_by
  deadline_id: order_by
  end: order_by
  evaluation_params: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  sms_template: order_by
  start: order_by
  submission_type: order_by
  submission_type_v2_id: order_by
  type: order_by
  type_v2_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_min_fields {
  builder_id: Int
  created: timestamptz
  deadline_id: Int
  end: timestamptz
  evaluation_params: String
  id: Int
  mapping_id: Int
  overall_pass_percentage: float8
  overall_total_marks: Int
  sms_template: String
  start: timestamptz
  submission_type: String
  submission_type_v2_id: Int
  type: String
  type_v2_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment"
"""
input assessment_min_order_by {
  builder_id: order_by
  created: order_by
  deadline_id: order_by
  end: order_by
  evaluation_params: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  sms_template: order_by
  start: order_by
  submission_type: order_by
  submission_type_v2_id: order_by
  type: order_by
  type_v2_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment"
"""
type assessment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment!]!
}

"""
input type for inserting object relation for remote table "assessment"
"""
input assessment_obj_rel_insert_input {
  data: assessment_insert_input!

  """on conflict condition"""
  on_conflict: assessment_on_conflict
}

"""
on conflict condition type for table "assessment"
"""
input assessment_on_conflict {
  constraint: assessment_constraint!
  update_columns: [assessment_update_column!]! = []
  where: assessment_bool_exp
}

"""Ordering options when selecting data from "assessment"."""
input assessment_order_by {
  assessment_au_lo_aggregates_aggregate: assessment_au_lo_aggregate_aggregate_order_by
  assessment_au_question_aggregate_submissions_aggregate: assessment_au_question_aggregate_submission_aggregate_order_by
  assessment_au_question_aggregates_aggregate: assessment_au_question_aggregate_aggregate_order_by
  assessment_builder: assessment_builder_order_by
  assessment_cache_v5s_aggregate: assessment_cache_v5_aggregate_order_by
  assessment_caches_aggregate: assessment_cache_aggregate_order_by
  assessment_components_aggregate: assessment_components_aggregate_order_by
  assessment_ep_grades_aggregate: assessment_ep_grade_aggregate_order_by
  assessment_ep_marks_aggregate: assessment_ep_marks_aggregate_order_by
  assessment_grades_aggregate: assessment_grade_aggregate_order_by
  assessment_lo_bundles_aggregate: assessment_lo_bundles_aggregate_order_by
  assessment_question_bundles_aggregate: assessment_question_bundles_aggregate_order_by
  assessment_streams_aggregate: assessment_stream_aggregate_order_by
  assessment_subjects_aggregate: assessment_subjects_aggregate_order_by
  assessment_type: assessment_type_order_by
  assessment_unit_bundles_aggregate: assessment_unit_bundles_aggregate_order_by
  assessment_units_aggregate: assessment_unit_aggregate_order_by
  builder_id: order_by
  celery_duplicate_removes_aggregate: celery_duplicate_remove_aggregate_order_by
  class_level_component_submissions_aggregate: class_level_component_submission_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  component_submissions_aggregate: component_submission_aggregate_order_by
  created: order_by
  deadline: deadline_order_by
  deadline_id: order_by
  end: order_by
  evaluation_params: order_by
  grade_assessments_aggregate: grade_assessment_aggregate_order_by
  id: order_by
  is_enabled: order_by
  is_final: order_by
  lo_assessments_aggregate: lo_assessment_aggregate_order_by
  lo_submissions_aggregate: lo_submission_aggregate_order_by
  mapping_detail: mapping_details_order_by
  mapping_id: order_by
  mapping_submissions_aggregate: mapping_submission_aggregate_order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  question_assessments_aggregate: question_assessment_aggregate_order_by
  question_submissions_aggregate: question_submission_aggregate_order_by
  sms_template: order_by
  start: order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  student_submissions_aggregate: student_submission_aggregate_order_by
  subject_submissions_aggregate: subject_submission_aggregate_order_by
  submissionTypeBySubmissionTypeV2Id: submission_type_order_by
  submission_summaries_aggregate: submission_summary_aggregate_order_by
  submission_type: order_by
  submission_type_v2_id: order_by
  type: order_by
  type_v2_id: order_by
  updated: order_by
}

"""primary key columns input for table: assessment"""
input assessment_pk_columns_input {
  id: Int!
}

"""
columns and relationships of "assessment_question_bundles"
"""
type assessment_question_bundles {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  question_bundle: question_bundle!
  questionbundle_id: Int!
}

"""
aggregated selection of "assessment_question_bundles"
"""
type assessment_question_bundles_aggregate {
  aggregate: assessment_question_bundles_aggregate_fields
  nodes: [assessment_question_bundles!]!
}

"""
aggregate fields of "assessment_question_bundles"
"""
type assessment_question_bundles_aggregate_fields {
  avg: assessment_question_bundles_avg_fields
  count(columns: [assessment_question_bundles_select_column!], distinct: Boolean): Int!
  max: assessment_question_bundles_max_fields
  min: assessment_question_bundles_min_fields
  stddev: assessment_question_bundles_stddev_fields
  stddev_pop: assessment_question_bundles_stddev_pop_fields
  stddev_samp: assessment_question_bundles_stddev_samp_fields
  sum: assessment_question_bundles_sum_fields
  var_pop: assessment_question_bundles_var_pop_fields
  var_samp: assessment_question_bundles_var_samp_fields
  variance: assessment_question_bundles_variance_fields
}

"""
order by aggregate values of table "assessment_question_bundles"
"""
input assessment_question_bundles_aggregate_order_by {
  avg: assessment_question_bundles_avg_order_by
  count: order_by
  max: assessment_question_bundles_max_order_by
  min: assessment_question_bundles_min_order_by
  stddev: assessment_question_bundles_stddev_order_by
  stddev_pop: assessment_question_bundles_stddev_pop_order_by
  stddev_samp: assessment_question_bundles_stddev_samp_order_by
  sum: assessment_question_bundles_sum_order_by
  var_pop: assessment_question_bundles_var_pop_order_by
  var_samp: assessment_question_bundles_var_samp_order_by
  variance: assessment_question_bundles_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_question_bundles"
"""
input assessment_question_bundles_arr_rel_insert_input {
  data: [assessment_question_bundles_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_question_bundles_on_conflict
}

"""aggregate avg on columns"""
type assessment_question_bundles_avg_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by avg() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_avg_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_question_bundles". All fields are combined with a logical 'AND'.
"""
input assessment_question_bundles_bool_exp {
  _and: [assessment_question_bundles_bool_exp!]
  _not: assessment_question_bundles_bool_exp
  _or: [assessment_question_bundles_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  question_bundle: question_bundle_bool_exp
  questionbundle_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_question_bundles"
"""
enum assessment_question_bundles_constraint {
  """unique or primary key constraint"""
  assessment_question_bund_assessment_id_questionbu_6389e572_uniq

  """unique or primary key constraint"""
  assessment_question_bundles_pkey
}

"""
input type for incrementing numeric columns in table "assessment_question_bundles"
"""
input assessment_question_bundles_inc_input {
  assessment_id: Int
  id: Int
  questionbundle_id: Int
}

"""
input type for inserting data into table "assessment_question_bundles"
"""
input assessment_question_bundles_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  question_bundle: question_bundle_obj_rel_insert_input
  questionbundle_id: Int
}

"""aggregate max on columns"""
type assessment_question_bundles_max_fields {
  assessment_id: Int
  id: Int
  questionbundle_id: Int
}

"""
order by max() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_max_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""aggregate min on columns"""
type assessment_question_bundles_min_fields {
  assessment_id: Int
  id: Int
  questionbundle_id: Int
}

"""
order by min() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_min_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""
response of any mutation on the table "assessment_question_bundles"
"""
type assessment_question_bundles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_question_bundles!]!
}

"""
on conflict condition type for table "assessment_question_bundles"
"""
input assessment_question_bundles_on_conflict {
  constraint: assessment_question_bundles_constraint!
  update_columns: [assessment_question_bundles_update_column!]! = []
  where: assessment_question_bundles_bool_exp
}

"""
Ordering options when selecting data from "assessment_question_bundles".
"""
input assessment_question_bundles_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  question_bundle: question_bundle_order_by
  questionbundle_id: order_by
}

"""primary key columns input for table: assessment_question_bundles"""
input assessment_question_bundles_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_question_bundles"
"""
enum assessment_question_bundles_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  questionbundle_id
}

"""
input type for updating data in table "assessment_question_bundles"
"""
input assessment_question_bundles_set_input {
  assessment_id: Int
  id: Int
  questionbundle_id: Int
}

"""aggregate stddev on columns"""
type assessment_question_bundles_stddev_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by stddev() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_stddev_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_question_bundles_stddev_pop_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_question_bundles_stddev_samp_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""aggregate sum on columns"""
type assessment_question_bundles_sum_fields {
  assessment_id: Int
  id: Int
  questionbundle_id: Int
}

"""
order by sum() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_sum_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""
update columns of table "assessment_question_bundles"
"""
enum assessment_question_bundles_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  questionbundle_id
}

"""aggregate var_pop on columns"""
type assessment_question_bundles_var_pop_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by var_pop() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_question_bundles_var_samp_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by var_samp() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""aggregate variance on columns"""
type assessment_question_bundles_variance_fields {
  assessment_id: Float
  id: Float
  questionbundle_id: Float
}

"""
order by variance() on columns of table "assessment_question_bundles"
"""
input assessment_question_bundles_variance_order_by {
  assessment_id: order_by
  id: order_by
  questionbundle_id: order_by
}

"""
columns and relationships of "assessment_result"
"""
type assessment_result {
  created_at: timestamptz!
  evaluator: Int
  grade: Int
  id: Int!
  last_test_achievement: Int
  last_test_competency: String
  last_test_grade: Int
  module_results: String
  school_id: Int
  section: String
  status: Int
  student_id: Int
  student_name: String
  subject: String
}

"""
aggregated selection of "assessment_result"
"""
type assessment_result_aggregate {
  aggregate: assessment_result_aggregate_fields
  nodes: [assessment_result!]!
}

"""
aggregate fields of "assessment_result"
"""
type assessment_result_aggregate_fields {
  avg: assessment_result_avg_fields
  count(columns: [assessment_result_select_column!], distinct: Boolean): Int!
  max: assessment_result_max_fields
  min: assessment_result_min_fields
  stddev: assessment_result_stddev_fields
  stddev_pop: assessment_result_stddev_pop_fields
  stddev_samp: assessment_result_stddev_samp_fields
  sum: assessment_result_sum_fields
  var_pop: assessment_result_var_pop_fields
  var_samp: assessment_result_var_samp_fields
  variance: assessment_result_variance_fields
}

"""aggregate avg on columns"""
type assessment_result_avg_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""
Boolean expression to filter rows from the table "assessment_result". All fields are combined with a logical 'AND'.
"""
input assessment_result_bool_exp {
  _and: [assessment_result_bool_exp!]
  _not: assessment_result_bool_exp
  _or: [assessment_result_bool_exp!]
  created_at: timestamptz_comparison_exp
  evaluator: Int_comparison_exp
  grade: Int_comparison_exp
  id: Int_comparison_exp
  last_test_achievement: Int_comparison_exp
  last_test_competency: String_comparison_exp
  last_test_grade: Int_comparison_exp
  module_results: String_comparison_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  status: Int_comparison_exp
  student_id: Int_comparison_exp
  student_name: String_comparison_exp
  subject: String_comparison_exp
}

"""
unique or primary key constraints on table "assessment_result"
"""
enum assessment_result_constraint {
  """unique or primary key constraint"""
  assessment_result_pkey
}

"""
input type for incrementing numeric columns in table "assessment_result"
"""
input assessment_result_inc_input {
  evaluator: Int
  grade: Int
  id: Int
  last_test_achievement: Int
  last_test_grade: Int
  school_id: Int
  status: Int
  student_id: Int
}

"""
input type for inserting data into table "assessment_result"
"""
input assessment_result_insert_input {
  created_at: timestamptz
  evaluator: Int
  grade: Int
  id: Int
  last_test_achievement: Int
  last_test_competency: String
  last_test_grade: Int
  module_results: String
  school_id: Int
  section: String
  status: Int
  student_id: Int
  student_name: String
  subject: String
}

"""aggregate max on columns"""
type assessment_result_max_fields {
  created_at: timestamptz
  evaluator: Int
  grade: Int
  id: Int
  last_test_achievement: Int
  last_test_competency: String
  last_test_grade: Int
  module_results: String
  school_id: Int
  section: String
  status: Int
  student_id: Int
  student_name: String
  subject: String
}

"""aggregate min on columns"""
type assessment_result_min_fields {
  created_at: timestamptz
  evaluator: Int
  grade: Int
  id: Int
  last_test_achievement: Int
  last_test_competency: String
  last_test_grade: Int
  module_results: String
  school_id: Int
  section: String
  status: Int
  student_id: Int
  student_name: String
  subject: String
}

"""
response of any mutation on the table "assessment_result"
"""
type assessment_result_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_result!]!
}

"""
on conflict condition type for table "assessment_result"
"""
input assessment_result_on_conflict {
  constraint: assessment_result_constraint!
  update_columns: [assessment_result_update_column!]! = []
  where: assessment_result_bool_exp
}

"""Ordering options when selecting data from "assessment_result"."""
input assessment_result_order_by {
  created_at: order_by
  evaluator: order_by
  grade: order_by
  id: order_by
  last_test_achievement: order_by
  last_test_competency: order_by
  last_test_grade: order_by
  module_results: order_by
  school_id: order_by
  section: order_by
  status: order_by
  student_id: order_by
  student_name: order_by
  subject: order_by
}

"""primary key columns input for table: assessment_result"""
input assessment_result_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_result"
"""
enum assessment_result_select_column {
  """column name"""
  created_at

  """column name"""
  evaluator

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  last_test_achievement

  """column name"""
  last_test_competency

  """column name"""
  last_test_grade

  """column name"""
  module_results

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  student_name

  """column name"""
  subject
}

"""
input type for updating data in table "assessment_result"
"""
input assessment_result_set_input {
  created_at: timestamptz
  evaluator: Int
  grade: Int
  id: Int
  last_test_achievement: Int
  last_test_competency: String
  last_test_grade: Int
  module_results: String
  school_id: Int
  section: String
  status: Int
  student_id: Int
  student_name: String
  subject: String
}

"""aggregate stddev on columns"""
type assessment_result_stddev_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""aggregate stddev_pop on columns"""
type assessment_result_stddev_pop_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""aggregate stddev_samp on columns"""
type assessment_result_stddev_samp_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""aggregate sum on columns"""
type assessment_result_sum_fields {
  evaluator: Int
  grade: Int
  id: Int
  last_test_achievement: Int
  last_test_grade: Int
  school_id: Int
  status: Int
  student_id: Int
}

"""
update columns of table "assessment_result"
"""
enum assessment_result_update_column {
  """column name"""
  created_at

  """column name"""
  evaluator

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  last_test_achievement

  """column name"""
  last_test_competency

  """column name"""
  last_test_grade

  """column name"""
  module_results

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  student_name

  """column name"""
  subject
}

"""aggregate var_pop on columns"""
type assessment_result_var_pop_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""aggregate var_samp on columns"""
type assessment_result_var_samp_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""aggregate variance on columns"""
type assessment_result_variance_fields {
  evaluator: Float
  grade: Float
  id: Float
  last_test_achievement: Float
  last_test_grade: Float
  school_id: Float
  status: Float
  student_id: Float
}

"""
select columns of table "assessment"
"""
enum assessment_select_column {
  """column name"""
  builder_id

  """column name"""
  created

  """column name"""
  deadline_id

  """column name"""
  end

  """column name"""
  evaluation_params

  """column name"""
  id

  """column name"""
  is_enabled

  """column name"""
  is_final

  """column name"""
  mapping_id

  """column name"""
  overall_pass_percentage

  """column name"""
  overall_total_marks

  """column name"""
  sms_template

  """column name"""
  start

  """column name"""
  submission_type

  """column name"""
  submission_type_v2_id

  """column name"""
  type

  """column name"""
  type_v2_id

  """column name"""
  updated
}

"""
input type for updating data in table "assessment"
"""
input assessment_set_input {
  builder_id: Int
  created: timestamptz
  deadline_id: Int
  end: timestamptz
  evaluation_params: String
  id: Int
  is_enabled: Boolean
  is_final: Boolean
  mapping_id: Int
  overall_pass_percentage: float8
  overall_total_marks: Int
  sms_template: String
  start: timestamptz
  submission_type: String
  submission_type_v2_id: Int
  type: String
  type_v2_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_stddev_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by stddev() on columns of table "assessment"
"""
input assessment_stddev_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_stddev_pop_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by stddev_pop() on columns of table "assessment"
"""
input assessment_stddev_pop_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_stddev_samp_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by stddev_samp() on columns of table "assessment"
"""
input assessment_stddev_samp_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""
columns and relationships of "assessment_stream"
"""
type assessment_stream {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  stream: stream!
  stream_id: Int!
}

"""
aggregated selection of "assessment_stream"
"""
type assessment_stream_aggregate {
  aggregate: assessment_stream_aggregate_fields
  nodes: [assessment_stream!]!
}

"""
aggregate fields of "assessment_stream"
"""
type assessment_stream_aggregate_fields {
  avg: assessment_stream_avg_fields
  count(columns: [assessment_stream_select_column!], distinct: Boolean): Int!
  max: assessment_stream_max_fields
  min: assessment_stream_min_fields
  stddev: assessment_stream_stddev_fields
  stddev_pop: assessment_stream_stddev_pop_fields
  stddev_samp: assessment_stream_stddev_samp_fields
  sum: assessment_stream_sum_fields
  var_pop: assessment_stream_var_pop_fields
  var_samp: assessment_stream_var_samp_fields
  variance: assessment_stream_variance_fields
}

"""
order by aggregate values of table "assessment_stream"
"""
input assessment_stream_aggregate_order_by {
  avg: assessment_stream_avg_order_by
  count: order_by
  max: assessment_stream_max_order_by
  min: assessment_stream_min_order_by
  stddev: assessment_stream_stddev_order_by
  stddev_pop: assessment_stream_stddev_pop_order_by
  stddev_samp: assessment_stream_stddev_samp_order_by
  sum: assessment_stream_sum_order_by
  var_pop: assessment_stream_var_pop_order_by
  var_samp: assessment_stream_var_samp_order_by
  variance: assessment_stream_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_stream"
"""
input assessment_stream_arr_rel_insert_input {
  data: [assessment_stream_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_stream_on_conflict
}

"""aggregate avg on columns"""
type assessment_stream_avg_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by avg() on columns of table "assessment_stream"
"""
input assessment_stream_avg_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_stream". All fields are combined with a logical 'AND'.
"""
input assessment_stream_bool_exp {
  _and: [assessment_stream_bool_exp!]
  _not: assessment_stream_bool_exp
  _or: [assessment_stream_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_stream"
"""
enum assessment_stream_constraint {
  """unique or primary key constraint"""
  assessment_stream_assessment_id_stream_id_da8a2d6c_uniq

  """unique or primary key constraint"""
  assessment_stream_pkey
}

"""
input type for incrementing numeric columns in table "assessment_stream"
"""
input assessment_stream_inc_input {
  assessment_id: Int
  id: Int
  stream_id: Int
}

"""
input type for inserting data into table "assessment_stream"
"""
input assessment_stream_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
}

"""aggregate max on columns"""
type assessment_stream_max_fields {
  assessment_id: Int
  id: Int
  stream_id: Int
}

"""
order by max() on columns of table "assessment_stream"
"""
input assessment_stream_max_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""aggregate min on columns"""
type assessment_stream_min_fields {
  assessment_id: Int
  id: Int
  stream_id: Int
}

"""
order by min() on columns of table "assessment_stream"
"""
input assessment_stream_min_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""
response of any mutation on the table "assessment_stream"
"""
type assessment_stream_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_stream!]!
}

"""
on conflict condition type for table "assessment_stream"
"""
input assessment_stream_on_conflict {
  constraint: assessment_stream_constraint!
  update_columns: [assessment_stream_update_column!]! = []
  where: assessment_stream_bool_exp
}

"""Ordering options when selecting data from "assessment_stream"."""
input assessment_stream_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  stream: stream_order_by
  stream_id: order_by
}

"""primary key columns input for table: assessment_stream"""
input assessment_stream_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_stream"
"""
enum assessment_stream_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  stream_id
}

"""
input type for updating data in table "assessment_stream"
"""
input assessment_stream_set_input {
  assessment_id: Int
  id: Int
  stream_id: Int
}

"""aggregate stddev on columns"""
type assessment_stream_stddev_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by stddev() on columns of table "assessment_stream"
"""
input assessment_stream_stddev_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_stream_stddev_pop_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_stream"
"""
input assessment_stream_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_stream_stddev_samp_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_stream"
"""
input assessment_stream_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""aggregate sum on columns"""
type assessment_stream_sum_fields {
  assessment_id: Int
  id: Int
  stream_id: Int
}

"""
order by sum() on columns of table "assessment_stream"
"""
input assessment_stream_sum_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""
update columns of table "assessment_stream"
"""
enum assessment_stream_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  stream_id
}

"""aggregate var_pop on columns"""
type assessment_stream_var_pop_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by var_pop() on columns of table "assessment_stream"
"""
input assessment_stream_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_stream_var_samp_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by var_samp() on columns of table "assessment_stream"
"""
input assessment_stream_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""aggregate variance on columns"""
type assessment_stream_variance_fields {
  assessment_id: Float
  id: Float
  stream_id: Float
}

"""
order by variance() on columns of table "assessment_stream"
"""
input assessment_stream_variance_order_by {
  assessment_id: order_by
  id: order_by
  stream_id: order_by
}

"""
columns and relationships of "assessment_subjects"
"""
type assessment_subjects {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "assessment_subjects"
"""
type assessment_subjects_aggregate {
  aggregate: assessment_subjects_aggregate_fields
  nodes: [assessment_subjects!]!
}

"""
aggregate fields of "assessment_subjects"
"""
type assessment_subjects_aggregate_fields {
  avg: assessment_subjects_avg_fields
  count(columns: [assessment_subjects_select_column!], distinct: Boolean): Int!
  max: assessment_subjects_max_fields
  min: assessment_subjects_min_fields
  stddev: assessment_subjects_stddev_fields
  stddev_pop: assessment_subjects_stddev_pop_fields
  stddev_samp: assessment_subjects_stddev_samp_fields
  sum: assessment_subjects_sum_fields
  var_pop: assessment_subjects_var_pop_fields
  var_samp: assessment_subjects_var_samp_fields
  variance: assessment_subjects_variance_fields
}

"""
order by aggregate values of table "assessment_subjects"
"""
input assessment_subjects_aggregate_order_by {
  avg: assessment_subjects_avg_order_by
  count: order_by
  max: assessment_subjects_max_order_by
  min: assessment_subjects_min_order_by
  stddev: assessment_subjects_stddev_order_by
  stddev_pop: assessment_subjects_stddev_pop_order_by
  stddev_samp: assessment_subjects_stddev_samp_order_by
  sum: assessment_subjects_sum_order_by
  var_pop: assessment_subjects_var_pop_order_by
  var_samp: assessment_subjects_var_samp_order_by
  variance: assessment_subjects_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_subjects"
"""
input assessment_subjects_arr_rel_insert_input {
  data: [assessment_subjects_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_subjects_on_conflict
}

"""aggregate avg on columns"""
type assessment_subjects_avg_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "assessment_subjects"
"""
input assessment_subjects_avg_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_subjects". All fields are combined with a logical 'AND'.
"""
input assessment_subjects_bool_exp {
  _and: [assessment_subjects_bool_exp!]
  _not: assessment_subjects_bool_exp
  _or: [assessment_subjects_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_subjects"
"""
enum assessment_subjects_constraint {
  """unique or primary key constraint"""
  assessment_subject_assessment_id_subject_id_c9fe3209_uniq

  """unique or primary key constraint"""
  assessment_subject_pkey
}

"""
input type for incrementing numeric columns in table "assessment_subjects"
"""
input assessment_subjects_inc_input {
  assessment_id: Int
  id: Int
  subject_id: Int
}

"""
input type for inserting data into table "assessment_subjects"
"""
input assessment_subjects_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type assessment_subjects_max_fields {
  assessment_id: Int
  id: Int
  subject_id: Int
}

"""
order by max() on columns of table "assessment_subjects"
"""
input assessment_subjects_max_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type assessment_subjects_min_fields {
  assessment_id: Int
  id: Int
  subject_id: Int
}

"""
order by min() on columns of table "assessment_subjects"
"""
input assessment_subjects_min_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "assessment_subjects"
"""
type assessment_subjects_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_subjects!]!
}

"""
on conflict condition type for table "assessment_subjects"
"""
input assessment_subjects_on_conflict {
  constraint: assessment_subjects_constraint!
  update_columns: [assessment_subjects_update_column!]! = []
  where: assessment_subjects_bool_exp
}

"""Ordering options when selecting data from "assessment_subjects"."""
input assessment_subjects_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: assessment_subjects"""
input assessment_subjects_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_subjects"
"""
enum assessment_subjects_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  subject_id
}

"""
input type for updating data in table "assessment_subjects"
"""
input assessment_subjects_set_input {
  assessment_id: Int
  id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type assessment_subjects_stddev_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "assessment_subjects"
"""
input assessment_subjects_stddev_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_subjects_stddev_pop_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_subjects"
"""
input assessment_subjects_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_subjects_stddev_samp_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_subjects"
"""
input assessment_subjects_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_subjects_sum_fields {
  assessment_id: Int
  id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "assessment_subjects"
"""
input assessment_subjects_sum_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""
update columns of table "assessment_subjects"
"""
enum assessment_subjects_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type assessment_subjects_var_pop_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "assessment_subjects"
"""
input assessment_subjects_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_subjects_var_samp_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "assessment_subjects"
"""
input assessment_subjects_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type assessment_subjects_variance_fields {
  assessment_id: Float
  id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "assessment_subjects"
"""
input assessment_subjects_variance_order_by {
  assessment_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_sum_fields {
  builder_id: Int
  deadline_id: Int
  id: Int
  mapping_id: Int
  overall_pass_percentage: float8
  overall_total_marks: Int
  submission_type_v2_id: Int
  type_v2_id: Int
}

"""
order by sum() on columns of table "assessment"
"""
input assessment_sum_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""
columns and relationships of "assessment_type"
"""
type assessment_type {
  abbreviation: String

  """An object relationship"""
  assessment_category: assessment_category

  """An array relationship"""
  assessments(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """An aggregate relationship"""
  assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!
  category_id: Int
  created: timestamptz
  desc: String
  id: Int!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "assessment_type"
"""
type assessment_type_aggregate {
  aggregate: assessment_type_aggregate_fields
  nodes: [assessment_type!]!
}

"""
aggregate fields of "assessment_type"
"""
type assessment_type_aggregate_fields {
  avg: assessment_type_avg_fields
  count(columns: [assessment_type_select_column!], distinct: Boolean): Int!
  max: assessment_type_max_fields
  min: assessment_type_min_fields
  stddev: assessment_type_stddev_fields
  stddev_pop: assessment_type_stddev_pop_fields
  stddev_samp: assessment_type_stddev_samp_fields
  sum: assessment_type_sum_fields
  var_pop: assessment_type_var_pop_fields
  var_samp: assessment_type_var_samp_fields
  variance: assessment_type_variance_fields
}

"""
order by aggregate values of table "assessment_type"
"""
input assessment_type_aggregate_order_by {
  avg: assessment_type_avg_order_by
  count: order_by
  max: assessment_type_max_order_by
  min: assessment_type_min_order_by
  stddev: assessment_type_stddev_order_by
  stddev_pop: assessment_type_stddev_pop_order_by
  stddev_samp: assessment_type_stddev_samp_order_by
  sum: assessment_type_sum_order_by
  var_pop: assessment_type_var_pop_order_by
  var_samp: assessment_type_var_samp_order_by
  variance: assessment_type_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_type"
"""
input assessment_type_arr_rel_insert_input {
  data: [assessment_type_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_type_on_conflict
}

"""aggregate avg on columns"""
type assessment_type_avg_fields {
  category_id: Float
  id: Float
}

"""
order by avg() on columns of table "assessment_type"
"""
input assessment_type_avg_order_by {
  category_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_type". All fields are combined with a logical 'AND'.
"""
input assessment_type_bool_exp {
  _and: [assessment_type_bool_exp!]
  _not: assessment_type_bool_exp
  _or: [assessment_type_bool_exp!]
  abbreviation: String_comparison_exp
  assessment_category: assessment_category_bool_exp
  assessments: assessment_bool_exp
  category_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  desc: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assessment_type"
"""
enum assessment_type_constraint {
  """unique or primary key constraint"""
  assessment_type_pkey
}

"""
input type for incrementing numeric columns in table "assessment_type"
"""
input assessment_type_inc_input {
  category_id: Int
  id: Int
}

"""
input type for inserting data into table "assessment_type"
"""
input assessment_type_insert_input {
  abbreviation: String
  assessment_category: assessment_category_obj_rel_insert_input
  assessments: assessment_arr_rel_insert_input
  category_id: Int
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_type_max_fields {
  abbreviation: String
  category_id: Int
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_type"
"""
input assessment_type_max_order_by {
  abbreviation: order_by
  category_id: order_by
  created: order_by
  desc: order_by
  id: order_by
  name: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_type_min_fields {
  abbreviation: String
  category_id: Int
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_type"
"""
input assessment_type_min_order_by {
  abbreviation: order_by
  category_id: order_by
  created: order_by
  desc: order_by
  id: order_by
  name: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_type"
"""
type assessment_type_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_type!]!
}

"""
input type for inserting object relation for remote table "assessment_type"
"""
input assessment_type_obj_rel_insert_input {
  data: assessment_type_insert_input!

  """on conflict condition"""
  on_conflict: assessment_type_on_conflict
}

"""
on conflict condition type for table "assessment_type"
"""
input assessment_type_on_conflict {
  constraint: assessment_type_constraint!
  update_columns: [assessment_type_update_column!]! = []
  where: assessment_type_bool_exp
}

"""Ordering options when selecting data from "assessment_type"."""
input assessment_type_order_by {
  abbreviation: order_by
  assessment_category: assessment_category_order_by
  assessments_aggregate: assessment_aggregate_order_by
  category_id: order_by
  created: order_by
  desc: order_by
  id: order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_type"""
input assessment_type_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_type"
"""
enum assessment_type_select_column {
  """column name"""
  abbreviation

  """column name"""
  category_id

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "assessment_type"
"""
input assessment_type_set_input {
  abbreviation: String
  category_id: Int
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_type_stddev_fields {
  category_id: Float
  id: Float
}

"""
order by stddev() on columns of table "assessment_type"
"""
input assessment_type_stddev_order_by {
  category_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_type_stddev_pop_fields {
  category_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "assessment_type"
"""
input assessment_type_stddev_pop_order_by {
  category_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_type_stddev_samp_fields {
  category_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "assessment_type"
"""
input assessment_type_stddev_samp_order_by {
  category_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type assessment_type_sum_fields {
  category_id: Int
  id: Int
}

"""
order by sum() on columns of table "assessment_type"
"""
input assessment_type_sum_order_by {
  category_id: order_by
  id: order_by
}

"""
update columns of table "assessment_type"
"""
enum assessment_type_update_column {
  """column name"""
  abbreviation

  """column name"""
  category_id

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_type_var_pop_fields {
  category_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "assessment_type"
"""
input assessment_type_var_pop_order_by {
  category_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type assessment_type_var_samp_fields {
  category_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "assessment_type"
"""
input assessment_type_var_samp_order_by {
  category_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type assessment_type_variance_fields {
  category_id: Float
  id: Float
}

"""
order by variance() on columns of table "assessment_type"
"""
input assessment_type_variance_order_by {
  category_id: order_by
  id: order_by
}

"""
columns and relationships of "assessment_unit"
"""
type assessment_unit {
  """An object relationship"""
  assessment: assessment
  assessment_id: Int

  """An array relationship"""
  assessment_unit_selected_los(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): [assessment_unit_selected_lo!]!

  """An aggregate relationship"""
  assessment_unit_selected_los_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): assessment_unit_selected_lo_aggregate!

  """An array relationship"""
  assessment_unit_selected_questions(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): [assessment_unit_selected_question!]!

  """An aggregate relationship"""
  assessment_unit_selected_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): assessment_unit_selected_question_aggregate!

  """An array relationship"""
  assessment_unit_selected_units(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): [assessment_unit_selected_unit!]!

  """An aggregate relationship"""
  assessment_unit_selected_units_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): assessment_unit_selected_unit_aggregate!
  created: timestamptz
  id: Int!

  """An object relationship"""
  school: school
  school_id: Int

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An object relationship"""
  subject: subject
  subject_id: Int
  updated: timestamptz
}

"""
aggregated selection of "assessment_unit"
"""
type assessment_unit_aggregate {
  aggregate: assessment_unit_aggregate_fields
  nodes: [assessment_unit!]!
}

"""
aggregate fields of "assessment_unit"
"""
type assessment_unit_aggregate_fields {
  avg: assessment_unit_avg_fields
  count(columns: [assessment_unit_select_column!], distinct: Boolean): Int!
  max: assessment_unit_max_fields
  min: assessment_unit_min_fields
  stddev: assessment_unit_stddev_fields
  stddev_pop: assessment_unit_stddev_pop_fields
  stddev_samp: assessment_unit_stddev_samp_fields
  sum: assessment_unit_sum_fields
  var_pop: assessment_unit_var_pop_fields
  var_samp: assessment_unit_var_samp_fields
  variance: assessment_unit_variance_fields
}

"""
order by aggregate values of table "assessment_unit"
"""
input assessment_unit_aggregate_order_by {
  avg: assessment_unit_avg_order_by
  count: order_by
  max: assessment_unit_max_order_by
  min: assessment_unit_min_order_by
  stddev: assessment_unit_stddev_order_by
  stddev_pop: assessment_unit_stddev_pop_order_by
  stddev_samp: assessment_unit_stddev_samp_order_by
  sum: assessment_unit_sum_order_by
  var_pop: assessment_unit_var_pop_order_by
  var_samp: assessment_unit_var_samp_order_by
  variance: assessment_unit_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_unit"
"""
input assessment_unit_arr_rel_insert_input {
  data: [assessment_unit_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_unit_on_conflict
}

"""aggregate avg on columns"""
type assessment_unit_avg_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "assessment_unit"
"""
input assessment_unit_avg_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_unit". All fields are combined with a logical 'AND'.
"""
input assessment_unit_bool_exp {
  _and: [assessment_unit_bool_exp!]
  _not: assessment_unit_bool_exp
  _or: [assessment_unit_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  assessment_unit_selected_los: assessment_unit_selected_lo_bool_exp
  assessment_unit_selected_questions: assessment_unit_selected_question_bool_exp
  assessment_unit_selected_units: assessment_unit_selected_unit_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  student_submission_v2s: student_submission_v2_bool_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
columns and relationships of "assessment_unit_bundles"
"""
type assessment_unit_bundles {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  unit_bundle: unit_bundle!
  unitbundle_id: Int!
}

"""
aggregated selection of "assessment_unit_bundles"
"""
type assessment_unit_bundles_aggregate {
  aggregate: assessment_unit_bundles_aggregate_fields
  nodes: [assessment_unit_bundles!]!
}

"""
aggregate fields of "assessment_unit_bundles"
"""
type assessment_unit_bundles_aggregate_fields {
  avg: assessment_unit_bundles_avg_fields
  count(columns: [assessment_unit_bundles_select_column!], distinct: Boolean): Int!
  max: assessment_unit_bundles_max_fields
  min: assessment_unit_bundles_min_fields
  stddev: assessment_unit_bundles_stddev_fields
  stddev_pop: assessment_unit_bundles_stddev_pop_fields
  stddev_samp: assessment_unit_bundles_stddev_samp_fields
  sum: assessment_unit_bundles_sum_fields
  var_pop: assessment_unit_bundles_var_pop_fields
  var_samp: assessment_unit_bundles_var_samp_fields
  variance: assessment_unit_bundles_variance_fields
}

"""
order by aggregate values of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_aggregate_order_by {
  avg: assessment_unit_bundles_avg_order_by
  count: order_by
  max: assessment_unit_bundles_max_order_by
  min: assessment_unit_bundles_min_order_by
  stddev: assessment_unit_bundles_stddev_order_by
  stddev_pop: assessment_unit_bundles_stddev_pop_order_by
  stddev_samp: assessment_unit_bundles_stddev_samp_order_by
  sum: assessment_unit_bundles_sum_order_by
  var_pop: assessment_unit_bundles_var_pop_order_by
  var_samp: assessment_unit_bundles_var_samp_order_by
  variance: assessment_unit_bundles_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_unit_bundles"
"""
input assessment_unit_bundles_arr_rel_insert_input {
  data: [assessment_unit_bundles_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_unit_bundles_on_conflict
}

"""aggregate avg on columns"""
type assessment_unit_bundles_avg_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by avg() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_avg_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_unit_bundles". All fields are combined with a logical 'AND'.
"""
input assessment_unit_bundles_bool_exp {
  _and: [assessment_unit_bundles_bool_exp!]
  _not: assessment_unit_bundles_bool_exp
  _or: [assessment_unit_bundles_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  unit_bundle: unit_bundle_bool_exp
  unitbundle_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_unit_bundles"
"""
enum assessment_unit_bundles_constraint {
  """unique or primary key constraint"""
  assessment_unit_bundles_assessment_id_unitbundle_4b6c5068_uniq

  """unique or primary key constraint"""
  assessment_unit_bundles_pkey
}

"""
input type for incrementing numeric columns in table "assessment_unit_bundles"
"""
input assessment_unit_bundles_inc_input {
  assessment_id: Int
  id: Int
  unitbundle_id: Int
}

"""
input type for inserting data into table "assessment_unit_bundles"
"""
input assessment_unit_bundles_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  unit_bundle: unit_bundle_obj_rel_insert_input
  unitbundle_id: Int
}

"""aggregate max on columns"""
type assessment_unit_bundles_max_fields {
  assessment_id: Int
  id: Int
  unitbundle_id: Int
}

"""
order by max() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_max_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""aggregate min on columns"""
type assessment_unit_bundles_min_fields {
  assessment_id: Int
  id: Int
  unitbundle_id: Int
}

"""
order by min() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_min_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""
response of any mutation on the table "assessment_unit_bundles"
"""
type assessment_unit_bundles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_unit_bundles!]!
}

"""
on conflict condition type for table "assessment_unit_bundles"
"""
input assessment_unit_bundles_on_conflict {
  constraint: assessment_unit_bundles_constraint!
  update_columns: [assessment_unit_bundles_update_column!]! = []
  where: assessment_unit_bundles_bool_exp
}

"""Ordering options when selecting data from "assessment_unit_bundles"."""
input assessment_unit_bundles_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  unit_bundle: unit_bundle_order_by
  unitbundle_id: order_by
}

"""primary key columns input for table: assessment_unit_bundles"""
input assessment_unit_bundles_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_unit_bundles"
"""
enum assessment_unit_bundles_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  unitbundle_id
}

"""
input type for updating data in table "assessment_unit_bundles"
"""
input assessment_unit_bundles_set_input {
  assessment_id: Int
  id: Int
  unitbundle_id: Int
}

"""aggregate stddev on columns"""
type assessment_unit_bundles_stddev_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by stddev() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_stddev_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_unit_bundles_stddev_pop_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_unit_bundles_stddev_samp_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""aggregate sum on columns"""
type assessment_unit_bundles_sum_fields {
  assessment_id: Int
  id: Int
  unitbundle_id: Int
}

"""
order by sum() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_sum_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""
update columns of table "assessment_unit_bundles"
"""
enum assessment_unit_bundles_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  unitbundle_id
}

"""aggregate var_pop on columns"""
type assessment_unit_bundles_var_pop_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by var_pop() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_unit_bundles_var_samp_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by var_samp() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""aggregate variance on columns"""
type assessment_unit_bundles_variance_fields {
  assessment_id: Float
  id: Float
  unitbundle_id: Float
}

"""
order by variance() on columns of table "assessment_unit_bundles"
"""
input assessment_unit_bundles_variance_order_by {
  assessment_id: order_by
  id: order_by
  unitbundle_id: order_by
}

"""
unique or primary key constraints on table "assessment_unit"
"""
enum assessment_unit_constraint {
  """unique or primary key constraint"""
  assessment_unit_pkey
}

"""
input type for incrementing numeric columns in table "assessment_unit"
"""
input assessment_unit_inc_input {
  assessment_id: Int
  id: Int
  school_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "assessment_unit"
"""
input assessment_unit_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  assessment_unit_selected_los: assessment_unit_selected_lo_arr_rel_insert_input
  assessment_unit_selected_questions: assessment_unit_selected_question_arr_rel_insert_input
  assessment_unit_selected_units: assessment_unit_selected_unit_arr_rel_insert_input
  created: timestamptz
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  subject: subject_obj_rel_insert_input
  subject_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type assessment_unit_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "assessment_unit"
"""
input assessment_unit_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type assessment_unit_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "assessment_unit"
"""
input assessment_unit_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "assessment_unit"
"""
type assessment_unit_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_unit!]!
}

"""
input type for inserting object relation for remote table "assessment_unit"
"""
input assessment_unit_obj_rel_insert_input {
  data: assessment_unit_insert_input!

  """on conflict condition"""
  on_conflict: assessment_unit_on_conflict
}

"""
on conflict condition type for table "assessment_unit"
"""
input assessment_unit_on_conflict {
  constraint: assessment_unit_constraint!
  update_columns: [assessment_unit_update_column!]! = []
  where: assessment_unit_bool_exp
}

"""Ordering options when selecting data from "assessment_unit"."""
input assessment_unit_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  assessment_unit_selected_los_aggregate: assessment_unit_selected_lo_aggregate_order_by
  assessment_unit_selected_questions_aggregate: assessment_unit_selected_question_aggregate_order_by
  assessment_unit_selected_units_aggregate: assessment_unit_selected_unit_aggregate_order_by
  created: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  subject: subject_order_by
  subject_id: order_by
  updated: order_by
}

"""primary key columns input for table: assessment_unit"""
input assessment_unit_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_unit"
"""
enum assessment_unit_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
columns and relationships of "assessment_unit_selected_lo"
"""
type assessment_unit_selected_lo {
  """An object relationship"""
  assessment_unit: assessment_unit!
  assessmentunit_id: Int!
  id: Int!

  """An object relationship"""
  lo_v2: lo_v2!
  lo_v2_id: Int!
}

"""
aggregated selection of "assessment_unit_selected_lo"
"""
type assessment_unit_selected_lo_aggregate {
  aggregate: assessment_unit_selected_lo_aggregate_fields
  nodes: [assessment_unit_selected_lo!]!
}

"""
aggregate fields of "assessment_unit_selected_lo"
"""
type assessment_unit_selected_lo_aggregate_fields {
  avg: assessment_unit_selected_lo_avg_fields
  count(columns: [assessment_unit_selected_lo_select_column!], distinct: Boolean): Int!
  max: assessment_unit_selected_lo_max_fields
  min: assessment_unit_selected_lo_min_fields
  stddev: assessment_unit_selected_lo_stddev_fields
  stddev_pop: assessment_unit_selected_lo_stddev_pop_fields
  stddev_samp: assessment_unit_selected_lo_stddev_samp_fields
  sum: assessment_unit_selected_lo_sum_fields
  var_pop: assessment_unit_selected_lo_var_pop_fields
  var_samp: assessment_unit_selected_lo_var_samp_fields
  variance: assessment_unit_selected_lo_variance_fields
}

"""
order by aggregate values of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_aggregate_order_by {
  avg: assessment_unit_selected_lo_avg_order_by
  count: order_by
  max: assessment_unit_selected_lo_max_order_by
  min: assessment_unit_selected_lo_min_order_by
  stddev: assessment_unit_selected_lo_stddev_order_by
  stddev_pop: assessment_unit_selected_lo_stddev_pop_order_by
  stddev_samp: assessment_unit_selected_lo_stddev_samp_order_by
  sum: assessment_unit_selected_lo_sum_order_by
  var_pop: assessment_unit_selected_lo_var_pop_order_by
  var_samp: assessment_unit_selected_lo_var_samp_order_by
  variance: assessment_unit_selected_lo_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_arr_rel_insert_input {
  data: [assessment_unit_selected_lo_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_unit_selected_lo_on_conflict
}

"""aggregate avg on columns"""
type assessment_unit_selected_lo_avg_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by avg() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_avg_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_unit_selected_lo". All fields are combined with a logical 'AND'.
"""
input assessment_unit_selected_lo_bool_exp {
  _and: [assessment_unit_selected_lo_bool_exp!]
  _not: assessment_unit_selected_lo_bool_exp
  _or: [assessment_unit_selected_lo_bool_exp!]
  assessment_unit: assessment_unit_bool_exp
  assessmentunit_id: Int_comparison_exp
  id: Int_comparison_exp
  lo_v2: lo_v2_bool_exp
  lo_v2_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_unit_selected_lo"
"""
enum assessment_unit_selected_lo_constraint {
  """unique or primary key constraint"""
  assessment_unit_selected_assessmentunit_id_lo_v2__45982108_uniq

  """unique or primary key constraint"""
  assessment_unit_selected_lo_pkey
}

"""
input type for incrementing numeric columns in table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_inc_input {
  assessmentunit_id: Int
  id: Int
  lo_v2_id: Int
}

"""
input type for inserting data into table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_insert_input {
  assessment_unit: assessment_unit_obj_rel_insert_input
  assessmentunit_id: Int
  id: Int
  lo_v2: lo_v2_obj_rel_insert_input
  lo_v2_id: Int
}

"""aggregate max on columns"""
type assessment_unit_selected_lo_max_fields {
  assessmentunit_id: Int
  id: Int
  lo_v2_id: Int
}

"""
order by max() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_max_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""aggregate min on columns"""
type assessment_unit_selected_lo_min_fields {
  assessmentunit_id: Int
  id: Int
  lo_v2_id: Int
}

"""
order by min() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_min_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""
response of any mutation on the table "assessment_unit_selected_lo"
"""
type assessment_unit_selected_lo_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_unit_selected_lo!]!
}

"""
on conflict condition type for table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_on_conflict {
  constraint: assessment_unit_selected_lo_constraint!
  update_columns: [assessment_unit_selected_lo_update_column!]! = []
  where: assessment_unit_selected_lo_bool_exp
}

"""
Ordering options when selecting data from "assessment_unit_selected_lo".
"""
input assessment_unit_selected_lo_order_by {
  assessment_unit: assessment_unit_order_by
  assessmentunit_id: order_by
  id: order_by
  lo_v2: lo_v2_order_by
  lo_v2_id: order_by
}

"""primary key columns input for table: assessment_unit_selected_lo"""
input assessment_unit_selected_lo_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_unit_selected_lo"
"""
enum assessment_unit_selected_lo_select_column {
  """column name"""
  assessmentunit_id

  """column name"""
  id

  """column name"""
  lo_v2_id
}

"""
input type for updating data in table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_set_input {
  assessmentunit_id: Int
  id: Int
  lo_v2_id: Int
}

"""aggregate stddev on columns"""
type assessment_unit_selected_lo_stddev_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by stddev() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_stddev_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_unit_selected_lo_stddev_pop_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_stddev_pop_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_unit_selected_lo_stddev_samp_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_stddev_samp_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""aggregate sum on columns"""
type assessment_unit_selected_lo_sum_fields {
  assessmentunit_id: Int
  id: Int
  lo_v2_id: Int
}

"""
order by sum() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_sum_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""
update columns of table "assessment_unit_selected_lo"
"""
enum assessment_unit_selected_lo_update_column {
  """column name"""
  assessmentunit_id

  """column name"""
  id

  """column name"""
  lo_v2_id
}

"""aggregate var_pop on columns"""
type assessment_unit_selected_lo_var_pop_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by var_pop() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_var_pop_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_unit_selected_lo_var_samp_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by var_samp() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_var_samp_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""aggregate variance on columns"""
type assessment_unit_selected_lo_variance_fields {
  assessmentunit_id: Float
  id: Float
  lo_v2_id: Float
}

"""
order by variance() on columns of table "assessment_unit_selected_lo"
"""
input assessment_unit_selected_lo_variance_order_by {
  assessmentunit_id: order_by
  id: order_by
  lo_v2_id: order_by
}

"""
columns and relationships of "assessment_unit_selected_question"
"""
type assessment_unit_selected_question {
  """An object relationship"""
  assessment_unit: assessment_unit!
  assessmentunit_id: Int!
  id: Int!

  """An object relationship"""
  question_v2: question_v2!
  question_v2_id: Int!
}

"""
aggregated selection of "assessment_unit_selected_question"
"""
type assessment_unit_selected_question_aggregate {
  aggregate: assessment_unit_selected_question_aggregate_fields
  nodes: [assessment_unit_selected_question!]!
}

"""
aggregate fields of "assessment_unit_selected_question"
"""
type assessment_unit_selected_question_aggregate_fields {
  avg: assessment_unit_selected_question_avg_fields
  count(columns: [assessment_unit_selected_question_select_column!], distinct: Boolean): Int!
  max: assessment_unit_selected_question_max_fields
  min: assessment_unit_selected_question_min_fields
  stddev: assessment_unit_selected_question_stddev_fields
  stddev_pop: assessment_unit_selected_question_stddev_pop_fields
  stddev_samp: assessment_unit_selected_question_stddev_samp_fields
  sum: assessment_unit_selected_question_sum_fields
  var_pop: assessment_unit_selected_question_var_pop_fields
  var_samp: assessment_unit_selected_question_var_samp_fields
  variance: assessment_unit_selected_question_variance_fields
}

"""
order by aggregate values of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_aggregate_order_by {
  avg: assessment_unit_selected_question_avg_order_by
  count: order_by
  max: assessment_unit_selected_question_max_order_by
  min: assessment_unit_selected_question_min_order_by
  stddev: assessment_unit_selected_question_stddev_order_by
  stddev_pop: assessment_unit_selected_question_stddev_pop_order_by
  stddev_samp: assessment_unit_selected_question_stddev_samp_order_by
  sum: assessment_unit_selected_question_sum_order_by
  var_pop: assessment_unit_selected_question_var_pop_order_by
  var_samp: assessment_unit_selected_question_var_samp_order_by
  variance: assessment_unit_selected_question_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_arr_rel_insert_input {
  data: [assessment_unit_selected_question_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_unit_selected_question_on_conflict
}

"""aggregate avg on columns"""
type assessment_unit_selected_question_avg_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by avg() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_avg_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_unit_selected_question". All fields are combined with a logical 'AND'.
"""
input assessment_unit_selected_question_bool_exp {
  _and: [assessment_unit_selected_question_bool_exp!]
  _not: assessment_unit_selected_question_bool_exp
  _or: [assessment_unit_selected_question_bool_exp!]
  assessment_unit: assessment_unit_bool_exp
  assessmentunit_id: Int_comparison_exp
  id: Int_comparison_exp
  question_v2: question_v2_bool_exp
  question_v2_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_unit_selected_question"
"""
enum assessment_unit_selected_question_constraint {
  """unique or primary key constraint"""
  assessment_unit_selected_assessmentunit_id_questi_d9463f4c_uniq

  """unique or primary key constraint"""
  assessment_unit_selected_question_pkey
}

"""
input type for incrementing numeric columns in table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_inc_input {
  assessmentunit_id: Int
  id: Int
  question_v2_id: Int
}

"""
input type for inserting data into table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_insert_input {
  assessment_unit: assessment_unit_obj_rel_insert_input
  assessmentunit_id: Int
  id: Int
  question_v2: question_v2_obj_rel_insert_input
  question_v2_id: Int
}

"""aggregate max on columns"""
type assessment_unit_selected_question_max_fields {
  assessmentunit_id: Int
  id: Int
  question_v2_id: Int
}

"""
order by max() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_max_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""aggregate min on columns"""
type assessment_unit_selected_question_min_fields {
  assessmentunit_id: Int
  id: Int
  question_v2_id: Int
}

"""
order by min() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_min_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""
response of any mutation on the table "assessment_unit_selected_question"
"""
type assessment_unit_selected_question_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_unit_selected_question!]!
}

"""
on conflict condition type for table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_on_conflict {
  constraint: assessment_unit_selected_question_constraint!
  update_columns: [assessment_unit_selected_question_update_column!]! = []
  where: assessment_unit_selected_question_bool_exp
}

"""
Ordering options when selecting data from "assessment_unit_selected_question".
"""
input assessment_unit_selected_question_order_by {
  assessment_unit: assessment_unit_order_by
  assessmentunit_id: order_by
  id: order_by
  question_v2: question_v2_order_by
  question_v2_id: order_by
}

"""primary key columns input for table: assessment_unit_selected_question"""
input assessment_unit_selected_question_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_unit_selected_question"
"""
enum assessment_unit_selected_question_select_column {
  """column name"""
  assessmentunit_id

  """column name"""
  id

  """column name"""
  question_v2_id
}

"""
input type for updating data in table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_set_input {
  assessmentunit_id: Int
  id: Int
  question_v2_id: Int
}

"""aggregate stddev on columns"""
type assessment_unit_selected_question_stddev_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by stddev() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_stddev_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_unit_selected_question_stddev_pop_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_stddev_pop_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_unit_selected_question_stddev_samp_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_stddev_samp_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""aggregate sum on columns"""
type assessment_unit_selected_question_sum_fields {
  assessmentunit_id: Int
  id: Int
  question_v2_id: Int
}

"""
order by sum() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_sum_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""
update columns of table "assessment_unit_selected_question"
"""
enum assessment_unit_selected_question_update_column {
  """column name"""
  assessmentunit_id

  """column name"""
  id

  """column name"""
  question_v2_id
}

"""aggregate var_pop on columns"""
type assessment_unit_selected_question_var_pop_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by var_pop() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_var_pop_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_unit_selected_question_var_samp_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by var_samp() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_var_samp_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""aggregate variance on columns"""
type assessment_unit_selected_question_variance_fields {
  assessmentunit_id: Float
  id: Float
  question_v2_id: Float
}

"""
order by variance() on columns of table "assessment_unit_selected_question"
"""
input assessment_unit_selected_question_variance_order_by {
  assessmentunit_id: order_by
  id: order_by
  question_v2_id: order_by
}

"""
columns and relationships of "assessment_unit_selected_unit"
"""
type assessment_unit_selected_unit {
  """An object relationship"""
  assessment_unit: assessment_unit!
  assessmentunit_id: Int!
  id: Int!

  """An object relationship"""
  unit_v2: unit_v2!
  unit_v2_id: Int!
}

"""
aggregated selection of "assessment_unit_selected_unit"
"""
type assessment_unit_selected_unit_aggregate {
  aggregate: assessment_unit_selected_unit_aggregate_fields
  nodes: [assessment_unit_selected_unit!]!
}

"""
aggregate fields of "assessment_unit_selected_unit"
"""
type assessment_unit_selected_unit_aggregate_fields {
  avg: assessment_unit_selected_unit_avg_fields
  count(columns: [assessment_unit_selected_unit_select_column!], distinct: Boolean): Int!
  max: assessment_unit_selected_unit_max_fields
  min: assessment_unit_selected_unit_min_fields
  stddev: assessment_unit_selected_unit_stddev_fields
  stddev_pop: assessment_unit_selected_unit_stddev_pop_fields
  stddev_samp: assessment_unit_selected_unit_stddev_samp_fields
  sum: assessment_unit_selected_unit_sum_fields
  var_pop: assessment_unit_selected_unit_var_pop_fields
  var_samp: assessment_unit_selected_unit_var_samp_fields
  variance: assessment_unit_selected_unit_variance_fields
}

"""
order by aggregate values of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_aggregate_order_by {
  avg: assessment_unit_selected_unit_avg_order_by
  count: order_by
  max: assessment_unit_selected_unit_max_order_by
  min: assessment_unit_selected_unit_min_order_by
  stddev: assessment_unit_selected_unit_stddev_order_by
  stddev_pop: assessment_unit_selected_unit_stddev_pop_order_by
  stddev_samp: assessment_unit_selected_unit_stddev_samp_order_by
  sum: assessment_unit_selected_unit_sum_order_by
  var_pop: assessment_unit_selected_unit_var_pop_order_by
  var_samp: assessment_unit_selected_unit_var_samp_order_by
  variance: assessment_unit_selected_unit_variance_order_by
}

"""
input type for inserting array relation for remote table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_arr_rel_insert_input {
  data: [assessment_unit_selected_unit_insert_input!]!

  """on conflict condition"""
  on_conflict: assessment_unit_selected_unit_on_conflict
}

"""aggregate avg on columns"""
type assessment_unit_selected_unit_avg_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by avg() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_avg_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""
Boolean expression to filter rows from the table "assessment_unit_selected_unit". All fields are combined with a logical 'AND'.
"""
input assessment_unit_selected_unit_bool_exp {
  _and: [assessment_unit_selected_unit_bool_exp!]
  _not: assessment_unit_selected_unit_bool_exp
  _or: [assessment_unit_selected_unit_bool_exp!]
  assessment_unit: assessment_unit_bool_exp
  assessmentunit_id: Int_comparison_exp
  id: Int_comparison_exp
  unit_v2: unit_v2_bool_exp
  unit_v2_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "assessment_unit_selected_unit"
"""
enum assessment_unit_selected_unit_constraint {
  """unique or primary key constraint"""
  assessment_unit_selected_assessmentunit_id_unit_v_5fb9cf49_uniq

  """unique or primary key constraint"""
  assessment_unit_selected_unit_pkey
}

"""
input type for incrementing numeric columns in table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_inc_input {
  assessmentunit_id: Int
  id: Int
  unit_v2_id: Int
}

"""
input type for inserting data into table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_insert_input {
  assessment_unit: assessment_unit_obj_rel_insert_input
  assessmentunit_id: Int
  id: Int
  unit_v2: unit_v2_obj_rel_insert_input
  unit_v2_id: Int
}

"""aggregate max on columns"""
type assessment_unit_selected_unit_max_fields {
  assessmentunit_id: Int
  id: Int
  unit_v2_id: Int
}

"""
order by max() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_max_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""aggregate min on columns"""
type assessment_unit_selected_unit_min_fields {
  assessmentunit_id: Int
  id: Int
  unit_v2_id: Int
}

"""
order by min() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_min_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""
response of any mutation on the table "assessment_unit_selected_unit"
"""
type assessment_unit_selected_unit_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [assessment_unit_selected_unit!]!
}

"""
on conflict condition type for table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_on_conflict {
  constraint: assessment_unit_selected_unit_constraint!
  update_columns: [assessment_unit_selected_unit_update_column!]! = []
  where: assessment_unit_selected_unit_bool_exp
}

"""
Ordering options when selecting data from "assessment_unit_selected_unit".
"""
input assessment_unit_selected_unit_order_by {
  assessment_unit: assessment_unit_order_by
  assessmentunit_id: order_by
  id: order_by
  unit_v2: unit_v2_order_by
  unit_v2_id: order_by
}

"""primary key columns input for table: assessment_unit_selected_unit"""
input assessment_unit_selected_unit_pk_columns_input {
  id: Int!
}

"""
select columns of table "assessment_unit_selected_unit"
"""
enum assessment_unit_selected_unit_select_column {
  """column name"""
  assessmentunit_id

  """column name"""
  id

  """column name"""
  unit_v2_id
}

"""
input type for updating data in table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_set_input {
  assessmentunit_id: Int
  id: Int
  unit_v2_id: Int
}

"""aggregate stddev on columns"""
type assessment_unit_selected_unit_stddev_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by stddev() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_stddev_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_unit_selected_unit_stddev_pop_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_stddev_pop_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_unit_selected_unit_stddev_samp_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_stddev_samp_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""aggregate sum on columns"""
type assessment_unit_selected_unit_sum_fields {
  assessmentunit_id: Int
  id: Int
  unit_v2_id: Int
}

"""
order by sum() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_sum_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""
update columns of table "assessment_unit_selected_unit"
"""
enum assessment_unit_selected_unit_update_column {
  """column name"""
  assessmentunit_id

  """column name"""
  id

  """column name"""
  unit_v2_id
}

"""aggregate var_pop on columns"""
type assessment_unit_selected_unit_var_pop_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by var_pop() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_var_pop_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_unit_selected_unit_var_samp_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by var_samp() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_var_samp_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""aggregate variance on columns"""
type assessment_unit_selected_unit_variance_fields {
  assessmentunit_id: Float
  id: Float
  unit_v2_id: Float
}

"""
order by variance() on columns of table "assessment_unit_selected_unit"
"""
input assessment_unit_selected_unit_variance_order_by {
  assessmentunit_id: order_by
  id: order_by
  unit_v2_id: order_by
}

"""
input type for updating data in table "assessment_unit"
"""
input assessment_unit_set_input {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type assessment_unit_stddev_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "assessment_unit"
"""
input assessment_unit_stddev_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type assessment_unit_stddev_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "assessment_unit"
"""
input assessment_unit_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type assessment_unit_stddev_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "assessment_unit"
"""
input assessment_unit_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type assessment_unit_sum_fields {
  assessment_id: Int
  id: Int
  school_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "assessment_unit"
"""
input assessment_unit_sum_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
update columns of table "assessment_unit"
"""
enum assessment_unit_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_unit_var_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "assessment_unit"
"""
input assessment_unit_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_unit_var_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "assessment_unit"
"""
input assessment_unit_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type assessment_unit_variance_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "assessment_unit"
"""
input assessment_unit_variance_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
update columns of table "assessment"
"""
enum assessment_update_column {
  """column name"""
  builder_id

  """column name"""
  created

  """column name"""
  deadline_id

  """column name"""
  end

  """column name"""
  evaluation_params

  """column name"""
  id

  """column name"""
  is_enabled

  """column name"""
  is_final

  """column name"""
  mapping_id

  """column name"""
  overall_pass_percentage

  """column name"""
  overall_total_marks

  """column name"""
  sms_template

  """column name"""
  start

  """column name"""
  submission_type

  """column name"""
  submission_type_v2_id

  """column name"""
  type

  """column name"""
  type_v2_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type assessment_var_pop_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by var_pop() on columns of table "assessment"
"""
input assessment_var_pop_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""aggregate var_samp on columns"""
type assessment_var_samp_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by var_samp() on columns of table "assessment"
"""
input assessment_var_samp_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""aggregate variance on columns"""
type assessment_variance_fields {
  builder_id: Float
  deadline_id: Float
  id: Float
  mapping_id: Float
  overall_pass_percentage: Float
  overall_total_marks: Float
  submission_type_v2_id: Float
  type_v2_id: Float
}

"""
order by variance() on columns of table "assessment"
"""
input assessment_variance_order_by {
  builder_id: order_by
  deadline_id: order_by
  id: order_by
  mapping_id: order_by
  overall_pass_percentage: order_by
  overall_total_marks: order_by
  submission_type_v2_id: order_by
  type_v2_id: order_by
}

"""
columns and relationships of "attendance"
"""
type attendance {
  created: timestamptz
  date: date!
  id: Int!
  is_present: Boolean!

  """An object relationship"""
  school: school

  """An object relationship"""
  student: student
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  updated: timestamptz
}

"""
aggregated selection of "attendance"
"""
type attendance_aggregate {
  aggregate: attendance_aggregate_fields
  nodes: [attendance!]!
}

"""
aggregate fields of "attendance"
"""
type attendance_aggregate_fields {
  avg: attendance_avg_fields
  count(columns: [attendance_select_column!], distinct: Boolean): Int!
  max: attendance_max_fields
  min: attendance_min_fields
  stddev: attendance_stddev_fields
  stddev_pop: attendance_stddev_pop_fields
  stddev_samp: attendance_stddev_samp_fields
  sum: attendance_sum_fields
  var_pop: attendance_var_pop_fields
  var_samp: attendance_var_samp_fields
  variance: attendance_variance_fields
}

"""
order by aggregate values of table "attendance"
"""
input attendance_aggregate_order_by {
  avg: attendance_avg_order_by
  count: order_by
  max: attendance_max_order_by
  min: attendance_min_order_by
  stddev: attendance_stddev_order_by
  stddev_pop: attendance_stddev_pop_order_by
  stddev_samp: attendance_stddev_samp_order_by
  sum: attendance_sum_order_by
  var_pop: attendance_var_pop_order_by
  var_samp: attendance_var_samp_order_by
  variance: attendance_variance_order_by
}

"""
input type for inserting array relation for remote table "attendance"
"""
input attendance_arr_rel_insert_input {
  data: [attendance_insert_input!]!

  """on conflict condition"""
  on_conflict: attendance_on_conflict
}

"""aggregate avg on columns"""
type attendance_avg_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by avg() on columns of table "attendance"
"""
input attendance_avg_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""
Boolean expression to filter rows from the table "attendance". All fields are combined with a logical 'AND'.
"""
input attendance_bool_exp {
  _and: [attendance_bool_exp!]
  _not: attendance_bool_exp
  _or: [attendance_bool_exp!]
  created: timestamptz_comparison_exp
  date: date_comparison_exp
  id: Int_comparison_exp
  is_present: Boolean_comparison_exp
  school: school_bool_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  taken_by_school_id: Int_comparison_exp
  temperature: float8_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "attendance"
"""
enum attendance_constraint {
  """unique or primary key constraint"""
  attendance_pkey

  """unique or primary key constraint"""
  attendance_student_id_date_key
}

"""
input type for incrementing numeric columns in table "attendance"
"""
input attendance_inc_input {
  id: Int
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
}

"""
input type for inserting data into table "attendance"
"""
input attendance_insert_input {
  created: timestamptz
  date: date
  id: Int
  is_present: Boolean
  school: school_obj_rel_insert_input
  student: student_obj_rel_insert_input
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  updated: timestamptz
}

"""aggregate max on columns"""
type attendance_max_fields {
  created: timestamptz
  date: date
  id: Int
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  updated: timestamptz
}

"""
order by max() on columns of table "attendance"
"""
input attendance_max_order_by {
  created: order_by
  date: order_by
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
  updated: order_by
}

"""aggregate min on columns"""
type attendance_min_fields {
  created: timestamptz
  date: date
  id: Int
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  updated: timestamptz
}

"""
order by min() on columns of table "attendance"
"""
input attendance_min_order_by {
  created: order_by
  date: order_by
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
  updated: order_by
}

"""
response of any mutation on the table "attendance"
"""
type attendance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [attendance!]!
}

"""
on conflict condition type for table "attendance"
"""
input attendance_on_conflict {
  constraint: attendance_constraint!
  update_columns: [attendance_update_column!]! = []
  where: attendance_bool_exp
}

"""Ordering options when selecting data from "attendance"."""
input attendance_order_by {
  created: order_by
  date: order_by
  id: order_by
  is_present: order_by
  school: school_order_by
  student: student_order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
  updated: order_by
}

"""primary key columns input for table: attendance"""
input attendance_pk_columns_input {
  id: Int!
}

"""
select columns of table "attendance"
"""
enum attendance_select_column {
  """column name"""
  created

  """column name"""
  date

  """column name"""
  id

  """column name"""
  is_present

  """column name"""
  student_id

  """column name"""
  taken_by_school_id

  """column name"""
  temperature

  """column name"""
  updated
}

"""
input type for updating data in table "attendance"
"""
input attendance_set_input {
  created: timestamptz
  date: date
  id: Int
  is_present: Boolean
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  updated: timestamptz
}

"""
columns and relationships of "attendance_sms_logs"
"""
type attendance_sms_logs {
  for_days: Int
  id: Int!
  sent_date: date
  sms_type: String
  student_id: Int!
}

"""
aggregated selection of "attendance_sms_logs"
"""
type attendance_sms_logs_aggregate {
  aggregate: attendance_sms_logs_aggregate_fields
  nodes: [attendance_sms_logs!]!
}

"""
aggregate fields of "attendance_sms_logs"
"""
type attendance_sms_logs_aggregate_fields {
  avg: attendance_sms_logs_avg_fields
  count(columns: [attendance_sms_logs_select_column!], distinct: Boolean): Int!
  max: attendance_sms_logs_max_fields
  min: attendance_sms_logs_min_fields
  stddev: attendance_sms_logs_stddev_fields
  stddev_pop: attendance_sms_logs_stddev_pop_fields
  stddev_samp: attendance_sms_logs_stddev_samp_fields
  sum: attendance_sms_logs_sum_fields
  var_pop: attendance_sms_logs_var_pop_fields
  var_samp: attendance_sms_logs_var_samp_fields
  variance: attendance_sms_logs_variance_fields
}

"""aggregate avg on columns"""
type attendance_sms_logs_avg_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""
Boolean expression to filter rows from the table "attendance_sms_logs". All fields are combined with a logical 'AND'.
"""
input attendance_sms_logs_bool_exp {
  _and: [attendance_sms_logs_bool_exp!]
  _not: attendance_sms_logs_bool_exp
  _or: [attendance_sms_logs_bool_exp!]
  for_days: Int_comparison_exp
  id: Int_comparison_exp
  sent_date: date_comparison_exp
  sms_type: String_comparison_exp
  student_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "attendance_sms_logs"
"""
enum attendance_sms_logs_constraint {
  """unique or primary key constraint"""
  attendance_sms_logs_pkey
}

"""
input type for incrementing numeric columns in table "attendance_sms_logs"
"""
input attendance_sms_logs_inc_input {
  for_days: Int
  id: Int
  student_id: Int
}

"""
input type for inserting data into table "attendance_sms_logs"
"""
input attendance_sms_logs_insert_input {
  for_days: Int
  id: Int
  sent_date: date
  sms_type: String
  student_id: Int
}

"""aggregate max on columns"""
type attendance_sms_logs_max_fields {
  for_days: Int
  id: Int
  sent_date: date
  sms_type: String
  student_id: Int
}

"""aggregate min on columns"""
type attendance_sms_logs_min_fields {
  for_days: Int
  id: Int
  sent_date: date
  sms_type: String
  student_id: Int
}

"""
response of any mutation on the table "attendance_sms_logs"
"""
type attendance_sms_logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [attendance_sms_logs!]!
}

"""
on conflict condition type for table "attendance_sms_logs"
"""
input attendance_sms_logs_on_conflict {
  constraint: attendance_sms_logs_constraint!
  update_columns: [attendance_sms_logs_update_column!]! = []
  where: attendance_sms_logs_bool_exp
}

"""Ordering options when selecting data from "attendance_sms_logs"."""
input attendance_sms_logs_order_by {
  for_days: order_by
  id: order_by
  sent_date: order_by
  sms_type: order_by
  student_id: order_by
}

"""primary key columns input for table: attendance_sms_logs"""
input attendance_sms_logs_pk_columns_input {
  id: Int!
}

"""
select columns of table "attendance_sms_logs"
"""
enum attendance_sms_logs_select_column {
  """column name"""
  for_days

  """column name"""
  id

  """column name"""
  sent_date

  """column name"""
  sms_type

  """column name"""
  student_id
}

"""
input type for updating data in table "attendance_sms_logs"
"""
input attendance_sms_logs_set_input {
  for_days: Int
  id: Int
  sent_date: date
  sms_type: String
  student_id: Int
}

"""aggregate stddev on columns"""
type attendance_sms_logs_stddev_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""aggregate stddev_pop on columns"""
type attendance_sms_logs_stddev_pop_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""aggregate stddev_samp on columns"""
type attendance_sms_logs_stddev_samp_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""aggregate sum on columns"""
type attendance_sms_logs_sum_fields {
  for_days: Int
  id: Int
  student_id: Int
}

"""
update columns of table "attendance_sms_logs"
"""
enum attendance_sms_logs_update_column {
  """column name"""
  for_days

  """column name"""
  id

  """column name"""
  sent_date

  """column name"""
  sms_type

  """column name"""
  student_id
}

"""aggregate var_pop on columns"""
type attendance_sms_logs_var_pop_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""aggregate var_samp on columns"""
type attendance_sms_logs_var_samp_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""aggregate variance on columns"""
type attendance_sms_logs_variance_fields {
  for_days: Float
  id: Float
  student_id: Float
}

"""aggregate stddev on columns"""
type attendance_stddev_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by stddev() on columns of table "attendance"
"""
input attendance_stddev_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""aggregate stddev_pop on columns"""
type attendance_stddev_pop_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by stddev_pop() on columns of table "attendance"
"""
input attendance_stddev_pop_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""aggregate stddev_samp on columns"""
type attendance_stddev_samp_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by stddev_samp() on columns of table "attendance"
"""
input attendance_stddev_samp_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""aggregate sum on columns"""
type attendance_sum_fields {
  id: Int
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
}

"""
order by sum() on columns of table "attendance"
"""
input attendance_sum_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""
columns and relationships of "attendance_teacher"
"""
type attendance_teacher {
  allowed_radius: Float
  created_at: timestamptz
  date: date
  distance_from_institution: Float
  entry_time: timestamptz
  exit_time: timestamptz
  id: Int!
  image: String
  is_present: Boolean
  is_under_geofence: Boolean
  leave_end_date: date
  leave_start_date: date
  loc_latitude: Float
  loc_longitude: Float
  reason: String

  """An object relationship"""
  school: school
  school_id: Int
  shift_id: Int
  status: String
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
  updated_at: timestamptz
  user_id: uuid
}

"""
aggregated selection of "attendance_teacher"
"""
type attendance_teacher_aggregate {
  aggregate: attendance_teacher_aggregate_fields
  nodes: [attendance_teacher!]!
}

"""
aggregate fields of "attendance_teacher"
"""
type attendance_teacher_aggregate_fields {
  avg: attendance_teacher_avg_fields
  count(columns: [attendance_teacher_select_column!], distinct: Boolean): Int!
  max: attendance_teacher_max_fields
  min: attendance_teacher_min_fields
  stddev: attendance_teacher_stddev_fields
  stddev_pop: attendance_teacher_stddev_pop_fields
  stddev_samp: attendance_teacher_stddev_samp_fields
  sum: attendance_teacher_sum_fields
  var_pop: attendance_teacher_var_pop_fields
  var_samp: attendance_teacher_var_samp_fields
  variance: attendance_teacher_variance_fields
}

"""
order by aggregate values of table "attendance_teacher"
"""
input attendance_teacher_aggregate_order_by {
  avg: attendance_teacher_avg_order_by
  count: order_by
  max: attendance_teacher_max_order_by
  min: attendance_teacher_min_order_by
  stddev: attendance_teacher_stddev_order_by
  stddev_pop: attendance_teacher_stddev_pop_order_by
  stddev_samp: attendance_teacher_stddev_samp_order_by
  sum: attendance_teacher_sum_order_by
  var_pop: attendance_teacher_var_pop_order_by
  var_samp: attendance_teacher_var_samp_order_by
  variance: attendance_teacher_variance_order_by
}

"""
input type for inserting array relation for remote table "attendance_teacher"
"""
input attendance_teacher_arr_rel_insert_input {
  data: [attendance_teacher_insert_input!]!

  """on conflict condition"""
  on_conflict: attendance_teacher_on_conflict
}

"""aggregate avg on columns"""
type attendance_teacher_avg_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by avg() on columns of table "attendance_teacher"
"""
input attendance_teacher_avg_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""
Boolean expression to filter rows from the table "attendance_teacher". All fields are combined with a logical 'AND'.
"""
input attendance_teacher_bool_exp {
  _and: [attendance_teacher_bool_exp!]
  _not: attendance_teacher_bool_exp
  _or: [attendance_teacher_bool_exp!]
  allowed_radius: Float_comparison_exp
  created_at: timestamptz_comparison_exp
  date: date_comparison_exp
  distance_from_institution: Float_comparison_exp
  entry_time: timestamptz_comparison_exp
  exit_time: timestamptz_comparison_exp
  id: Int_comparison_exp
  image: String_comparison_exp
  is_present: Boolean_comparison_exp
  is_under_geofence: Boolean_comparison_exp
  leave_end_date: date_comparison_exp
  leave_start_date: date_comparison_exp
  loc_latitude: Float_comparison_exp
  loc_longitude: Float_comparison_exp
  reason: String_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  shift_id: Int_comparison_exp
  status: String_comparison_exp
  teacher_id: bigint_comparison_exp
  teacher_id_mapped: bigint_comparison_exp
  udise: bigint_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "attendance_teacher"
"""
enum attendance_teacher_constraint {
  """unique or primary key constraint"""
  attendance_teacher_pkey
}

"""
input type for incrementing numeric columns in table "attendance_teacher"
"""
input attendance_teacher_inc_input {
  allowed_radius: Float
  distance_from_institution: Float
  id: Int
  loc_latitude: Float
  loc_longitude: Float
  school_id: Int
  shift_id: Int
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
}

"""
input type for inserting data into table "attendance_teacher"
"""
input attendance_teacher_insert_input {
  allowed_radius: Float
  created_at: timestamptz
  date: date
  distance_from_institution: Float
  entry_time: timestamptz
  exit_time: timestamptz
  id: Int
  image: String
  is_present: Boolean
  is_under_geofence: Boolean
  leave_end_date: date
  leave_start_date: date
  loc_latitude: Float
  loc_longitude: Float
  reason: String
  school: school_obj_rel_insert_input
  school_id: Int
  shift_id: Int
  status: String
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
  updated_at: timestamptz
  user_id: uuid
}

"""aggregate max on columns"""
type attendance_teacher_max_fields {
  allowed_radius: Float
  created_at: timestamptz
  date: date
  distance_from_institution: Float
  entry_time: timestamptz
  exit_time: timestamptz
  id: Int
  image: String
  leave_end_date: date
  leave_start_date: date
  loc_latitude: Float
  loc_longitude: Float
  reason: String
  school_id: Int
  shift_id: Int
  status: String
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
  updated_at: timestamptz
  user_id: uuid
}

"""
order by max() on columns of table "attendance_teacher"
"""
input attendance_teacher_max_order_by {
  allowed_radius: order_by
  created_at: order_by
  date: order_by
  distance_from_institution: order_by
  entry_time: order_by
  exit_time: order_by
  id: order_by
  image: order_by
  leave_end_date: order_by
  leave_start_date: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  reason: order_by
  school_id: order_by
  shift_id: order_by
  status: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type attendance_teacher_min_fields {
  allowed_radius: Float
  created_at: timestamptz
  date: date
  distance_from_institution: Float
  entry_time: timestamptz
  exit_time: timestamptz
  id: Int
  image: String
  leave_end_date: date
  leave_start_date: date
  loc_latitude: Float
  loc_longitude: Float
  reason: String
  school_id: Int
  shift_id: Int
  status: String
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
  updated_at: timestamptz
  user_id: uuid
}

"""
order by min() on columns of table "attendance_teacher"
"""
input attendance_teacher_min_order_by {
  allowed_radius: order_by
  created_at: order_by
  date: order_by
  distance_from_institution: order_by
  entry_time: order_by
  exit_time: order_by
  id: order_by
  image: order_by
  leave_end_date: order_by
  leave_start_date: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  reason: order_by
  school_id: order_by
  shift_id: order_by
  status: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "attendance_teacher"
"""
type attendance_teacher_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [attendance_teacher!]!
}

"""
on conflict condition type for table "attendance_teacher"
"""
input attendance_teacher_on_conflict {
  constraint: attendance_teacher_constraint!
  update_columns: [attendance_teacher_update_column!]! = []
  where: attendance_teacher_bool_exp
}

"""Ordering options when selecting data from "attendance_teacher"."""
input attendance_teacher_order_by {
  allowed_radius: order_by
  created_at: order_by
  date: order_by
  distance_from_institution: order_by
  entry_time: order_by
  exit_time: order_by
  id: order_by
  image: order_by
  is_present: order_by
  is_under_geofence: order_by
  leave_end_date: order_by
  leave_start_date: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  reason: order_by
  school: school_order_by
  school_id: order_by
  shift_id: order_by
  status: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
  updated_at: order_by
  user_id: order_by
}

"""primary key columns input for table: attendance_teacher"""
input attendance_teacher_pk_columns_input {
  id: Int!
}

"""
select columns of table "attendance_teacher"
"""
enum attendance_teacher_select_column {
  """column name"""
  allowed_radius

  """column name"""
  created_at

  """column name"""
  date

  """column name"""
  distance_from_institution

  """column name"""
  entry_time

  """column name"""
  exit_time

  """column name"""
  id

  """column name"""
  image

  """column name"""
  is_present

  """column name"""
  is_under_geofence

  """column name"""
  leave_end_date

  """column name"""
  leave_start_date

  """column name"""
  loc_latitude

  """column name"""
  loc_longitude

  """column name"""
  reason

  """column name"""
  school_id

  """column name"""
  shift_id

  """column name"""
  status

  """column name"""
  teacher_id

  """column name"""
  teacher_id_mapped

  """column name"""
  udise

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
input type for updating data in table "attendance_teacher"
"""
input attendance_teacher_set_input {
  allowed_radius: Float
  created_at: timestamptz
  date: date
  distance_from_institution: Float
  entry_time: timestamptz
  exit_time: timestamptz
  id: Int
  image: String
  is_present: Boolean
  is_under_geofence: Boolean
  leave_end_date: date
  leave_start_date: date
  loc_latitude: Float
  loc_longitude: Float
  reason: String
  school_id: Int
  shift_id: Int
  status: String
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
  updated_at: timestamptz
  user_id: uuid
}

"""aggregate stddev on columns"""
type attendance_teacher_stddev_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by stddev() on columns of table "attendance_teacher"
"""
input attendance_teacher_stddev_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""aggregate stddev_pop on columns"""
type attendance_teacher_stddev_pop_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by stddev_pop() on columns of table "attendance_teacher"
"""
input attendance_teacher_stddev_pop_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""aggregate stddev_samp on columns"""
type attendance_teacher_stddev_samp_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by stddev_samp() on columns of table "attendance_teacher"
"""
input attendance_teacher_stddev_samp_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""aggregate sum on columns"""
type attendance_teacher_sum_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Int
  loc_latitude: Float
  loc_longitude: Float
  school_id: Int
  shift_id: Int
  teacher_id: bigint
  teacher_id_mapped: bigint
  udise: bigint
}

"""
order by sum() on columns of table "attendance_teacher"
"""
input attendance_teacher_sum_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""
update columns of table "attendance_teacher"
"""
enum attendance_teacher_update_column {
  """column name"""
  allowed_radius

  """column name"""
  created_at

  """column name"""
  date

  """column name"""
  distance_from_institution

  """column name"""
  entry_time

  """column name"""
  exit_time

  """column name"""
  id

  """column name"""
  image

  """column name"""
  is_present

  """column name"""
  is_under_geofence

  """column name"""
  leave_end_date

  """column name"""
  leave_start_date

  """column name"""
  loc_latitude

  """column name"""
  loc_longitude

  """column name"""
  reason

  """column name"""
  school_id

  """column name"""
  shift_id

  """column name"""
  status

  """column name"""
  teacher_id

  """column name"""
  teacher_id_mapped

  """column name"""
  udise

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type attendance_teacher_var_pop_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by var_pop() on columns of table "attendance_teacher"
"""
input attendance_teacher_var_pop_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""aggregate var_samp on columns"""
type attendance_teacher_var_samp_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by var_samp() on columns of table "attendance_teacher"
"""
input attendance_teacher_var_samp_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""aggregate variance on columns"""
type attendance_teacher_variance_fields {
  allowed_radius: Float
  distance_from_institution: Float
  id: Float
  loc_latitude: Float
  loc_longitude: Float
  school_id: Float
  shift_id: Float
  teacher_id: Float
  teacher_id_mapped: Float
  udise: Float
}

"""
order by variance() on columns of table "attendance_teacher"
"""
input attendance_teacher_variance_order_by {
  allowed_radius: order_by
  distance_from_institution: order_by
  id: order_by
  loc_latitude: order_by
  loc_longitude: order_by
  school_id: order_by
  shift_id: order_by
  teacher_id: order_by
  teacher_id_mapped: order_by
  udise: order_by
}

"""
update columns of table "attendance"
"""
enum attendance_update_column {
  """column name"""
  created

  """column name"""
  date

  """column name"""
  id

  """column name"""
  is_present

  """column name"""
  student_id

  """column name"""
  taken_by_school_id

  """column name"""
  temperature

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type attendance_var_pop_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by var_pop() on columns of table "attendance"
"""
input attendance_var_pop_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""aggregate var_samp on columns"""
type attendance_var_samp_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by var_samp() on columns of table "attendance"
"""
input attendance_var_samp_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""aggregate variance on columns"""
type attendance_variance_fields {
  id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
}

"""
order by variance() on columns of table "attendance"
"""
input attendance_variance_order_by {
  id: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
}

"""
columns and relationships of "audit_logs"
"""
type audit_logs {
  """"""
  data: String

  """"""
  id: bigint!

  """"""
  insert_instant: bigint!

  """"""
  insert_user: String!

  """"""
  message: String!
}

"""
aggregated selection of "audit_logs"
"""
type audit_logs_aggregate {
  """"""
  aggregate: audit_logs_aggregate_fields

  """"""
  nodes: [audit_logs!]!
}

"""
aggregate fields of "audit_logs"
"""
type audit_logs_aggregate_fields {
  """"""
  avg: audit_logs_avg_fields

  """"""
  count(columns: [audit_logs_select_column!], distinct: Boolean): Int!

  """"""
  max: audit_logs_max_fields

  """"""
  min: audit_logs_min_fields

  """"""
  stddev: audit_logs_stddev_fields

  """"""
  stddev_pop: audit_logs_stddev_pop_fields

  """"""
  stddev_samp: audit_logs_stddev_samp_fields

  """"""
  sum: audit_logs_sum_fields

  """"""
  var_pop: audit_logs_var_pop_fields

  """"""
  var_samp: audit_logs_var_samp_fields

  """"""
  variance: audit_logs_variance_fields
}

"""aggregate avg on columns"""
type audit_logs_avg_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""
Boolean expression to filter rows from the table "audit_logs". All fields are combined with a logical 'AND'.
"""
input audit_logs_bool_exp {
  """"""
  _and: [audit_logs_bool_exp!]

  """"""
  _not: audit_logs_bool_exp

  """"""
  _or: [audit_logs_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  id: bigint_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  insert_user: String_comparison_exp

  """"""
  message: String_comparison_exp
}

"""
unique or primary key constraints on table "audit_logs"
"""
enum audit_logs_constraint {
  """unique or primary key constraint"""
  audit_logs_pkey
}

"""
input type for incrementing numeric columns in table "audit_logs"
"""
input audit_logs_inc_input {
  """"""
  id: bigint

  """"""
  insert_instant: bigint
}

"""
input type for inserting data into table "audit_logs"
"""
input audit_logs_insert_input {
  """"""
  data: String

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  insert_user: String

  """"""
  message: String
}

"""aggregate max on columns"""
type audit_logs_max_fields {
  """"""
  data: String

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  insert_user: String

  """"""
  message: String
}

"""aggregate min on columns"""
type audit_logs_min_fields {
  """"""
  data: String

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  insert_user: String

  """"""
  message: String
}

"""
response of any mutation on the table "audit_logs"
"""
type audit_logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [audit_logs!]!
}

"""
on conflict condition type for table "audit_logs"
"""
input audit_logs_on_conflict {
  """"""
  constraint: audit_logs_constraint!

  """"""
  update_columns: [audit_logs_update_column!]!

  """"""
  where: audit_logs_bool_exp
}

"""Ordering options when selecting data from "audit_logs"."""
input audit_logs_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  insert_user: order_by

  """"""
  message: order_by
}

"""primary key columns input for table: audit_logs"""
input audit_logs_pk_columns_input {
  """"""
  id: bigint!
}

"""
select columns of table "audit_logs"
"""
enum audit_logs_select_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  insert_user

  """column name"""
  message
}

"""
input type for updating data in table "audit_logs"
"""
input audit_logs_set_input {
  """"""
  data: String

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  insert_user: String

  """"""
  message: String
}

"""aggregate stddev on columns"""
type audit_logs_stddev_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""aggregate stddev_pop on columns"""
type audit_logs_stddev_pop_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""aggregate stddev_samp on columns"""
type audit_logs_stddev_samp_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""aggregate sum on columns"""
type audit_logs_sum_fields {
  """"""
  id: bigint

  """"""
  insert_instant: bigint
}

"""
update columns of table "audit_logs"
"""
enum audit_logs_update_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  insert_user

  """column name"""
  message
}

"""aggregate var_pop on columns"""
type audit_logs_var_pop_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""aggregate var_samp on columns"""
type audit_logs_var_samp_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""aggregate variance on columns"""
type audit_logs_variance_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float
}

"""
columns and relationships of "auth_group"
"""
type auth_group {
  """An array relationship"""
  auth_group_permissions(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): [auth_group_permissions!]!

  """An aggregate relationship"""
  auth_group_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): auth_group_permissions_aggregate!

  """An array relationship"""
  auth_user_groups(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): [auth_user_groups!]!

  """An aggregate relationship"""
  auth_user_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): auth_user_groups_aggregate!
  id: Int!
  name: String!
}

"""
aggregated selection of "auth_group"
"""
type auth_group_aggregate {
  aggregate: auth_group_aggregate_fields
  nodes: [auth_group!]!
}

"""
aggregate fields of "auth_group"
"""
type auth_group_aggregate_fields {
  avg: auth_group_avg_fields
  count(columns: [auth_group_select_column!], distinct: Boolean): Int!
  max: auth_group_max_fields
  min: auth_group_min_fields
  stddev: auth_group_stddev_fields
  stddev_pop: auth_group_stddev_pop_fields
  stddev_samp: auth_group_stddev_samp_fields
  sum: auth_group_sum_fields
  var_pop: auth_group_var_pop_fields
  var_samp: auth_group_var_samp_fields
  variance: auth_group_variance_fields
}

"""aggregate avg on columns"""
type auth_group_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "auth_group". All fields are combined with a logical 'AND'.
"""
input auth_group_bool_exp {
  _and: [auth_group_bool_exp!]
  _not: auth_group_bool_exp
  _or: [auth_group_bool_exp!]
  auth_group_permissions: auth_group_permissions_bool_exp
  auth_user_groups: auth_user_groups_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "auth_group"
"""
enum auth_group_constraint {
  """unique or primary key constraint"""
  auth_group_name_key

  """unique or primary key constraint"""
  auth_group_pkey
}

"""
input type for incrementing numeric columns in table "auth_group"
"""
input auth_group_inc_input {
  id: Int
}

"""
input type for inserting data into table "auth_group"
"""
input auth_group_insert_input {
  auth_group_permissions: auth_group_permissions_arr_rel_insert_input
  auth_user_groups: auth_user_groups_arr_rel_insert_input
  id: Int
  name: String
}

"""aggregate max on columns"""
type auth_group_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type auth_group_min_fields {
  id: Int
  name: String
}

"""
response of any mutation on the table "auth_group"
"""
type auth_group_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auth_group!]!
}

"""
input type for inserting object relation for remote table "auth_group"
"""
input auth_group_obj_rel_insert_input {
  data: auth_group_insert_input!

  """on conflict condition"""
  on_conflict: auth_group_on_conflict
}

"""
on conflict condition type for table "auth_group"
"""
input auth_group_on_conflict {
  constraint: auth_group_constraint!
  update_columns: [auth_group_update_column!]! = []
  where: auth_group_bool_exp
}

"""Ordering options when selecting data from "auth_group"."""
input auth_group_order_by {
  auth_group_permissions_aggregate: auth_group_permissions_aggregate_order_by
  auth_user_groups_aggregate: auth_user_groups_aggregate_order_by
  id: order_by
  name: order_by
}

"""
columns and relationships of "auth_group_permissions"
"""
type auth_group_permissions {
  """An object relationship"""
  auth_group: auth_group!

  """An object relationship"""
  auth_permission: auth_permission!
  group_id: Int!
  id: Int!
  permission_id: Int!
}

"""
aggregated selection of "auth_group_permissions"
"""
type auth_group_permissions_aggregate {
  aggregate: auth_group_permissions_aggregate_fields
  nodes: [auth_group_permissions!]!
}

"""
aggregate fields of "auth_group_permissions"
"""
type auth_group_permissions_aggregate_fields {
  avg: auth_group_permissions_avg_fields
  count(columns: [auth_group_permissions_select_column!], distinct: Boolean): Int!
  max: auth_group_permissions_max_fields
  min: auth_group_permissions_min_fields
  stddev: auth_group_permissions_stddev_fields
  stddev_pop: auth_group_permissions_stddev_pop_fields
  stddev_samp: auth_group_permissions_stddev_samp_fields
  sum: auth_group_permissions_sum_fields
  var_pop: auth_group_permissions_var_pop_fields
  var_samp: auth_group_permissions_var_samp_fields
  variance: auth_group_permissions_variance_fields
}

"""
order by aggregate values of table "auth_group_permissions"
"""
input auth_group_permissions_aggregate_order_by {
  avg: auth_group_permissions_avg_order_by
  count: order_by
  max: auth_group_permissions_max_order_by
  min: auth_group_permissions_min_order_by
  stddev: auth_group_permissions_stddev_order_by
  stddev_pop: auth_group_permissions_stddev_pop_order_by
  stddev_samp: auth_group_permissions_stddev_samp_order_by
  sum: auth_group_permissions_sum_order_by
  var_pop: auth_group_permissions_var_pop_order_by
  var_samp: auth_group_permissions_var_samp_order_by
  variance: auth_group_permissions_variance_order_by
}

"""
input type for inserting array relation for remote table "auth_group_permissions"
"""
input auth_group_permissions_arr_rel_insert_input {
  data: [auth_group_permissions_insert_input!]!

  """on conflict condition"""
  on_conflict: auth_group_permissions_on_conflict
}

"""aggregate avg on columns"""
type auth_group_permissions_avg_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by avg() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_avg_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""
Boolean expression to filter rows from the table "auth_group_permissions". All fields are combined with a logical 'AND'.
"""
input auth_group_permissions_bool_exp {
  _and: [auth_group_permissions_bool_exp!]
  _not: auth_group_permissions_bool_exp
  _or: [auth_group_permissions_bool_exp!]
  auth_group: auth_group_bool_exp
  auth_permission: auth_permission_bool_exp
  group_id: Int_comparison_exp
  id: Int_comparison_exp
  permission_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "auth_group_permissions"
"""
enum auth_group_permissions_constraint {
  """unique or primary key constraint"""
  auth_group_permissions_group_id_permission_id_0cd325b0_uniq

  """unique or primary key constraint"""
  auth_group_permissions_pkey
}

"""
input type for incrementing numeric columns in table "auth_group_permissions"
"""
input auth_group_permissions_inc_input {
  group_id: Int
  id: Int
  permission_id: Int
}

"""
input type for inserting data into table "auth_group_permissions"
"""
input auth_group_permissions_insert_input {
  auth_group: auth_group_obj_rel_insert_input
  auth_permission: auth_permission_obj_rel_insert_input
  group_id: Int
  id: Int
  permission_id: Int
}

"""aggregate max on columns"""
type auth_group_permissions_max_fields {
  group_id: Int
  id: Int
  permission_id: Int
}

"""
order by max() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_max_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""aggregate min on columns"""
type auth_group_permissions_min_fields {
  group_id: Int
  id: Int
  permission_id: Int
}

"""
order by min() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_min_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""
response of any mutation on the table "auth_group_permissions"
"""
type auth_group_permissions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auth_group_permissions!]!
}

"""
on conflict condition type for table "auth_group_permissions"
"""
input auth_group_permissions_on_conflict {
  constraint: auth_group_permissions_constraint!
  update_columns: [auth_group_permissions_update_column!]! = []
  where: auth_group_permissions_bool_exp
}

"""Ordering options when selecting data from "auth_group_permissions"."""
input auth_group_permissions_order_by {
  auth_group: auth_group_order_by
  auth_permission: auth_permission_order_by
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""primary key columns input for table: auth_group_permissions"""
input auth_group_permissions_pk_columns_input {
  id: Int!
}

"""
select columns of table "auth_group_permissions"
"""
enum auth_group_permissions_select_column {
  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  permission_id
}

"""
input type for updating data in table "auth_group_permissions"
"""
input auth_group_permissions_set_input {
  group_id: Int
  id: Int
  permission_id: Int
}

"""aggregate stddev on columns"""
type auth_group_permissions_stddev_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by stddev() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_stddev_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""aggregate stddev_pop on columns"""
type auth_group_permissions_stddev_pop_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by stddev_pop() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_stddev_pop_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""aggregate stddev_samp on columns"""
type auth_group_permissions_stddev_samp_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by stddev_samp() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_stddev_samp_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""aggregate sum on columns"""
type auth_group_permissions_sum_fields {
  group_id: Int
  id: Int
  permission_id: Int
}

"""
order by sum() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_sum_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""
update columns of table "auth_group_permissions"
"""
enum auth_group_permissions_update_column {
  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  permission_id
}

"""aggregate var_pop on columns"""
type auth_group_permissions_var_pop_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by var_pop() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_var_pop_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""aggregate var_samp on columns"""
type auth_group_permissions_var_samp_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by var_samp() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_var_samp_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""aggregate variance on columns"""
type auth_group_permissions_variance_fields {
  group_id: Float
  id: Float
  permission_id: Float
}

"""
order by variance() on columns of table "auth_group_permissions"
"""
input auth_group_permissions_variance_order_by {
  group_id: order_by
  id: order_by
  permission_id: order_by
}

"""primary key columns input for table: auth_group"""
input auth_group_pk_columns_input {
  id: Int!
}

"""
select columns of table "auth_group"
"""
enum auth_group_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "auth_group"
"""
input auth_group_set_input {
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type auth_group_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type auth_group_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type auth_group_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type auth_group_sum_fields {
  id: Int
}

"""
update columns of table "auth_group"
"""
enum auth_group_update_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type auth_group_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type auth_group_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type auth_group_variance_fields {
  id: Float
}

"""
columns and relationships of "auth_permission"
"""
type auth_permission {
  """An array relationship"""
  auth_group_permissions(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): [auth_group_permissions!]!

  """An aggregate relationship"""
  auth_group_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): auth_group_permissions_aggregate!

  """An array relationship"""
  auth_user_user_permissions(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): [auth_user_user_permissions!]!

  """An aggregate relationship"""
  auth_user_user_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): auth_user_user_permissions_aggregate!
  codename: String!
  content_type_id: Int!

  """An object relationship"""
  django_content_type: django_content_type!
  id: Int!
  name: String!
}

"""
aggregated selection of "auth_permission"
"""
type auth_permission_aggregate {
  aggregate: auth_permission_aggregate_fields
  nodes: [auth_permission!]!
}

"""
aggregate fields of "auth_permission"
"""
type auth_permission_aggregate_fields {
  avg: auth_permission_avg_fields
  count(columns: [auth_permission_select_column!], distinct: Boolean): Int!
  max: auth_permission_max_fields
  min: auth_permission_min_fields
  stddev: auth_permission_stddev_fields
  stddev_pop: auth_permission_stddev_pop_fields
  stddev_samp: auth_permission_stddev_samp_fields
  sum: auth_permission_sum_fields
  var_pop: auth_permission_var_pop_fields
  var_samp: auth_permission_var_samp_fields
  variance: auth_permission_variance_fields
}

"""
order by aggregate values of table "auth_permission"
"""
input auth_permission_aggregate_order_by {
  avg: auth_permission_avg_order_by
  count: order_by
  max: auth_permission_max_order_by
  min: auth_permission_min_order_by
  stddev: auth_permission_stddev_order_by
  stddev_pop: auth_permission_stddev_pop_order_by
  stddev_samp: auth_permission_stddev_samp_order_by
  sum: auth_permission_sum_order_by
  var_pop: auth_permission_var_pop_order_by
  var_samp: auth_permission_var_samp_order_by
  variance: auth_permission_variance_order_by
}

"""
input type for inserting array relation for remote table "auth_permission"
"""
input auth_permission_arr_rel_insert_input {
  data: [auth_permission_insert_input!]!

  """on conflict condition"""
  on_conflict: auth_permission_on_conflict
}

"""aggregate avg on columns"""
type auth_permission_avg_fields {
  content_type_id: Float
  id: Float
}

"""
order by avg() on columns of table "auth_permission"
"""
input auth_permission_avg_order_by {
  content_type_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "auth_permission". All fields are combined with a logical 'AND'.
"""
input auth_permission_bool_exp {
  _and: [auth_permission_bool_exp!]
  _not: auth_permission_bool_exp
  _or: [auth_permission_bool_exp!]
  auth_group_permissions: auth_group_permissions_bool_exp
  auth_user_user_permissions: auth_user_user_permissions_bool_exp
  codename: String_comparison_exp
  content_type_id: Int_comparison_exp
  django_content_type: django_content_type_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "auth_permission"
"""
enum auth_permission_constraint {
  """unique or primary key constraint"""
  auth_permission_content_type_id_codename_01ab375a_uniq

  """unique or primary key constraint"""
  auth_permission_pkey
}

"""
input type for incrementing numeric columns in table "auth_permission"
"""
input auth_permission_inc_input {
  content_type_id: Int
  id: Int
}

"""
input type for inserting data into table "auth_permission"
"""
input auth_permission_insert_input {
  auth_group_permissions: auth_group_permissions_arr_rel_insert_input
  auth_user_user_permissions: auth_user_user_permissions_arr_rel_insert_input
  codename: String
  content_type_id: Int
  django_content_type: django_content_type_obj_rel_insert_input
  id: Int
  name: String
}

"""aggregate max on columns"""
type auth_permission_max_fields {
  codename: String
  content_type_id: Int
  id: Int
  name: String
}

"""
order by max() on columns of table "auth_permission"
"""
input auth_permission_max_order_by {
  codename: order_by
  content_type_id: order_by
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type auth_permission_min_fields {
  codename: String
  content_type_id: Int
  id: Int
  name: String
}

"""
order by min() on columns of table "auth_permission"
"""
input auth_permission_min_order_by {
  codename: order_by
  content_type_id: order_by
  id: order_by
  name: order_by
}

"""
response of any mutation on the table "auth_permission"
"""
type auth_permission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auth_permission!]!
}

"""
input type for inserting object relation for remote table "auth_permission"
"""
input auth_permission_obj_rel_insert_input {
  data: auth_permission_insert_input!

  """on conflict condition"""
  on_conflict: auth_permission_on_conflict
}

"""
on conflict condition type for table "auth_permission"
"""
input auth_permission_on_conflict {
  constraint: auth_permission_constraint!
  update_columns: [auth_permission_update_column!]! = []
  where: auth_permission_bool_exp
}

"""Ordering options when selecting data from "auth_permission"."""
input auth_permission_order_by {
  auth_group_permissions_aggregate: auth_group_permissions_aggregate_order_by
  auth_user_user_permissions_aggregate: auth_user_user_permissions_aggregate_order_by
  codename: order_by
  content_type_id: order_by
  django_content_type: django_content_type_order_by
  id: order_by
  name: order_by
}

"""primary key columns input for table: auth_permission"""
input auth_permission_pk_columns_input {
  id: Int!
}

"""
select columns of table "auth_permission"
"""
enum auth_permission_select_column {
  """column name"""
  codename

  """column name"""
  content_type_id

  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "auth_permission"
"""
input auth_permission_set_input {
  codename: String
  content_type_id: Int
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type auth_permission_stddev_fields {
  content_type_id: Float
  id: Float
}

"""
order by stddev() on columns of table "auth_permission"
"""
input auth_permission_stddev_order_by {
  content_type_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type auth_permission_stddev_pop_fields {
  content_type_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "auth_permission"
"""
input auth_permission_stddev_pop_order_by {
  content_type_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type auth_permission_stddev_samp_fields {
  content_type_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "auth_permission"
"""
input auth_permission_stddev_samp_order_by {
  content_type_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type auth_permission_sum_fields {
  content_type_id: Int
  id: Int
}

"""
order by sum() on columns of table "auth_permission"
"""
input auth_permission_sum_order_by {
  content_type_id: order_by
  id: order_by
}

"""
update columns of table "auth_permission"
"""
enum auth_permission_update_column {
  """column name"""
  codename

  """column name"""
  content_type_id

  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type auth_permission_var_pop_fields {
  content_type_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "auth_permission"
"""
input auth_permission_var_pop_order_by {
  content_type_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type auth_permission_var_samp_fields {
  content_type_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "auth_permission"
"""
input auth_permission_var_samp_order_by {
  content_type_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type auth_permission_variance_fields {
  content_type_id: Float
  id: Float
}

"""
order by variance() on columns of table "auth_permission"
"""
input auth_permission_variance_order_by {
  content_type_id: order_by
  id: order_by
}

"""
columns and relationships of "auth_user"
"""
type auth_user {
  """An array relationship"""
  auth_user_groups(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): [auth_user_groups!]!

  """An aggregate relationship"""
  auth_user_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): auth_user_groups_aggregate!

  """An array relationship"""
  auth_user_user_permissions(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): [auth_user_user_permissions!]!

  """An aggregate relationship"""
  auth_user_user_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): auth_user_user_permissions_aggregate!
  date_joined: timestamptz!

  """An array relationship"""
  django_admin_logs(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): [django_admin_log!]!

  """An aggregate relationship"""
  django_admin_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): django_admin_log_aggregate!
  email: String!
  first_name: String!
  id: Int!
  is_active: Boolean!
  is_staff: Boolean!
  is_superuser: Boolean!
  last_login: timestamptz
  last_name: String!
  password: String!
  username: String!
}

"""
aggregated selection of "auth_user"
"""
type auth_user_aggregate {
  aggregate: auth_user_aggregate_fields
  nodes: [auth_user!]!
}

"""
aggregate fields of "auth_user"
"""
type auth_user_aggregate_fields {
  avg: auth_user_avg_fields
  count(columns: [auth_user_select_column!], distinct: Boolean): Int!
  max: auth_user_max_fields
  min: auth_user_min_fields
  stddev: auth_user_stddev_fields
  stddev_pop: auth_user_stddev_pop_fields
  stddev_samp: auth_user_stddev_samp_fields
  sum: auth_user_sum_fields
  var_pop: auth_user_var_pop_fields
  var_samp: auth_user_var_samp_fields
  variance: auth_user_variance_fields
}

"""aggregate avg on columns"""
type auth_user_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "auth_user". All fields are combined with a logical 'AND'.
"""
input auth_user_bool_exp {
  _and: [auth_user_bool_exp!]
  _not: auth_user_bool_exp
  _or: [auth_user_bool_exp!]
  auth_user_groups: auth_user_groups_bool_exp
  auth_user_user_permissions: auth_user_user_permissions_bool_exp
  date_joined: timestamptz_comparison_exp
  django_admin_logs: django_admin_log_bool_exp
  email: String_comparison_exp
  first_name: String_comparison_exp
  id: Int_comparison_exp
  is_active: Boolean_comparison_exp
  is_staff: Boolean_comparison_exp
  is_superuser: Boolean_comparison_exp
  last_login: timestamptz_comparison_exp
  last_name: String_comparison_exp
  password: String_comparison_exp
  username: String_comparison_exp
}

"""
unique or primary key constraints on table "auth_user"
"""
enum auth_user_constraint {
  """unique or primary key constraint"""
  auth_user_pkey

  """unique or primary key constraint"""
  auth_user_username_key
}

"""
columns and relationships of "auth_user_groups"
"""
type auth_user_groups {
  """An object relationship"""
  auth_group: auth_group!

  """An object relationship"""
  auth_user: auth_user!
  group_id: Int!
  id: Int!
  user_id: Int!
}

"""
aggregated selection of "auth_user_groups"
"""
type auth_user_groups_aggregate {
  aggregate: auth_user_groups_aggregate_fields
  nodes: [auth_user_groups!]!
}

"""
aggregate fields of "auth_user_groups"
"""
type auth_user_groups_aggregate_fields {
  avg: auth_user_groups_avg_fields
  count(columns: [auth_user_groups_select_column!], distinct: Boolean): Int!
  max: auth_user_groups_max_fields
  min: auth_user_groups_min_fields
  stddev: auth_user_groups_stddev_fields
  stddev_pop: auth_user_groups_stddev_pop_fields
  stddev_samp: auth_user_groups_stddev_samp_fields
  sum: auth_user_groups_sum_fields
  var_pop: auth_user_groups_var_pop_fields
  var_samp: auth_user_groups_var_samp_fields
  variance: auth_user_groups_variance_fields
}

"""
order by aggregate values of table "auth_user_groups"
"""
input auth_user_groups_aggregate_order_by {
  avg: auth_user_groups_avg_order_by
  count: order_by
  max: auth_user_groups_max_order_by
  min: auth_user_groups_min_order_by
  stddev: auth_user_groups_stddev_order_by
  stddev_pop: auth_user_groups_stddev_pop_order_by
  stddev_samp: auth_user_groups_stddev_samp_order_by
  sum: auth_user_groups_sum_order_by
  var_pop: auth_user_groups_var_pop_order_by
  var_samp: auth_user_groups_var_samp_order_by
  variance: auth_user_groups_variance_order_by
}

"""
input type for inserting array relation for remote table "auth_user_groups"
"""
input auth_user_groups_arr_rel_insert_input {
  data: [auth_user_groups_insert_input!]!

  """on conflict condition"""
  on_conflict: auth_user_groups_on_conflict
}

"""aggregate avg on columns"""
type auth_user_groups_avg_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by avg() on columns of table "auth_user_groups"
"""
input auth_user_groups_avg_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "auth_user_groups". All fields are combined with a logical 'AND'.
"""
input auth_user_groups_bool_exp {
  _and: [auth_user_groups_bool_exp!]
  _not: auth_user_groups_bool_exp
  _or: [auth_user_groups_bool_exp!]
  auth_group: auth_group_bool_exp
  auth_user: auth_user_bool_exp
  group_id: Int_comparison_exp
  id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "auth_user_groups"
"""
enum auth_user_groups_constraint {
  """unique or primary key constraint"""
  auth_user_groups_pkey

  """unique or primary key constraint"""
  auth_user_groups_user_id_group_id_94350c0c_uniq
}

"""
input type for incrementing numeric columns in table "auth_user_groups"
"""
input auth_user_groups_inc_input {
  group_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "auth_user_groups"
"""
input auth_user_groups_insert_input {
  auth_group: auth_group_obj_rel_insert_input
  auth_user: auth_user_obj_rel_insert_input
  group_id: Int
  id: Int
  user_id: Int
}

"""aggregate max on columns"""
type auth_user_groups_max_fields {
  group_id: Int
  id: Int
  user_id: Int
}

"""
order by max() on columns of table "auth_user_groups"
"""
input auth_user_groups_max_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type auth_user_groups_min_fields {
  group_id: Int
  id: Int
  user_id: Int
}

"""
order by min() on columns of table "auth_user_groups"
"""
input auth_user_groups_min_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "auth_user_groups"
"""
type auth_user_groups_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auth_user_groups!]!
}

"""
on conflict condition type for table "auth_user_groups"
"""
input auth_user_groups_on_conflict {
  constraint: auth_user_groups_constraint!
  update_columns: [auth_user_groups_update_column!]! = []
  where: auth_user_groups_bool_exp
}

"""Ordering options when selecting data from "auth_user_groups"."""
input auth_user_groups_order_by {
  auth_group: auth_group_order_by
  auth_user: auth_user_order_by
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""primary key columns input for table: auth_user_groups"""
input auth_user_groups_pk_columns_input {
  id: Int!
}

"""
select columns of table "auth_user_groups"
"""
enum auth_user_groups_select_column {
  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  user_id
}

"""
input type for updating data in table "auth_user_groups"
"""
input auth_user_groups_set_input {
  group_id: Int
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type auth_user_groups_stddev_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by stddev() on columns of table "auth_user_groups"
"""
input auth_user_groups_stddev_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type auth_user_groups_stddev_pop_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "auth_user_groups"
"""
input auth_user_groups_stddev_pop_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type auth_user_groups_stddev_samp_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "auth_user_groups"
"""
input auth_user_groups_stddev_samp_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type auth_user_groups_sum_fields {
  group_id: Int
  id: Int
  user_id: Int
}

"""
order by sum() on columns of table "auth_user_groups"
"""
input auth_user_groups_sum_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "auth_user_groups"
"""
enum auth_user_groups_update_column {
  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type auth_user_groups_var_pop_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "auth_user_groups"
"""
input auth_user_groups_var_pop_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type auth_user_groups_var_samp_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "auth_user_groups"
"""
input auth_user_groups_var_samp_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type auth_user_groups_variance_fields {
  group_id: Float
  id: Float
  user_id: Float
}

"""
order by variance() on columns of table "auth_user_groups"
"""
input auth_user_groups_variance_order_by {
  group_id: order_by
  id: order_by
  user_id: order_by
}

"""
input type for incrementing numeric columns in table "auth_user"
"""
input auth_user_inc_input {
  id: Int
}

"""
input type for inserting data into table "auth_user"
"""
input auth_user_insert_input {
  auth_user_groups: auth_user_groups_arr_rel_insert_input
  auth_user_user_permissions: auth_user_user_permissions_arr_rel_insert_input
  date_joined: timestamptz
  django_admin_logs: django_admin_log_arr_rel_insert_input
  email: String
  first_name: String
  id: Int
  is_active: Boolean
  is_staff: Boolean
  is_superuser: Boolean
  last_login: timestamptz
  last_name: String
  password: String
  username: String
}

"""aggregate max on columns"""
type auth_user_max_fields {
  date_joined: timestamptz
  email: String
  first_name: String
  id: Int
  last_login: timestamptz
  last_name: String
  password: String
  username: String
}

"""aggregate min on columns"""
type auth_user_min_fields {
  date_joined: timestamptz
  email: String
  first_name: String
  id: Int
  last_login: timestamptz
  last_name: String
  password: String
  username: String
}

"""
response of any mutation on the table "auth_user"
"""
type auth_user_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auth_user!]!
}

"""
input type for inserting object relation for remote table "auth_user"
"""
input auth_user_obj_rel_insert_input {
  data: auth_user_insert_input!

  """on conflict condition"""
  on_conflict: auth_user_on_conflict
}

"""
on conflict condition type for table "auth_user"
"""
input auth_user_on_conflict {
  constraint: auth_user_constraint!
  update_columns: [auth_user_update_column!]! = []
  where: auth_user_bool_exp
}

"""Ordering options when selecting data from "auth_user"."""
input auth_user_order_by {
  auth_user_groups_aggregate: auth_user_groups_aggregate_order_by
  auth_user_user_permissions_aggregate: auth_user_user_permissions_aggregate_order_by
  date_joined: order_by
  django_admin_logs_aggregate: django_admin_log_aggregate_order_by
  email: order_by
  first_name: order_by
  id: order_by
  is_active: order_by
  is_staff: order_by
  is_superuser: order_by
  last_login: order_by
  last_name: order_by
  password: order_by
  username: order_by
}

"""primary key columns input for table: auth_user"""
input auth_user_pk_columns_input {
  id: Int!
}

"""
select columns of table "auth_user"
"""
enum auth_user_select_column {
  """column name"""
  date_joined

  """column name"""
  email

  """column name"""
  first_name

  """column name"""
  id

  """column name"""
  is_active

  """column name"""
  is_staff

  """column name"""
  is_superuser

  """column name"""
  last_login

  """column name"""
  last_name

  """column name"""
  password

  """column name"""
  username
}

"""
input type for updating data in table "auth_user"
"""
input auth_user_set_input {
  date_joined: timestamptz
  email: String
  first_name: String
  id: Int
  is_active: Boolean
  is_staff: Boolean
  is_superuser: Boolean
  last_login: timestamptz
  last_name: String
  password: String
  username: String
}

"""aggregate stddev on columns"""
type auth_user_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type auth_user_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type auth_user_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type auth_user_sum_fields {
  id: Int
}

"""
update columns of table "auth_user"
"""
enum auth_user_update_column {
  """column name"""
  date_joined

  """column name"""
  email

  """column name"""
  first_name

  """column name"""
  id

  """column name"""
  is_active

  """column name"""
  is_staff

  """column name"""
  is_superuser

  """column name"""
  last_login

  """column name"""
  last_name

  """column name"""
  password

  """column name"""
  username
}

"""
columns and relationships of "auth_user_user_permissions"
"""
type auth_user_user_permissions {
  """An object relationship"""
  auth_permission: auth_permission!

  """An object relationship"""
  auth_user: auth_user!
  id: Int!
  permission_id: Int!
  user_id: Int!
}

"""
aggregated selection of "auth_user_user_permissions"
"""
type auth_user_user_permissions_aggregate {
  aggregate: auth_user_user_permissions_aggregate_fields
  nodes: [auth_user_user_permissions!]!
}

"""
aggregate fields of "auth_user_user_permissions"
"""
type auth_user_user_permissions_aggregate_fields {
  avg: auth_user_user_permissions_avg_fields
  count(columns: [auth_user_user_permissions_select_column!], distinct: Boolean): Int!
  max: auth_user_user_permissions_max_fields
  min: auth_user_user_permissions_min_fields
  stddev: auth_user_user_permissions_stddev_fields
  stddev_pop: auth_user_user_permissions_stddev_pop_fields
  stddev_samp: auth_user_user_permissions_stddev_samp_fields
  sum: auth_user_user_permissions_sum_fields
  var_pop: auth_user_user_permissions_var_pop_fields
  var_samp: auth_user_user_permissions_var_samp_fields
  variance: auth_user_user_permissions_variance_fields
}

"""
order by aggregate values of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_aggregate_order_by {
  avg: auth_user_user_permissions_avg_order_by
  count: order_by
  max: auth_user_user_permissions_max_order_by
  min: auth_user_user_permissions_min_order_by
  stddev: auth_user_user_permissions_stddev_order_by
  stddev_pop: auth_user_user_permissions_stddev_pop_order_by
  stddev_samp: auth_user_user_permissions_stddev_samp_order_by
  sum: auth_user_user_permissions_sum_order_by
  var_pop: auth_user_user_permissions_var_pop_order_by
  var_samp: auth_user_user_permissions_var_samp_order_by
  variance: auth_user_user_permissions_variance_order_by
}

"""
input type for inserting array relation for remote table "auth_user_user_permissions"
"""
input auth_user_user_permissions_arr_rel_insert_input {
  data: [auth_user_user_permissions_insert_input!]!

  """on conflict condition"""
  on_conflict: auth_user_user_permissions_on_conflict
}

"""aggregate avg on columns"""
type auth_user_user_permissions_avg_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by avg() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_avg_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "auth_user_user_permissions". All fields are combined with a logical 'AND'.
"""
input auth_user_user_permissions_bool_exp {
  _and: [auth_user_user_permissions_bool_exp!]
  _not: auth_user_user_permissions_bool_exp
  _or: [auth_user_user_permissions_bool_exp!]
  auth_permission: auth_permission_bool_exp
  auth_user: auth_user_bool_exp
  id: Int_comparison_exp
  permission_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "auth_user_user_permissions"
"""
enum auth_user_user_permissions_constraint {
  """unique or primary key constraint"""
  auth_user_user_permissions_pkey

  """unique or primary key constraint"""
  auth_user_user_permissions_user_id_permission_id_14a6b632_uniq
}

"""
input type for incrementing numeric columns in table "auth_user_user_permissions"
"""
input auth_user_user_permissions_inc_input {
  id: Int
  permission_id: Int
  user_id: Int
}

"""
input type for inserting data into table "auth_user_user_permissions"
"""
input auth_user_user_permissions_insert_input {
  auth_permission: auth_permission_obj_rel_insert_input
  auth_user: auth_user_obj_rel_insert_input
  id: Int
  permission_id: Int
  user_id: Int
}

"""aggregate max on columns"""
type auth_user_user_permissions_max_fields {
  id: Int
  permission_id: Int
  user_id: Int
}

"""
order by max() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_max_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type auth_user_user_permissions_min_fields {
  id: Int
  permission_id: Int
  user_id: Int
}

"""
order by min() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_min_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "auth_user_user_permissions"
"""
type auth_user_user_permissions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auth_user_user_permissions!]!
}

"""
on conflict condition type for table "auth_user_user_permissions"
"""
input auth_user_user_permissions_on_conflict {
  constraint: auth_user_user_permissions_constraint!
  update_columns: [auth_user_user_permissions_update_column!]! = []
  where: auth_user_user_permissions_bool_exp
}

"""
Ordering options when selecting data from "auth_user_user_permissions".
"""
input auth_user_user_permissions_order_by {
  auth_permission: auth_permission_order_by
  auth_user: auth_user_order_by
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""primary key columns input for table: auth_user_user_permissions"""
input auth_user_user_permissions_pk_columns_input {
  id: Int!
}

"""
select columns of table "auth_user_user_permissions"
"""
enum auth_user_user_permissions_select_column {
  """column name"""
  id

  """column name"""
  permission_id

  """column name"""
  user_id
}

"""
input type for updating data in table "auth_user_user_permissions"
"""
input auth_user_user_permissions_set_input {
  id: Int
  permission_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type auth_user_user_permissions_stddev_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by stddev() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_stddev_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type auth_user_user_permissions_stddev_pop_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_stddev_pop_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type auth_user_user_permissions_stddev_samp_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_stddev_samp_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type auth_user_user_permissions_sum_fields {
  id: Int
  permission_id: Int
  user_id: Int
}

"""
order by sum() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_sum_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""
update columns of table "auth_user_user_permissions"
"""
enum auth_user_user_permissions_update_column {
  """column name"""
  id

  """column name"""
  permission_id

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type auth_user_user_permissions_var_pop_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_var_pop_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type auth_user_user_permissions_var_samp_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_var_samp_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type auth_user_user_permissions_variance_fields {
  id: Float
  permission_id: Float
  user_id: Float
}

"""
order by variance() on columns of table "auth_user_user_permissions"
"""
input auth_user_user_permissions_variance_order_by {
  id: order_by
  permission_id: order_by
  user_id: order_by
}

"""aggregate var_pop on columns"""
type auth_user_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type auth_user_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type auth_user_variance_fields {
  id: Float
}

"""
columns and relationships of "authentication_keys"
"""
type authentication_keys {
  """"""
  id: String!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  meta_data: String

  """"""
  permissions: String

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid
}

"""
aggregated selection of "authentication_keys"
"""
type authentication_keys_aggregate {
  """"""
  aggregate: authentication_keys_aggregate_fields

  """"""
  nodes: [authentication_keys!]!
}

"""
aggregate fields of "authentication_keys"
"""
type authentication_keys_aggregate_fields {
  """"""
  avg: authentication_keys_avg_fields

  """"""
  count(columns: [authentication_keys_select_column!], distinct: Boolean): Int!

  """"""
  max: authentication_keys_max_fields

  """"""
  min: authentication_keys_min_fields

  """"""
  stddev: authentication_keys_stddev_fields

  """"""
  stddev_pop: authentication_keys_stddev_pop_fields

  """"""
  stddev_samp: authentication_keys_stddev_samp_fields

  """"""
  sum: authentication_keys_sum_fields

  """"""
  var_pop: authentication_keys_var_pop_fields

  """"""
  var_samp: authentication_keys_var_samp_fields

  """"""
  variance: authentication_keys_variance_fields
}

"""
order by aggregate values of table "authentication_keys"
"""
input authentication_keys_aggregate_order_by {
  """"""
  avg: authentication_keys_avg_order_by

  """"""
  count: order_by

  """"""
  max: authentication_keys_max_order_by

  """"""
  min: authentication_keys_min_order_by

  """"""
  stddev: authentication_keys_stddev_order_by

  """"""
  stddev_pop: authentication_keys_stddev_pop_order_by

  """"""
  stddev_samp: authentication_keys_stddev_samp_order_by

  """"""
  sum: authentication_keys_sum_order_by

  """"""
  var_pop: authentication_keys_var_pop_order_by

  """"""
  var_samp: authentication_keys_var_samp_order_by

  """"""
  variance: authentication_keys_variance_order_by
}

"""
input type for inserting array relation for remote table "authentication_keys"
"""
input authentication_keys_arr_rel_insert_input {
  """"""
  data: [authentication_keys_insert_input!]!

  """on conflict condition"""
  on_conflict: authentication_keys_on_conflict
}

"""aggregate avg on columns"""
type authentication_keys_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "authentication_keys"
"""
input authentication_keys_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "authentication_keys". All fields are combined with a logical 'AND'.
"""
input authentication_keys_bool_exp {
  """"""
  _and: [authentication_keys_bool_exp!]

  """"""
  _not: authentication_keys_bool_exp

  """"""
  _or: [authentication_keys_bool_exp!]

  """"""
  id: String_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  meta_data: String_comparison_exp

  """"""
  permissions: String_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "authentication_keys"
"""
enum authentication_keys_constraint {
  """unique or primary key constraint"""
  authentication_keys_pkey
}

"""
input type for incrementing numeric columns in table "authentication_keys"
"""
input authentication_keys_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "authentication_keys"
"""
input authentication_keys_insert_input {
  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  meta_data: String

  """"""
  permissions: String

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid
}

"""aggregate max on columns"""
type authentication_keys_max_fields {
  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  meta_data: String

  """"""
  permissions: String

  """"""
  tenants_id: uuid
}

"""
order by max() on columns of table "authentication_keys"
"""
input authentication_keys_max_order_by {
  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  meta_data: order_by

  """"""
  permissions: order_by

  """"""
  tenants_id: order_by
}

"""aggregate min on columns"""
type authentication_keys_min_fields {
  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  meta_data: String

  """"""
  permissions: String

  """"""
  tenants_id: uuid
}

"""
order by min() on columns of table "authentication_keys"
"""
input authentication_keys_min_order_by {
  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  meta_data: order_by

  """"""
  permissions: order_by

  """"""
  tenants_id: order_by
}

"""
response of any mutation on the table "authentication_keys"
"""
type authentication_keys_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [authentication_keys!]!
}

"""
on conflict condition type for table "authentication_keys"
"""
input authentication_keys_on_conflict {
  """"""
  constraint: authentication_keys_constraint!

  """"""
  update_columns: [authentication_keys_update_column!]!

  """"""
  where: authentication_keys_bool_exp
}

"""Ordering options when selecting data from "authentication_keys"."""
input authentication_keys_order_by {
  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  meta_data: order_by

  """"""
  permissions: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by
}

"""primary key columns input for table: authentication_keys"""
input authentication_keys_pk_columns_input {
  """"""
  id: String!
}

"""
select columns of table "authentication_keys"
"""
enum authentication_keys_select_column {
  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  meta_data

  """column name"""
  permissions

  """column name"""
  tenants_id
}

"""
input type for updating data in table "authentication_keys"
"""
input authentication_keys_set_input {
  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  meta_data: String

  """"""
  permissions: String

  """"""
  tenants_id: uuid
}

"""aggregate stddev on columns"""
type authentication_keys_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "authentication_keys"
"""
input authentication_keys_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type authentication_keys_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "authentication_keys"
"""
input authentication_keys_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type authentication_keys_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "authentication_keys"
"""
input authentication_keys_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type authentication_keys_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "authentication_keys"
"""
input authentication_keys_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "authentication_keys"
"""
enum authentication_keys_update_column {
  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  meta_data

  """column name"""
  permissions

  """column name"""
  tenants_id
}

"""aggregate var_pop on columns"""
type authentication_keys_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "authentication_keys"
"""
input authentication_keys_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type authentication_keys_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "authentication_keys"
"""
input authentication_keys_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type authentication_keys_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "authentication_keys"
"""
input authentication_keys_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

scalar bpchar

"""
Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'.
"""
input bpchar_comparison_exp {
  """"""
  _eq: bpchar

  """"""
  _gt: bpchar

  """"""
  _gte: bpchar

  """does the column match the given case-insensitive pattern"""
  _ilike: bpchar

  """"""
  _in: [bpchar!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: bpchar

  """"""
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: bpchar

  """"""
  _lt: bpchar

  """"""
  _lte: bpchar

  """"""
  _neq: bpchar

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: bpchar

  """"""
  _nin: [bpchar!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: bpchar

  """does the column NOT match the given pattern"""
  _nlike: bpchar

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: bpchar

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: bpchar

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: bpchar

  """does the column match the given SQL regular expression"""
  _similar: bpchar
}

"""
columns and relationships of "breached_password_metrics"
"""
type breached_password_metrics {
  """"""
  matched_common_password_count: Int!

  """"""
  matched_exact_count: Int!

  """"""
  matched_password_count: Int!

  """"""
  matched_sub_address_count: Int!

  """"""
  passwords_checked_count: Int!

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!
}

"""
aggregated selection of "breached_password_metrics"
"""
type breached_password_metrics_aggregate {
  """"""
  aggregate: breached_password_metrics_aggregate_fields

  """"""
  nodes: [breached_password_metrics!]!
}

"""
aggregate fields of "breached_password_metrics"
"""
type breached_password_metrics_aggregate_fields {
  """"""
  avg: breached_password_metrics_avg_fields

  """"""
  count(columns: [breached_password_metrics_select_column!], distinct: Boolean): Int!

  """"""
  max: breached_password_metrics_max_fields

  """"""
  min: breached_password_metrics_min_fields

  """"""
  stddev: breached_password_metrics_stddev_fields

  """"""
  stddev_pop: breached_password_metrics_stddev_pop_fields

  """"""
  stddev_samp: breached_password_metrics_stddev_samp_fields

  """"""
  sum: breached_password_metrics_sum_fields

  """"""
  var_pop: breached_password_metrics_var_pop_fields

  """"""
  var_samp: breached_password_metrics_var_samp_fields

  """"""
  variance: breached_password_metrics_variance_fields
}

"""
order by aggregate values of table "breached_password_metrics"
"""
input breached_password_metrics_aggregate_order_by {
  """"""
  avg: breached_password_metrics_avg_order_by

  """"""
  count: order_by

  """"""
  max: breached_password_metrics_max_order_by

  """"""
  min: breached_password_metrics_min_order_by

  """"""
  stddev: breached_password_metrics_stddev_order_by

  """"""
  stddev_pop: breached_password_metrics_stddev_pop_order_by

  """"""
  stddev_samp: breached_password_metrics_stddev_samp_order_by

  """"""
  sum: breached_password_metrics_sum_order_by

  """"""
  var_pop: breached_password_metrics_var_pop_order_by

  """"""
  var_samp: breached_password_metrics_var_samp_order_by

  """"""
  variance: breached_password_metrics_variance_order_by
}

"""
input type for inserting array relation for remote table "breached_password_metrics"
"""
input breached_password_metrics_arr_rel_insert_input {
  """"""
  data: [breached_password_metrics_insert_input!]!

  """on conflict condition"""
  on_conflict: breached_password_metrics_on_conflict
}

"""aggregate avg on columns"""
type breached_password_metrics_avg_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by avg() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_avg_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""
Boolean expression to filter rows from the table "breached_password_metrics". All fields are combined with a logical 'AND'.
"""
input breached_password_metrics_bool_exp {
  """"""
  _and: [breached_password_metrics_bool_exp!]

  """"""
  _not: breached_password_metrics_bool_exp

  """"""
  _or: [breached_password_metrics_bool_exp!]

  """"""
  matched_common_password_count: Int_comparison_exp

  """"""
  matched_exact_count: Int_comparison_exp

  """"""
  matched_password_count: Int_comparison_exp

  """"""
  matched_sub_address_count: Int_comparison_exp

  """"""
  passwords_checked_count: Int_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "breached_password_metrics"
"""
enum breached_password_metrics_constraint {
  """unique or primary key constraint"""
  breached_password_metrics_pkey
}

"""
input type for incrementing numeric columns in table "breached_password_metrics"
"""
input breached_password_metrics_inc_input {
  """"""
  matched_common_password_count: Int

  """"""
  matched_exact_count: Int

  """"""
  matched_password_count: Int

  """"""
  matched_sub_address_count: Int

  """"""
  passwords_checked_count: Int
}

"""
input type for inserting data into table "breached_password_metrics"
"""
input breached_password_metrics_insert_input {
  """"""
  matched_common_password_count: Int

  """"""
  matched_exact_count: Int

  """"""
  matched_password_count: Int

  """"""
  matched_sub_address_count: Int

  """"""
  passwords_checked_count: Int

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid
}

"""aggregate max on columns"""
type breached_password_metrics_max_fields {
  """"""
  matched_common_password_count: Int

  """"""
  matched_exact_count: Int

  """"""
  matched_password_count: Int

  """"""
  matched_sub_address_count: Int

  """"""
  passwords_checked_count: Int

  """"""
  tenants_id: uuid
}

"""
order by max() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_max_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by

  """"""
  tenants_id: order_by
}

"""aggregate min on columns"""
type breached_password_metrics_min_fields {
  """"""
  matched_common_password_count: Int

  """"""
  matched_exact_count: Int

  """"""
  matched_password_count: Int

  """"""
  matched_sub_address_count: Int

  """"""
  passwords_checked_count: Int

  """"""
  tenants_id: uuid
}

"""
order by min() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_min_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by

  """"""
  tenants_id: order_by
}

"""
response of any mutation on the table "breached_password_metrics"
"""
type breached_password_metrics_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [breached_password_metrics!]!
}

"""
on conflict condition type for table "breached_password_metrics"
"""
input breached_password_metrics_on_conflict {
  """"""
  constraint: breached_password_metrics_constraint!

  """"""
  update_columns: [breached_password_metrics_update_column!]!

  """"""
  where: breached_password_metrics_bool_exp
}

"""Ordering options when selecting data from "breached_password_metrics"."""
input breached_password_metrics_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by
}

"""primary key columns input for table: breached_password_metrics"""
input breached_password_metrics_pk_columns_input {
  """"""
  tenants_id: uuid!
}

"""
select columns of table "breached_password_metrics"
"""
enum breached_password_metrics_select_column {
  """column name"""
  matched_common_password_count

  """column name"""
  matched_exact_count

  """column name"""
  matched_password_count

  """column name"""
  matched_sub_address_count

  """column name"""
  passwords_checked_count

  """column name"""
  tenants_id
}

"""
input type for updating data in table "breached_password_metrics"
"""
input breached_password_metrics_set_input {
  """"""
  matched_common_password_count: Int

  """"""
  matched_exact_count: Int

  """"""
  matched_password_count: Int

  """"""
  matched_sub_address_count: Int

  """"""
  passwords_checked_count: Int

  """"""
  tenants_id: uuid
}

"""aggregate stddev on columns"""
type breached_password_metrics_stddev_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by stddev() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_stddev_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""aggregate stddev_pop on columns"""
type breached_password_metrics_stddev_pop_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by stddev_pop() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_stddev_pop_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""aggregate stddev_samp on columns"""
type breached_password_metrics_stddev_samp_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by stddev_samp() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_stddev_samp_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""aggregate sum on columns"""
type breached_password_metrics_sum_fields {
  """"""
  matched_common_password_count: Int

  """"""
  matched_exact_count: Int

  """"""
  matched_password_count: Int

  """"""
  matched_sub_address_count: Int

  """"""
  passwords_checked_count: Int
}

"""
order by sum() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_sum_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""
update columns of table "breached_password_metrics"
"""
enum breached_password_metrics_update_column {
  """column name"""
  matched_common_password_count

  """column name"""
  matched_exact_count

  """column name"""
  matched_password_count

  """column name"""
  matched_sub_address_count

  """column name"""
  passwords_checked_count

  """column name"""
  tenants_id
}

"""aggregate var_pop on columns"""
type breached_password_metrics_var_pop_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by var_pop() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_var_pop_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""aggregate var_samp on columns"""
type breached_password_metrics_var_samp_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by var_samp() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_var_samp_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""aggregate variance on columns"""
type breached_password_metrics_variance_fields {
  """"""
  matched_common_password_count: Float

  """"""
  matched_exact_count: Float

  """"""
  matched_password_count: Float

  """"""
  matched_sub_address_count: Float

  """"""
  passwords_checked_count: Float
}

"""
order by variance() on columns of table "breached_password_metrics"
"""
input breached_password_metrics_variance_order_by {
  """"""
  matched_common_password_count: order_by

  """"""
  matched_exact_count: order_by

  """"""
  matched_password_count: order_by

  """"""
  matched_sub_address_count: order_by

  """"""
  passwords_checked_count: order_by
}

"""
columns and relationships of "bucketwiseenrolment"
"""
type bucketwiseenrolment {
  Strength_Bucket: String
  bucket: Int
  count: bigint
}

"""
aggregated selection of "bucketwiseenrolment"
"""
type bucketwiseenrolment_aggregate {
  aggregate: bucketwiseenrolment_aggregate_fields
  nodes: [bucketwiseenrolment!]!
}

"""
aggregate fields of "bucketwiseenrolment"
"""
type bucketwiseenrolment_aggregate_fields {
  avg: bucketwiseenrolment_avg_fields
  count(columns: [bucketwiseenrolment_select_column!], distinct: Boolean): Int!
  max: bucketwiseenrolment_max_fields
  min: bucketwiseenrolment_min_fields
  stddev: bucketwiseenrolment_stddev_fields
  stddev_pop: bucketwiseenrolment_stddev_pop_fields
  stddev_samp: bucketwiseenrolment_stddev_samp_fields
  sum: bucketwiseenrolment_sum_fields
  var_pop: bucketwiseenrolment_var_pop_fields
  var_samp: bucketwiseenrolment_var_samp_fields
  variance: bucketwiseenrolment_variance_fields
}

"""aggregate avg on columns"""
type bucketwiseenrolment_avg_fields {
  bucket: Float
  count: Float
}

"""
Boolean expression to filter rows from the table "bucketwiseenrolment". All fields are combined with a logical 'AND'.
"""
input bucketwiseenrolment_bool_exp {
  Strength_Bucket: String_comparison_exp
  _and: [bucketwiseenrolment_bool_exp!]
  _not: bucketwiseenrolment_bool_exp
  _or: [bucketwiseenrolment_bool_exp!]
  bucket: Int_comparison_exp
  count: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "bucketwiseenrolment"
"""
input bucketwiseenrolment_inc_input {
  bucket: Int
  count: bigint
}

"""
input type for inserting data into table "bucketwiseenrolment"
"""
input bucketwiseenrolment_insert_input {
  Strength_Bucket: String
  bucket: Int
  count: bigint
}

"""aggregate max on columns"""
type bucketwiseenrolment_max_fields {
  Strength_Bucket: String
  bucket: Int
  count: bigint
}

"""aggregate min on columns"""
type bucketwiseenrolment_min_fields {
  Strength_Bucket: String
  bucket: Int
  count: bigint
}

"""
response of any mutation on the table "bucketwiseenrolment"
"""
type bucketwiseenrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [bucketwiseenrolment!]!
}

"""Ordering options when selecting data from "bucketwiseenrolment"."""
input bucketwiseenrolment_order_by {
  Strength_Bucket: order_by
  bucket: order_by
  count: order_by
}

"""
select columns of table "bucketwiseenrolment"
"""
enum bucketwiseenrolment_select_column {
  """column name"""
  Strength_Bucket

  """column name"""
  bucket

  """column name"""
  count
}

"""
input type for updating data in table "bucketwiseenrolment"
"""
input bucketwiseenrolment_set_input {
  Strength_Bucket: String
  bucket: Int
  count: bigint
}

"""aggregate stddev on columns"""
type bucketwiseenrolment_stddev_fields {
  bucket: Float
  count: Float
}

"""aggregate stddev_pop on columns"""
type bucketwiseenrolment_stddev_pop_fields {
  bucket: Float
  count: Float
}

"""aggregate stddev_samp on columns"""
type bucketwiseenrolment_stddev_samp_fields {
  bucket: Float
  count: Float
}

"""aggregate sum on columns"""
type bucketwiseenrolment_sum_fields {
  bucket: Int
  count: bigint
}

"""aggregate var_pop on columns"""
type bucketwiseenrolment_var_pop_fields {
  bucket: Float
  count: Float
}

"""aggregate var_samp on columns"""
type bucketwiseenrolment_var_samp_fields {
  bucket: Float
  count: Float
}

"""aggregate variance on columns"""
type bucketwiseenrolment_variance_fields {
  bucket: Float
  count: Float
}

scalar bytea

"""
Boolean expression to compare columns of type "bytea". All fields are combined with logical 'AND'.
"""
input bytea_comparison_exp {
  _eq: bytea
  _gt: bytea
  _gte: bytea
  _in: [bytea!]
  _is_null: Boolean
  _lt: bytea
  _lte: bytea
  _neq: bytea
  _nin: [bytea!]
}

"""
columns and relationships of "cdac_sms_input"
"""
type cdac_sms_input {
  body: String!
  id: Int!
  mobileNumber: String!
  status: String!
  templateId: String!
}

"""
aggregated selection of "cdac_sms_input"
"""
type cdac_sms_input_aggregate {
  aggregate: cdac_sms_input_aggregate_fields
  nodes: [cdac_sms_input!]!
}

"""
aggregate fields of "cdac_sms_input"
"""
type cdac_sms_input_aggregate_fields {
  avg: cdac_sms_input_avg_fields
  count(columns: [cdac_sms_input_select_column!], distinct: Boolean): Int!
  max: cdac_sms_input_max_fields
  min: cdac_sms_input_min_fields
  stddev: cdac_sms_input_stddev_fields
  stddev_pop: cdac_sms_input_stddev_pop_fields
  stddev_samp: cdac_sms_input_stddev_samp_fields
  sum: cdac_sms_input_sum_fields
  var_pop: cdac_sms_input_var_pop_fields
  var_samp: cdac_sms_input_var_samp_fields
  variance: cdac_sms_input_variance_fields
}

"""aggregate avg on columns"""
type cdac_sms_input_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "cdac_sms_input". All fields are combined with a logical 'AND'.
"""
input cdac_sms_input_bool_exp {
  _and: [cdac_sms_input_bool_exp!]
  _not: cdac_sms_input_bool_exp
  _or: [cdac_sms_input_bool_exp!]
  body: String_comparison_exp
  id: Int_comparison_exp
  mobileNumber: String_comparison_exp
  status: String_comparison_exp
  templateId: String_comparison_exp
}

"""
unique or primary key constraints on table "cdac_sms_input"
"""
enum cdac_sms_input_constraint {
  """unique or primary key constraint"""
  cdac_sms_input_pkey
}

"""
input type for incrementing numeric columns in table "cdac_sms_input"
"""
input cdac_sms_input_inc_input {
  id: Int
}

"""
input type for inserting data into table "cdac_sms_input"
"""
input cdac_sms_input_insert_input {
  body: String
  id: Int
  mobileNumber: String
  status: String
  templateId: String
}

"""aggregate max on columns"""
type cdac_sms_input_max_fields {
  body: String
  id: Int
  mobileNumber: String
  status: String
  templateId: String
}

"""aggregate min on columns"""
type cdac_sms_input_min_fields {
  body: String
  id: Int
  mobileNumber: String
  status: String
  templateId: String
}

"""
response of any mutation on the table "cdac_sms_input"
"""
type cdac_sms_input_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [cdac_sms_input!]!
}

"""
on conflict condition type for table "cdac_sms_input"
"""
input cdac_sms_input_on_conflict {
  constraint: cdac_sms_input_constraint!
  update_columns: [cdac_sms_input_update_column!]! = []
  where: cdac_sms_input_bool_exp
}

"""Ordering options when selecting data from "cdac_sms_input"."""
input cdac_sms_input_order_by {
  body: order_by
  id: order_by
  mobileNumber: order_by
  status: order_by
  templateId: order_by
}

"""primary key columns input for table: cdac_sms_input"""
input cdac_sms_input_pk_columns_input {
  id: Int!
}

"""
select columns of table "cdac_sms_input"
"""
enum cdac_sms_input_select_column {
  """column name"""
  body

  """column name"""
  id

  """column name"""
  mobileNumber

  """column name"""
  status

  """column name"""
  templateId
}

"""
input type for updating data in table "cdac_sms_input"
"""
input cdac_sms_input_set_input {
  body: String
  id: Int
  mobileNumber: String
  status: String
  templateId: String
}

"""aggregate stddev on columns"""
type cdac_sms_input_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type cdac_sms_input_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type cdac_sms_input_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type cdac_sms_input_sum_fields {
  id: Int
}

"""
update columns of table "cdac_sms_input"
"""
enum cdac_sms_input_update_column {
  """column name"""
  body

  """column name"""
  id

  """column name"""
  mobileNumber

  """column name"""
  status

  """column name"""
  templateId
}

"""aggregate var_pop on columns"""
type cdac_sms_input_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type cdac_sms_input_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type cdac_sms_input_variance_fields {
  id: Float
}

"""
columns and relationships of "celery_duplicate_remove"
"""
type celery_duplicate_remove {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  created: timestamptz
  id: Int!

  """An object relationship"""
  school: school!
  school_id: Int!
  status: String!
  task_type: Int!
  updated: timestamptz
}

"""
aggregated selection of "celery_duplicate_remove"
"""
type celery_duplicate_remove_aggregate {
  aggregate: celery_duplicate_remove_aggregate_fields
  nodes: [celery_duplicate_remove!]!
}

"""
aggregate fields of "celery_duplicate_remove"
"""
type celery_duplicate_remove_aggregate_fields {
  avg: celery_duplicate_remove_avg_fields
  count(columns: [celery_duplicate_remove_select_column!], distinct: Boolean): Int!
  max: celery_duplicate_remove_max_fields
  min: celery_duplicate_remove_min_fields
  stddev: celery_duplicate_remove_stddev_fields
  stddev_pop: celery_duplicate_remove_stddev_pop_fields
  stddev_samp: celery_duplicate_remove_stddev_samp_fields
  sum: celery_duplicate_remove_sum_fields
  var_pop: celery_duplicate_remove_var_pop_fields
  var_samp: celery_duplicate_remove_var_samp_fields
  variance: celery_duplicate_remove_variance_fields
}

"""
order by aggregate values of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_aggregate_order_by {
  avg: celery_duplicate_remove_avg_order_by
  count: order_by
  max: celery_duplicate_remove_max_order_by
  min: celery_duplicate_remove_min_order_by
  stddev: celery_duplicate_remove_stddev_order_by
  stddev_pop: celery_duplicate_remove_stddev_pop_order_by
  stddev_samp: celery_duplicate_remove_stddev_samp_order_by
  sum: celery_duplicate_remove_sum_order_by
  var_pop: celery_duplicate_remove_var_pop_order_by
  var_samp: celery_duplicate_remove_var_samp_order_by
  variance: celery_duplicate_remove_variance_order_by
}

"""
input type for inserting array relation for remote table "celery_duplicate_remove"
"""
input celery_duplicate_remove_arr_rel_insert_input {
  data: [celery_duplicate_remove_insert_input!]!

  """on conflict condition"""
  on_conflict: celery_duplicate_remove_on_conflict
}

"""aggregate avg on columns"""
type celery_duplicate_remove_avg_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by avg() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_avg_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""
Boolean expression to filter rows from the table "celery_duplicate_remove". All fields are combined with a logical 'AND'.
"""
input celery_duplicate_remove_bool_exp {
  _and: [celery_duplicate_remove_bool_exp!]
  _not: celery_duplicate_remove_bool_exp
  _or: [celery_duplicate_remove_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  task_type: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "celery_duplicate_remove"
"""
enum celery_duplicate_remove_constraint {
  """unique or primary key constraint"""
  server_celeryduplicatere_school_id_assessment_id_df78e671_uniq

  """unique or primary key constraint"""
  server_celeryduplicateremove_pkey
}

"""
input type for incrementing numeric columns in table "celery_duplicate_remove"
"""
input celery_duplicate_remove_inc_input {
  assessment_id: Int
  id: Int
  school_id: Int
  task_type: Int
}

"""
input type for inserting data into table "celery_duplicate_remove"
"""
input celery_duplicate_remove_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  status: String
  task_type: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type celery_duplicate_remove_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  status: String
  task_type: Int
  updated: timestamptz
}

"""
order by max() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  status: order_by
  task_type: order_by
  updated: order_by
}

"""aggregate min on columns"""
type celery_duplicate_remove_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  status: String
  task_type: Int
  updated: timestamptz
}

"""
order by min() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  status: order_by
  task_type: order_by
  updated: order_by
}

"""
response of any mutation on the table "celery_duplicate_remove"
"""
type celery_duplicate_remove_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [celery_duplicate_remove!]!
}

"""
on conflict condition type for table "celery_duplicate_remove"
"""
input celery_duplicate_remove_on_conflict {
  constraint: celery_duplicate_remove_constraint!
  update_columns: [celery_duplicate_remove_update_column!]! = []
  where: celery_duplicate_remove_bool_exp
}

"""Ordering options when selecting data from "celery_duplicate_remove"."""
input celery_duplicate_remove_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  created: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  status: order_by
  task_type: order_by
  updated: order_by
}

"""primary key columns input for table: celery_duplicate_remove"""
input celery_duplicate_remove_pk_columns_input {
  assessment_id: Int!
  school_id: Int!
}

"""
select columns of table "celery_duplicate_remove"
"""
enum celery_duplicate_remove_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  task_type

  """column name"""
  updated
}

"""
input type for updating data in table "celery_duplicate_remove"
"""
input celery_duplicate_remove_set_input {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  status: String
  task_type: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type celery_duplicate_remove_stddev_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by stddev() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_stddev_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""aggregate stddev_pop on columns"""
type celery_duplicate_remove_stddev_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by stddev_pop() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""aggregate stddev_samp on columns"""
type celery_duplicate_remove_stddev_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by stddev_samp() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""aggregate sum on columns"""
type celery_duplicate_remove_sum_fields {
  assessment_id: Int
  id: Int
  school_id: Int
  task_type: Int
}

"""
order by sum() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_sum_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""
update columns of table "celery_duplicate_remove"
"""
enum celery_duplicate_remove_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  task_type

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type celery_duplicate_remove_var_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by var_pop() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""aggregate var_samp on columns"""
type celery_duplicate_remove_var_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by var_samp() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""aggregate variance on columns"""
type celery_duplicate_remove_variance_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  task_type: Float
}

"""
order by variance() on columns of table "celery_duplicate_remove"
"""
input celery_duplicate_remove_variance_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  task_type: order_by
}

"""
columns and relationships of "cg_hp_teacher_data"
"""
type cg_hp_teacher_data {
  UDISE: Int
  block: String
  district: String
  medium: String
  mobile: String
  name: String
  school: String
}

"""
aggregated selection of "cg_hp_teacher_data"
"""
type cg_hp_teacher_data_aggregate {
  aggregate: cg_hp_teacher_data_aggregate_fields
  nodes: [cg_hp_teacher_data!]!
}

"""
aggregate fields of "cg_hp_teacher_data"
"""
type cg_hp_teacher_data_aggregate_fields {
  avg: cg_hp_teacher_data_avg_fields
  count(columns: [cg_hp_teacher_data_select_column!], distinct: Boolean): Int!
  max: cg_hp_teacher_data_max_fields
  min: cg_hp_teacher_data_min_fields
  stddev: cg_hp_teacher_data_stddev_fields
  stddev_pop: cg_hp_teacher_data_stddev_pop_fields
  stddev_samp: cg_hp_teacher_data_stddev_samp_fields
  sum: cg_hp_teacher_data_sum_fields
  var_pop: cg_hp_teacher_data_var_pop_fields
  var_samp: cg_hp_teacher_data_var_samp_fields
  variance: cg_hp_teacher_data_variance_fields
}

"""aggregate avg on columns"""
type cg_hp_teacher_data_avg_fields {
  UDISE: Float
}

"""
Boolean expression to filter rows from the table "cg_hp_teacher_data". All fields are combined with a logical 'AND'.
"""
input cg_hp_teacher_data_bool_exp {
  UDISE: Int_comparison_exp
  _and: [cg_hp_teacher_data_bool_exp!]
  _not: cg_hp_teacher_data_bool_exp
  _or: [cg_hp_teacher_data_bool_exp!]
  block: String_comparison_exp
  district: String_comparison_exp
  medium: String_comparison_exp
  mobile: String_comparison_exp
  name: String_comparison_exp
  school: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "cg_hp_teacher_data"
"""
input cg_hp_teacher_data_inc_input {
  UDISE: Int
}

"""
input type for inserting data into table "cg_hp_teacher_data"
"""
input cg_hp_teacher_data_insert_input {
  UDISE: Int
  block: String
  district: String
  medium: String
  mobile: String
  name: String
  school: String
}

"""aggregate max on columns"""
type cg_hp_teacher_data_max_fields {
  UDISE: Int
  block: String
  district: String
  medium: String
  mobile: String
  name: String
  school: String
}

"""aggregate min on columns"""
type cg_hp_teacher_data_min_fields {
  UDISE: Int
  block: String
  district: String
  medium: String
  mobile: String
  name: String
  school: String
}

"""
response of any mutation on the table "cg_hp_teacher_data"
"""
type cg_hp_teacher_data_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [cg_hp_teacher_data!]!
}

"""Ordering options when selecting data from "cg_hp_teacher_data"."""
input cg_hp_teacher_data_order_by {
  UDISE: order_by
  block: order_by
  district: order_by
  medium: order_by
  mobile: order_by
  name: order_by
  school: order_by
}

"""
select columns of table "cg_hp_teacher_data"
"""
enum cg_hp_teacher_data_select_column {
  """column name"""
  UDISE

  """column name"""
  block

  """column name"""
  district

  """column name"""
  medium

  """column name"""
  mobile

  """column name"""
  name

  """column name"""
  school
}

"""
input type for updating data in table "cg_hp_teacher_data"
"""
input cg_hp_teacher_data_set_input {
  UDISE: Int
  block: String
  district: String
  medium: String
  mobile: String
  name: String
  school: String
}

"""aggregate stddev on columns"""
type cg_hp_teacher_data_stddev_fields {
  UDISE: Float
}

"""aggregate stddev_pop on columns"""
type cg_hp_teacher_data_stddev_pop_fields {
  UDISE: Float
}

"""aggregate stddev_samp on columns"""
type cg_hp_teacher_data_stddev_samp_fields {
  UDISE: Float
}

"""aggregate sum on columns"""
type cg_hp_teacher_data_sum_fields {
  UDISE: Int
}

"""aggregate var_pop on columns"""
type cg_hp_teacher_data_var_pop_fields {
  UDISE: Float
}

"""aggregate var_samp on columns"""
type cg_hp_teacher_data_var_samp_fields {
  UDISE: Float
}

"""aggregate variance on columns"""
type cg_hp_teacher_data_variance_fields {
  UDISE: Float
}

"""
columns and relationships of "cg_to_state_list"
"""
type cg_to_state_list {
  CG_LO_Code: String
  CG_LO_Description: String
  CG_LO_Statement: String
  CG_LO_Topic: String
  Grade: Int
  State_LO_Code: String
  State_LO_Code1: String
  Subject: String
}

"""
aggregated selection of "cg_to_state_list"
"""
type cg_to_state_list_aggregate {
  aggregate: cg_to_state_list_aggregate_fields
  nodes: [cg_to_state_list!]!
}

"""
aggregate fields of "cg_to_state_list"
"""
type cg_to_state_list_aggregate_fields {
  avg: cg_to_state_list_avg_fields
  count(columns: [cg_to_state_list_select_column!], distinct: Boolean): Int!
  max: cg_to_state_list_max_fields
  min: cg_to_state_list_min_fields
  stddev: cg_to_state_list_stddev_fields
  stddev_pop: cg_to_state_list_stddev_pop_fields
  stddev_samp: cg_to_state_list_stddev_samp_fields
  sum: cg_to_state_list_sum_fields
  var_pop: cg_to_state_list_var_pop_fields
  var_samp: cg_to_state_list_var_samp_fields
  variance: cg_to_state_list_variance_fields
}

"""aggregate avg on columns"""
type cg_to_state_list_avg_fields {
  Grade: Float
}

"""
Boolean expression to filter rows from the table "cg_to_state_list". All fields are combined with a logical 'AND'.
"""
input cg_to_state_list_bool_exp {
  CG_LO_Code: String_comparison_exp
  CG_LO_Description: String_comparison_exp
  CG_LO_Statement: String_comparison_exp
  CG_LO_Topic: String_comparison_exp
  Grade: Int_comparison_exp
  State_LO_Code: String_comparison_exp
  State_LO_Code1: String_comparison_exp
  Subject: String_comparison_exp
  _and: [cg_to_state_list_bool_exp!]
  _not: cg_to_state_list_bool_exp
  _or: [cg_to_state_list_bool_exp!]
}

"""
input type for incrementing numeric columns in table "cg_to_state_list"
"""
input cg_to_state_list_inc_input {
  Grade: Int
}

"""
input type for inserting data into table "cg_to_state_list"
"""
input cg_to_state_list_insert_input {
  CG_LO_Code: String
  CG_LO_Description: String
  CG_LO_Statement: String
  CG_LO_Topic: String
  Grade: Int
  State_LO_Code: String
  State_LO_Code1: String
  Subject: String
}

"""aggregate max on columns"""
type cg_to_state_list_max_fields {
  CG_LO_Code: String
  CG_LO_Description: String
  CG_LO_Statement: String
  CG_LO_Topic: String
  Grade: Int
  State_LO_Code: String
  State_LO_Code1: String
  Subject: String
}

"""aggregate min on columns"""
type cg_to_state_list_min_fields {
  CG_LO_Code: String
  CG_LO_Description: String
  CG_LO_Statement: String
  CG_LO_Topic: String
  Grade: Int
  State_LO_Code: String
  State_LO_Code1: String
  Subject: String
}

"""
response of any mutation on the table "cg_to_state_list"
"""
type cg_to_state_list_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [cg_to_state_list!]!
}

"""Ordering options when selecting data from "cg_to_state_list"."""
input cg_to_state_list_order_by {
  CG_LO_Code: order_by
  CG_LO_Description: order_by
  CG_LO_Statement: order_by
  CG_LO_Topic: order_by
  Grade: order_by
  State_LO_Code: order_by
  State_LO_Code1: order_by
  Subject: order_by
}

"""
select columns of table "cg_to_state_list"
"""
enum cg_to_state_list_select_column {
  """column name"""
  CG_LO_Code

  """column name"""
  CG_LO_Description

  """column name"""
  CG_LO_Statement

  """column name"""
  CG_LO_Topic

  """column name"""
  Grade

  """column name"""
  State_LO_Code

  """column name"""
  State_LO_Code1

  """column name"""
  Subject
}

"""
input type for updating data in table "cg_to_state_list"
"""
input cg_to_state_list_set_input {
  CG_LO_Code: String
  CG_LO_Description: String
  CG_LO_Statement: String
  CG_LO_Topic: String
  Grade: Int
  State_LO_Code: String
  State_LO_Code1: String
  Subject: String
}

"""aggregate stddev on columns"""
type cg_to_state_list_stddev_fields {
  Grade: Float
}

"""aggregate stddev_pop on columns"""
type cg_to_state_list_stddev_pop_fields {
  Grade: Float
}

"""aggregate stddev_samp on columns"""
type cg_to_state_list_stddev_samp_fields {
  Grade: Float
}

"""aggregate sum on columns"""
type cg_to_state_list_sum_fields {
  Grade: Int
}

"""aggregate var_pop on columns"""
type cg_to_state_list_var_pop_fields {
  Grade: Float
}

"""aggregate var_samp on columns"""
type cg_to_state_list_var_samp_fields {
  Grade: Float
}

"""aggregate variance on columns"""
type cg_to_state_list_variance_fields {
  Grade: Float
}

"""
columns and relationships of "class_level_component_submission"
"""
type class_level_component_submission {
  """An object relationship"""
  assessment: assessment
  assessment_id: Int

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!
  created: timestamptz
  id: Int!

  """An object relationship"""
  school: school
  school_id: Int
  students_cleared: Int!

  """An object relationship"""
  subject: subject
  subject_id: Int
  total_students_present: Int!
  updated: timestamptz
}

"""
aggregated selection of "class_level_component_submission"
"""
type class_level_component_submission_aggregate {
  aggregate: class_level_component_submission_aggregate_fields
  nodes: [class_level_component_submission!]!
}

"""
aggregate fields of "class_level_component_submission"
"""
type class_level_component_submission_aggregate_fields {
  avg: class_level_component_submission_avg_fields
  count(columns: [class_level_component_submission_select_column!], distinct: Boolean): Int!
  max: class_level_component_submission_max_fields
  min: class_level_component_submission_min_fields
  stddev: class_level_component_submission_stddev_fields
  stddev_pop: class_level_component_submission_stddev_pop_fields
  stddev_samp: class_level_component_submission_stddev_samp_fields
  sum: class_level_component_submission_sum_fields
  var_pop: class_level_component_submission_var_pop_fields
  var_samp: class_level_component_submission_var_samp_fields
  variance: class_level_component_submission_variance_fields
}

"""
order by aggregate values of table "class_level_component_submission"
"""
input class_level_component_submission_aggregate_order_by {
  avg: class_level_component_submission_avg_order_by
  count: order_by
  max: class_level_component_submission_max_order_by
  min: class_level_component_submission_min_order_by
  stddev: class_level_component_submission_stddev_order_by
  stddev_pop: class_level_component_submission_stddev_pop_order_by
  stddev_samp: class_level_component_submission_stddev_samp_order_by
  sum: class_level_component_submission_sum_order_by
  var_pop: class_level_component_submission_var_pop_order_by
  var_samp: class_level_component_submission_var_samp_order_by
  variance: class_level_component_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "class_level_component_submission"
"""
input class_level_component_submission_arr_rel_insert_input {
  data: [class_level_component_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: class_level_component_submission_on_conflict
}

"""aggregate avg on columns"""
type class_level_component_submission_avg_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by avg() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_avg_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""
Boolean expression to filter rows from the table "class_level_component_submission". All fields are combined with a logical 'AND'.
"""
input class_level_component_submission_bool_exp {
  _and: [class_level_component_submission_bool_exp!]
  _not: class_level_component_submission_bool_exp
  _or: [class_level_component_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  class_submissions: class_submission_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  students_cleared: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  total_students_present: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "class_level_component_submission"
"""
enum class_level_component_submission_constraint {
  """unique or primary key constraint"""
  class_level_component_submission_pkey
}

"""
input type for incrementing numeric columns in table "class_level_component_submission"
"""
input class_level_component_submission_inc_input {
  assessment_id: Int
  id: Int
  school_id: Int
  students_cleared: Int
  subject_id: Int
  total_students_present: Int
}

"""
input type for inserting data into table "class_level_component_submission"
"""
input class_level_component_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  class_submissions: class_submission_arr_rel_insert_input
  created: timestamptz
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  students_cleared: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  total_students_present: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type class_level_component_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  students_cleared: Int
  subject_id: Int
  total_students_present: Int
  updated: timestamptz
}

"""
order by max() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
  updated: order_by
}

"""aggregate min on columns"""
type class_level_component_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  students_cleared: Int
  subject_id: Int
  total_students_present: Int
  updated: timestamptz
}

"""
order by min() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
  updated: order_by
}

"""
response of any mutation on the table "class_level_component_submission"
"""
type class_level_component_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [class_level_component_submission!]!
}

"""
input type for inserting object relation for remote table "class_level_component_submission"
"""
input class_level_component_submission_obj_rel_insert_input {
  data: class_level_component_submission_insert_input!

  """on conflict condition"""
  on_conflict: class_level_component_submission_on_conflict
}

"""
on conflict condition type for table "class_level_component_submission"
"""
input class_level_component_submission_on_conflict {
  constraint: class_level_component_submission_constraint!
  update_columns: [class_level_component_submission_update_column!]! = []
  where: class_level_component_submission_bool_exp
}

"""
Ordering options when selecting data from "class_level_component_submission".
"""
input class_level_component_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  created: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  students_cleared: order_by
  subject: subject_order_by
  subject_id: order_by
  total_students_present: order_by
  updated: order_by
}

"""primary key columns input for table: class_level_component_submission"""
input class_level_component_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "class_level_component_submission"
"""
enum class_level_component_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  subject_id

  """column name"""
  total_students_present

  """column name"""
  updated
}

"""
input type for updating data in table "class_level_component_submission"
"""
input class_level_component_submission_set_input {
  assessment_id: Int
  created: timestamptz
  id: Int
  school_id: Int
  students_cleared: Int
  subject_id: Int
  total_students_present: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type class_level_component_submission_stddev_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by stddev() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_stddev_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""aggregate stddev_pop on columns"""
type class_level_component_submission_stddev_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by stddev_pop() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""aggregate stddev_samp on columns"""
type class_level_component_submission_stddev_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by stddev_samp() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""aggregate sum on columns"""
type class_level_component_submission_sum_fields {
  assessment_id: Int
  id: Int
  school_id: Int
  students_cleared: Int
  subject_id: Int
  total_students_present: Int
}

"""
order by sum() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_sum_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""
update columns of table "class_level_component_submission"
"""
enum class_level_component_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  subject_id

  """column name"""
  total_students_present

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type class_level_component_submission_var_pop_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by var_pop() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""aggregate var_samp on columns"""
type class_level_component_submission_var_samp_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by var_samp() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""aggregate variance on columns"""
type class_level_component_submission_variance_fields {
  assessment_id: Float
  id: Float
  school_id: Float
  students_cleared: Float
  subject_id: Float
  total_students_present: Float
}

"""
order by variance() on columns of table "class_level_component_submission"
"""
input class_level_component_submission_variance_order_by {
  assessment_id: order_by
  id: order_by
  school_id: order_by
  students_cleared: order_by
  subject_id: order_by
  total_students_present: order_by
}

"""
columns and relationships of "class_submission"
"""
type class_submission {
  """An object relationship"""
  assessment: assessment
  assessment_id: Int
  au_type: String

  """An object relationship"""
  class_level_component_submission: class_level_component_submission
  created: timestamptz

  """An object relationship"""
  grade: grade
  grade_id: Int
  id: Int!
  lo_id: Int

  """An object relationship"""
  lo_v2: lo_v2
  question_id: Int

  """An object relationship"""
  question_v2: question_v2

  """An object relationship"""
  school: school
  school_id: Int

  """An object relationship"""
  subject: subject
  subject_id: Int
  submission_id: Int
  unit_id: Int

  """An object relationship"""
  unit_v2: unit_v2
  updated: timestamptz
}

"""
aggregated selection of "class_submission"
"""
type class_submission_aggregate {
  aggregate: class_submission_aggregate_fields
  nodes: [class_submission!]!
}

"""
aggregate fields of "class_submission"
"""
type class_submission_aggregate_fields {
  avg: class_submission_avg_fields
  count(columns: [class_submission_select_column!], distinct: Boolean): Int!
  max: class_submission_max_fields
  min: class_submission_min_fields
  stddev: class_submission_stddev_fields
  stddev_pop: class_submission_stddev_pop_fields
  stddev_samp: class_submission_stddev_samp_fields
  sum: class_submission_sum_fields
  var_pop: class_submission_var_pop_fields
  var_samp: class_submission_var_samp_fields
  variance: class_submission_variance_fields
}

"""
order by aggregate values of table "class_submission"
"""
input class_submission_aggregate_order_by {
  avg: class_submission_avg_order_by
  count: order_by
  max: class_submission_max_order_by
  min: class_submission_min_order_by
  stddev: class_submission_stddev_order_by
  stddev_pop: class_submission_stddev_pop_order_by
  stddev_samp: class_submission_stddev_samp_order_by
  sum: class_submission_sum_order_by
  var_pop: class_submission_var_pop_order_by
  var_samp: class_submission_var_samp_order_by
  variance: class_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "class_submission"
"""
input class_submission_arr_rel_insert_input {
  data: [class_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: class_submission_on_conflict
}

"""aggregate avg on columns"""
type class_submission_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by avg() on columns of table "class_submission"
"""
input class_submission_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""
Boolean expression to filter rows from the table "class_submission". All fields are combined with a logical 'AND'.
"""
input class_submission_bool_exp {
  _and: [class_submission_bool_exp!]
  _not: class_submission_bool_exp
  _or: [class_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  au_type: String_comparison_exp
  class_level_component_submission: class_level_component_submission_bool_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  lo_id: Int_comparison_exp
  lo_v2: lo_v2_bool_exp
  question_id: Int_comparison_exp
  question_v2: question_v2_bool_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  submission_id: Int_comparison_exp
  unit_id: Int_comparison_exp
  unit_v2: unit_v2_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "class_submission"
"""
enum class_submission_constraint {
  """unique or primary key constraint"""
  class_submission_pkey
}

"""
input type for incrementing numeric columns in table "class_submission"
"""
input class_submission_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
  lo_id: Int
  question_id: Int
  school_id: Int
  subject_id: Int
  submission_id: Int
  unit_id: Int
}

"""
input type for inserting data into table "class_submission"
"""
input class_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  au_type: String
  class_level_component_submission: class_level_component_submission_obj_rel_insert_input
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  lo_id: Int
  lo_v2: lo_v2_obj_rel_insert_input
  question_id: Int
  question_v2: question_v2_obj_rel_insert_input
  school: school_obj_rel_insert_input
  school_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  submission_id: Int
  unit_id: Int
  unit_v2: unit_v2_obj_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type class_submission_max_fields {
  assessment_id: Int
  au_type: String
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  question_id: Int
  school_id: Int
  subject_id: Int
  submission_id: Int
  unit_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "class_submission"
"""
input class_submission_max_order_by {
  assessment_id: order_by
  au_type: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type class_submission_min_fields {
  assessment_id: Int
  au_type: String
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  question_id: Int
  school_id: Int
  subject_id: Int
  submission_id: Int
  unit_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "class_submission"
"""
input class_submission_min_order_by {
  assessment_id: order_by
  au_type: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "class_submission"
"""
type class_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [class_submission!]!
}

"""
on conflict condition type for table "class_submission"
"""
input class_submission_on_conflict {
  constraint: class_submission_constraint!
  update_columns: [class_submission_update_column!]! = []
  where: class_submission_bool_exp
}

"""Ordering options when selecting data from "class_submission"."""
input class_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  au_type: order_by
  class_level_component_submission: class_level_component_submission_order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  lo_v2: lo_v2_order_by
  question_id: order_by
  question_v2: question_v2_order_by
  school: school_order_by
  school_id: order_by
  subject: subject_order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
  unit_v2: unit_v2_order_by
  updated: order_by
}

"""primary key columns input for table: class_submission"""
input class_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "class_submission"
"""
enum class_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  au_type

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  question_id

  """column name"""
  school_id

  """column name"""
  subject_id

  """column name"""
  submission_id

  """column name"""
  unit_id

  """column name"""
  updated
}

"""
input type for updating data in table "class_submission"
"""
input class_submission_set_input {
  assessment_id: Int
  au_type: String
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  question_id: Int
  school_id: Int
  subject_id: Int
  submission_id: Int
  unit_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type class_submission_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by stddev() on columns of table "class_submission"
"""
input class_submission_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""aggregate stddev_pop on columns"""
type class_submission_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by stddev_pop() on columns of table "class_submission"
"""
input class_submission_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""aggregate stddev_samp on columns"""
type class_submission_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by stddev_samp() on columns of table "class_submission"
"""
input class_submission_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""aggregate sum on columns"""
type class_submission_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
  lo_id: Int
  question_id: Int
  school_id: Int
  subject_id: Int
  submission_id: Int
  unit_id: Int
}

"""
order by sum() on columns of table "class_submission"
"""
input class_submission_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""
update columns of table "class_submission"
"""
enum class_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  au_type

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  question_id

  """column name"""
  school_id

  """column name"""
  subject_id

  """column name"""
  submission_id

  """column name"""
  unit_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type class_submission_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by var_pop() on columns of table "class_submission"
"""
input class_submission_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""aggregate var_samp on columns"""
type class_submission_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by var_samp() on columns of table "class_submission"
"""
input class_submission_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""aggregate variance on columns"""
type class_submission_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  question_id: Float
  school_id: Float
  subject_id: Float
  submission_id: Float
  unit_id: Float
}

"""
order by variance() on columns of table "class_submission"
"""
input class_submission_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  question_id: order_by
  school_id: order_by
  subject_id: order_by
  submission_id: order_by
  unit_id: order_by
}

"""
columns and relationships of "clean_speak_applications"
"""
type clean_speak_applications {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  clean_speak_application_id: uuid!
}

"""
aggregated selection of "clean_speak_applications"
"""
type clean_speak_applications_aggregate {
  """"""
  aggregate: clean_speak_applications_aggregate_fields

  """"""
  nodes: [clean_speak_applications!]!
}

"""
aggregate fields of "clean_speak_applications"
"""
type clean_speak_applications_aggregate_fields {
  """"""
  count(columns: [clean_speak_applications_select_column!], distinct: Boolean): Int!

  """"""
  max: clean_speak_applications_max_fields

  """"""
  min: clean_speak_applications_min_fields
}

"""
order by aggregate values of table "clean_speak_applications"
"""
input clean_speak_applications_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: clean_speak_applications_max_order_by

  """"""
  min: clean_speak_applications_min_order_by
}

"""
input type for inserting array relation for remote table "clean_speak_applications"
"""
input clean_speak_applications_arr_rel_insert_input {
  """"""
  data: [clean_speak_applications_insert_input!]!

  """on conflict condition"""
  on_conflict: clean_speak_applications_on_conflict
}

"""
Boolean expression to filter rows from the table "clean_speak_applications". All fields are combined with a logical 'AND'.
"""
input clean_speak_applications_bool_exp {
  """"""
  _and: [clean_speak_applications_bool_exp!]

  """"""
  _not: clean_speak_applications_bool_exp

  """"""
  _or: [clean_speak_applications_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  clean_speak_application_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "clean_speak_applications"
"""
enum clean_speak_applications_constraint {
  """unique or primary key constraint"""
  clean_speak_applications_uk_1
}

"""
input type for inserting data into table "clean_speak_applications"
"""
input clean_speak_applications_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  clean_speak_application_id: uuid
}

"""aggregate max on columns"""
type clean_speak_applications_max_fields {
  """"""
  applications_id: uuid

  """"""
  clean_speak_application_id: uuid
}

"""
order by max() on columns of table "clean_speak_applications"
"""
input clean_speak_applications_max_order_by {
  """"""
  applications_id: order_by

  """"""
  clean_speak_application_id: order_by
}

"""aggregate min on columns"""
type clean_speak_applications_min_fields {
  """"""
  applications_id: uuid

  """"""
  clean_speak_application_id: uuid
}

"""
order by min() on columns of table "clean_speak_applications"
"""
input clean_speak_applications_min_order_by {
  """"""
  applications_id: order_by

  """"""
  clean_speak_application_id: order_by
}

"""
response of any mutation on the table "clean_speak_applications"
"""
type clean_speak_applications_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [clean_speak_applications!]!
}

"""
on conflict condition type for table "clean_speak_applications"
"""
input clean_speak_applications_on_conflict {
  """"""
  constraint: clean_speak_applications_constraint!

  """"""
  update_columns: [clean_speak_applications_update_column!]!

  """"""
  where: clean_speak_applications_bool_exp
}

"""Ordering options when selecting data from "clean_speak_applications"."""
input clean_speak_applications_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  clean_speak_application_id: order_by
}

"""
select columns of table "clean_speak_applications"
"""
enum clean_speak_applications_select_column {
  """column name"""
  applications_id

  """column name"""
  clean_speak_application_id
}

"""
input type for updating data in table "clean_speak_applications"
"""
input clean_speak_applications_set_input {
  """"""
  applications_id: uuid

  """"""
  clean_speak_application_id: uuid
}

"""
update columns of table "clean_speak_applications"
"""
enum clean_speak_applications_update_column {
  """column name"""
  applications_id

  """column name"""
  clean_speak_application_id
}

"""
columns and relationships of "common_breached_passwords"
"""
type common_breached_passwords {
  """"""
  password: String!
}

"""
aggregated selection of "common_breached_passwords"
"""
type common_breached_passwords_aggregate {
  """"""
  aggregate: common_breached_passwords_aggregate_fields

  """"""
  nodes: [common_breached_passwords!]!
}

"""
aggregate fields of "common_breached_passwords"
"""
type common_breached_passwords_aggregate_fields {
  """"""
  count(columns: [common_breached_passwords_select_column!], distinct: Boolean): Int!

  """"""
  max: common_breached_passwords_max_fields

  """"""
  min: common_breached_passwords_min_fields
}

"""
Boolean expression to filter rows from the table "common_breached_passwords". All fields are combined with a logical 'AND'.
"""
input common_breached_passwords_bool_exp {
  """"""
  _and: [common_breached_passwords_bool_exp!]

  """"""
  _not: common_breached_passwords_bool_exp

  """"""
  _or: [common_breached_passwords_bool_exp!]

  """"""
  password: String_comparison_exp
}

"""
unique or primary key constraints on table "common_breached_passwords"
"""
enum common_breached_passwords_constraint {
  """unique or primary key constraint"""
  common_breached_passwords_pkey
}

"""
input type for inserting data into table "common_breached_passwords"
"""
input common_breached_passwords_insert_input {
  """"""
  password: String
}

"""aggregate max on columns"""
type common_breached_passwords_max_fields {
  """"""
  password: String
}

"""aggregate min on columns"""
type common_breached_passwords_min_fields {
  """"""
  password: String
}

"""
response of any mutation on the table "common_breached_passwords"
"""
type common_breached_passwords_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [common_breached_passwords!]!
}

"""
on conflict condition type for table "common_breached_passwords"
"""
input common_breached_passwords_on_conflict {
  """"""
  constraint: common_breached_passwords_constraint!

  """"""
  update_columns: [common_breached_passwords_update_column!]!

  """"""
  where: common_breached_passwords_bool_exp
}

"""Ordering options when selecting data from "common_breached_passwords"."""
input common_breached_passwords_order_by {
  """"""
  password: order_by
}

"""primary key columns input for table: common_breached_passwords"""
input common_breached_passwords_pk_columns_input {
  """"""
  password: String!
}

"""
select columns of table "common_breached_passwords"
"""
enum common_breached_passwords_select_column {
  """column name"""
  password
}

"""
input type for updating data in table "common_breached_passwords"
"""
input common_breached_passwords_set_input {
  """"""
  password: String
}

"""
update columns of table "common_breached_passwords"
"""
enum common_breached_passwords_update_column {
  """column name"""
  password
}

"""
columns and relationships of "component"
"""
type component {
  """An array relationship"""
  assessment_components(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): [assessment_components!]!

  """An aggregate relationship"""
  assessment_components_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): assessment_components_aggregate!

  """An array relationship"""
  component_subjects(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): [component_subjects!]!

  """An aggregate relationship"""
  component_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): component_subjects_aggregate!

  """An array relationship"""
  component_submissions(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): [component_submission!]!

  """An aggregate relationship"""
  component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): component_submission_aggregate!

  """An object relationship"""
  component_type: component_type
  component_type_id: Int
  created: timestamptz
  id: Int!
  max_marks: Int!
  passing_percentage: float8!
  updated: timestamptz
}

"""
aggregated selection of "component"
"""
type component_aggregate {
  aggregate: component_aggregate_fields
  nodes: [component!]!
}

"""
aggregate fields of "component"
"""
type component_aggregate_fields {
  avg: component_avg_fields
  count(columns: [component_select_column!], distinct: Boolean): Int!
  max: component_max_fields
  min: component_min_fields
  stddev: component_stddev_fields
  stddev_pop: component_stddev_pop_fields
  stddev_samp: component_stddev_samp_fields
  sum: component_sum_fields
  var_pop: component_var_pop_fields
  var_samp: component_var_samp_fields
  variance: component_variance_fields
}

"""
order by aggregate values of table "component"
"""
input component_aggregate_order_by {
  avg: component_avg_order_by
  count: order_by
  max: component_max_order_by
  min: component_min_order_by
  stddev: component_stddev_order_by
  stddev_pop: component_stddev_pop_order_by
  stddev_samp: component_stddev_samp_order_by
  sum: component_sum_order_by
  var_pop: component_var_pop_order_by
  var_samp: component_var_samp_order_by
  variance: component_variance_order_by
}

"""
input type for inserting array relation for remote table "component"
"""
input component_arr_rel_insert_input {
  data: [component_insert_input!]!

  """on conflict condition"""
  on_conflict: component_on_conflict
}

"""aggregate avg on columns"""
type component_avg_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by avg() on columns of table "component"
"""
input component_avg_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""
Boolean expression to filter rows from the table "component". All fields are combined with a logical 'AND'.
"""
input component_bool_exp {
  _and: [component_bool_exp!]
  _not: component_bool_exp
  _or: [component_bool_exp!]
  assessment_components: assessment_components_bool_exp
  component_subjects: component_subjects_bool_exp
  component_submissions: component_submission_bool_exp
  component_type: component_type_bool_exp
  component_type_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  max_marks: Int_comparison_exp
  passing_percentage: float8_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "component"
"""
enum component_constraint {
  """unique or primary key constraint"""
  component_pkey
}

"""
input type for incrementing numeric columns in table "component"
"""
input component_inc_input {
  component_type_id: Int
  id: Int
  max_marks: Int
  passing_percentage: float8
}

"""
input type for inserting data into table "component"
"""
input component_insert_input {
  assessment_components: assessment_components_arr_rel_insert_input
  component_subjects: component_subjects_arr_rel_insert_input
  component_submissions: component_submission_arr_rel_insert_input
  component_type: component_type_obj_rel_insert_input
  component_type_id: Int
  created: timestamptz
  id: Int
  max_marks: Int
  passing_percentage: float8
  updated: timestamptz
}

"""aggregate max on columns"""
type component_max_fields {
  component_type_id: Int
  created: timestamptz
  id: Int
  max_marks: Int
  passing_percentage: float8
  updated: timestamptz
}

"""
order by max() on columns of table "component"
"""
input component_max_order_by {
  component_type_id: order_by
  created: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
  updated: order_by
}

"""aggregate min on columns"""
type component_min_fields {
  component_type_id: Int
  created: timestamptz
  id: Int
  max_marks: Int
  passing_percentage: float8
  updated: timestamptz
}

"""
order by min() on columns of table "component"
"""
input component_min_order_by {
  component_type_id: order_by
  created: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
  updated: order_by
}

"""
response of any mutation on the table "component"
"""
type component_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [component!]!
}

"""
input type for inserting object relation for remote table "component"
"""
input component_obj_rel_insert_input {
  data: component_insert_input!

  """on conflict condition"""
  on_conflict: component_on_conflict
}

"""
on conflict condition type for table "component"
"""
input component_on_conflict {
  constraint: component_constraint!
  update_columns: [component_update_column!]! = []
  where: component_bool_exp
}

"""Ordering options when selecting data from "component"."""
input component_order_by {
  assessment_components_aggregate: assessment_components_aggregate_order_by
  component_subjects_aggregate: component_subjects_aggregate_order_by
  component_submissions_aggregate: component_submission_aggregate_order_by
  component_type: component_type_order_by
  component_type_id: order_by
  created: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
  updated: order_by
}

"""primary key columns input for table: component"""
input component_pk_columns_input {
  id: Int!
}

"""
select columns of table "component"
"""
enum component_select_column {
  """column name"""
  component_type_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  max_marks

  """column name"""
  passing_percentage

  """column name"""
  updated
}

"""
input type for updating data in table "component"
"""
input component_set_input {
  component_type_id: Int
  created: timestamptz
  id: Int
  max_marks: Int
  passing_percentage: float8
  updated: timestamptz
}

"""aggregate stddev on columns"""
type component_stddev_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by stddev() on columns of table "component"
"""
input component_stddev_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""aggregate stddev_pop on columns"""
type component_stddev_pop_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by stddev_pop() on columns of table "component"
"""
input component_stddev_pop_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""aggregate stddev_samp on columns"""
type component_stddev_samp_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by stddev_samp() on columns of table "component"
"""
input component_stddev_samp_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""
columns and relationships of "component_subjects"
"""
type component_subjects {
  """An object relationship"""
  component: component!
  components_id: Int!
  id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "component_subjects"
"""
type component_subjects_aggregate {
  aggregate: component_subjects_aggregate_fields
  nodes: [component_subjects!]!
}

"""
aggregate fields of "component_subjects"
"""
type component_subjects_aggregate_fields {
  avg: component_subjects_avg_fields
  count(columns: [component_subjects_select_column!], distinct: Boolean): Int!
  max: component_subjects_max_fields
  min: component_subjects_min_fields
  stddev: component_subjects_stddev_fields
  stddev_pop: component_subjects_stddev_pop_fields
  stddev_samp: component_subjects_stddev_samp_fields
  sum: component_subjects_sum_fields
  var_pop: component_subjects_var_pop_fields
  var_samp: component_subjects_var_samp_fields
  variance: component_subjects_variance_fields
}

"""
order by aggregate values of table "component_subjects"
"""
input component_subjects_aggregate_order_by {
  avg: component_subjects_avg_order_by
  count: order_by
  max: component_subjects_max_order_by
  min: component_subjects_min_order_by
  stddev: component_subjects_stddev_order_by
  stddev_pop: component_subjects_stddev_pop_order_by
  stddev_samp: component_subjects_stddev_samp_order_by
  sum: component_subjects_sum_order_by
  var_pop: component_subjects_var_pop_order_by
  var_samp: component_subjects_var_samp_order_by
  variance: component_subjects_variance_order_by
}

"""
input type for inserting array relation for remote table "component_subjects"
"""
input component_subjects_arr_rel_insert_input {
  data: [component_subjects_insert_input!]!

  """on conflict condition"""
  on_conflict: component_subjects_on_conflict
}

"""aggregate avg on columns"""
type component_subjects_avg_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "component_subjects"
"""
input component_subjects_avg_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "component_subjects". All fields are combined with a logical 'AND'.
"""
input component_subjects_bool_exp {
  _and: [component_subjects_bool_exp!]
  _not: component_subjects_bool_exp
  _or: [component_subjects_bool_exp!]
  component: component_bool_exp
  components_id: Int_comparison_exp
  id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "component_subjects"
"""
enum component_subjects_constraint {
  """unique or primary key constraint"""
  component_subjects_components_id_subject_id_7e9365e9_uniq

  """unique or primary key constraint"""
  component_subjects_pkey
}

"""
input type for incrementing numeric columns in table "component_subjects"
"""
input component_subjects_inc_input {
  components_id: Int
  id: Int
  subject_id: Int
}

"""
input type for inserting data into table "component_subjects"
"""
input component_subjects_insert_input {
  component: component_obj_rel_insert_input
  components_id: Int
  id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type component_subjects_max_fields {
  components_id: Int
  id: Int
  subject_id: Int
}

"""
order by max() on columns of table "component_subjects"
"""
input component_subjects_max_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type component_subjects_min_fields {
  components_id: Int
  id: Int
  subject_id: Int
}

"""
order by min() on columns of table "component_subjects"
"""
input component_subjects_min_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "component_subjects"
"""
type component_subjects_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [component_subjects!]!
}

"""
on conflict condition type for table "component_subjects"
"""
input component_subjects_on_conflict {
  constraint: component_subjects_constraint!
  update_columns: [component_subjects_update_column!]! = []
  where: component_subjects_bool_exp
}

"""Ordering options when selecting data from "component_subjects"."""
input component_subjects_order_by {
  component: component_order_by
  components_id: order_by
  id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: component_subjects"""
input component_subjects_pk_columns_input {
  id: Int!
}

"""
select columns of table "component_subjects"
"""
enum component_subjects_select_column {
  """column name"""
  components_id

  """column name"""
  id

  """column name"""
  subject_id
}

"""
input type for updating data in table "component_subjects"
"""
input component_subjects_set_input {
  components_id: Int
  id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type component_subjects_stddev_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "component_subjects"
"""
input component_subjects_stddev_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type component_subjects_stddev_pop_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "component_subjects"
"""
input component_subjects_stddev_pop_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type component_subjects_stddev_samp_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "component_subjects"
"""
input component_subjects_stddev_samp_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type component_subjects_sum_fields {
  components_id: Int
  id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "component_subjects"
"""
input component_subjects_sum_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""
update columns of table "component_subjects"
"""
enum component_subjects_update_column {
  """column name"""
  components_id

  """column name"""
  id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type component_subjects_var_pop_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "component_subjects"
"""
input component_subjects_var_pop_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type component_subjects_var_samp_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "component_subjects"
"""
input component_subjects_var_samp_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type component_subjects_variance_fields {
  components_id: Float
  id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "component_subjects"
"""
input component_subjects_variance_order_by {
  components_id: order_by
  id: order_by
  subject_id: order_by
}

"""
columns and relationships of "component_submission"
"""
type component_submission {
  """An object relationship"""
  assessment: assessment
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8

  """An object relationship"""
  component: component
  component_id: Int
  id: Int!
  is_present: Boolean!

  """An object relationship"""
  school: school
  school_id: Int

  """An array relationship"""
  student_submission_v2_marks_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): [student_submission_v2_marks_submissions!]!

  """An aggregate relationship"""
  student_submission_v2_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): student_submission_v2_marks_submissions_aggregate!

  """An object relationship"""
  subject: subject
  subject_id: Int
}

"""
aggregated selection of "component_submission"
"""
type component_submission_aggregate {
  aggregate: component_submission_aggregate_fields
  nodes: [component_submission!]!
}

"""
aggregate fields of "component_submission"
"""
type component_submission_aggregate_fields {
  avg: component_submission_avg_fields
  count(columns: [component_submission_select_column!], distinct: Boolean): Int!
  max: component_submission_max_fields
  min: component_submission_min_fields
  stddev: component_submission_stddev_fields
  stddev_pop: component_submission_stddev_pop_fields
  stddev_samp: component_submission_stddev_samp_fields
  sum: component_submission_sum_fields
  var_pop: component_submission_var_pop_fields
  var_samp: component_submission_var_samp_fields
  variance: component_submission_variance_fields
}

"""
order by aggregate values of table "component_submission"
"""
input component_submission_aggregate_order_by {
  avg: component_submission_avg_order_by
  count: order_by
  max: component_submission_max_order_by
  min: component_submission_min_order_by
  stddev: component_submission_stddev_order_by
  stddev_pop: component_submission_stddev_pop_order_by
  stddev_samp: component_submission_stddev_samp_order_by
  sum: component_submission_sum_order_by
  var_pop: component_submission_var_pop_order_by
  var_samp: component_submission_var_samp_order_by
  variance: component_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "component_submission"
"""
input component_submission_arr_rel_insert_input {
  data: [component_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: component_submission_on_conflict
}

"""aggregate avg on columns"""
type component_submission_avg_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "component_submission"
"""
input component_submission_avg_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "component_submission". All fields are combined with a logical 'AND'.
"""
input component_submission_bool_exp {
  _and: [component_submission_bool_exp!]
  _not: component_submission_bool_exp
  _or: [component_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  assessment_marks: float8_comparison_exp
  assessment_percent: float8_comparison_exp
  component: component_bool_exp
  component_id: Int_comparison_exp
  id: Int_comparison_exp
  is_present: Boolean_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  student_submission_v2_marks_submissions: student_submission_v2_marks_submissions_bool_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "component_submission"
"""
enum component_submission_constraint {
  """unique or primary key constraint"""
  component_submission_pkey
}

"""
input type for incrementing numeric columns in table "component_submission"
"""
input component_submission_inc_input {
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8
  component_id: Int
  id: Int
  school_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "component_submission"
"""
input component_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8
  component: component_obj_rel_insert_input
  component_id: Int
  id: Int
  is_present: Boolean
  school: school_obj_rel_insert_input
  school_id: Int
  student_submission_v2_marks_submissions: student_submission_v2_marks_submissions_arr_rel_insert_input
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type component_submission_max_fields {
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8
  component_id: Int
  id: Int
  school_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "component_submission"
"""
input component_submission_max_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type component_submission_min_fields {
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8
  component_id: Int
  id: Int
  school_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "component_submission"
"""
input component_submission_min_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "component_submission"
"""
type component_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [component_submission!]!
}

"""
input type for inserting object relation for remote table "component_submission"
"""
input component_submission_obj_rel_insert_input {
  data: component_submission_insert_input!

  """on conflict condition"""
  on_conflict: component_submission_on_conflict
}

"""
on conflict condition type for table "component_submission"
"""
input component_submission_on_conflict {
  constraint: component_submission_constraint!
  update_columns: [component_submission_update_column!]! = []
  where: component_submission_bool_exp
}

"""Ordering options when selecting data from "component_submission"."""
input component_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component: component_order_by
  component_id: order_by
  id: order_by
  is_present: order_by
  school: school_order_by
  school_id: order_by
  student_submission_v2_marks_submissions_aggregate: student_submission_v2_marks_submissions_aggregate_order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: component_submission"""
input component_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "component_submission"
"""
enum component_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  assessment_marks

  """column name"""
  assessment_percent

  """column name"""
  component_id

  """column name"""
  id

  """column name"""
  is_present

  """column name"""
  school_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "component_submission"
"""
input component_submission_set_input {
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8
  component_id: Int
  id: Int
  is_present: Boolean
  school_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type component_submission_stddev_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "component_submission"
"""
input component_submission_stddev_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type component_submission_stddev_pop_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "component_submission"
"""
input component_submission_stddev_pop_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type component_submission_stddev_samp_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "component_submission"
"""
input component_submission_stddev_samp_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type component_submission_sum_fields {
  assessment_id: Int
  assessment_marks: float8
  assessment_percent: float8
  component_id: Int
  id: Int
  school_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "component_submission"
"""
input component_submission_sum_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
update columns of table "component_submission"
"""
enum component_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  assessment_marks

  """column name"""
  assessment_percent

  """column name"""
  component_id

  """column name"""
  id

  """column name"""
  is_present

  """column name"""
  school_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type component_submission_var_pop_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "component_submission"
"""
input component_submission_var_pop_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type component_submission_var_samp_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "component_submission"
"""
input component_submission_var_samp_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type component_submission_variance_fields {
  assessment_id: Float
  assessment_marks: Float
  assessment_percent: Float
  component_id: Float
  id: Float
  school_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "component_submission"
"""
input component_submission_variance_order_by {
  assessment_id: order_by
  assessment_marks: order_by
  assessment_percent: order_by
  component_id: order_by
  id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type component_sum_fields {
  component_type_id: Int
  id: Int
  max_marks: Int
  passing_percentage: float8
}

"""
order by sum() on columns of table "component"
"""
input component_sum_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""
columns and relationships of "component_type"
"""
type component_type {
  """An array relationship"""
  components(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): [component!]!

  """An aggregate relationship"""
  components_aggregate(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): component_aggregate!
  created: timestamptz
  id: Int!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "component_type"
"""
type component_type_aggregate {
  aggregate: component_type_aggregate_fields
  nodes: [component_type!]!
}

"""
aggregate fields of "component_type"
"""
type component_type_aggregate_fields {
  avg: component_type_avg_fields
  count(columns: [component_type_select_column!], distinct: Boolean): Int!
  max: component_type_max_fields
  min: component_type_min_fields
  stddev: component_type_stddev_fields
  stddev_pop: component_type_stddev_pop_fields
  stddev_samp: component_type_stddev_samp_fields
  sum: component_type_sum_fields
  var_pop: component_type_var_pop_fields
  var_samp: component_type_var_samp_fields
  variance: component_type_variance_fields
}

"""aggregate avg on columns"""
type component_type_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "component_type". All fields are combined with a logical 'AND'.
"""
input component_type_bool_exp {
  _and: [component_type_bool_exp!]
  _not: component_type_bool_exp
  _or: [component_type_bool_exp!]
  components: component_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "component_type"
"""
enum component_type_constraint {
  """unique or primary key constraint"""
  component_type_pkey
}

"""
input type for incrementing numeric columns in table "component_type"
"""
input component_type_inc_input {
  id: Int
}

"""
input type for inserting data into table "component_type"
"""
input component_type_insert_input {
  components: component_arr_rel_insert_input
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate max on columns"""
type component_type_max_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type component_type_min_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "component_type"
"""
type component_type_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [component_type!]!
}

"""
input type for inserting object relation for remote table "component_type"
"""
input component_type_obj_rel_insert_input {
  data: component_type_insert_input!

  """on conflict condition"""
  on_conflict: component_type_on_conflict
}

"""
on conflict condition type for table "component_type"
"""
input component_type_on_conflict {
  constraint: component_type_constraint!
  update_columns: [component_type_update_column!]! = []
  where: component_type_bool_exp
}

"""Ordering options when selecting data from "component_type"."""
input component_type_order_by {
  components_aggregate: component_aggregate_order_by
  created: order_by
  id: order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: component_type"""
input component_type_pk_columns_input {
  id: Int!
}

"""
select columns of table "component_type"
"""
enum component_type_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "component_type"
"""
input component_type_set_input {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type component_type_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type component_type_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type component_type_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type component_type_sum_fields {
  id: Int
}

"""
update columns of table "component_type"
"""
enum component_type_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type component_type_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type component_type_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type component_type_variance_fields {
  id: Float
}

"""
update columns of table "component"
"""
enum component_update_column {
  """column name"""
  component_type_id

  """column name"""
  created

  """column name"""
  id

  """column name"""
  max_marks

  """column name"""
  passing_percentage

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type component_var_pop_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by var_pop() on columns of table "component"
"""
input component_var_pop_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""aggregate var_samp on columns"""
type component_var_samp_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by var_samp() on columns of table "component"
"""
input component_var_samp_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""aggregate variance on columns"""
type component_variance_fields {
  component_type_id: Float
  id: Float
  max_marks: Float
  passing_percentage: Float
}

"""
order by variance() on columns of table "component"
"""
input component_variance_order_by {
  component_type_id: order_by
  id: order_by
  max_marks: order_by
  passing_percentage: order_by
}

"""
columns and relationships of "connectors"
"""
type connectors {
  """An array relationship"""
  connectors_tenants(
    """distinct select on columns"""
    distinct_on: [connectors_tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_tenants_order_by!]

    """filter the rows returned"""
    where: connectors_tenants_bool_exp
  ): [connectors_tenants!]!

  """An aggregate relationship"""
  connectors_tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [connectors_tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_tenants_order_by!]

    """filter the rows returned"""
    where: connectors_tenants_bool_exp
  ): connectors_tenants_aggregate!

  """"""
  data: String!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  key: keys!

  """An object relationship"""
  lambda: lambdas!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  reconcile_lambdas_id: uuid

  """"""
  ssl_certificate_keys_id: uuid

  """"""
  type: smallint!
}

"""
aggregated selection of "connectors"
"""
type connectors_aggregate {
  """"""
  aggregate: connectors_aggregate_fields

  """"""
  nodes: [connectors!]!
}

"""
aggregate fields of "connectors"
"""
type connectors_aggregate_fields {
  """"""
  avg: connectors_avg_fields

  """"""
  count(columns: [connectors_select_column!], distinct: Boolean): Int!

  """"""
  max: connectors_max_fields

  """"""
  min: connectors_min_fields

  """"""
  stddev: connectors_stddev_fields

  """"""
  stddev_pop: connectors_stddev_pop_fields

  """"""
  stddev_samp: connectors_stddev_samp_fields

  """"""
  sum: connectors_sum_fields

  """"""
  var_pop: connectors_var_pop_fields

  """"""
  var_samp: connectors_var_samp_fields

  """"""
  variance: connectors_variance_fields
}

"""
order by aggregate values of table "connectors"
"""
input connectors_aggregate_order_by {
  """"""
  avg: connectors_avg_order_by

  """"""
  count: order_by

  """"""
  max: connectors_max_order_by

  """"""
  min: connectors_min_order_by

  """"""
  stddev: connectors_stddev_order_by

  """"""
  stddev_pop: connectors_stddev_pop_order_by

  """"""
  stddev_samp: connectors_stddev_samp_order_by

  """"""
  sum: connectors_sum_order_by

  """"""
  var_pop: connectors_var_pop_order_by

  """"""
  var_samp: connectors_var_samp_order_by

  """"""
  variance: connectors_variance_order_by
}

"""
input type for inserting array relation for remote table "connectors"
"""
input connectors_arr_rel_insert_input {
  """"""
  data: [connectors_insert_input!]!

  """on conflict condition"""
  on_conflict: connectors_on_conflict
}

"""aggregate avg on columns"""
type connectors_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by avg() on columns of table "connectors"
"""
input connectors_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""
Boolean expression to filter rows from the table "connectors". All fields are combined with a logical 'AND'.
"""
input connectors_bool_exp {
  """"""
  _and: [connectors_bool_exp!]

  """"""
  _not: connectors_bool_exp

  """"""
  _or: [connectors_bool_exp!]

  """"""
  connectors_tenants: connectors_tenants_bool_exp

  """"""
  data: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  key: keys_bool_exp

  """"""
  lambda: lambdas_bool_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  reconcile_lambdas_id: uuid_comparison_exp

  """"""
  ssl_certificate_keys_id: uuid_comparison_exp

  """"""
  type: smallint_comparison_exp
}

"""
unique or primary key constraints on table "connectors"
"""
enum connectors_constraint {
  """unique or primary key constraint"""
  connectors_pkey

  """unique or primary key constraint"""
  connectors_uk_1
}

"""
input type for incrementing numeric columns in table "connectors"
"""
input connectors_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  type: smallint
}

"""
input type for inserting data into table "connectors"
"""
input connectors_insert_input {
  """"""
  connectors_tenants: connectors_tenants_arr_rel_insert_input

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  key: keys_obj_rel_insert_input

  """"""
  lambda: lambdas_obj_rel_insert_input

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  ssl_certificate_keys_id: uuid

  """"""
  type: smallint
}

"""aggregate max on columns"""
type connectors_max_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  ssl_certificate_keys_id: uuid

  """"""
  type: smallint
}

"""
order by max() on columns of table "connectors"
"""
input connectors_max_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  reconcile_lambdas_id: order_by

  """"""
  ssl_certificate_keys_id: order_by

  """"""
  type: order_by
}

"""aggregate min on columns"""
type connectors_min_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  ssl_certificate_keys_id: uuid

  """"""
  type: smallint
}

"""
order by min() on columns of table "connectors"
"""
input connectors_min_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  reconcile_lambdas_id: order_by

  """"""
  ssl_certificate_keys_id: order_by

  """"""
  type: order_by
}

"""
response of any mutation on the table "connectors"
"""
type connectors_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [connectors!]!
}

"""
input type for inserting object relation for remote table "connectors"
"""
input connectors_obj_rel_insert_input {
  """"""
  data: connectors_insert_input!

  """on conflict condition"""
  on_conflict: connectors_on_conflict
}

"""
on conflict condition type for table "connectors"
"""
input connectors_on_conflict {
  """"""
  constraint: connectors_constraint!

  """"""
  update_columns: [connectors_update_column!]!

  """"""
  where: connectors_bool_exp
}

"""Ordering options when selecting data from "connectors"."""
input connectors_order_by {
  """"""
  connectors_tenants_aggregate: connectors_tenants_aggregate_order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  key: keys_order_by

  """"""
  lambda: lambdas_order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  reconcile_lambdas_id: order_by

  """"""
  ssl_certificate_keys_id: order_by

  """"""
  type: order_by
}

"""primary key columns input for table: connectors"""
input connectors_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "connectors"
"""
enum connectors_select_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  reconcile_lambdas_id

  """column name"""
  ssl_certificate_keys_id

  """column name"""
  type
}

"""
input type for updating data in table "connectors"
"""
input connectors_set_input {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  ssl_certificate_keys_id: uuid

  """"""
  type: smallint
}

"""aggregate stddev on columns"""
type connectors_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by stddev() on columns of table "connectors"
"""
input connectors_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""aggregate stddev_pop on columns"""
type connectors_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by stddev_pop() on columns of table "connectors"
"""
input connectors_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""aggregate stddev_samp on columns"""
type connectors_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by stddev_samp() on columns of table "connectors"
"""
input connectors_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""aggregate sum on columns"""
type connectors_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  type: smallint
}

"""
order by sum() on columns of table "connectors"
"""
input connectors_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""
columns and relationships of "connectors_tenants"
"""
type connectors_tenants {
  """An object relationship"""
  connector: connectors!

  """"""
  connectors_id: uuid!

  """"""
  data: String!

  """"""
  sequence: smallint!

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!
}

"""
aggregated selection of "connectors_tenants"
"""
type connectors_tenants_aggregate {
  """"""
  aggregate: connectors_tenants_aggregate_fields

  """"""
  nodes: [connectors_tenants!]!
}

"""
aggregate fields of "connectors_tenants"
"""
type connectors_tenants_aggregate_fields {
  """"""
  avg: connectors_tenants_avg_fields

  """"""
  count(columns: [connectors_tenants_select_column!], distinct: Boolean): Int!

  """"""
  max: connectors_tenants_max_fields

  """"""
  min: connectors_tenants_min_fields

  """"""
  stddev: connectors_tenants_stddev_fields

  """"""
  stddev_pop: connectors_tenants_stddev_pop_fields

  """"""
  stddev_samp: connectors_tenants_stddev_samp_fields

  """"""
  sum: connectors_tenants_sum_fields

  """"""
  var_pop: connectors_tenants_var_pop_fields

  """"""
  var_samp: connectors_tenants_var_samp_fields

  """"""
  variance: connectors_tenants_variance_fields
}

"""
order by aggregate values of table "connectors_tenants"
"""
input connectors_tenants_aggregate_order_by {
  """"""
  avg: connectors_tenants_avg_order_by

  """"""
  count: order_by

  """"""
  max: connectors_tenants_max_order_by

  """"""
  min: connectors_tenants_min_order_by

  """"""
  stddev: connectors_tenants_stddev_order_by

  """"""
  stddev_pop: connectors_tenants_stddev_pop_order_by

  """"""
  stddev_samp: connectors_tenants_stddev_samp_order_by

  """"""
  sum: connectors_tenants_sum_order_by

  """"""
  var_pop: connectors_tenants_var_pop_order_by

  """"""
  var_samp: connectors_tenants_var_samp_order_by

  """"""
  variance: connectors_tenants_variance_order_by
}

"""
input type for inserting array relation for remote table "connectors_tenants"
"""
input connectors_tenants_arr_rel_insert_input {
  """"""
  data: [connectors_tenants_insert_input!]!

  """on conflict condition"""
  on_conflict: connectors_tenants_on_conflict
}

"""aggregate avg on columns"""
type connectors_tenants_avg_fields {
  """"""
  sequence: Float
}

"""
order by avg() on columns of table "connectors_tenants"
"""
input connectors_tenants_avg_order_by {
  """"""
  sequence: order_by
}

"""
Boolean expression to filter rows from the table "connectors_tenants". All fields are combined with a logical 'AND'.
"""
input connectors_tenants_bool_exp {
  """"""
  _and: [connectors_tenants_bool_exp!]

  """"""
  _not: connectors_tenants_bool_exp

  """"""
  _or: [connectors_tenants_bool_exp!]

  """"""
  connector: connectors_bool_exp

  """"""
  connectors_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  sequence: smallint_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "connectors_tenants"
"""
enum connectors_tenants_constraint {
  """unique or primary key constraint"""
  connectors_tenants_pkey

  """unique or primary key constraint"""
  connectors_tenants_uk_1
}

"""
input type for incrementing numeric columns in table "connectors_tenants"
"""
input connectors_tenants_inc_input {
  """"""
  sequence: smallint
}

"""
input type for inserting data into table "connectors_tenants"
"""
input connectors_tenants_insert_input {
  """"""
  connector: connectors_obj_rel_insert_input

  """"""
  connectors_id: uuid

  """"""
  data: String

  """"""
  sequence: smallint

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid
}

"""aggregate max on columns"""
type connectors_tenants_max_fields {
  """"""
  connectors_id: uuid

  """"""
  data: String

  """"""
  sequence: smallint

  """"""
  tenants_id: uuid
}

"""
order by max() on columns of table "connectors_tenants"
"""
input connectors_tenants_max_order_by {
  """"""
  connectors_id: order_by

  """"""
  data: order_by

  """"""
  sequence: order_by

  """"""
  tenants_id: order_by
}

"""aggregate min on columns"""
type connectors_tenants_min_fields {
  """"""
  connectors_id: uuid

  """"""
  data: String

  """"""
  sequence: smallint

  """"""
  tenants_id: uuid
}

"""
order by min() on columns of table "connectors_tenants"
"""
input connectors_tenants_min_order_by {
  """"""
  connectors_id: order_by

  """"""
  data: order_by

  """"""
  sequence: order_by

  """"""
  tenants_id: order_by
}

"""
response of any mutation on the table "connectors_tenants"
"""
type connectors_tenants_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [connectors_tenants!]!
}

"""
on conflict condition type for table "connectors_tenants"
"""
input connectors_tenants_on_conflict {
  """"""
  constraint: connectors_tenants_constraint!

  """"""
  update_columns: [connectors_tenants_update_column!]!

  """"""
  where: connectors_tenants_bool_exp
}

"""Ordering options when selecting data from "connectors_tenants"."""
input connectors_tenants_order_by {
  """"""
  connector: connectors_order_by

  """"""
  connectors_id: order_by

  """"""
  data: order_by

  """"""
  sequence: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by
}

"""primary key columns input for table: connectors_tenants"""
input connectors_tenants_pk_columns_input {
  """"""
  connectors_id: uuid!

  """"""
  tenants_id: uuid!
}

"""
select columns of table "connectors_tenants"
"""
enum connectors_tenants_select_column {
  """column name"""
  connectors_id

  """column name"""
  data

  """column name"""
  sequence

  """column name"""
  tenants_id
}

"""
input type for updating data in table "connectors_tenants"
"""
input connectors_tenants_set_input {
  """"""
  connectors_id: uuid

  """"""
  data: String

  """"""
  sequence: smallint

  """"""
  tenants_id: uuid
}

"""aggregate stddev on columns"""
type connectors_tenants_stddev_fields {
  """"""
  sequence: Float
}

"""
order by stddev() on columns of table "connectors_tenants"
"""
input connectors_tenants_stddev_order_by {
  """"""
  sequence: order_by
}

"""aggregate stddev_pop on columns"""
type connectors_tenants_stddev_pop_fields {
  """"""
  sequence: Float
}

"""
order by stddev_pop() on columns of table "connectors_tenants"
"""
input connectors_tenants_stddev_pop_order_by {
  """"""
  sequence: order_by
}

"""aggregate stddev_samp on columns"""
type connectors_tenants_stddev_samp_fields {
  """"""
  sequence: Float
}

"""
order by stddev_samp() on columns of table "connectors_tenants"
"""
input connectors_tenants_stddev_samp_order_by {
  """"""
  sequence: order_by
}

"""aggregate sum on columns"""
type connectors_tenants_sum_fields {
  """"""
  sequence: smallint
}

"""
order by sum() on columns of table "connectors_tenants"
"""
input connectors_tenants_sum_order_by {
  """"""
  sequence: order_by
}

"""
update columns of table "connectors_tenants"
"""
enum connectors_tenants_update_column {
  """column name"""
  connectors_id

  """column name"""
  data

  """column name"""
  sequence

  """column name"""
  tenants_id
}

"""aggregate var_pop on columns"""
type connectors_tenants_var_pop_fields {
  """"""
  sequence: Float
}

"""
order by var_pop() on columns of table "connectors_tenants"
"""
input connectors_tenants_var_pop_order_by {
  """"""
  sequence: order_by
}

"""aggregate var_samp on columns"""
type connectors_tenants_var_samp_fields {
  """"""
  sequence: Float
}

"""
order by var_samp() on columns of table "connectors_tenants"
"""
input connectors_tenants_var_samp_order_by {
  """"""
  sequence: order_by
}

"""aggregate variance on columns"""
type connectors_tenants_variance_fields {
  """"""
  sequence: Float
}

"""
order by variance() on columns of table "connectors_tenants"
"""
input connectors_tenants_variance_order_by {
  """"""
  sequence: order_by
}

"""
update columns of table "connectors"
"""
enum connectors_update_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  reconcile_lambdas_id

  """column name"""
  ssl_certificate_keys_id

  """column name"""
  type
}

"""aggregate var_pop on columns"""
type connectors_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by var_pop() on columns of table "connectors"
"""
input connectors_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""aggregate var_samp on columns"""
type connectors_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by var_samp() on columns of table "connectors"
"""
input connectors_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""aggregate variance on columns"""
type connectors_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
order by variance() on columns of table "connectors"
"""
input connectors_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  type: order_by
}

"""
columns and relationships of "consents"
"""
type consents {
  """"""
  consent_email_templates_id: uuid

  """"""
  data: String

  """An object relationship"""
  emailTemplateByEmailPlusEmailTemplatesId: email_templates!

  """"""
  email_plus_email_templates_id: uuid

  """An object relationship"""
  email_template: email_templates!

  """An array relationship"""
  form_fields(
    """distinct select on columns"""
    distinct_on: [form_fields_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_fields_order_by!]

    """filter the rows returned"""
    where: form_fields_bool_exp
  ): [form_fields!]!

  """An aggregate relationship"""
  form_fields_aggregate(
    """distinct select on columns"""
    distinct_on: [form_fields_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_fields_order_by!]

    """filter the rows returned"""
    where: form_fields_bool_exp
  ): form_fields_aggregate!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """An array relationship"""
  user_consents(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): [user_consents!]!

  """An aggregate relationship"""
  user_consents_aggregate(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): user_consents_aggregate!
}

"""
aggregated selection of "consents"
"""
type consents_aggregate {
  """"""
  aggregate: consents_aggregate_fields

  """"""
  nodes: [consents!]!
}

"""
aggregate fields of "consents"
"""
type consents_aggregate_fields {
  """"""
  avg: consents_avg_fields

  """"""
  count(columns: [consents_select_column!], distinct: Boolean): Int!

  """"""
  max: consents_max_fields

  """"""
  min: consents_min_fields

  """"""
  stddev: consents_stddev_fields

  """"""
  stddev_pop: consents_stddev_pop_fields

  """"""
  stddev_samp: consents_stddev_samp_fields

  """"""
  sum: consents_sum_fields

  """"""
  var_pop: consents_var_pop_fields

  """"""
  var_samp: consents_var_samp_fields

  """"""
  variance: consents_variance_fields
}

"""
order by aggregate values of table "consents"
"""
input consents_aggregate_order_by {
  """"""
  avg: consents_avg_order_by

  """"""
  count: order_by

  """"""
  max: consents_max_order_by

  """"""
  min: consents_min_order_by

  """"""
  stddev: consents_stddev_order_by

  """"""
  stddev_pop: consents_stddev_pop_order_by

  """"""
  stddev_samp: consents_stddev_samp_order_by

  """"""
  sum: consents_sum_order_by

  """"""
  var_pop: consents_var_pop_order_by

  """"""
  var_samp: consents_var_samp_order_by

  """"""
  variance: consents_variance_order_by
}

"""
input type for inserting array relation for remote table "consents"
"""
input consents_arr_rel_insert_input {
  """"""
  data: [consents_insert_input!]!

  """on conflict condition"""
  on_conflict: consents_on_conflict
}

"""aggregate avg on columns"""
type consents_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "consents"
"""
input consents_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "consents". All fields are combined with a logical 'AND'.
"""
input consents_bool_exp {
  """"""
  _and: [consents_bool_exp!]

  """"""
  _not: consents_bool_exp

  """"""
  _or: [consents_bool_exp!]

  """"""
  consent_email_templates_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  emailTemplateByEmailPlusEmailTemplatesId: email_templates_bool_exp

  """"""
  email_plus_email_templates_id: uuid_comparison_exp

  """"""
  email_template: email_templates_bool_exp

  """"""
  form_fields: form_fields_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  user_consents: user_consents_bool_exp
}

"""
unique or primary key constraints on table "consents"
"""
enum consents_constraint {
  """unique or primary key constraint"""
  consents_pkey

  """unique or primary key constraint"""
  consents_uk_1
}

"""
input type for incrementing numeric columns in table "consents"
"""
input consents_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "consents"
"""
input consents_insert_input {
  """"""
  consent_email_templates_id: uuid

  """"""
  data: String

  """"""
  emailTemplateByEmailPlusEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  email_plus_email_templates_id: uuid

  """"""
  email_template: email_templates_obj_rel_insert_input

  """"""
  form_fields: form_fields_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  user_consents: user_consents_arr_rel_insert_input
}

"""aggregate max on columns"""
type consents_max_fields {
  """"""
  consent_email_templates_id: uuid

  """"""
  data: String

  """"""
  email_plus_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
order by max() on columns of table "consents"
"""
input consents_max_order_by {
  """"""
  consent_email_templates_id: order_by

  """"""
  data: order_by

  """"""
  email_plus_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""aggregate min on columns"""
type consents_min_fields {
  """"""
  consent_email_templates_id: uuid

  """"""
  data: String

  """"""
  email_plus_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
order by min() on columns of table "consents"
"""
input consents_min_order_by {
  """"""
  consent_email_templates_id: order_by

  """"""
  data: order_by

  """"""
  email_plus_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""
response of any mutation on the table "consents"
"""
type consents_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [consents!]!
}

"""
input type for inserting object relation for remote table "consents"
"""
input consents_obj_rel_insert_input {
  """"""
  data: consents_insert_input!

  """on conflict condition"""
  on_conflict: consents_on_conflict
}

"""
on conflict condition type for table "consents"
"""
input consents_on_conflict {
  """"""
  constraint: consents_constraint!

  """"""
  update_columns: [consents_update_column!]!

  """"""
  where: consents_bool_exp
}

"""Ordering options when selecting data from "consents"."""
input consents_order_by {
  """"""
  consent_email_templates_id: order_by

  """"""
  data: order_by

  """"""
  emailTemplateByEmailPlusEmailTemplatesId: email_templates_order_by

  """"""
  email_plus_email_templates_id: order_by

  """"""
  email_template: email_templates_order_by

  """"""
  form_fields_aggregate: form_fields_aggregate_order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  user_consents_aggregate: user_consents_aggregate_order_by
}

"""primary key columns input for table: consents"""
input consents_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "consents"
"""
enum consents_select_column {
  """column name"""
  consent_email_templates_id

  """column name"""
  data

  """column name"""
  email_plus_email_templates_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""
input type for updating data in table "consents"
"""
input consents_set_input {
  """"""
  consent_email_templates_id: uuid

  """"""
  data: String

  """"""
  email_plus_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate stddev on columns"""
type consents_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "consents"
"""
input consents_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type consents_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "consents"
"""
input consents_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type consents_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "consents"
"""
input consents_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type consents_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "consents"
"""
input consents_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "consents"
"""
enum consents_update_column {
  """column name"""
  consent_email_templates_id

  """column name"""
  data

  """column name"""
  email_plus_email_templates_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type consents_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "consents"
"""
input consents_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type consents_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "consents"
"""
input consents_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type consents_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "consents"
"""
input consents_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "corporate_donor_devices"
"""
type corporate_donor_devices {
  company_id: String
  created_at: timestamptz
  delivery_status: String

  """An object relationship"""
  device_donation_corporate: device_donation_corporates
  device_tracking_key: String

  """An object relationship"""
  device_verification_record: device_verification_records!
  id: Int!
  recipient_grade: Int
  recipient_name: String

  """An object relationship"""
  recipient_school: school
  recipient_school_id: Int
  recipient_student_id: String
}

"""
aggregated selection of "corporate_donor_devices"
"""
type corporate_donor_devices_aggregate {
  aggregate: corporate_donor_devices_aggregate_fields
  nodes: [corporate_donor_devices!]!
}

"""
aggregate fields of "corporate_donor_devices"
"""
type corporate_donor_devices_aggregate_fields {
  avg: corporate_donor_devices_avg_fields
  count(columns: [corporate_donor_devices_select_column!], distinct: Boolean): Int!
  max: corporate_donor_devices_max_fields
  min: corporate_donor_devices_min_fields
  stddev: corporate_donor_devices_stddev_fields
  stddev_pop: corporate_donor_devices_stddev_pop_fields
  stddev_samp: corporate_donor_devices_stddev_samp_fields
  sum: corporate_donor_devices_sum_fields
  var_pop: corporate_donor_devices_var_pop_fields
  var_samp: corporate_donor_devices_var_samp_fields
  variance: corporate_donor_devices_variance_fields
}

"""
order by aggregate values of table "corporate_donor_devices"
"""
input corporate_donor_devices_aggregate_order_by {
  avg: corporate_donor_devices_avg_order_by
  count: order_by
  max: corporate_donor_devices_max_order_by
  min: corporate_donor_devices_min_order_by
  stddev: corporate_donor_devices_stddev_order_by
  stddev_pop: corporate_donor_devices_stddev_pop_order_by
  stddev_samp: corporate_donor_devices_stddev_samp_order_by
  sum: corporate_donor_devices_sum_order_by
  var_pop: corporate_donor_devices_var_pop_order_by
  var_samp: corporate_donor_devices_var_samp_order_by
  variance: corporate_donor_devices_variance_order_by
}

"""
input type for inserting array relation for remote table "corporate_donor_devices"
"""
input corporate_donor_devices_arr_rel_insert_input {
  data: [corporate_donor_devices_insert_input!]!

  """on conflict condition"""
  on_conflict: corporate_donor_devices_on_conflict
}

"""aggregate avg on columns"""
type corporate_donor_devices_avg_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by avg() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_avg_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""
Boolean expression to filter rows from the table "corporate_donor_devices". All fields are combined with a logical 'AND'.
"""
input corporate_donor_devices_bool_exp {
  _and: [corporate_donor_devices_bool_exp!]
  _not: corporate_donor_devices_bool_exp
  _or: [corporate_donor_devices_bool_exp!]
  company_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  delivery_status: String_comparison_exp
  device_donation_corporate: device_donation_corporates_bool_exp
  device_tracking_key: String_comparison_exp
  device_verification_record: device_verification_records_bool_exp
  id: Int_comparison_exp
  recipient_grade: Int_comparison_exp
  recipient_name: String_comparison_exp
  recipient_school: school_bool_exp
  recipient_school_id: Int_comparison_exp
  recipient_student_id: String_comparison_exp
}

"""
unique or primary key constraints on table "corporate_donor_devices"
"""
enum corporate_donor_devices_constraint {
  """unique or primary key constraint"""
  corporate_donor_devices_device_tracking_key_key

  """unique or primary key constraint"""
  corporate_donor_devices_pkey
}

"""
input type for incrementing numeric columns in table "corporate_donor_devices"
"""
input corporate_donor_devices_inc_input {
  id: Int
  recipient_grade: Int
  recipient_school_id: Int
}

"""
input type for inserting data into table "corporate_donor_devices"
"""
input corporate_donor_devices_insert_input {
  company_id: String
  created_at: timestamptz
  delivery_status: String
  device_donation_corporate: device_donation_corporates_obj_rel_insert_input
  device_tracking_key: String
  device_verification_record: device_verification_records_obj_rel_insert_input
  id: Int
  recipient_grade: Int
  recipient_name: String
  recipient_school: school_obj_rel_insert_input
  recipient_school_id: Int
  recipient_student_id: String
}

"""aggregate max on columns"""
type corporate_donor_devices_max_fields {
  company_id: String
  created_at: timestamptz
  delivery_status: String
  device_tracking_key: String
  id: Int
  recipient_grade: Int
  recipient_name: String
  recipient_school_id: Int
  recipient_student_id: String
}

"""
order by max() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_max_order_by {
  company_id: order_by
  created_at: order_by
  delivery_status: order_by
  device_tracking_key: order_by
  id: order_by
  recipient_grade: order_by
  recipient_name: order_by
  recipient_school_id: order_by
  recipient_student_id: order_by
}

"""aggregate min on columns"""
type corporate_donor_devices_min_fields {
  company_id: String
  created_at: timestamptz
  delivery_status: String
  device_tracking_key: String
  id: Int
  recipient_grade: Int
  recipient_name: String
  recipient_school_id: Int
  recipient_student_id: String
}

"""
order by min() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_min_order_by {
  company_id: order_by
  created_at: order_by
  delivery_status: order_by
  device_tracking_key: order_by
  id: order_by
  recipient_grade: order_by
  recipient_name: order_by
  recipient_school_id: order_by
  recipient_student_id: order_by
}

"""
response of any mutation on the table "corporate_donor_devices"
"""
type corporate_donor_devices_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [corporate_donor_devices!]!
}

"""
input type for inserting object relation for remote table "corporate_donor_devices"
"""
input corporate_donor_devices_obj_rel_insert_input {
  data: corporate_donor_devices_insert_input!

  """on conflict condition"""
  on_conflict: corporate_donor_devices_on_conflict
}

"""
on conflict condition type for table "corporate_donor_devices"
"""
input corporate_donor_devices_on_conflict {
  constraint: corporate_donor_devices_constraint!
  update_columns: [corporate_donor_devices_update_column!]! = []
  where: corporate_donor_devices_bool_exp
}

"""Ordering options when selecting data from "corporate_donor_devices"."""
input corporate_donor_devices_order_by {
  company_id: order_by
  created_at: order_by
  delivery_status: order_by
  device_donation_corporate: device_donation_corporates_order_by
  device_tracking_key: order_by
  device_verification_record: device_verification_records_order_by
  id: order_by
  recipient_grade: order_by
  recipient_name: order_by
  recipient_school: school_order_by
  recipient_school_id: order_by
  recipient_student_id: order_by
}

"""primary key columns input for table: corporate_donor_devices"""
input corporate_donor_devices_pk_columns_input {
  id: Int!
}

"""
select columns of table "corporate_donor_devices"
"""
enum corporate_donor_devices_select_column {
  """column name"""
  company_id

  """column name"""
  created_at

  """column name"""
  delivery_status

  """column name"""
  device_tracking_key

  """column name"""
  id

  """column name"""
  recipient_grade

  """column name"""
  recipient_name

  """column name"""
  recipient_school_id

  """column name"""
  recipient_student_id
}

"""
input type for updating data in table "corporate_donor_devices"
"""
input corporate_donor_devices_set_input {
  company_id: String
  created_at: timestamptz
  delivery_status: String
  device_tracking_key: String
  id: Int
  recipient_grade: Int
  recipient_name: String
  recipient_school_id: Int
  recipient_student_id: String
}

"""aggregate stddev on columns"""
type corporate_donor_devices_stddev_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by stddev() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_stddev_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate stddev_pop on columns"""
type corporate_donor_devices_stddev_pop_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by stddev_pop() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_stddev_pop_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate stddev_samp on columns"""
type corporate_donor_devices_stddev_samp_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by stddev_samp() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_stddev_samp_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate sum on columns"""
type corporate_donor_devices_sum_fields {
  id: Int
  recipient_grade: Int
  recipient_school_id: Int
}

"""
order by sum() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_sum_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""
update columns of table "corporate_donor_devices"
"""
enum corporate_donor_devices_update_column {
  """column name"""
  company_id

  """column name"""
  created_at

  """column name"""
  delivery_status

  """column name"""
  device_tracking_key

  """column name"""
  id

  """column name"""
  recipient_grade

  """column name"""
  recipient_name

  """column name"""
  recipient_school_id

  """column name"""
  recipient_student_id
}

"""aggregate var_pop on columns"""
type corporate_donor_devices_var_pop_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by var_pop() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_var_pop_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate var_samp on columns"""
type corporate_donor_devices_var_samp_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by var_samp() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_var_samp_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate variance on columns"""
type corporate_donor_devices_variance_fields {
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by variance() on columns of table "corporate_donor_devices"
"""
input corporate_donor_devices_variance_order_by {
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""
columns and relationships of "dashboard_role_access_config"
"""
type dashboard_role_access_config {
  enable_for_block: Boolean!
  enable_for_cluster: Boolean!
  enable_for_district: Boolean!
  enable_for_state: Boolean!
  id: uuid!
  metabase_link: String
  permission: String!
}

"""
aggregated selection of "dashboard_role_access_config"
"""
type dashboard_role_access_config_aggregate {
  aggregate: dashboard_role_access_config_aggregate_fields
  nodes: [dashboard_role_access_config!]!
}

"""
aggregate fields of "dashboard_role_access_config"
"""
type dashboard_role_access_config_aggregate_fields {
  count(columns: [dashboard_role_access_config_select_column!], distinct: Boolean): Int!
  max: dashboard_role_access_config_max_fields
  min: dashboard_role_access_config_min_fields
}

"""
Boolean expression to filter rows from the table "dashboard_role_access_config". All fields are combined with a logical 'AND'.
"""
input dashboard_role_access_config_bool_exp {
  _and: [dashboard_role_access_config_bool_exp!]
  _not: dashboard_role_access_config_bool_exp
  _or: [dashboard_role_access_config_bool_exp!]
  enable_for_block: Boolean_comparison_exp
  enable_for_cluster: Boolean_comparison_exp
  enable_for_district: Boolean_comparison_exp
  enable_for_state: Boolean_comparison_exp
  id: uuid_comparison_exp
  metabase_link: String_comparison_exp
  permission: String_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_role_access_config"
"""
enum dashboard_role_access_config_constraint {
  """unique or primary key constraint"""
  dashboard_role_access_config_pkey
}

"""
input type for inserting data into table "dashboard_role_access_config"
"""
input dashboard_role_access_config_insert_input {
  enable_for_block: Boolean
  enable_for_cluster: Boolean
  enable_for_district: Boolean
  enable_for_state: Boolean
  id: uuid
  metabase_link: String
  permission: String
}

"""aggregate max on columns"""
type dashboard_role_access_config_max_fields {
  id: uuid
  metabase_link: String
  permission: String
}

"""aggregate min on columns"""
type dashboard_role_access_config_min_fields {
  id: uuid
  metabase_link: String
  permission: String
}

"""
response of any mutation on the table "dashboard_role_access_config"
"""
type dashboard_role_access_config_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [dashboard_role_access_config!]!
}

"""
on conflict condition type for table "dashboard_role_access_config"
"""
input dashboard_role_access_config_on_conflict {
  constraint: dashboard_role_access_config_constraint!
  update_columns: [dashboard_role_access_config_update_column!]! = []
  where: dashboard_role_access_config_bool_exp
}

"""
Ordering options when selecting data from "dashboard_role_access_config".
"""
input dashboard_role_access_config_order_by {
  enable_for_block: order_by
  enable_for_cluster: order_by
  enable_for_district: order_by
  enable_for_state: order_by
  id: order_by
  metabase_link: order_by
  permission: order_by
}

"""primary key columns input for table: dashboard_role_access_config"""
input dashboard_role_access_config_pk_columns_input {
  id: uuid!
}

"""
select columns of table "dashboard_role_access_config"
"""
enum dashboard_role_access_config_select_column {
  """column name"""
  enable_for_block

  """column name"""
  enable_for_cluster

  """column name"""
  enable_for_district

  """column name"""
  enable_for_state

  """column name"""
  id

  """column name"""
  metabase_link

  """column name"""
  permission
}

"""
input type for updating data in table "dashboard_role_access_config"
"""
input dashboard_role_access_config_set_input {
  enable_for_block: Boolean
  enable_for_cluster: Boolean
  enable_for_district: Boolean
  enable_for_state: Boolean
  id: uuid
  metabase_link: String
  permission: String
}

"""
update columns of table "dashboard_role_access_config"
"""
enum dashboard_role_access_config_update_column {
  """column name"""
  enable_for_block

  """column name"""
  enable_for_cluster

  """column name"""
  enable_for_district

  """column name"""
  enable_for_state

  """column name"""
  id

  """column name"""
  metabase_link

  """column name"""
  permission
}

"""
columns and relationships of "dashboard_userdashboardmodule"
"""
type dashboard_userdashboardmodule {
  app_label: String
  children: String!
  collapsed: Boolean!
  column: Int!
  id: Int!
  module: String!
  order: Int!
  settings: String!
  title: String!
  user: Int!
}

"""
aggregated selection of "dashboard_userdashboardmodule"
"""
type dashboard_userdashboardmodule_aggregate {
  aggregate: dashboard_userdashboardmodule_aggregate_fields
  nodes: [dashboard_userdashboardmodule!]!
}

"""
aggregate fields of "dashboard_userdashboardmodule"
"""
type dashboard_userdashboardmodule_aggregate_fields {
  avg: dashboard_userdashboardmodule_avg_fields
  count(columns: [dashboard_userdashboardmodule_select_column!], distinct: Boolean): Int!
  max: dashboard_userdashboardmodule_max_fields
  min: dashboard_userdashboardmodule_min_fields
  stddev: dashboard_userdashboardmodule_stddev_fields
  stddev_pop: dashboard_userdashboardmodule_stddev_pop_fields
  stddev_samp: dashboard_userdashboardmodule_stddev_samp_fields
  sum: dashboard_userdashboardmodule_sum_fields
  var_pop: dashboard_userdashboardmodule_var_pop_fields
  var_samp: dashboard_userdashboardmodule_var_samp_fields
  variance: dashboard_userdashboardmodule_variance_fields
}

"""aggregate avg on columns"""
type dashboard_userdashboardmodule_avg_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""
Boolean expression to filter rows from the table "dashboard_userdashboardmodule". All fields are combined with a logical 'AND'.
"""
input dashboard_userdashboardmodule_bool_exp {
  _and: [dashboard_userdashboardmodule_bool_exp!]
  _not: dashboard_userdashboardmodule_bool_exp
  _or: [dashboard_userdashboardmodule_bool_exp!]
  app_label: String_comparison_exp
  children: String_comparison_exp
  collapsed: Boolean_comparison_exp
  column: Int_comparison_exp
  id: Int_comparison_exp
  module: String_comparison_exp
  order: Int_comparison_exp
  settings: String_comparison_exp
  title: String_comparison_exp
  user: Int_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_userdashboardmodule"
"""
enum dashboard_userdashboardmodule_constraint {
  """unique or primary key constraint"""
  dashboard_userdashboardmodule_pkey
}

"""
input type for incrementing numeric columns in table "dashboard_userdashboardmodule"
"""
input dashboard_userdashboardmodule_inc_input {
  column: Int
  id: Int
  order: Int
  user: Int
}

"""
input type for inserting data into table "dashboard_userdashboardmodule"
"""
input dashboard_userdashboardmodule_insert_input {
  app_label: String
  children: String
  collapsed: Boolean
  column: Int
  id: Int
  module: String
  order: Int
  settings: String
  title: String
  user: Int
}

"""aggregate max on columns"""
type dashboard_userdashboardmodule_max_fields {
  app_label: String
  children: String
  column: Int
  id: Int
  module: String
  order: Int
  settings: String
  title: String
  user: Int
}

"""aggregate min on columns"""
type dashboard_userdashboardmodule_min_fields {
  app_label: String
  children: String
  column: Int
  id: Int
  module: String
  order: Int
  settings: String
  title: String
  user: Int
}

"""
response of any mutation on the table "dashboard_userdashboardmodule"
"""
type dashboard_userdashboardmodule_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [dashboard_userdashboardmodule!]!
}

"""
on conflict condition type for table "dashboard_userdashboardmodule"
"""
input dashboard_userdashboardmodule_on_conflict {
  constraint: dashboard_userdashboardmodule_constraint!
  update_columns: [dashboard_userdashboardmodule_update_column!]! = []
  where: dashboard_userdashboardmodule_bool_exp
}

"""
Ordering options when selecting data from "dashboard_userdashboardmodule".
"""
input dashboard_userdashboardmodule_order_by {
  app_label: order_by
  children: order_by
  collapsed: order_by
  column: order_by
  id: order_by
  module: order_by
  order: order_by
  settings: order_by
  title: order_by
  user: order_by
}

"""primary key columns input for table: dashboard_userdashboardmodule"""
input dashboard_userdashboardmodule_pk_columns_input {
  id: Int!
}

"""
select columns of table "dashboard_userdashboardmodule"
"""
enum dashboard_userdashboardmodule_select_column {
  """column name"""
  app_label

  """column name"""
  children

  """column name"""
  collapsed

  """column name"""
  column

  """column name"""
  id

  """column name"""
  module

  """column name"""
  order

  """column name"""
  settings

  """column name"""
  title

  """column name"""
  user
}

"""
input type for updating data in table "dashboard_userdashboardmodule"
"""
input dashboard_userdashboardmodule_set_input {
  app_label: String
  children: String
  collapsed: Boolean
  column: Int
  id: Int
  module: String
  order: Int
  settings: String
  title: String
  user: Int
}

"""aggregate stddev on columns"""
type dashboard_userdashboardmodule_stddev_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""aggregate stddev_pop on columns"""
type dashboard_userdashboardmodule_stddev_pop_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""aggregate stddev_samp on columns"""
type dashboard_userdashboardmodule_stddev_samp_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""aggregate sum on columns"""
type dashboard_userdashboardmodule_sum_fields {
  column: Int
  id: Int
  order: Int
  user: Int
}

"""
update columns of table "dashboard_userdashboardmodule"
"""
enum dashboard_userdashboardmodule_update_column {
  """column name"""
  app_label

  """column name"""
  children

  """column name"""
  collapsed

  """column name"""
  column

  """column name"""
  id

  """column name"""
  module

  """column name"""
  order

  """column name"""
  settings

  """column name"""
  title

  """column name"""
  user
}

"""aggregate var_pop on columns"""
type dashboard_userdashboardmodule_var_pop_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""aggregate var_samp on columns"""
type dashboard_userdashboardmodule_var_samp_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""aggregate variance on columns"""
type dashboard_userdashboardmodule_variance_fields {
  column: Float
  id: Float
  order: Float
  user: Float
}

"""
columns and relationships of "data_sets"
"""
type data_sets {
  """"""
  last_update_instant: bigint!

  """"""
  name: String!
}

"""
aggregated selection of "data_sets"
"""
type data_sets_aggregate {
  """"""
  aggregate: data_sets_aggregate_fields

  """"""
  nodes: [data_sets!]!
}

"""
aggregate fields of "data_sets"
"""
type data_sets_aggregate_fields {
  """"""
  avg: data_sets_avg_fields

  """"""
  count(columns: [data_sets_select_column!], distinct: Boolean): Int!

  """"""
  max: data_sets_max_fields

  """"""
  min: data_sets_min_fields

  """"""
  stddev: data_sets_stddev_fields

  """"""
  stddev_pop: data_sets_stddev_pop_fields

  """"""
  stddev_samp: data_sets_stddev_samp_fields

  """"""
  sum: data_sets_sum_fields

  """"""
  var_pop: data_sets_var_pop_fields

  """"""
  var_samp: data_sets_var_samp_fields

  """"""
  variance: data_sets_variance_fields
}

"""aggregate avg on columns"""
type data_sets_avg_fields {
  """"""
  last_update_instant: Float
}

"""
Boolean expression to filter rows from the table "data_sets". All fields are combined with a logical 'AND'.
"""
input data_sets_bool_exp {
  """"""
  _and: [data_sets_bool_exp!]

  """"""
  _not: data_sets_bool_exp

  """"""
  _or: [data_sets_bool_exp!]

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "data_sets"
"""
enum data_sets_constraint {
  """unique or primary key constraint"""
  data_sets_pkey
}

"""
input type for incrementing numeric columns in table "data_sets"
"""
input data_sets_inc_input {
  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "data_sets"
"""
input data_sets_insert_input {
  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate max on columns"""
type data_sets_max_fields {
  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate min on columns"""
type data_sets_min_fields {
  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
response of any mutation on the table "data_sets"
"""
type data_sets_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [data_sets!]!
}

"""
on conflict condition type for table "data_sets"
"""
input data_sets_on_conflict {
  """"""
  constraint: data_sets_constraint!

  """"""
  update_columns: [data_sets_update_column!]!

  """"""
  where: data_sets_bool_exp
}

"""Ordering options when selecting data from "data_sets"."""
input data_sets_order_by {
  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""primary key columns input for table: data_sets"""
input data_sets_pk_columns_input {
  """"""
  name: String!
}

"""
select columns of table "data_sets"
"""
enum data_sets_select_column {
  """column name"""
  last_update_instant

  """column name"""
  name
}

"""
input type for updating data in table "data_sets"
"""
input data_sets_set_input {
  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate stddev on columns"""
type data_sets_stddev_fields {
  """"""
  last_update_instant: Float
}

"""aggregate stddev_pop on columns"""
type data_sets_stddev_pop_fields {
  """"""
  last_update_instant: Float
}

"""aggregate stddev_samp on columns"""
type data_sets_stddev_samp_fields {
  """"""
  last_update_instant: Float
}

"""aggregate sum on columns"""
type data_sets_sum_fields {
  """"""
  last_update_instant: bigint
}

"""
update columns of table "data_sets"
"""
enum data_sets_update_column {
  """column name"""
  last_update_instant

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type data_sets_var_pop_fields {
  """"""
  last_update_instant: Float
}

"""aggregate var_samp on columns"""
type data_sets_var_samp_fields {
  """"""
  last_update_instant: Float
}

"""aggregate variance on columns"""
type data_sets_variance_fields {
  """"""
  last_update_instant: Float
}

scalar date

"""
Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

"""
columns and relationships of "deadline"
"""
type deadline {
  acad_year: String!

  """An array relationship"""
  assessments(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """An aggregate relationship"""
  assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!
  date: timestamptz!
  district: String!
  id: Int!
  session: String!
}

"""
aggregated selection of "deadline"
"""
type deadline_aggregate {
  aggregate: deadline_aggregate_fields
  nodes: [deadline!]!
}

"""
aggregate fields of "deadline"
"""
type deadline_aggregate_fields {
  avg: deadline_avg_fields
  count(columns: [deadline_select_column!], distinct: Boolean): Int!
  max: deadline_max_fields
  min: deadline_min_fields
  stddev: deadline_stddev_fields
  stddev_pop: deadline_stddev_pop_fields
  stddev_samp: deadline_stddev_samp_fields
  sum: deadline_sum_fields
  var_pop: deadline_var_pop_fields
  var_samp: deadline_var_samp_fields
  variance: deadline_variance_fields
}

"""aggregate avg on columns"""
type deadline_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "deadline". All fields are combined with a logical 'AND'.
"""
input deadline_bool_exp {
  _and: [deadline_bool_exp!]
  _not: deadline_bool_exp
  _or: [deadline_bool_exp!]
  acad_year: String_comparison_exp
  assessments: assessment_bool_exp
  date: timestamptz_comparison_exp
  district: String_comparison_exp
  id: Int_comparison_exp
  session: String_comparison_exp
}

"""
unique or primary key constraints on table "deadline"
"""
enum deadline_constraint {
  """unique or primary key constraint"""
  deadline_pkey
}

"""
input type for incrementing numeric columns in table "deadline"
"""
input deadline_inc_input {
  id: Int
}

"""
input type for inserting data into table "deadline"
"""
input deadline_insert_input {
  acad_year: String
  assessments: assessment_arr_rel_insert_input
  date: timestamptz
  district: String
  id: Int
  session: String
}

"""aggregate max on columns"""
type deadline_max_fields {
  acad_year: String
  date: timestamptz
  district: String
  id: Int
  session: String
}

"""aggregate min on columns"""
type deadline_min_fields {
  acad_year: String
  date: timestamptz
  district: String
  id: Int
  session: String
}

"""
response of any mutation on the table "deadline"
"""
type deadline_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [deadline!]!
}

"""
input type for inserting object relation for remote table "deadline"
"""
input deadline_obj_rel_insert_input {
  data: deadline_insert_input!

  """on conflict condition"""
  on_conflict: deadline_on_conflict
}

"""
on conflict condition type for table "deadline"
"""
input deadline_on_conflict {
  constraint: deadline_constraint!
  update_columns: [deadline_update_column!]! = []
  where: deadline_bool_exp
}

"""Ordering options when selecting data from "deadline"."""
input deadline_order_by {
  acad_year: order_by
  assessments_aggregate: assessment_aggregate_order_by
  date: order_by
  district: order_by
  id: order_by
  session: order_by
}

"""primary key columns input for table: deadline"""
input deadline_pk_columns_input {
  id: Int!
}

"""
select columns of table "deadline"
"""
enum deadline_select_column {
  """column name"""
  acad_year

  """column name"""
  date

  """column name"""
  district

  """column name"""
  id

  """column name"""
  session
}

"""
input type for updating data in table "deadline"
"""
input deadline_set_input {
  acad_year: String
  date: timestamptz
  district: String
  id: Int
  session: String
}

"""aggregate stddev on columns"""
type deadline_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type deadline_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type deadline_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type deadline_sum_fields {
  id: Int
}

"""
update columns of table "deadline"
"""
enum deadline_update_column {
  """column name"""
  acad_year

  """column name"""
  date

  """column name"""
  district

  """column name"""
  id

  """column name"""
  session
}

"""aggregate var_pop on columns"""
type deadline_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type deadline_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type deadline_variance_fields {
  id: Float
}

"""
columns and relationships of "designation_scope_mapping"
"""
type designation_scope_mapping {
  designation: name!
  id: uuid!
  scope: name!
}

"""
aggregated selection of "designation_scope_mapping"
"""
type designation_scope_mapping_aggregate {
  aggregate: designation_scope_mapping_aggregate_fields
  nodes: [designation_scope_mapping!]!
}

"""
aggregate fields of "designation_scope_mapping"
"""
type designation_scope_mapping_aggregate_fields {
  count(columns: [designation_scope_mapping_select_column!], distinct: Boolean): Int!
  max: designation_scope_mapping_max_fields
  min: designation_scope_mapping_min_fields
}

"""
Boolean expression to filter rows from the table "designation_scope_mapping". All fields are combined with a logical 'AND'.
"""
input designation_scope_mapping_bool_exp {
  _and: [designation_scope_mapping_bool_exp!]
  _not: designation_scope_mapping_bool_exp
  _or: [designation_scope_mapping_bool_exp!]
  designation: name_comparison_exp
  id: uuid_comparison_exp
  scope: name_comparison_exp
}

"""
unique or primary key constraints on table "designation_scope_mapping"
"""
enum designation_scope_mapping_constraint {
  """unique or primary key constraint"""
  designation_scope_mapping_pkey
}

"""
input type for inserting data into table "designation_scope_mapping"
"""
input designation_scope_mapping_insert_input {
  designation: name
  id: uuid
  scope: name
}

"""aggregate max on columns"""
type designation_scope_mapping_max_fields {
  id: uuid
}

"""aggregate min on columns"""
type designation_scope_mapping_min_fields {
  id: uuid
}

"""
response of any mutation on the table "designation_scope_mapping"
"""
type designation_scope_mapping_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [designation_scope_mapping!]!
}

"""
on conflict condition type for table "designation_scope_mapping"
"""
input designation_scope_mapping_on_conflict {
  constraint: designation_scope_mapping_constraint!
  update_columns: [designation_scope_mapping_update_column!]! = []
  where: designation_scope_mapping_bool_exp
}

"""Ordering options when selecting data from "designation_scope_mapping"."""
input designation_scope_mapping_order_by {
  designation: order_by
  id: order_by
  scope: order_by
}

"""primary key columns input for table: designation_scope_mapping"""
input designation_scope_mapping_pk_columns_input {
  id: uuid!
}

"""
select columns of table "designation_scope_mapping"
"""
enum designation_scope_mapping_select_column {
  """column name"""
  designation

  """column name"""
  id

  """column name"""
  scope
}

"""
input type for updating data in table "designation_scope_mapping"
"""
input designation_scope_mapping_set_input {
  designation: name
  id: uuid
  scope: name
}

"""
update columns of table "designation_scope_mapping"
"""
enum designation_scope_mapping_update_column {
  """column name"""
  designation

  """column name"""
  id

  """column name"""
  scope
}

"""
columns and relationships of "device_demand_response"
"""
type device_demand_response {
  block: String
  created_at: timestamptz
  declaration: Boolean
  district: String
  id: Int!
  name: String
  phone_number: String
  pincode: String
  school_name: String
  student_count_no_smartphone: Int
  student_details: String
  total_students: Int
  udise: Int
  updated_at: timestamptz
}

"""
aggregated selection of "device_demand_response"
"""
type device_demand_response_aggregate {
  aggregate: device_demand_response_aggregate_fields
  nodes: [device_demand_response!]!
}

"""
aggregate fields of "device_demand_response"
"""
type device_demand_response_aggregate_fields {
  avg: device_demand_response_avg_fields
  count(columns: [device_demand_response_select_column!], distinct: Boolean): Int!
  max: device_demand_response_max_fields
  min: device_demand_response_min_fields
  stddev: device_demand_response_stddev_fields
  stddev_pop: device_demand_response_stddev_pop_fields
  stddev_samp: device_demand_response_stddev_samp_fields
  sum: device_demand_response_sum_fields
  var_pop: device_demand_response_var_pop_fields
  var_samp: device_demand_response_var_samp_fields
  variance: device_demand_response_variance_fields
}

"""aggregate avg on columns"""
type device_demand_response_avg_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "device_demand_response". All fields are combined with a logical 'AND'.
"""
input device_demand_response_bool_exp {
  _and: [device_demand_response_bool_exp!]
  _not: device_demand_response_bool_exp
  _or: [device_demand_response_bool_exp!]
  block: String_comparison_exp
  created_at: timestamptz_comparison_exp
  declaration: Boolean_comparison_exp
  district: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  phone_number: String_comparison_exp
  pincode: String_comparison_exp
  school_name: String_comparison_exp
  student_count_no_smartphone: Int_comparison_exp
  student_details: String_comparison_exp
  total_students: Int_comparison_exp
  udise: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "device_demand_response"
"""
enum device_demand_response_constraint {
  """unique or primary key constraint"""
  device_demand_response_pkey
}

"""
input type for incrementing numeric columns in table "device_demand_response"
"""
input device_demand_response_inc_input {
  id: Int
  student_count_no_smartphone: Int
  total_students: Int
  udise: Int
}

"""
input type for inserting data into table "device_demand_response"
"""
input device_demand_response_insert_input {
  block: String
  created_at: timestamptz
  declaration: Boolean
  district: String
  id: Int
  name: String
  phone_number: String
  pincode: String
  school_name: String
  student_count_no_smartphone: Int
  student_details: String
  total_students: Int
  udise: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type device_demand_response_max_fields {
  block: String
  created_at: timestamptz
  district: String
  id: Int
  name: String
  phone_number: String
  pincode: String
  school_name: String
  student_count_no_smartphone: Int
  student_details: String
  total_students: Int
  udise: Int
  updated_at: timestamptz
}

"""aggregate min on columns"""
type device_demand_response_min_fields {
  block: String
  created_at: timestamptz
  district: String
  id: Int
  name: String
  phone_number: String
  pincode: String
  school_name: String
  student_count_no_smartphone: Int
  student_details: String
  total_students: Int
  udise: Int
  updated_at: timestamptz
}

"""
response of any mutation on the table "device_demand_response"
"""
type device_demand_response_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [device_demand_response!]!
}

"""
on conflict condition type for table "device_demand_response"
"""
input device_demand_response_on_conflict {
  constraint: device_demand_response_constraint!
  update_columns: [device_demand_response_update_column!]! = []
  where: device_demand_response_bool_exp
}

"""Ordering options when selecting data from "device_demand_response"."""
input device_demand_response_order_by {
  block: order_by
  created_at: order_by
  declaration: order_by
  district: order_by
  id: order_by
  name: order_by
  phone_number: order_by
  pincode: order_by
  school_name: order_by
  student_count_no_smartphone: order_by
  student_details: order_by
  total_students: order_by
  udise: order_by
  updated_at: order_by
}

"""primary key columns input for table: device_demand_response"""
input device_demand_response_pk_columns_input {
  id: Int!
}

"""
select columns of table "device_demand_response"
"""
enum device_demand_response_select_column {
  """column name"""
  block

  """column name"""
  created_at

  """column name"""
  declaration

  """column name"""
  district

  """column name"""
  id

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  pincode

  """column name"""
  school_name

  """column name"""
  student_count_no_smartphone

  """column name"""
  student_details

  """column name"""
  total_students

  """column name"""
  udise

  """column name"""
  updated_at
}

"""
input type for updating data in table "device_demand_response"
"""
input device_demand_response_set_input {
  block: String
  created_at: timestamptz
  declaration: Boolean
  district: String
  id: Int
  name: String
  phone_number: String
  pincode: String
  school_name: String
  student_count_no_smartphone: Int
  student_details: String
  total_students: Int
  udise: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type device_demand_response_stddev_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type device_demand_response_stddev_pop_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type device_demand_response_stddev_samp_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""aggregate sum on columns"""
type device_demand_response_sum_fields {
  id: Int
  student_count_no_smartphone: Int
  total_students: Int
  udise: Int
}

"""
update columns of table "device_demand_response"
"""
enum device_demand_response_update_column {
  """column name"""
  block

  """column name"""
  created_at

  """column name"""
  declaration

  """column name"""
  district

  """column name"""
  id

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  pincode

  """column name"""
  school_name

  """column name"""
  student_count_no_smartphone

  """column name"""
  student_details

  """column name"""
  total_students

  """column name"""
  udise

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type device_demand_response_var_pop_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type device_demand_response_var_samp_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""aggregate variance on columns"""
type device_demand_response_variance_fields {
  id: Float
  student_count_no_smartphone: Float
  total_students: Float
  udise: Float
}

"""
columns and relationships of "device_donation_corporates"
"""
type device_donation_corporates {
  company_id: String!
  company_name: String

  """An array relationship"""
  corporate_donor_devices(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): [corporate_donor_devices!]!

  """An aggregate relationship"""
  corporate_donor_devices_aggregate(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): corporate_donor_devices_aggregate!
  delivery_initiated: Boolean
  id: Int!
  poc_designation: String
  poc_email: String
  poc_name: String
  poc_phone_number: String
  quantity_of_devices: Int
}

"""
aggregated selection of "device_donation_corporates"
"""
type device_donation_corporates_aggregate {
  aggregate: device_donation_corporates_aggregate_fields
  nodes: [device_donation_corporates!]!
}

"""
aggregate fields of "device_donation_corporates"
"""
type device_donation_corporates_aggregate_fields {
  avg: device_donation_corporates_avg_fields
  count(columns: [device_donation_corporates_select_column!], distinct: Boolean): Int!
  max: device_donation_corporates_max_fields
  min: device_donation_corporates_min_fields
  stddev: device_donation_corporates_stddev_fields
  stddev_pop: device_donation_corporates_stddev_pop_fields
  stddev_samp: device_donation_corporates_stddev_samp_fields
  sum: device_donation_corporates_sum_fields
  var_pop: device_donation_corporates_var_pop_fields
  var_samp: device_donation_corporates_var_samp_fields
  variance: device_donation_corporates_variance_fields
}

"""aggregate avg on columns"""
type device_donation_corporates_avg_fields {
  id: Float
  quantity_of_devices: Float
}

"""
Boolean expression to filter rows from the table "device_donation_corporates". All fields are combined with a logical 'AND'.
"""
input device_donation_corporates_bool_exp {
  _and: [device_donation_corporates_bool_exp!]
  _not: device_donation_corporates_bool_exp
  _or: [device_donation_corporates_bool_exp!]
  company_id: String_comparison_exp
  company_name: String_comparison_exp
  corporate_donor_devices: corporate_donor_devices_bool_exp
  delivery_initiated: Boolean_comparison_exp
  id: Int_comparison_exp
  poc_designation: String_comparison_exp
  poc_email: String_comparison_exp
  poc_name: String_comparison_exp
  poc_phone_number: String_comparison_exp
  quantity_of_devices: Int_comparison_exp
}

"""
unique or primary key constraints on table "device_donation_corporates"
"""
enum device_donation_corporates_constraint {
  """unique or primary key constraint"""
  device_donation_corporates_pkey
}

"""
input type for incrementing numeric columns in table "device_donation_corporates"
"""
input device_donation_corporates_inc_input {
  id: Int
  quantity_of_devices: Int
}

"""
input type for inserting data into table "device_donation_corporates"
"""
input device_donation_corporates_insert_input {
  company_id: String
  company_name: String
  corporate_donor_devices: corporate_donor_devices_arr_rel_insert_input
  delivery_initiated: Boolean
  id: Int
  poc_designation: String
  poc_email: String
  poc_name: String
  poc_phone_number: String
  quantity_of_devices: Int
}

"""aggregate max on columns"""
type device_donation_corporates_max_fields {
  company_id: String
  company_name: String
  id: Int
  poc_designation: String
  poc_email: String
  poc_name: String
  poc_phone_number: String
  quantity_of_devices: Int
}

"""aggregate min on columns"""
type device_donation_corporates_min_fields {
  company_id: String
  company_name: String
  id: Int
  poc_designation: String
  poc_email: String
  poc_name: String
  poc_phone_number: String
  quantity_of_devices: Int
}

"""
response of any mutation on the table "device_donation_corporates"
"""
type device_donation_corporates_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [device_donation_corporates!]!
}

"""
input type for inserting object relation for remote table "device_donation_corporates"
"""
input device_donation_corporates_obj_rel_insert_input {
  data: device_donation_corporates_insert_input!

  """on conflict condition"""
  on_conflict: device_donation_corporates_on_conflict
}

"""
on conflict condition type for table "device_donation_corporates"
"""
input device_donation_corporates_on_conflict {
  constraint: device_donation_corporates_constraint!
  update_columns: [device_donation_corporates_update_column!]! = []
  where: device_donation_corporates_bool_exp
}

"""
Ordering options when selecting data from "device_donation_corporates".
"""
input device_donation_corporates_order_by {
  company_id: order_by
  company_name: order_by
  corporate_donor_devices_aggregate: corporate_donor_devices_aggregate_order_by
  delivery_initiated: order_by
  id: order_by
  poc_designation: order_by
  poc_email: order_by
  poc_name: order_by
  poc_phone_number: order_by
  quantity_of_devices: order_by
}

"""primary key columns input for table: device_donation_corporates"""
input device_donation_corporates_pk_columns_input {
  company_id: String!
}

"""
select columns of table "device_donation_corporates"
"""
enum device_donation_corporates_select_column {
  """column name"""
  company_id

  """column name"""
  company_name

  """column name"""
  delivery_initiated

  """column name"""
  id

  """column name"""
  poc_designation

  """column name"""
  poc_email

  """column name"""
  poc_name

  """column name"""
  poc_phone_number

  """column name"""
  quantity_of_devices
}

"""
input type for updating data in table "device_donation_corporates"
"""
input device_donation_corporates_set_input {
  company_id: String
  company_name: String
  delivery_initiated: Boolean
  id: Int
  poc_designation: String
  poc_email: String
  poc_name: String
  poc_phone_number: String
  quantity_of_devices: Int
}

"""aggregate stddev on columns"""
type device_donation_corporates_stddev_fields {
  id: Float
  quantity_of_devices: Float
}

"""aggregate stddev_pop on columns"""
type device_donation_corporates_stddev_pop_fields {
  id: Float
  quantity_of_devices: Float
}

"""aggregate stddev_samp on columns"""
type device_donation_corporates_stddev_samp_fields {
  id: Float
  quantity_of_devices: Float
}

"""aggregate sum on columns"""
type device_donation_corporates_sum_fields {
  id: Int
  quantity_of_devices: Int
}

"""
update columns of table "device_donation_corporates"
"""
enum device_donation_corporates_update_column {
  """column name"""
  company_id

  """column name"""
  company_name

  """column name"""
  delivery_initiated

  """column name"""
  id

  """column name"""
  poc_designation

  """column name"""
  poc_email

  """column name"""
  poc_name

  """column name"""
  poc_phone_number

  """column name"""
  quantity_of_devices
}

"""aggregate var_pop on columns"""
type device_donation_corporates_var_pop_fields {
  id: Float
  quantity_of_devices: Float
}

"""aggregate var_samp on columns"""
type device_donation_corporates_var_samp_fields {
  id: Float
  quantity_of_devices: Float
}

"""aggregate variance on columns"""
type device_donation_corporates_variance_fields {
  id: Float
  quantity_of_devices: Float
}

"""
columns and relationships of "device_donation_donor"
"""
type device_donation_donor {
  address: String
  block: String
  call_function: Boolean
  charger_available: Boolean
  created_at: timestamptz!
  declaration_acknowledgement: String
  delivery_mode: String
  delivery_mode_outside_HP: String
  delivery_status: String
  device_age: Int
  device_company: String
  device_condition: String
  device_model: String
  device_other_model: String
  device_size: String
  device_tracking_key: String

  """An object relationship"""
  device_verification_record: device_verification_records!
  district: String
  final_declaration: String
  id: Int!
  is_device_delivered: Boolean
  is_device_received: Boolean
  landmark: String
  name: String
  other_district: String
  phone_number: String
  pincode: String
  recipient_grade: Int
  recipient_name: String

  """An object relationship"""
  recipient_school: school
  recipient_school_id: Int
  recipient_student_id: String
  state_ut: String
  updated_at: timestamptz
  wa_function: Boolean
  yt_function: Boolean
}

"""
aggregated selection of "device_donation_donor"
"""
type device_donation_donor_aggregate {
  aggregate: device_donation_donor_aggregate_fields
  nodes: [device_donation_donor!]!
}

"""
aggregate fields of "device_donation_donor"
"""
type device_donation_donor_aggregate_fields {
  avg: device_donation_donor_avg_fields
  count(columns: [device_donation_donor_select_column!], distinct: Boolean): Int!
  max: device_donation_donor_max_fields
  min: device_donation_donor_min_fields
  stddev: device_donation_donor_stddev_fields
  stddev_pop: device_donation_donor_stddev_pop_fields
  stddev_samp: device_donation_donor_stddev_samp_fields
  sum: device_donation_donor_sum_fields
  var_pop: device_donation_donor_var_pop_fields
  var_samp: device_donation_donor_var_samp_fields
  variance: device_donation_donor_variance_fields
}

"""
order by aggregate values of table "device_donation_donor"
"""
input device_donation_donor_aggregate_order_by {
  avg: device_donation_donor_avg_order_by
  count: order_by
  max: device_donation_donor_max_order_by
  min: device_donation_donor_min_order_by
  stddev: device_donation_donor_stddev_order_by
  stddev_pop: device_donation_donor_stddev_pop_order_by
  stddev_samp: device_donation_donor_stddev_samp_order_by
  sum: device_donation_donor_sum_order_by
  var_pop: device_donation_donor_var_pop_order_by
  var_samp: device_donation_donor_var_samp_order_by
  variance: device_donation_donor_variance_order_by
}

"""
input type for inserting array relation for remote table "device_donation_donor"
"""
input device_donation_donor_arr_rel_insert_input {
  data: [device_donation_donor_insert_input!]!

  """on conflict condition"""
  on_conflict: device_donation_donor_on_conflict
}

"""aggregate avg on columns"""
type device_donation_donor_avg_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by avg() on columns of table "device_donation_donor"
"""
input device_donation_donor_avg_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""
Boolean expression to filter rows from the table "device_donation_donor". All fields are combined with a logical 'AND'.
"""
input device_donation_donor_bool_exp {
  _and: [device_donation_donor_bool_exp!]
  _not: device_donation_donor_bool_exp
  _or: [device_donation_donor_bool_exp!]
  address: String_comparison_exp
  block: String_comparison_exp
  call_function: Boolean_comparison_exp
  charger_available: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  declaration_acknowledgement: String_comparison_exp
  delivery_mode: String_comparison_exp
  delivery_mode_outside_HP: String_comparison_exp
  delivery_status: String_comparison_exp
  device_age: Int_comparison_exp
  device_company: String_comparison_exp
  device_condition: String_comparison_exp
  device_model: String_comparison_exp
  device_other_model: String_comparison_exp
  device_size: String_comparison_exp
  device_tracking_key: String_comparison_exp
  device_verification_record: device_verification_records_bool_exp
  district: String_comparison_exp
  final_declaration: String_comparison_exp
  id: Int_comparison_exp
  is_device_delivered: Boolean_comparison_exp
  is_device_received: Boolean_comparison_exp
  landmark: String_comparison_exp
  name: String_comparison_exp
  other_district: String_comparison_exp
  phone_number: String_comparison_exp
  pincode: String_comparison_exp
  recipient_grade: Int_comparison_exp
  recipient_name: String_comparison_exp
  recipient_school: school_bool_exp
  recipient_school_id: Int_comparison_exp
  recipient_student_id: String_comparison_exp
  state_ut: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  wa_function: Boolean_comparison_exp
  yt_function: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "device_donation_donor"
"""
enum device_donation_donor_constraint {
  """unique or primary key constraint"""
  device_donation_donor_device_tracking_id_key

  """unique or primary key constraint"""
  device_donation_donor_pkey
}

"""
input type for incrementing numeric columns in table "device_donation_donor"
"""
input device_donation_donor_inc_input {
  device_age: Int
  id: Int
  recipient_grade: Int
  recipient_school_id: Int
}

"""
input type for inserting data into table "device_donation_donor"
"""
input device_donation_donor_insert_input {
  address: String
  block: String
  call_function: Boolean
  charger_available: Boolean
  created_at: timestamptz
  declaration_acknowledgement: String
  delivery_mode: String
  delivery_mode_outside_HP: String
  delivery_status: String
  device_age: Int
  device_company: String
  device_condition: String
  device_model: String
  device_other_model: String
  device_size: String
  device_tracking_key: String
  device_verification_record: device_verification_records_obj_rel_insert_input
  district: String
  final_declaration: String
  id: Int
  is_device_delivered: Boolean
  is_device_received: Boolean
  landmark: String
  name: String
  other_district: String
  phone_number: String
  pincode: String
  recipient_grade: Int
  recipient_name: String
  recipient_school: school_obj_rel_insert_input
  recipient_school_id: Int
  recipient_student_id: String
  state_ut: String
  updated_at: timestamptz
  wa_function: Boolean
  yt_function: Boolean
}

"""aggregate max on columns"""
type device_donation_donor_max_fields {
  address: String
  block: String
  created_at: timestamptz
  declaration_acknowledgement: String
  delivery_mode: String
  delivery_mode_outside_HP: String
  delivery_status: String
  device_age: Int
  device_company: String
  device_condition: String
  device_model: String
  device_other_model: String
  device_size: String
  device_tracking_key: String
  district: String
  final_declaration: String
  id: Int
  landmark: String
  name: String
  other_district: String
  phone_number: String
  pincode: String
  recipient_grade: Int
  recipient_name: String
  recipient_school_id: Int
  recipient_student_id: String
  state_ut: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "device_donation_donor"
"""
input device_donation_donor_max_order_by {
  address: order_by
  block: order_by
  created_at: order_by
  declaration_acknowledgement: order_by
  delivery_mode: order_by
  delivery_mode_outside_HP: order_by
  delivery_status: order_by
  device_age: order_by
  device_company: order_by
  device_condition: order_by
  device_model: order_by
  device_other_model: order_by
  device_size: order_by
  device_tracking_key: order_by
  district: order_by
  final_declaration: order_by
  id: order_by
  landmark: order_by
  name: order_by
  other_district: order_by
  phone_number: order_by
  pincode: order_by
  recipient_grade: order_by
  recipient_name: order_by
  recipient_school_id: order_by
  recipient_student_id: order_by
  state_ut: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type device_donation_donor_min_fields {
  address: String
  block: String
  created_at: timestamptz
  declaration_acknowledgement: String
  delivery_mode: String
  delivery_mode_outside_HP: String
  delivery_status: String
  device_age: Int
  device_company: String
  device_condition: String
  device_model: String
  device_other_model: String
  device_size: String
  device_tracking_key: String
  district: String
  final_declaration: String
  id: Int
  landmark: String
  name: String
  other_district: String
  phone_number: String
  pincode: String
  recipient_grade: Int
  recipient_name: String
  recipient_school_id: Int
  recipient_student_id: String
  state_ut: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "device_donation_donor"
"""
input device_donation_donor_min_order_by {
  address: order_by
  block: order_by
  created_at: order_by
  declaration_acknowledgement: order_by
  delivery_mode: order_by
  delivery_mode_outside_HP: order_by
  delivery_status: order_by
  device_age: order_by
  device_company: order_by
  device_condition: order_by
  device_model: order_by
  device_other_model: order_by
  device_size: order_by
  device_tracking_key: order_by
  district: order_by
  final_declaration: order_by
  id: order_by
  landmark: order_by
  name: order_by
  other_district: order_by
  phone_number: order_by
  pincode: order_by
  recipient_grade: order_by
  recipient_name: order_by
  recipient_school_id: order_by
  recipient_student_id: order_by
  state_ut: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "device_donation_donor"
"""
type device_donation_donor_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [device_donation_donor!]!
}

"""
input type for inserting object relation for remote table "device_donation_donor"
"""
input device_donation_donor_obj_rel_insert_input {
  data: device_donation_donor_insert_input!

  """on conflict condition"""
  on_conflict: device_donation_donor_on_conflict
}

"""
on conflict condition type for table "device_donation_donor"
"""
input device_donation_donor_on_conflict {
  constraint: device_donation_donor_constraint!
  update_columns: [device_donation_donor_update_column!]! = []
  where: device_donation_donor_bool_exp
}

"""Ordering options when selecting data from "device_donation_donor"."""
input device_donation_donor_order_by {
  address: order_by
  block: order_by
  call_function: order_by
  charger_available: order_by
  created_at: order_by
  declaration_acknowledgement: order_by
  delivery_mode: order_by
  delivery_mode_outside_HP: order_by
  delivery_status: order_by
  device_age: order_by
  device_company: order_by
  device_condition: order_by
  device_model: order_by
  device_other_model: order_by
  device_size: order_by
  device_tracking_key: order_by
  device_verification_record: device_verification_records_order_by
  district: order_by
  final_declaration: order_by
  id: order_by
  is_device_delivered: order_by
  is_device_received: order_by
  landmark: order_by
  name: order_by
  other_district: order_by
  phone_number: order_by
  pincode: order_by
  recipient_grade: order_by
  recipient_name: order_by
  recipient_school: school_order_by
  recipient_school_id: order_by
  recipient_student_id: order_by
  state_ut: order_by
  updated_at: order_by
  wa_function: order_by
  yt_function: order_by
}

"""primary key columns input for table: device_donation_donor"""
input device_donation_donor_pk_columns_input {
  id: Int!
}

"""
select columns of table "device_donation_donor"
"""
enum device_donation_donor_select_column {
  """column name"""
  address

  """column name"""
  block

  """column name"""
  call_function

  """column name"""
  charger_available

  """column name"""
  created_at

  """column name"""
  declaration_acknowledgement

  """column name"""
  delivery_mode

  """column name"""
  delivery_mode_outside_HP

  """column name"""
  delivery_status

  """column name"""
  device_age

  """column name"""
  device_company

  """column name"""
  device_condition

  """column name"""
  device_model

  """column name"""
  device_other_model

  """column name"""
  device_size

  """column name"""
  device_tracking_key

  """column name"""
  district

  """column name"""
  final_declaration

  """column name"""
  id

  """column name"""
  is_device_delivered

  """column name"""
  is_device_received

  """column name"""
  landmark

  """column name"""
  name

  """column name"""
  other_district

  """column name"""
  phone_number

  """column name"""
  pincode

  """column name"""
  recipient_grade

  """column name"""
  recipient_name

  """column name"""
  recipient_school_id

  """column name"""
  recipient_student_id

  """column name"""
  state_ut

  """column name"""
  updated_at

  """column name"""
  wa_function

  """column name"""
  yt_function
}

"""
input type for updating data in table "device_donation_donor"
"""
input device_donation_donor_set_input {
  address: String
  block: String
  call_function: Boolean
  charger_available: Boolean
  created_at: timestamptz
  declaration_acknowledgement: String
  delivery_mode: String
  delivery_mode_outside_HP: String
  delivery_status: String
  device_age: Int
  device_company: String
  device_condition: String
  device_model: String
  device_other_model: String
  device_size: String
  device_tracking_key: String
  district: String
  final_declaration: String
  id: Int
  is_device_delivered: Boolean
  is_device_received: Boolean
  landmark: String
  name: String
  other_district: String
  phone_number: String
  pincode: String
  recipient_grade: Int
  recipient_name: String
  recipient_school_id: Int
  recipient_student_id: String
  state_ut: String
  updated_at: timestamptz
  wa_function: Boolean
  yt_function: Boolean
}

"""aggregate stddev on columns"""
type device_donation_donor_stddev_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by stddev() on columns of table "device_donation_donor"
"""
input device_donation_donor_stddev_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate stddev_pop on columns"""
type device_donation_donor_stddev_pop_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by stddev_pop() on columns of table "device_donation_donor"
"""
input device_donation_donor_stddev_pop_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate stddev_samp on columns"""
type device_donation_donor_stddev_samp_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by stddev_samp() on columns of table "device_donation_donor"
"""
input device_donation_donor_stddev_samp_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate sum on columns"""
type device_donation_donor_sum_fields {
  device_age: Int
  id: Int
  recipient_grade: Int
  recipient_school_id: Int
}

"""
order by sum() on columns of table "device_donation_donor"
"""
input device_donation_donor_sum_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""
update columns of table "device_donation_donor"
"""
enum device_donation_donor_update_column {
  """column name"""
  address

  """column name"""
  block

  """column name"""
  call_function

  """column name"""
  charger_available

  """column name"""
  created_at

  """column name"""
  declaration_acknowledgement

  """column name"""
  delivery_mode

  """column name"""
  delivery_mode_outside_HP

  """column name"""
  delivery_status

  """column name"""
  device_age

  """column name"""
  device_company

  """column name"""
  device_condition

  """column name"""
  device_model

  """column name"""
  device_other_model

  """column name"""
  device_size

  """column name"""
  device_tracking_key

  """column name"""
  district

  """column name"""
  final_declaration

  """column name"""
  id

  """column name"""
  is_device_delivered

  """column name"""
  is_device_received

  """column name"""
  landmark

  """column name"""
  name

  """column name"""
  other_district

  """column name"""
  phone_number

  """column name"""
  pincode

  """column name"""
  recipient_grade

  """column name"""
  recipient_name

  """column name"""
  recipient_school_id

  """column name"""
  recipient_student_id

  """column name"""
  state_ut

  """column name"""
  updated_at

  """column name"""
  wa_function

  """column name"""
  yt_function
}

"""aggregate var_pop on columns"""
type device_donation_donor_var_pop_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by var_pop() on columns of table "device_donation_donor"
"""
input device_donation_donor_var_pop_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate var_samp on columns"""
type device_donation_donor_var_samp_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by var_samp() on columns of table "device_donation_donor"
"""
input device_donation_donor_var_samp_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""aggregate variance on columns"""
type device_donation_donor_variance_fields {
  device_age: Float
  id: Float
  recipient_grade: Float
  recipient_school_id: Float
}

"""
order by variance() on columns of table "device_donation_donor"
"""
input device_donation_donor_variance_order_by {
  device_age: order_by
  id: order_by
  recipient_grade: order_by
  recipient_school_id: order_by
}

"""
columns and relationships of "device_verification_records"
"""
type device_verification_records {
  """An object relationship"""
  corporate_donor_device: corporate_donor_devices
  created_at: timestamptz!
  declaration: Boolean

  """An object relationship"""
  device_donation_donor: device_donation_donor
  device_tracking_key_corporate: String
  device_tracking_key_individual: String
  id: Int!
  photograph_url: String

  """An object relationship"""
  school: school!
  transaction_id: uuid!
  udise: Int!
  updated_at: timestamptz!
  verifier_name: String
  verifier_phone_number: String
}

"""
aggregated selection of "device_verification_records"
"""
type device_verification_records_aggregate {
  aggregate: device_verification_records_aggregate_fields
  nodes: [device_verification_records!]!
}

"""
aggregate fields of "device_verification_records"
"""
type device_verification_records_aggregate_fields {
  avg: device_verification_records_avg_fields
  count(columns: [device_verification_records_select_column!], distinct: Boolean): Int!
  max: device_verification_records_max_fields
  min: device_verification_records_min_fields
  stddev: device_verification_records_stddev_fields
  stddev_pop: device_verification_records_stddev_pop_fields
  stddev_samp: device_verification_records_stddev_samp_fields
  sum: device_verification_records_sum_fields
  var_pop: device_verification_records_var_pop_fields
  var_samp: device_verification_records_var_samp_fields
  variance: device_verification_records_variance_fields
}

"""
order by aggregate values of table "device_verification_records"
"""
input device_verification_records_aggregate_order_by {
  avg: device_verification_records_avg_order_by
  count: order_by
  max: device_verification_records_max_order_by
  min: device_verification_records_min_order_by
  stddev: device_verification_records_stddev_order_by
  stddev_pop: device_verification_records_stddev_pop_order_by
  stddev_samp: device_verification_records_stddev_samp_order_by
  sum: device_verification_records_sum_order_by
  var_pop: device_verification_records_var_pop_order_by
  var_samp: device_verification_records_var_samp_order_by
  variance: device_verification_records_variance_order_by
}

"""
input type for inserting array relation for remote table "device_verification_records"
"""
input device_verification_records_arr_rel_insert_input {
  data: [device_verification_records_insert_input!]!

  """on conflict condition"""
  on_conflict: device_verification_records_on_conflict
}

"""aggregate avg on columns"""
type device_verification_records_avg_fields {
  id: Float
  udise: Float
}

"""
order by avg() on columns of table "device_verification_records"
"""
input device_verification_records_avg_order_by {
  id: order_by
  udise: order_by
}

"""
Boolean expression to filter rows from the table "device_verification_records". All fields are combined with a logical 'AND'.
"""
input device_verification_records_bool_exp {
  _and: [device_verification_records_bool_exp!]
  _not: device_verification_records_bool_exp
  _or: [device_verification_records_bool_exp!]
  corporate_donor_device: corporate_donor_devices_bool_exp
  created_at: timestamptz_comparison_exp
  declaration: Boolean_comparison_exp
  device_donation_donor: device_donation_donor_bool_exp
  device_tracking_key_corporate: String_comparison_exp
  device_tracking_key_individual: String_comparison_exp
  id: Int_comparison_exp
  photograph_url: String_comparison_exp
  school: school_bool_exp
  transaction_id: uuid_comparison_exp
  udise: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  verifier_name: String_comparison_exp
  verifier_phone_number: String_comparison_exp
}

"""
unique or primary key constraints on table "device_verification_records"
"""
enum device_verification_records_constraint {
  """unique or primary key constraint"""
  device_verification_records_device_tracking_key_corporate_key

  """unique or primary key constraint"""
  device_verification_records_device_tracking_key_individual_key

  """unique or primary key constraint"""
  device_verification_records_pkey
}

"""
input type for incrementing numeric columns in table "device_verification_records"
"""
input device_verification_records_inc_input {
  id: Int
  udise: Int
}

"""
input type for inserting data into table "device_verification_records"
"""
input device_verification_records_insert_input {
  corporate_donor_device: corporate_donor_devices_obj_rel_insert_input
  created_at: timestamptz
  declaration: Boolean
  device_donation_donor: device_donation_donor_obj_rel_insert_input
  device_tracking_key_corporate: String
  device_tracking_key_individual: String
  id: Int
  photograph_url: String
  school: school_obj_rel_insert_input
  transaction_id: uuid
  udise: Int
  updated_at: timestamptz
  verifier_name: String
  verifier_phone_number: String
}

"""aggregate max on columns"""
type device_verification_records_max_fields {
  created_at: timestamptz
  device_tracking_key_corporate: String
  device_tracking_key_individual: String
  id: Int
  photograph_url: String
  transaction_id: uuid
  udise: Int
  updated_at: timestamptz
  verifier_name: String
  verifier_phone_number: String
}

"""
order by max() on columns of table "device_verification_records"
"""
input device_verification_records_max_order_by {
  created_at: order_by
  device_tracking_key_corporate: order_by
  device_tracking_key_individual: order_by
  id: order_by
  photograph_url: order_by
  transaction_id: order_by
  udise: order_by
  updated_at: order_by
  verifier_name: order_by
  verifier_phone_number: order_by
}

"""aggregate min on columns"""
type device_verification_records_min_fields {
  created_at: timestamptz
  device_tracking_key_corporate: String
  device_tracking_key_individual: String
  id: Int
  photograph_url: String
  transaction_id: uuid
  udise: Int
  updated_at: timestamptz
  verifier_name: String
  verifier_phone_number: String
}

"""
order by min() on columns of table "device_verification_records"
"""
input device_verification_records_min_order_by {
  created_at: order_by
  device_tracking_key_corporate: order_by
  device_tracking_key_individual: order_by
  id: order_by
  photograph_url: order_by
  transaction_id: order_by
  udise: order_by
  updated_at: order_by
  verifier_name: order_by
  verifier_phone_number: order_by
}

"""
response of any mutation on the table "device_verification_records"
"""
type device_verification_records_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [device_verification_records!]!
}

"""
input type for inserting object relation for remote table "device_verification_records"
"""
input device_verification_records_obj_rel_insert_input {
  data: device_verification_records_insert_input!

  """on conflict condition"""
  on_conflict: device_verification_records_on_conflict
}

"""
on conflict condition type for table "device_verification_records"
"""
input device_verification_records_on_conflict {
  constraint: device_verification_records_constraint!
  update_columns: [device_verification_records_update_column!]! = []
  where: device_verification_records_bool_exp
}

"""
Ordering options when selecting data from "device_verification_records".
"""
input device_verification_records_order_by {
  corporate_donor_device: corporate_donor_devices_order_by
  created_at: order_by
  declaration: order_by
  device_donation_donor: device_donation_donor_order_by
  device_tracking_key_corporate: order_by
  device_tracking_key_individual: order_by
  id: order_by
  photograph_url: order_by
  school: school_order_by
  transaction_id: order_by
  udise: order_by
  updated_at: order_by
  verifier_name: order_by
  verifier_phone_number: order_by
}

"""primary key columns input for table: device_verification_records"""
input device_verification_records_pk_columns_input {
  id: Int!
}

"""
select columns of table "device_verification_records"
"""
enum device_verification_records_select_column {
  """column name"""
  created_at

  """column name"""
  declaration

  """column name"""
  device_tracking_key_corporate

  """column name"""
  device_tracking_key_individual

  """column name"""
  id

  """column name"""
  photograph_url

  """column name"""
  transaction_id

  """column name"""
  udise

  """column name"""
  updated_at

  """column name"""
  verifier_name

  """column name"""
  verifier_phone_number
}

"""
input type for updating data in table "device_verification_records"
"""
input device_verification_records_set_input {
  created_at: timestamptz
  declaration: Boolean
  device_tracking_key_corporate: String
  device_tracking_key_individual: String
  id: Int
  photograph_url: String
  transaction_id: uuid
  udise: Int
  updated_at: timestamptz
  verifier_name: String
  verifier_phone_number: String
}

"""aggregate stddev on columns"""
type device_verification_records_stddev_fields {
  id: Float
  udise: Float
}

"""
order by stddev() on columns of table "device_verification_records"
"""
input device_verification_records_stddev_order_by {
  id: order_by
  udise: order_by
}

"""aggregate stddev_pop on columns"""
type device_verification_records_stddev_pop_fields {
  id: Float
  udise: Float
}

"""
order by stddev_pop() on columns of table "device_verification_records"
"""
input device_verification_records_stddev_pop_order_by {
  id: order_by
  udise: order_by
}

"""aggregate stddev_samp on columns"""
type device_verification_records_stddev_samp_fields {
  id: Float
  udise: Float
}

"""
order by stddev_samp() on columns of table "device_verification_records"
"""
input device_verification_records_stddev_samp_order_by {
  id: order_by
  udise: order_by
}

"""aggregate sum on columns"""
type device_verification_records_sum_fields {
  id: Int
  udise: Int
}

"""
order by sum() on columns of table "device_verification_records"
"""
input device_verification_records_sum_order_by {
  id: order_by
  udise: order_by
}

"""
update columns of table "device_verification_records"
"""
enum device_verification_records_update_column {
  """column name"""
  created_at

  """column name"""
  declaration

  """column name"""
  device_tracking_key_corporate

  """column name"""
  device_tracking_key_individual

  """column name"""
  id

  """column name"""
  photograph_url

  """column name"""
  transaction_id

  """column name"""
  udise

  """column name"""
  updated_at

  """column name"""
  verifier_name

  """column name"""
  verifier_phone_number
}

"""aggregate var_pop on columns"""
type device_verification_records_var_pop_fields {
  id: Float
  udise: Float
}

"""
order by var_pop() on columns of table "device_verification_records"
"""
input device_verification_records_var_pop_order_by {
  id: order_by
  udise: order_by
}

"""aggregate var_samp on columns"""
type device_verification_records_var_samp_fields {
  id: Float
  udise: Float
}

"""
order by var_samp() on columns of table "device_verification_records"
"""
input device_verification_records_var_samp_order_by {
  id: order_by
  udise: order_by
}

"""aggregate variance on columns"""
type device_verification_records_variance_fields {
  id: Float
  udise: Float
}

"""
order by variance() on columns of table "device_verification_records"
"""
input device_verification_records_variance_order_by {
  id: order_by
  udise: order_by
}

"""
columns and relationships of "django_admin_log"
"""
type django_admin_log {
  action_flag: smallint!
  action_time: timestamptz!

  """An object relationship"""
  auth_user: auth_user!
  change_message: String!
  content_type_id: Int

  """An object relationship"""
  django_content_type: django_content_type
  id: Int!
  object_id: String
  object_repr: String!
  user_id: Int!
}

"""
aggregated selection of "django_admin_log"
"""
type django_admin_log_aggregate {
  aggregate: django_admin_log_aggregate_fields
  nodes: [django_admin_log!]!
}

"""
aggregate fields of "django_admin_log"
"""
type django_admin_log_aggregate_fields {
  avg: django_admin_log_avg_fields
  count(columns: [django_admin_log_select_column!], distinct: Boolean): Int!
  max: django_admin_log_max_fields
  min: django_admin_log_min_fields
  stddev: django_admin_log_stddev_fields
  stddev_pop: django_admin_log_stddev_pop_fields
  stddev_samp: django_admin_log_stddev_samp_fields
  sum: django_admin_log_sum_fields
  var_pop: django_admin_log_var_pop_fields
  var_samp: django_admin_log_var_samp_fields
  variance: django_admin_log_variance_fields
}

"""
order by aggregate values of table "django_admin_log"
"""
input django_admin_log_aggregate_order_by {
  avg: django_admin_log_avg_order_by
  count: order_by
  max: django_admin_log_max_order_by
  min: django_admin_log_min_order_by
  stddev: django_admin_log_stddev_order_by
  stddev_pop: django_admin_log_stddev_pop_order_by
  stddev_samp: django_admin_log_stddev_samp_order_by
  sum: django_admin_log_sum_order_by
  var_pop: django_admin_log_var_pop_order_by
  var_samp: django_admin_log_var_samp_order_by
  variance: django_admin_log_variance_order_by
}

"""
input type for inserting array relation for remote table "django_admin_log"
"""
input django_admin_log_arr_rel_insert_input {
  data: [django_admin_log_insert_input!]!

  """on conflict condition"""
  on_conflict: django_admin_log_on_conflict
}

"""aggregate avg on columns"""
type django_admin_log_avg_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by avg() on columns of table "django_admin_log"
"""
input django_admin_log_avg_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "django_admin_log". All fields are combined with a logical 'AND'.
"""
input django_admin_log_bool_exp {
  _and: [django_admin_log_bool_exp!]
  _not: django_admin_log_bool_exp
  _or: [django_admin_log_bool_exp!]
  action_flag: smallint_comparison_exp
  action_time: timestamptz_comparison_exp
  auth_user: auth_user_bool_exp
  change_message: String_comparison_exp
  content_type_id: Int_comparison_exp
  django_content_type: django_content_type_bool_exp
  id: Int_comparison_exp
  object_id: String_comparison_exp
  object_repr: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "django_admin_log"
"""
enum django_admin_log_constraint {
  """unique or primary key constraint"""
  django_admin_log_pkey
}

"""
input type for incrementing numeric columns in table "django_admin_log"
"""
input django_admin_log_inc_input {
  action_flag: smallint
  content_type_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "django_admin_log"
"""
input django_admin_log_insert_input {
  action_flag: smallint
  action_time: timestamptz
  auth_user: auth_user_obj_rel_insert_input
  change_message: String
  content_type_id: Int
  django_content_type: django_content_type_obj_rel_insert_input
  id: Int
  object_id: String
  object_repr: String
  user_id: Int
}

"""aggregate max on columns"""
type django_admin_log_max_fields {
  action_flag: smallint
  action_time: timestamptz
  change_message: String
  content_type_id: Int
  id: Int
  object_id: String
  object_repr: String
  user_id: Int
}

"""
order by max() on columns of table "django_admin_log"
"""
input django_admin_log_max_order_by {
  action_flag: order_by
  action_time: order_by
  change_message: order_by
  content_type_id: order_by
  id: order_by
  object_id: order_by
  object_repr: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type django_admin_log_min_fields {
  action_flag: smallint
  action_time: timestamptz
  change_message: String
  content_type_id: Int
  id: Int
  object_id: String
  object_repr: String
  user_id: Int
}

"""
order by min() on columns of table "django_admin_log"
"""
input django_admin_log_min_order_by {
  action_flag: order_by
  action_time: order_by
  change_message: order_by
  content_type_id: order_by
  id: order_by
  object_id: order_by
  object_repr: order_by
  user_id: order_by
}

"""
response of any mutation on the table "django_admin_log"
"""
type django_admin_log_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_admin_log!]!
}

"""
on conflict condition type for table "django_admin_log"
"""
input django_admin_log_on_conflict {
  constraint: django_admin_log_constraint!
  update_columns: [django_admin_log_update_column!]! = []
  where: django_admin_log_bool_exp
}

"""Ordering options when selecting data from "django_admin_log"."""
input django_admin_log_order_by {
  action_flag: order_by
  action_time: order_by
  auth_user: auth_user_order_by
  change_message: order_by
  content_type_id: order_by
  django_content_type: django_content_type_order_by
  id: order_by
  object_id: order_by
  object_repr: order_by
  user_id: order_by
}

"""primary key columns input for table: django_admin_log"""
input django_admin_log_pk_columns_input {
  id: Int!
}

"""
select columns of table "django_admin_log"
"""
enum django_admin_log_select_column {
  """column name"""
  action_flag

  """column name"""
  action_time

  """column name"""
  change_message

  """column name"""
  content_type_id

  """column name"""
  id

  """column name"""
  object_id

  """column name"""
  object_repr

  """column name"""
  user_id
}

"""
input type for updating data in table "django_admin_log"
"""
input django_admin_log_set_input {
  action_flag: smallint
  action_time: timestamptz
  change_message: String
  content_type_id: Int
  id: Int
  object_id: String
  object_repr: String
  user_id: Int
}

"""aggregate stddev on columns"""
type django_admin_log_stddev_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by stddev() on columns of table "django_admin_log"
"""
input django_admin_log_stddev_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type django_admin_log_stddev_pop_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "django_admin_log"
"""
input django_admin_log_stddev_pop_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type django_admin_log_stddev_samp_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "django_admin_log"
"""
input django_admin_log_stddev_samp_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type django_admin_log_sum_fields {
  action_flag: smallint
  content_type_id: Int
  id: Int
  user_id: Int
}

"""
order by sum() on columns of table "django_admin_log"
"""
input django_admin_log_sum_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "django_admin_log"
"""
enum django_admin_log_update_column {
  """column name"""
  action_flag

  """column name"""
  action_time

  """column name"""
  change_message

  """column name"""
  content_type_id

  """column name"""
  id

  """column name"""
  object_id

  """column name"""
  object_repr

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type django_admin_log_var_pop_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "django_admin_log"
"""
input django_admin_log_var_pop_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type django_admin_log_var_samp_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "django_admin_log"
"""
input django_admin_log_var_samp_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type django_admin_log_variance_fields {
  action_flag: Float
  content_type_id: Float
  id: Float
  user_id: Float
}

"""
order by variance() on columns of table "django_admin_log"
"""
input django_admin_log_variance_order_by {
  action_flag: order_by
  content_type_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "django_celery_results_chordcounter"
"""
type django_celery_results_chordcounter {
  count: Int!
  group_id: String!
  id: Int!
  sub_tasks: String!
}

"""
aggregated selection of "django_celery_results_chordcounter"
"""
type django_celery_results_chordcounter_aggregate {
  aggregate: django_celery_results_chordcounter_aggregate_fields
  nodes: [django_celery_results_chordcounter!]!
}

"""
aggregate fields of "django_celery_results_chordcounter"
"""
type django_celery_results_chordcounter_aggregate_fields {
  avg: django_celery_results_chordcounter_avg_fields
  count(columns: [django_celery_results_chordcounter_select_column!], distinct: Boolean): Int!
  max: django_celery_results_chordcounter_max_fields
  min: django_celery_results_chordcounter_min_fields
  stddev: django_celery_results_chordcounter_stddev_fields
  stddev_pop: django_celery_results_chordcounter_stddev_pop_fields
  stddev_samp: django_celery_results_chordcounter_stddev_samp_fields
  sum: django_celery_results_chordcounter_sum_fields
  var_pop: django_celery_results_chordcounter_var_pop_fields
  var_samp: django_celery_results_chordcounter_var_samp_fields
  variance: django_celery_results_chordcounter_variance_fields
}

"""aggregate avg on columns"""
type django_celery_results_chordcounter_avg_fields {
  count: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "django_celery_results_chordcounter". All fields are combined with a logical 'AND'.
"""
input django_celery_results_chordcounter_bool_exp {
  _and: [django_celery_results_chordcounter_bool_exp!]
  _not: django_celery_results_chordcounter_bool_exp
  _or: [django_celery_results_chordcounter_bool_exp!]
  count: Int_comparison_exp
  group_id: String_comparison_exp
  id: Int_comparison_exp
  sub_tasks: String_comparison_exp
}

"""
unique or primary key constraints on table "django_celery_results_chordcounter"
"""
enum django_celery_results_chordcounter_constraint {
  """unique or primary key constraint"""
  django_celery_results_chordcounter_group_id_key

  """unique or primary key constraint"""
  django_celery_results_chordcounter_pkey
}

"""
input type for incrementing numeric columns in table "django_celery_results_chordcounter"
"""
input django_celery_results_chordcounter_inc_input {
  count: Int
  id: Int
}

"""
input type for inserting data into table "django_celery_results_chordcounter"
"""
input django_celery_results_chordcounter_insert_input {
  count: Int
  group_id: String
  id: Int
  sub_tasks: String
}

"""aggregate max on columns"""
type django_celery_results_chordcounter_max_fields {
  count: Int
  group_id: String
  id: Int
  sub_tasks: String
}

"""aggregate min on columns"""
type django_celery_results_chordcounter_min_fields {
  count: Int
  group_id: String
  id: Int
  sub_tasks: String
}

"""
response of any mutation on the table "django_celery_results_chordcounter"
"""
type django_celery_results_chordcounter_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_celery_results_chordcounter!]!
}

"""
on conflict condition type for table "django_celery_results_chordcounter"
"""
input django_celery_results_chordcounter_on_conflict {
  constraint: django_celery_results_chordcounter_constraint!
  update_columns: [django_celery_results_chordcounter_update_column!]! = []
  where: django_celery_results_chordcounter_bool_exp
}

"""
Ordering options when selecting data from "django_celery_results_chordcounter".
"""
input django_celery_results_chordcounter_order_by {
  count: order_by
  group_id: order_by
  id: order_by
  sub_tasks: order_by
}

"""
primary key columns input for table: django_celery_results_chordcounter
"""
input django_celery_results_chordcounter_pk_columns_input {
  id: Int!
}

"""
select columns of table "django_celery_results_chordcounter"
"""
enum django_celery_results_chordcounter_select_column {
  """column name"""
  count

  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  sub_tasks
}

"""
input type for updating data in table "django_celery_results_chordcounter"
"""
input django_celery_results_chordcounter_set_input {
  count: Int
  group_id: String
  id: Int
  sub_tasks: String
}

"""aggregate stddev on columns"""
type django_celery_results_chordcounter_stddev_fields {
  count: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type django_celery_results_chordcounter_stddev_pop_fields {
  count: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type django_celery_results_chordcounter_stddev_samp_fields {
  count: Float
  id: Float
}

"""aggregate sum on columns"""
type django_celery_results_chordcounter_sum_fields {
  count: Int
  id: Int
}

"""
update columns of table "django_celery_results_chordcounter"
"""
enum django_celery_results_chordcounter_update_column {
  """column name"""
  count

  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  sub_tasks
}

"""aggregate var_pop on columns"""
type django_celery_results_chordcounter_var_pop_fields {
  count: Float
  id: Float
}

"""aggregate var_samp on columns"""
type django_celery_results_chordcounter_var_samp_fields {
  count: Float
  id: Float
}

"""aggregate variance on columns"""
type django_celery_results_chordcounter_variance_fields {
  count: Float
  id: Float
}

"""
columns and relationships of "django_celery_results_groupresult"
"""
type django_celery_results_groupresult {
  content_encoding: String!
  content_type: String!
  date_created: timestamptz!
  date_done: timestamptz!
  group_id: String!
  id: Int!
  result: String
}

"""
aggregated selection of "django_celery_results_groupresult"
"""
type django_celery_results_groupresult_aggregate {
  aggregate: django_celery_results_groupresult_aggregate_fields
  nodes: [django_celery_results_groupresult!]!
}

"""
aggregate fields of "django_celery_results_groupresult"
"""
type django_celery_results_groupresult_aggregate_fields {
  avg: django_celery_results_groupresult_avg_fields
  count(columns: [django_celery_results_groupresult_select_column!], distinct: Boolean): Int!
  max: django_celery_results_groupresult_max_fields
  min: django_celery_results_groupresult_min_fields
  stddev: django_celery_results_groupresult_stddev_fields
  stddev_pop: django_celery_results_groupresult_stddev_pop_fields
  stddev_samp: django_celery_results_groupresult_stddev_samp_fields
  sum: django_celery_results_groupresult_sum_fields
  var_pop: django_celery_results_groupresult_var_pop_fields
  var_samp: django_celery_results_groupresult_var_samp_fields
  variance: django_celery_results_groupresult_variance_fields
}

"""aggregate avg on columns"""
type django_celery_results_groupresult_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "django_celery_results_groupresult". All fields are combined with a logical 'AND'.
"""
input django_celery_results_groupresult_bool_exp {
  _and: [django_celery_results_groupresult_bool_exp!]
  _not: django_celery_results_groupresult_bool_exp
  _or: [django_celery_results_groupresult_bool_exp!]
  content_encoding: String_comparison_exp
  content_type: String_comparison_exp
  date_created: timestamptz_comparison_exp
  date_done: timestamptz_comparison_exp
  group_id: String_comparison_exp
  id: Int_comparison_exp
  result: String_comparison_exp
}

"""
unique or primary key constraints on table "django_celery_results_groupresult"
"""
enum django_celery_results_groupresult_constraint {
  """unique or primary key constraint"""
  django_celery_results_groupresult_group_id_key

  """unique or primary key constraint"""
  django_celery_results_groupresult_pkey
}

"""
input type for incrementing numeric columns in table "django_celery_results_groupresult"
"""
input django_celery_results_groupresult_inc_input {
  id: Int
}

"""
input type for inserting data into table "django_celery_results_groupresult"
"""
input django_celery_results_groupresult_insert_input {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  group_id: String
  id: Int
  result: String
}

"""aggregate max on columns"""
type django_celery_results_groupresult_max_fields {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  group_id: String
  id: Int
  result: String
}

"""aggregate min on columns"""
type django_celery_results_groupresult_min_fields {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  group_id: String
  id: Int
  result: String
}

"""
response of any mutation on the table "django_celery_results_groupresult"
"""
type django_celery_results_groupresult_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_celery_results_groupresult!]!
}

"""
on conflict condition type for table "django_celery_results_groupresult"
"""
input django_celery_results_groupresult_on_conflict {
  constraint: django_celery_results_groupresult_constraint!
  update_columns: [django_celery_results_groupresult_update_column!]! = []
  where: django_celery_results_groupresult_bool_exp
}

"""
Ordering options when selecting data from "django_celery_results_groupresult".
"""
input django_celery_results_groupresult_order_by {
  content_encoding: order_by
  content_type: order_by
  date_created: order_by
  date_done: order_by
  group_id: order_by
  id: order_by
  result: order_by
}

"""primary key columns input for table: django_celery_results_groupresult"""
input django_celery_results_groupresult_pk_columns_input {
  id: Int!
}

"""
select columns of table "django_celery_results_groupresult"
"""
enum django_celery_results_groupresult_select_column {
  """column name"""
  content_encoding

  """column name"""
  content_type

  """column name"""
  date_created

  """column name"""
  date_done

  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  result
}

"""
input type for updating data in table "django_celery_results_groupresult"
"""
input django_celery_results_groupresult_set_input {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  group_id: String
  id: Int
  result: String
}

"""aggregate stddev on columns"""
type django_celery_results_groupresult_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type django_celery_results_groupresult_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type django_celery_results_groupresult_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type django_celery_results_groupresult_sum_fields {
  id: Int
}

"""
update columns of table "django_celery_results_groupresult"
"""
enum django_celery_results_groupresult_update_column {
  """column name"""
  content_encoding

  """column name"""
  content_type

  """column name"""
  date_created

  """column name"""
  date_done

  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  result
}

"""aggregate var_pop on columns"""
type django_celery_results_groupresult_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type django_celery_results_groupresult_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type django_celery_results_groupresult_variance_fields {
  id: Float
}

"""
columns and relationships of "django_celery_results_taskresult"
"""
type django_celery_results_taskresult {
  content_encoding: String!
  content_type: String!
  date_created: timestamptz!
  date_done: timestamptz!
  id: Int!
  meta: String
  result: String
  status: String!
  task_args: String
  task_id: String!
  task_kwargs: String
  task_name: String
  traceback: String
  worker: String
}

"""
aggregated selection of "django_celery_results_taskresult"
"""
type django_celery_results_taskresult_aggregate {
  aggregate: django_celery_results_taskresult_aggregate_fields
  nodes: [django_celery_results_taskresult!]!
}

"""
aggregate fields of "django_celery_results_taskresult"
"""
type django_celery_results_taskresult_aggregate_fields {
  avg: django_celery_results_taskresult_avg_fields
  count(columns: [django_celery_results_taskresult_select_column!], distinct: Boolean): Int!
  max: django_celery_results_taskresult_max_fields
  min: django_celery_results_taskresult_min_fields
  stddev: django_celery_results_taskresult_stddev_fields
  stddev_pop: django_celery_results_taskresult_stddev_pop_fields
  stddev_samp: django_celery_results_taskresult_stddev_samp_fields
  sum: django_celery_results_taskresult_sum_fields
  var_pop: django_celery_results_taskresult_var_pop_fields
  var_samp: django_celery_results_taskresult_var_samp_fields
  variance: django_celery_results_taskresult_variance_fields
}

"""aggregate avg on columns"""
type django_celery_results_taskresult_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "django_celery_results_taskresult". All fields are combined with a logical 'AND'.
"""
input django_celery_results_taskresult_bool_exp {
  _and: [django_celery_results_taskresult_bool_exp!]
  _not: django_celery_results_taskresult_bool_exp
  _or: [django_celery_results_taskresult_bool_exp!]
  content_encoding: String_comparison_exp
  content_type: String_comparison_exp
  date_created: timestamptz_comparison_exp
  date_done: timestamptz_comparison_exp
  id: Int_comparison_exp
  meta: String_comparison_exp
  result: String_comparison_exp
  status: String_comparison_exp
  task_args: String_comparison_exp
  task_id: String_comparison_exp
  task_kwargs: String_comparison_exp
  task_name: String_comparison_exp
  traceback: String_comparison_exp
  worker: String_comparison_exp
}

"""
unique or primary key constraints on table "django_celery_results_taskresult"
"""
enum django_celery_results_taskresult_constraint {
  """unique or primary key constraint"""
  django_celery_results_taskresult_pkey

  """unique or primary key constraint"""
  django_celery_results_taskresult_task_id_key
}

"""
input type for incrementing numeric columns in table "django_celery_results_taskresult"
"""
input django_celery_results_taskresult_inc_input {
  id: Int
}

"""
input type for inserting data into table "django_celery_results_taskresult"
"""
input django_celery_results_taskresult_insert_input {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  id: Int
  meta: String
  result: String
  status: String
  task_args: String
  task_id: String
  task_kwargs: String
  task_name: String
  traceback: String
  worker: String
}

"""aggregate max on columns"""
type django_celery_results_taskresult_max_fields {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  id: Int
  meta: String
  result: String
  status: String
  task_args: String
  task_id: String
  task_kwargs: String
  task_name: String
  traceback: String
  worker: String
}

"""aggregate min on columns"""
type django_celery_results_taskresult_min_fields {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  id: Int
  meta: String
  result: String
  status: String
  task_args: String
  task_id: String
  task_kwargs: String
  task_name: String
  traceback: String
  worker: String
}

"""
response of any mutation on the table "django_celery_results_taskresult"
"""
type django_celery_results_taskresult_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_celery_results_taskresult!]!
}

"""
on conflict condition type for table "django_celery_results_taskresult"
"""
input django_celery_results_taskresult_on_conflict {
  constraint: django_celery_results_taskresult_constraint!
  update_columns: [django_celery_results_taskresult_update_column!]! = []
  where: django_celery_results_taskresult_bool_exp
}

"""
Ordering options when selecting data from "django_celery_results_taskresult".
"""
input django_celery_results_taskresult_order_by {
  content_encoding: order_by
  content_type: order_by
  date_created: order_by
  date_done: order_by
  id: order_by
  meta: order_by
  result: order_by
  status: order_by
  task_args: order_by
  task_id: order_by
  task_kwargs: order_by
  task_name: order_by
  traceback: order_by
  worker: order_by
}

"""primary key columns input for table: django_celery_results_taskresult"""
input django_celery_results_taskresult_pk_columns_input {
  id: Int!
}

"""
select columns of table "django_celery_results_taskresult"
"""
enum django_celery_results_taskresult_select_column {
  """column name"""
  content_encoding

  """column name"""
  content_type

  """column name"""
  date_created

  """column name"""
  date_done

  """column name"""
  id

  """column name"""
  meta

  """column name"""
  result

  """column name"""
  status

  """column name"""
  task_args

  """column name"""
  task_id

  """column name"""
  task_kwargs

  """column name"""
  task_name

  """column name"""
  traceback

  """column name"""
  worker
}

"""
input type for updating data in table "django_celery_results_taskresult"
"""
input django_celery_results_taskresult_set_input {
  content_encoding: String
  content_type: String
  date_created: timestamptz
  date_done: timestamptz
  id: Int
  meta: String
  result: String
  status: String
  task_args: String
  task_id: String
  task_kwargs: String
  task_name: String
  traceback: String
  worker: String
}

"""aggregate stddev on columns"""
type django_celery_results_taskresult_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type django_celery_results_taskresult_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type django_celery_results_taskresult_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type django_celery_results_taskresult_sum_fields {
  id: Int
}

"""
update columns of table "django_celery_results_taskresult"
"""
enum django_celery_results_taskresult_update_column {
  """column name"""
  content_encoding

  """column name"""
  content_type

  """column name"""
  date_created

  """column name"""
  date_done

  """column name"""
  id

  """column name"""
  meta

  """column name"""
  result

  """column name"""
  status

  """column name"""
  task_args

  """column name"""
  task_id

  """column name"""
  task_kwargs

  """column name"""
  task_name

  """column name"""
  traceback

  """column name"""
  worker
}

"""aggregate var_pop on columns"""
type django_celery_results_taskresult_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type django_celery_results_taskresult_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type django_celery_results_taskresult_variance_fields {
  id: Float
}

"""
columns and relationships of "django_content_type"
"""
type django_content_type {
  app_label: String!

  """An array relationship"""
  auth_permissions(
    """distinct select on columns"""
    distinct_on: [auth_permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_permission_order_by!]

    """filter the rows returned"""
    where: auth_permission_bool_exp
  ): [auth_permission!]!

  """An aggregate relationship"""
  auth_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_permission_order_by!]

    """filter the rows returned"""
    where: auth_permission_bool_exp
  ): auth_permission_aggregate!

  """An array relationship"""
  django_admin_logs(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): [django_admin_log!]!

  """An aggregate relationship"""
  django_admin_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): django_admin_log_aggregate!
  id: Int!
  model: String!
}

"""
aggregated selection of "django_content_type"
"""
type django_content_type_aggregate {
  aggregate: django_content_type_aggregate_fields
  nodes: [django_content_type!]!
}

"""
aggregate fields of "django_content_type"
"""
type django_content_type_aggregate_fields {
  avg: django_content_type_avg_fields
  count(columns: [django_content_type_select_column!], distinct: Boolean): Int!
  max: django_content_type_max_fields
  min: django_content_type_min_fields
  stddev: django_content_type_stddev_fields
  stddev_pop: django_content_type_stddev_pop_fields
  stddev_samp: django_content_type_stddev_samp_fields
  sum: django_content_type_sum_fields
  var_pop: django_content_type_var_pop_fields
  var_samp: django_content_type_var_samp_fields
  variance: django_content_type_variance_fields
}

"""aggregate avg on columns"""
type django_content_type_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "django_content_type". All fields are combined with a logical 'AND'.
"""
input django_content_type_bool_exp {
  _and: [django_content_type_bool_exp!]
  _not: django_content_type_bool_exp
  _or: [django_content_type_bool_exp!]
  app_label: String_comparison_exp
  auth_permissions: auth_permission_bool_exp
  django_admin_logs: django_admin_log_bool_exp
  id: Int_comparison_exp
  model: String_comparison_exp
}

"""
unique or primary key constraints on table "django_content_type"
"""
enum django_content_type_constraint {
  """unique or primary key constraint"""
  django_content_type_app_label_model_76bd3d3b_uniq

  """unique or primary key constraint"""
  django_content_type_pkey
}

"""
input type for incrementing numeric columns in table "django_content_type"
"""
input django_content_type_inc_input {
  id: Int
}

"""
input type for inserting data into table "django_content_type"
"""
input django_content_type_insert_input {
  app_label: String
  auth_permissions: auth_permission_arr_rel_insert_input
  django_admin_logs: django_admin_log_arr_rel_insert_input
  id: Int
  model: String
}

"""aggregate max on columns"""
type django_content_type_max_fields {
  app_label: String
  id: Int
  model: String
}

"""aggregate min on columns"""
type django_content_type_min_fields {
  app_label: String
  id: Int
  model: String
}

"""
response of any mutation on the table "django_content_type"
"""
type django_content_type_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_content_type!]!
}

"""
input type for inserting object relation for remote table "django_content_type"
"""
input django_content_type_obj_rel_insert_input {
  data: django_content_type_insert_input!

  """on conflict condition"""
  on_conflict: django_content_type_on_conflict
}

"""
on conflict condition type for table "django_content_type"
"""
input django_content_type_on_conflict {
  constraint: django_content_type_constraint!
  update_columns: [django_content_type_update_column!]! = []
  where: django_content_type_bool_exp
}

"""Ordering options when selecting data from "django_content_type"."""
input django_content_type_order_by {
  app_label: order_by
  auth_permissions_aggregate: auth_permission_aggregate_order_by
  django_admin_logs_aggregate: django_admin_log_aggregate_order_by
  id: order_by
  model: order_by
}

"""primary key columns input for table: django_content_type"""
input django_content_type_pk_columns_input {
  id: Int!
}

"""
select columns of table "django_content_type"
"""
enum django_content_type_select_column {
  """column name"""
  app_label

  """column name"""
  id

  """column name"""
  model
}

"""
input type for updating data in table "django_content_type"
"""
input django_content_type_set_input {
  app_label: String
  id: Int
  model: String
}

"""aggregate stddev on columns"""
type django_content_type_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type django_content_type_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type django_content_type_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type django_content_type_sum_fields {
  id: Int
}

"""
update columns of table "django_content_type"
"""
enum django_content_type_update_column {
  """column name"""
  app_label

  """column name"""
  id

  """column name"""
  model
}

"""aggregate var_pop on columns"""
type django_content_type_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type django_content_type_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type django_content_type_variance_fields {
  id: Float
}

"""
columns and relationships of "django_migrations"
"""
type django_migrations {
  app: String!
  applied: timestamptz!
  id: Int!
  name: String!
}

"""
aggregated selection of "django_migrations"
"""
type django_migrations_aggregate {
  aggregate: django_migrations_aggregate_fields
  nodes: [django_migrations!]!
}

"""
aggregate fields of "django_migrations"
"""
type django_migrations_aggregate_fields {
  avg: django_migrations_avg_fields
  count(columns: [django_migrations_select_column!], distinct: Boolean): Int!
  max: django_migrations_max_fields
  min: django_migrations_min_fields
  stddev: django_migrations_stddev_fields
  stddev_pop: django_migrations_stddev_pop_fields
  stddev_samp: django_migrations_stddev_samp_fields
  sum: django_migrations_sum_fields
  var_pop: django_migrations_var_pop_fields
  var_samp: django_migrations_var_samp_fields
  variance: django_migrations_variance_fields
}

"""aggregate avg on columns"""
type django_migrations_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "django_migrations". All fields are combined with a logical 'AND'.
"""
input django_migrations_bool_exp {
  _and: [django_migrations_bool_exp!]
  _not: django_migrations_bool_exp
  _or: [django_migrations_bool_exp!]
  app: String_comparison_exp
  applied: timestamptz_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "django_migrations"
"""
enum django_migrations_constraint {
  """unique or primary key constraint"""
  django_migrations_pkey
}

"""
input type for incrementing numeric columns in table "django_migrations"
"""
input django_migrations_inc_input {
  id: Int
}

"""
input type for inserting data into table "django_migrations"
"""
input django_migrations_insert_input {
  app: String
  applied: timestamptz
  id: Int
  name: String
}

"""aggregate max on columns"""
type django_migrations_max_fields {
  app: String
  applied: timestamptz
  id: Int
  name: String
}

"""aggregate min on columns"""
type django_migrations_min_fields {
  app: String
  applied: timestamptz
  id: Int
  name: String
}

"""
response of any mutation on the table "django_migrations"
"""
type django_migrations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_migrations!]!
}

"""
on conflict condition type for table "django_migrations"
"""
input django_migrations_on_conflict {
  constraint: django_migrations_constraint!
  update_columns: [django_migrations_update_column!]! = []
  where: django_migrations_bool_exp
}

"""Ordering options when selecting data from "django_migrations"."""
input django_migrations_order_by {
  app: order_by
  applied: order_by
  id: order_by
  name: order_by
}

"""primary key columns input for table: django_migrations"""
input django_migrations_pk_columns_input {
  id: Int!
}

"""
select columns of table "django_migrations"
"""
enum django_migrations_select_column {
  """column name"""
  app

  """column name"""
  applied

  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "django_migrations"
"""
input django_migrations_set_input {
  app: String
  applied: timestamptz
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type django_migrations_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type django_migrations_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type django_migrations_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type django_migrations_sum_fields {
  id: Int
}

"""
update columns of table "django_migrations"
"""
enum django_migrations_update_column {
  """column name"""
  app

  """column name"""
  applied

  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type django_migrations_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type django_migrations_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type django_migrations_variance_fields {
  id: Float
}

"""
columns and relationships of "django_session"
"""
type django_session {
  expire_date: timestamptz!
  session_data: String!
  session_key: String!
}

"""
aggregated selection of "django_session"
"""
type django_session_aggregate {
  aggregate: django_session_aggregate_fields
  nodes: [django_session!]!
}

"""
aggregate fields of "django_session"
"""
type django_session_aggregate_fields {
  count(columns: [django_session_select_column!], distinct: Boolean): Int!
  max: django_session_max_fields
  min: django_session_min_fields
}

"""
Boolean expression to filter rows from the table "django_session". All fields are combined with a logical 'AND'.
"""
input django_session_bool_exp {
  _and: [django_session_bool_exp!]
  _not: django_session_bool_exp
  _or: [django_session_bool_exp!]
  expire_date: timestamptz_comparison_exp
  session_data: String_comparison_exp
  session_key: String_comparison_exp
}

"""
unique or primary key constraints on table "django_session"
"""
enum django_session_constraint {
  """unique or primary key constraint"""
  django_session_pkey
}

"""
input type for inserting data into table "django_session"
"""
input django_session_insert_input {
  expire_date: timestamptz
  session_data: String
  session_key: String
}

"""aggregate max on columns"""
type django_session_max_fields {
  expire_date: timestamptz
  session_data: String
  session_key: String
}

"""aggregate min on columns"""
type django_session_min_fields {
  expire_date: timestamptz
  session_data: String
  session_key: String
}

"""
response of any mutation on the table "django_session"
"""
type django_session_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [django_session!]!
}

"""
on conflict condition type for table "django_session"
"""
input django_session_on_conflict {
  constraint: django_session_constraint!
  update_columns: [django_session_update_column!]! = []
  where: django_session_bool_exp
}

"""Ordering options when selecting data from "django_session"."""
input django_session_order_by {
  expire_date: order_by
  session_data: order_by
  session_key: order_by
}

"""primary key columns input for table: django_session"""
input django_session_pk_columns_input {
  session_key: String!
}

"""
select columns of table "django_session"
"""
enum django_session_select_column {
  """column name"""
  expire_date

  """column name"""
  session_data

  """column name"""
  session_key
}

"""
input type for updating data in table "django_session"
"""
input django_session_set_input {
  expire_date: timestamptz
  session_data: String
  session_key: String
}

"""
update columns of table "django_session"
"""
enum django_session_update_column {
  """column name"""
  expire_date

  """column name"""
  session_data

  """column name"""
  session_key
}

"""
columns and relationships of "duplicates"
"""
type duplicates {
  case: String
  id: Int
}

"""
aggregated selection of "duplicates"
"""
type duplicates_aggregate {
  aggregate: duplicates_aggregate_fields
  nodes: [duplicates!]!
}

"""
aggregate fields of "duplicates"
"""
type duplicates_aggregate_fields {
  avg: duplicates_avg_fields
  count(columns: [duplicates_select_column!], distinct: Boolean): Int!
  max: duplicates_max_fields
  min: duplicates_min_fields
  stddev: duplicates_stddev_fields
  stddev_pop: duplicates_stddev_pop_fields
  stddev_samp: duplicates_stddev_samp_fields
  sum: duplicates_sum_fields
  var_pop: duplicates_var_pop_fields
  var_samp: duplicates_var_samp_fields
  variance: duplicates_variance_fields
}

"""aggregate avg on columns"""
type duplicates_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "duplicates". All fields are combined with a logical 'AND'.
"""
input duplicates_bool_exp {
  _and: [duplicates_bool_exp!]
  _not: duplicates_bool_exp
  _or: [duplicates_bool_exp!]
  case: String_comparison_exp
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "duplicates"
"""
input duplicates_inc_input {
  id: Int
}

"""
input type for inserting data into table "duplicates"
"""
input duplicates_insert_input {
  case: String
  id: Int
}

"""aggregate max on columns"""
type duplicates_max_fields {
  case: String
  id: Int
}

"""aggregate min on columns"""
type duplicates_min_fields {
  case: String
  id: Int
}

"""
response of any mutation on the table "duplicates"
"""
type duplicates_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [duplicates!]!
}

"""Ordering options when selecting data from "duplicates"."""
input duplicates_order_by {
  case: order_by
  id: order_by
}

"""
select columns of table "duplicates"
"""
enum duplicates_select_column {
  """column name"""
  case

  """column name"""
  id
}

"""
input type for updating data in table "duplicates"
"""
input duplicates_set_input {
  case: String
  id: Int
}

"""aggregate stddev on columns"""
type duplicates_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type duplicates_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type duplicates_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type duplicates_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type duplicates_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type duplicates_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type duplicates_variance_fields {
  id: Float
}

"""
columns and relationships of "email_templates"
"""
type email_templates {
  """An array relationship"""
  applications(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An array relationship"""
  applicationsByEmailVerificationEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsByEmailVerificationEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  applicationsByForgotPasswordEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsByForgotPasswordEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  applicationsByPasswordlessEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsByPasswordlessEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  applicationsBySetPasswordEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsBySetPasswordEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An aggregate relationship"""
  applications_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  consents(
    """distinct select on columns"""
    distinct_on: [consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consents_order_by!]

    """filter the rows returned"""
    where: consents_bool_exp
  ): [consents!]!

  """An array relationship"""
  consentsByEmailPlusEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consents_order_by!]

    """filter the rows returned"""
    where: consents_bool_exp
  ): [consents!]!

  """An aggregate relationship"""
  consentsByEmailPlusEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consents_order_by!]

    """filter the rows returned"""
    where: consents_bool_exp
  ): consents_aggregate!

  """An aggregate relationship"""
  consents_aggregate(
    """distinct select on columns"""
    distinct_on: [consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consents_order_by!]

    """filter the rows returned"""
    where: consents_bool_exp
  ): consents_aggregate!

  """"""
  default_from_name: String

  """"""
  default_html_template: String!

  """"""
  default_subject: String!

  """"""
  default_text_template: String!

  """"""
  from_email: String

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  localized_from_names: String

  """"""
  localized_html_templates: String!

  """"""
  localized_subjects: String!

  """"""
  localized_text_templates: String!

  """"""
  name: String!

  """An array relationship"""
  tenants(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An array relationship"""
  tenantsByConfirmChildEmailTemplateId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsByConfirmChildEmailTemplateId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An array relationship"""
  tenantsByFamilyRequestEmailTemplateId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsByFamilyRequestEmailTemplateId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An array relationship"""
  tenantsByParentRegistrationEmailTemplateId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsByParentRegistrationEmailTemplateId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An array relationship"""
  tenantsByPasswordlessEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsByPasswordlessEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An array relationship"""
  tenantsBySetPasswordEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsBySetPasswordEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An array relationship"""
  tenantsByVerificationEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsByVerificationEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An aggregate relationship"""
  tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An array relationship"""
  userActionsByEndEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): [user_actions!]!

  """An aggregate relationship"""
  userActionsByEndEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): user_actions_aggregate!

  """An array relationship"""
  userActionsByModifyEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): [user_actions!]!

  """An aggregate relationship"""
  userActionsByModifyEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): user_actions_aggregate!

  """An array relationship"""
  userActionsByStartEmailTemplatesId(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): [user_actions!]!

  """An aggregate relationship"""
  userActionsByStartEmailTemplatesId_aggregate(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): user_actions_aggregate!

  """An array relationship"""
  user_actions(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): [user_actions!]!

  """An aggregate relationship"""
  user_actions_aggregate(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): user_actions_aggregate!
}

"""
aggregated selection of "email_templates"
"""
type email_templates_aggregate {
  """"""
  aggregate: email_templates_aggregate_fields

  """"""
  nodes: [email_templates!]!
}

"""
aggregate fields of "email_templates"
"""
type email_templates_aggregate_fields {
  """"""
  avg: email_templates_avg_fields

  """"""
  count(columns: [email_templates_select_column!], distinct: Boolean): Int!

  """"""
  max: email_templates_max_fields

  """"""
  min: email_templates_min_fields

  """"""
  stddev: email_templates_stddev_fields

  """"""
  stddev_pop: email_templates_stddev_pop_fields

  """"""
  stddev_samp: email_templates_stddev_samp_fields

  """"""
  sum: email_templates_sum_fields

  """"""
  var_pop: email_templates_var_pop_fields

  """"""
  var_samp: email_templates_var_samp_fields

  """"""
  variance: email_templates_variance_fields
}

"""aggregate avg on columns"""
type email_templates_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
Boolean expression to filter rows from the table "email_templates". All fields are combined with a logical 'AND'.
"""
input email_templates_bool_exp {
  """"""
  _and: [email_templates_bool_exp!]

  """"""
  _not: email_templates_bool_exp

  """"""
  _or: [email_templates_bool_exp!]

  """"""
  applications: applications_bool_exp

  """"""
  applicationsByEmailVerificationEmailTemplatesId: applications_bool_exp

  """"""
  applicationsByForgotPasswordEmailTemplatesId: applications_bool_exp

  """"""
  applicationsByPasswordlessEmailTemplatesId: applications_bool_exp

  """"""
  applicationsBySetPasswordEmailTemplatesId: applications_bool_exp

  """"""
  consents: consents_bool_exp

  """"""
  consentsByEmailPlusEmailTemplatesId: consents_bool_exp

  """"""
  default_from_name: String_comparison_exp

  """"""
  default_html_template: String_comparison_exp

  """"""
  default_subject: String_comparison_exp

  """"""
  default_text_template: String_comparison_exp

  """"""
  from_email: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  localized_from_names: String_comparison_exp

  """"""
  localized_html_templates: String_comparison_exp

  """"""
  localized_subjects: String_comparison_exp

  """"""
  localized_text_templates: String_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  tenants: tenants_bool_exp

  """"""
  tenantsByConfirmChildEmailTemplateId: tenants_bool_exp

  """"""
  tenantsByFamilyRequestEmailTemplateId: tenants_bool_exp

  """"""
  tenantsByParentRegistrationEmailTemplateId: tenants_bool_exp

  """"""
  tenantsByPasswordlessEmailTemplatesId: tenants_bool_exp

  """"""
  tenantsBySetPasswordEmailTemplatesId: tenants_bool_exp

  """"""
  tenantsByVerificationEmailTemplatesId: tenants_bool_exp

  """"""
  userActionsByEndEmailTemplatesId: user_actions_bool_exp

  """"""
  userActionsByModifyEmailTemplatesId: user_actions_bool_exp

  """"""
  userActionsByStartEmailTemplatesId: user_actions_bool_exp

  """"""
  user_actions: user_actions_bool_exp
}

"""
unique or primary key constraints on table "email_templates"
"""
enum email_templates_constraint {
  """unique or primary key constraint"""
  email_templates_pkey

  """unique or primary key constraint"""
  email_templates_uk_1
}

"""
input type for incrementing numeric columns in table "email_templates"
"""
input email_templates_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "email_templates"
"""
input email_templates_insert_input {
  """"""
  applications: applications_arr_rel_insert_input

  """"""
  applicationsByEmailVerificationEmailTemplatesId: applications_arr_rel_insert_input

  """"""
  applicationsByForgotPasswordEmailTemplatesId: applications_arr_rel_insert_input

  """"""
  applicationsByPasswordlessEmailTemplatesId: applications_arr_rel_insert_input

  """"""
  applicationsBySetPasswordEmailTemplatesId: applications_arr_rel_insert_input

  """"""
  consents: consents_arr_rel_insert_input

  """"""
  consentsByEmailPlusEmailTemplatesId: consents_arr_rel_insert_input

  """"""
  default_from_name: String

  """"""
  default_html_template: String

  """"""
  default_subject: String

  """"""
  default_text_template: String

  """"""
  from_email: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_from_names: String

  """"""
  localized_html_templates: String

  """"""
  localized_subjects: String

  """"""
  localized_text_templates: String

  """"""
  name: String

  """"""
  tenants: tenants_arr_rel_insert_input

  """"""
  tenantsByConfirmChildEmailTemplateId: tenants_arr_rel_insert_input

  """"""
  tenantsByFamilyRequestEmailTemplateId: tenants_arr_rel_insert_input

  """"""
  tenantsByParentRegistrationEmailTemplateId: tenants_arr_rel_insert_input

  """"""
  tenantsByPasswordlessEmailTemplatesId: tenants_arr_rel_insert_input

  """"""
  tenantsBySetPasswordEmailTemplatesId: tenants_arr_rel_insert_input

  """"""
  tenantsByVerificationEmailTemplatesId: tenants_arr_rel_insert_input

  """"""
  userActionsByEndEmailTemplatesId: user_actions_arr_rel_insert_input

  """"""
  userActionsByModifyEmailTemplatesId: user_actions_arr_rel_insert_input

  """"""
  userActionsByStartEmailTemplatesId: user_actions_arr_rel_insert_input

  """"""
  user_actions: user_actions_arr_rel_insert_input
}

"""aggregate max on columns"""
type email_templates_max_fields {
  """"""
  default_from_name: String

  """"""
  default_html_template: String

  """"""
  default_subject: String

  """"""
  default_text_template: String

  """"""
  from_email: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_from_names: String

  """"""
  localized_html_templates: String

  """"""
  localized_subjects: String

  """"""
  localized_text_templates: String

  """"""
  name: String
}

"""aggregate min on columns"""
type email_templates_min_fields {
  """"""
  default_from_name: String

  """"""
  default_html_template: String

  """"""
  default_subject: String

  """"""
  default_text_template: String

  """"""
  from_email: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_from_names: String

  """"""
  localized_html_templates: String

  """"""
  localized_subjects: String

  """"""
  localized_text_templates: String

  """"""
  name: String
}

"""
response of any mutation on the table "email_templates"
"""
type email_templates_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [email_templates!]!
}

"""
input type for inserting object relation for remote table "email_templates"
"""
input email_templates_obj_rel_insert_input {
  """"""
  data: email_templates_insert_input!

  """on conflict condition"""
  on_conflict: email_templates_on_conflict
}

"""
on conflict condition type for table "email_templates"
"""
input email_templates_on_conflict {
  """"""
  constraint: email_templates_constraint!

  """"""
  update_columns: [email_templates_update_column!]!

  """"""
  where: email_templates_bool_exp
}

"""Ordering options when selecting data from "email_templates"."""
input email_templates_order_by {
  """"""
  applicationsByEmailVerificationEmailTemplatesId_aggregate: applications_aggregate_order_by

  """"""
  applicationsByForgotPasswordEmailTemplatesId_aggregate: applications_aggregate_order_by

  """"""
  applicationsByPasswordlessEmailTemplatesId_aggregate: applications_aggregate_order_by

  """"""
  applicationsBySetPasswordEmailTemplatesId_aggregate: applications_aggregate_order_by

  """"""
  applications_aggregate: applications_aggregate_order_by

  """"""
  consentsByEmailPlusEmailTemplatesId_aggregate: consents_aggregate_order_by

  """"""
  consents_aggregate: consents_aggregate_order_by

  """"""
  default_from_name: order_by

  """"""
  default_html_template: order_by

  """"""
  default_subject: order_by

  """"""
  default_text_template: order_by

  """"""
  from_email: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  localized_from_names: order_by

  """"""
  localized_html_templates: order_by

  """"""
  localized_subjects: order_by

  """"""
  localized_text_templates: order_by

  """"""
  name: order_by

  """"""
  tenantsByConfirmChildEmailTemplateId_aggregate: tenants_aggregate_order_by

  """"""
  tenantsByFamilyRequestEmailTemplateId_aggregate: tenants_aggregate_order_by

  """"""
  tenantsByParentRegistrationEmailTemplateId_aggregate: tenants_aggregate_order_by

  """"""
  tenantsByPasswordlessEmailTemplatesId_aggregate: tenants_aggregate_order_by

  """"""
  tenantsBySetPasswordEmailTemplatesId_aggregate: tenants_aggregate_order_by

  """"""
  tenantsByVerificationEmailTemplatesId_aggregate: tenants_aggregate_order_by

  """"""
  tenants_aggregate: tenants_aggregate_order_by

  """"""
  userActionsByEndEmailTemplatesId_aggregate: user_actions_aggregate_order_by

  """"""
  userActionsByModifyEmailTemplatesId_aggregate: user_actions_aggregate_order_by

  """"""
  userActionsByStartEmailTemplatesId_aggregate: user_actions_aggregate_order_by

  """"""
  user_actions_aggregate: user_actions_aggregate_order_by
}

"""primary key columns input for table: email_templates"""
input email_templates_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "email_templates"
"""
enum email_templates_select_column {
  """column name"""
  default_from_name

  """column name"""
  default_html_template

  """column name"""
  default_subject

  """column name"""
  default_text_template

  """column name"""
  from_email

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  localized_from_names

  """column name"""
  localized_html_templates

  """column name"""
  localized_subjects

  """column name"""
  localized_text_templates

  """column name"""
  name
}

"""
input type for updating data in table "email_templates"
"""
input email_templates_set_input {
  """"""
  default_from_name: String

  """"""
  default_html_template: String

  """"""
  default_subject: String

  """"""
  default_text_template: String

  """"""
  from_email: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_from_names: String

  """"""
  localized_html_templates: String

  """"""
  localized_subjects: String

  """"""
  localized_text_templates: String

  """"""
  name: String
}

"""aggregate stddev on columns"""
type email_templates_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_pop on columns"""
type email_templates_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_samp on columns"""
type email_templates_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate sum on columns"""
type email_templates_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
update columns of table "email_templates"
"""
enum email_templates_update_column {
  """column name"""
  default_from_name

  """column name"""
  default_html_template

  """column name"""
  default_subject

  """column name"""
  default_text_template

  """column name"""
  from_email

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  localized_from_names

  """column name"""
  localized_html_templates

  """column name"""
  localized_subjects

  """column name"""
  localized_text_templates

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type email_templates_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate var_samp on columns"""
type email_templates_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate variance on columns"""
type email_templates_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
columns and relationships of "enroll_group"
"""
type enroll_group {
  Strength_Bucket: String
  schoolenrolment: bigint
}

"""
aggregated selection of "enroll_group"
"""
type enroll_group_aggregate {
  aggregate: enroll_group_aggregate_fields
  nodes: [enroll_group!]!
}

"""
aggregate fields of "enroll_group"
"""
type enroll_group_aggregate_fields {
  avg: enroll_group_avg_fields
  count(columns: [enroll_group_select_column!], distinct: Boolean): Int!
  max: enroll_group_max_fields
  min: enroll_group_min_fields
  stddev: enroll_group_stddev_fields
  stddev_pop: enroll_group_stddev_pop_fields
  stddev_samp: enroll_group_stddev_samp_fields
  sum: enroll_group_sum_fields
  var_pop: enroll_group_var_pop_fields
  var_samp: enroll_group_var_samp_fields
  variance: enroll_group_variance_fields
}

"""aggregate avg on columns"""
type enroll_group_avg_fields {
  schoolenrolment: Float
}

"""
Boolean expression to filter rows from the table "enroll_group". All fields are combined with a logical 'AND'.
"""
input enroll_group_bool_exp {
  Strength_Bucket: String_comparison_exp
  _and: [enroll_group_bool_exp!]
  _not: enroll_group_bool_exp
  _or: [enroll_group_bool_exp!]
  schoolenrolment: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "enroll_group"
"""
input enroll_group_inc_input {
  schoolenrolment: bigint
}

"""
input type for inserting data into table "enroll_group"
"""
input enroll_group_insert_input {
  Strength_Bucket: String
  schoolenrolment: bigint
}

"""aggregate max on columns"""
type enroll_group_max_fields {
  Strength_Bucket: String
  schoolenrolment: bigint
}

"""aggregate min on columns"""
type enroll_group_min_fields {
  Strength_Bucket: String
  schoolenrolment: bigint
}

"""
response of any mutation on the table "enroll_group"
"""
type enroll_group_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [enroll_group!]!
}

"""Ordering options when selecting data from "enroll_group"."""
input enroll_group_order_by {
  Strength_Bucket: order_by
  schoolenrolment: order_by
}

"""
select columns of table "enroll_group"
"""
enum enroll_group_select_column {
  """column name"""
  Strength_Bucket

  """column name"""
  schoolenrolment
}

"""
input type for updating data in table "enroll_group"
"""
input enroll_group_set_input {
  Strength_Bucket: String
  schoolenrolment: bigint
}

"""aggregate stddev on columns"""
type enroll_group_stddev_fields {
  schoolenrolment: Float
}

"""aggregate stddev_pop on columns"""
type enroll_group_stddev_pop_fields {
  schoolenrolment: Float
}

"""aggregate stddev_samp on columns"""
type enroll_group_stddev_samp_fields {
  schoolenrolment: Float
}

"""aggregate sum on columns"""
type enroll_group_sum_fields {
  schoolenrolment: bigint
}

"""aggregate var_pop on columns"""
type enroll_group_var_pop_fields {
  schoolenrolment: Float
}

"""aggregate var_samp on columns"""
type enroll_group_var_samp_fields {
  schoolenrolment: Float
}

"""aggregate variance on columns"""
type enroll_group_variance_fields {
  schoolenrolment: Float
}

"""
columns and relationships of "enrollment"
"""
type enrollment {
  acad_year: String!
  created: timestamptz
  grade_number: Int!
  id: Int!

  """An object relationship"""
  school: school
  school_id: Int
  section: String!

  """An object relationship"""
  student: student
  student_id: Int
  updated: timestamptz
}

"""
aggregated selection of "enrollment"
"""
type enrollment_aggregate {
  aggregate: enrollment_aggregate_fields
  nodes: [enrollment!]!
}

"""
aggregate fields of "enrollment"
"""
type enrollment_aggregate_fields {
  avg: enrollment_avg_fields
  count(columns: [enrollment_select_column!], distinct: Boolean): Int!
  max: enrollment_max_fields
  min: enrollment_min_fields
  stddev: enrollment_stddev_fields
  stddev_pop: enrollment_stddev_pop_fields
  stddev_samp: enrollment_stddev_samp_fields
  sum: enrollment_sum_fields
  var_pop: enrollment_var_pop_fields
  var_samp: enrollment_var_samp_fields
  variance: enrollment_variance_fields
}

"""
order by aggregate values of table "enrollment"
"""
input enrollment_aggregate_order_by {
  avg: enrollment_avg_order_by
  count: order_by
  max: enrollment_max_order_by
  min: enrollment_min_order_by
  stddev: enrollment_stddev_order_by
  stddev_pop: enrollment_stddev_pop_order_by
  stddev_samp: enrollment_stddev_samp_order_by
  sum: enrollment_sum_order_by
  var_pop: enrollment_var_pop_order_by
  var_samp: enrollment_var_samp_order_by
  variance: enrollment_variance_order_by
}

"""
input type for inserting array relation for remote table "enrollment"
"""
input enrollment_arr_rel_insert_input {
  data: [enrollment_insert_input!]!

  """on conflict condition"""
  on_conflict: enrollment_on_conflict
}

"""aggregate avg on columns"""
type enrollment_avg_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by avg() on columns of table "enrollment"
"""
input enrollment_avg_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""
Boolean expression to filter rows from the table "enrollment". All fields are combined with a logical 'AND'.
"""
input enrollment_bool_exp {
  _and: [enrollment_bool_exp!]
  _not: enrollment_bool_exp
  _or: [enrollment_bool_exp!]
  acad_year: String_comparison_exp
  created: timestamptz_comparison_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "enrollment"
"""
enum enrollment_constraint {
  """unique or primary key constraint"""
  enrollment_student_id_acad_year_df65ef62_uniq

  """unique or primary key constraint"""
  server_enrollment_pkey
}

"""
input type for incrementing numeric columns in table "enrollment"
"""
input enrollment_inc_input {
  grade_number: Int
  id: Int
  school_id: Int
  student_id: Int
}

"""
input type for inserting data into table "enrollment"
"""
input enrollment_insert_input {
  acad_year: String
  created: timestamptz
  grade_number: Int
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  section: String
  student: student_obj_rel_insert_input
  student_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type enrollment_max_fields {
  acad_year: String
  created: timestamptz
  grade_number: Int
  id: Int
  school_id: Int
  section: String
  student_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "enrollment"
"""
input enrollment_max_order_by {
  acad_year: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  section: order_by
  student_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type enrollment_min_fields {
  acad_year: String
  created: timestamptz
  grade_number: Int
  id: Int
  school_id: Int
  section: String
  student_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "enrollment"
"""
input enrollment_min_order_by {
  acad_year: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  section: order_by
  student_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "enrollment"
"""
type enrollment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [enrollment!]!
}

"""
on conflict condition type for table "enrollment"
"""
input enrollment_on_conflict {
  constraint: enrollment_constraint!
  update_columns: [enrollment_update_column!]! = []
  where: enrollment_bool_exp
}

"""Ordering options when selecting data from "enrollment"."""
input enrollment_order_by {
  acad_year: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  section: order_by
  student: student_order_by
  student_id: order_by
  updated: order_by
}

"""primary key columns input for table: enrollment"""
input enrollment_pk_columns_input {
  id: Int!
}

"""
select columns of table "enrollment"
"""
enum enrollment_select_column {
  """column name"""
  acad_year

  """column name"""
  created

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  student_id

  """column name"""
  updated
}

"""
input type for updating data in table "enrollment"
"""
input enrollment_set_input {
  acad_year: String
  created: timestamptz
  grade_number: Int
  id: Int
  school_id: Int
  section: String
  student_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type enrollment_stddev_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by stddev() on columns of table "enrollment"
"""
input enrollment_stddev_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""aggregate stddev_pop on columns"""
type enrollment_stddev_pop_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by stddev_pop() on columns of table "enrollment"
"""
input enrollment_stddev_pop_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""aggregate stddev_samp on columns"""
type enrollment_stddev_samp_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by stddev_samp() on columns of table "enrollment"
"""
input enrollment_stddev_samp_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""aggregate sum on columns"""
type enrollment_sum_fields {
  grade_number: Int
  id: Int
  school_id: Int
  student_id: Int
}

"""
order by sum() on columns of table "enrollment"
"""
input enrollment_sum_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""
update columns of table "enrollment"
"""
enum enrollment_update_column {
  """column name"""
  acad_year

  """column name"""
  created

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  student_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type enrollment_var_pop_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by var_pop() on columns of table "enrollment"
"""
input enrollment_var_pop_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""aggregate var_samp on columns"""
type enrollment_var_samp_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by var_samp() on columns of table "enrollment"
"""
input enrollment_var_samp_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""aggregate variance on columns"""
type enrollment_variance_fields {
  grade_number: Float
  id: Float
  school_id: Float
  student_id: Float
}

"""
order by variance() on columns of table "enrollment"
"""
input enrollment_variance_order_by {
  grade_number: order_by
  id: order_by
  school_id: order_by
  student_id: order_by
}

"""
columns and relationships of "esamwadmatching"
"""
type esamwadmatching {
  case: String
  id: Int
}

"""
aggregated selection of "esamwadmatching"
"""
type esamwadmatching_aggregate {
  aggregate: esamwadmatching_aggregate_fields
  nodes: [esamwadmatching!]!
}

"""
aggregate fields of "esamwadmatching"
"""
type esamwadmatching_aggregate_fields {
  avg: esamwadmatching_avg_fields
  count(columns: [esamwadmatching_select_column!], distinct: Boolean): Int!
  max: esamwadmatching_max_fields
  min: esamwadmatching_min_fields
  stddev: esamwadmatching_stddev_fields
  stddev_pop: esamwadmatching_stddev_pop_fields
  stddev_samp: esamwadmatching_stddev_samp_fields
  sum: esamwadmatching_sum_fields
  var_pop: esamwadmatching_var_pop_fields
  var_samp: esamwadmatching_var_samp_fields
  variance: esamwadmatching_variance_fields
}

"""aggregate avg on columns"""
type esamwadmatching_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "esamwadmatching". All fields are combined with a logical 'AND'.
"""
input esamwadmatching_bool_exp {
  _and: [esamwadmatching_bool_exp!]
  _not: esamwadmatching_bool_exp
  _or: [esamwadmatching_bool_exp!]
  case: String_comparison_exp
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "esamwadmatching"
"""
input esamwadmatching_inc_input {
  id: Int
}

"""
input type for inserting data into table "esamwadmatching"
"""
input esamwadmatching_insert_input {
  case: String
  id: Int
}

"""aggregate max on columns"""
type esamwadmatching_max_fields {
  case: String
  id: Int
}

"""aggregate min on columns"""
type esamwadmatching_min_fields {
  case: String
  id: Int
}

"""
response of any mutation on the table "esamwadmatching"
"""
type esamwadmatching_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [esamwadmatching!]!
}

"""Ordering options when selecting data from "esamwadmatching"."""
input esamwadmatching_order_by {
  case: order_by
  id: order_by
}

"""
select columns of table "esamwadmatching"
"""
enum esamwadmatching_select_column {
  """column name"""
  case

  """column name"""
  id
}

"""
input type for updating data in table "esamwadmatching"
"""
input esamwadmatching_set_input {
  case: String
  id: Int
}

"""aggregate stddev on columns"""
type esamwadmatching_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type esamwadmatching_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type esamwadmatching_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type esamwadmatching_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type esamwadmatching_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type esamwadmatching_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type esamwadmatching_variance_fields {
  id: Float
}

"""
columns and relationships of "evaluation_param"
"""
type evaluation_param {
  created: timestamptz
  id: Int!
  mapping: String!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "evaluation_param"
"""
type evaluation_param_aggregate {
  aggregate: evaluation_param_aggregate_fields
  nodes: [evaluation_param!]!
}

"""
aggregate fields of "evaluation_param"
"""
type evaluation_param_aggregate_fields {
  avg: evaluation_param_avg_fields
  count(columns: [evaluation_param_select_column!], distinct: Boolean): Int!
  max: evaluation_param_max_fields
  min: evaluation_param_min_fields
  stddev: evaluation_param_stddev_fields
  stddev_pop: evaluation_param_stddev_pop_fields
  stddev_samp: evaluation_param_stddev_samp_fields
  sum: evaluation_param_sum_fields
  var_pop: evaluation_param_var_pop_fields
  var_samp: evaluation_param_var_samp_fields
  variance: evaluation_param_variance_fields
}

"""aggregate avg on columns"""
type evaluation_param_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "evaluation_param". All fields are combined with a logical 'AND'.
"""
input evaluation_param_bool_exp {
  _and: [evaluation_param_bool_exp!]
  _not: evaluation_param_bool_exp
  _or: [evaluation_param_bool_exp!]
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  mapping: String_comparison_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "evaluation_param"
"""
enum evaluation_param_constraint {
  """unique or primary key constraint"""
  evaluation_param_pkey
}

"""
input type for incrementing numeric columns in table "evaluation_param"
"""
input evaluation_param_inc_input {
  id: Int
}

"""
input type for inserting data into table "evaluation_param"
"""
input evaluation_param_insert_input {
  created: timestamptz
  id: Int
  mapping: String
  name: String
  updated: timestamptz
}

"""aggregate max on columns"""
type evaluation_param_max_fields {
  created: timestamptz
  id: Int
  mapping: String
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type evaluation_param_min_fields {
  created: timestamptz
  id: Int
  mapping: String
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "evaluation_param"
"""
type evaluation_param_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [evaluation_param!]!
}

"""
on conflict condition type for table "evaluation_param"
"""
input evaluation_param_on_conflict {
  constraint: evaluation_param_constraint!
  update_columns: [evaluation_param_update_column!]! = []
  where: evaluation_param_bool_exp
}

"""Ordering options when selecting data from "evaluation_param"."""
input evaluation_param_order_by {
  created: order_by
  id: order_by
  mapping: order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: evaluation_param"""
input evaluation_param_pk_columns_input {
  id: Int!
}

"""
select columns of table "evaluation_param"
"""
enum evaluation_param_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "evaluation_param"
"""
input evaluation_param_set_input {
  created: timestamptz
  id: Int
  mapping: String
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type evaluation_param_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type evaluation_param_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type evaluation_param_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type evaluation_param_sum_fields {
  id: Int
}

"""
update columns of table "evaluation_param"
"""
enum evaluation_param_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type evaluation_param_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type evaluation_param_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type evaluation_param_variance_fields {
  id: Float
}

"""
columns and relationships of "event_logs"
"""
type event_logs {
  """"""
  id: bigint!

  """"""
  insert_instant: bigint!

  """"""
  message: String!

  """"""
  type: smallint!
}

"""
aggregated selection of "event_logs"
"""
type event_logs_aggregate {
  """"""
  aggregate: event_logs_aggregate_fields

  """"""
  nodes: [event_logs!]!
}

"""
aggregate fields of "event_logs"
"""
type event_logs_aggregate_fields {
  """"""
  avg: event_logs_avg_fields

  """"""
  count(columns: [event_logs_select_column!], distinct: Boolean): Int!

  """"""
  max: event_logs_max_fields

  """"""
  min: event_logs_min_fields

  """"""
  stddev: event_logs_stddev_fields

  """"""
  stddev_pop: event_logs_stddev_pop_fields

  """"""
  stddev_samp: event_logs_stddev_samp_fields

  """"""
  sum: event_logs_sum_fields

  """"""
  var_pop: event_logs_var_pop_fields

  """"""
  var_samp: event_logs_var_samp_fields

  """"""
  variance: event_logs_variance_fields
}

"""aggregate avg on columns"""
type event_logs_avg_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
Boolean expression to filter rows from the table "event_logs". All fields are combined with a logical 'AND'.
"""
input event_logs_bool_exp {
  """"""
  _and: [event_logs_bool_exp!]

  """"""
  _not: event_logs_bool_exp

  """"""
  _or: [event_logs_bool_exp!]

  """"""
  id: bigint_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  message: String_comparison_exp

  """"""
  type: smallint_comparison_exp
}

"""
unique or primary key constraints on table "event_logs"
"""
enum event_logs_constraint {
  """unique or primary key constraint"""
  event_logs_pkey
}

"""
input type for incrementing numeric columns in table "event_logs"
"""
input event_logs_inc_input {
  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  type: smallint
}

"""
input type for inserting data into table "event_logs"
"""
input event_logs_insert_input {
  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  message: String

  """"""
  type: smallint
}

"""aggregate max on columns"""
type event_logs_max_fields {
  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  message: String

  """"""
  type: smallint
}

"""aggregate min on columns"""
type event_logs_min_fields {
  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  message: String

  """"""
  type: smallint
}

"""
response of any mutation on the table "event_logs"
"""
type event_logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [event_logs!]!
}

"""
on conflict condition type for table "event_logs"
"""
input event_logs_on_conflict {
  """"""
  constraint: event_logs_constraint!

  """"""
  update_columns: [event_logs_update_column!]!

  """"""
  where: event_logs_bool_exp
}

"""Ordering options when selecting data from "event_logs"."""
input event_logs_order_by {
  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  message: order_by

  """"""
  type: order_by
}

"""primary key columns input for table: event_logs"""
input event_logs_pk_columns_input {
  """"""
  id: bigint!
}

"""
select columns of table "event_logs"
"""
enum event_logs_select_column {
  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  message

  """column name"""
  type
}

"""
input type for updating data in table "event_logs"
"""
input event_logs_set_input {
  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  message: String

  """"""
  type: smallint
}

"""aggregate stddev on columns"""
type event_logs_stddev_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""aggregate stddev_pop on columns"""
type event_logs_stddev_pop_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""aggregate stddev_samp on columns"""
type event_logs_stddev_samp_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""aggregate sum on columns"""
type event_logs_sum_fields {
  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  type: smallint
}

"""
update columns of table "event_logs"
"""
enum event_logs_update_column {
  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  message

  """column name"""
  type
}

"""aggregate var_pop on columns"""
type event_logs_var_pop_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""aggregate var_samp on columns"""
type event_logs_var_samp_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""aggregate variance on columns"""
type event_logs_variance_fields {
  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
columns and relationships of "external_identifiers"
"""
type external_identifiers {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: String!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!

  """"""
  type: smallint!

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid
}

"""
aggregated selection of "external_identifiers"
"""
type external_identifiers_aggregate {
  """"""
  aggregate: external_identifiers_aggregate_fields

  """"""
  nodes: [external_identifiers!]!
}

"""
aggregate fields of "external_identifiers"
"""
type external_identifiers_aggregate_fields {
  """"""
  avg: external_identifiers_avg_fields

  """"""
  count(columns: [external_identifiers_select_column!], distinct: Boolean): Int!

  """"""
  max: external_identifiers_max_fields

  """"""
  min: external_identifiers_min_fields

  """"""
  stddev: external_identifiers_stddev_fields

  """"""
  stddev_pop: external_identifiers_stddev_pop_fields

  """"""
  stddev_samp: external_identifiers_stddev_samp_fields

  """"""
  sum: external_identifiers_sum_fields

  """"""
  var_pop: external_identifiers_var_pop_fields

  """"""
  var_samp: external_identifiers_var_samp_fields

  """"""
  variance: external_identifiers_variance_fields
}

"""
order by aggregate values of table "external_identifiers"
"""
input external_identifiers_aggregate_order_by {
  """"""
  avg: external_identifiers_avg_order_by

  """"""
  count: order_by

  """"""
  max: external_identifiers_max_order_by

  """"""
  min: external_identifiers_min_order_by

  """"""
  stddev: external_identifiers_stddev_order_by

  """"""
  stddev_pop: external_identifiers_stddev_pop_order_by

  """"""
  stddev_samp: external_identifiers_stddev_samp_order_by

  """"""
  sum: external_identifiers_sum_order_by

  """"""
  var_pop: external_identifiers_var_pop_order_by

  """"""
  var_samp: external_identifiers_var_samp_order_by

  """"""
  variance: external_identifiers_variance_order_by
}

"""
input type for inserting array relation for remote table "external_identifiers"
"""
input external_identifiers_arr_rel_insert_input {
  """"""
  data: [external_identifiers_insert_input!]!

  """on conflict condition"""
  on_conflict: external_identifiers_on_conflict
}

"""aggregate avg on columns"""
type external_identifiers_avg_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by avg() on columns of table "external_identifiers"
"""
input external_identifiers_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""
Boolean expression to filter rows from the table "external_identifiers". All fields are combined with a logical 'AND'.
"""
input external_identifiers_bool_exp {
  """"""
  _and: [external_identifiers_bool_exp!]

  """"""
  _not: external_identifiers_bool_exp

  """"""
  _or: [external_identifiers_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  id: String_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp

  """"""
  type: smallint_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "external_identifiers"
"""
enum external_identifiers_constraint {
  """unique or primary key constraint"""
  user_external_ids_pkey
}

"""
input type for incrementing numeric columns in table "external_identifiers"
"""
input external_identifiers_inc_input {
  """"""
  insert_instant: bigint

  """"""
  type: smallint
}

"""
input type for inserting data into table "external_identifiers"
"""
input external_identifiers_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid

  """"""
  type: smallint

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type external_identifiers_max_fields {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  tenants_id: uuid

  """"""
  type: smallint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "external_identifiers"
"""
input external_identifiers_max_order_by {
  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  tenants_id: order_by

  """"""
  type: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type external_identifiers_min_fields {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  tenants_id: uuid

  """"""
  type: smallint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "external_identifiers"
"""
input external_identifiers_min_order_by {
  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  tenants_id: order_by

  """"""
  type: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "external_identifiers"
"""
type external_identifiers_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [external_identifiers!]!
}

"""
on conflict condition type for table "external_identifiers"
"""
input external_identifiers_on_conflict {
  """"""
  constraint: external_identifiers_constraint!

  """"""
  update_columns: [external_identifiers_update_column!]!

  """"""
  where: external_identifiers_bool_exp
}

"""Ordering options when selecting data from "external_identifiers"."""
input external_identifiers_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by

  """"""
  type: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""primary key columns input for table: external_identifiers"""
input external_identifiers_pk_columns_input {
  """"""
  id: String!
}

"""
select columns of table "external_identifiers"
"""
enum external_identifiers_select_column {
  """column name"""
  applications_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  tenants_id

  """column name"""
  type

  """column name"""
  users_id
}

"""
input type for updating data in table "external_identifiers"
"""
input external_identifiers_set_input {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: String

  """"""
  insert_instant: bigint

  """"""
  tenants_id: uuid

  """"""
  type: smallint

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type external_identifiers_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by stddev() on columns of table "external_identifiers"
"""
input external_identifiers_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""aggregate stddev_pop on columns"""
type external_identifiers_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by stddev_pop() on columns of table "external_identifiers"
"""
input external_identifiers_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""aggregate stddev_samp on columns"""
type external_identifiers_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by stddev_samp() on columns of table "external_identifiers"
"""
input external_identifiers_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""aggregate sum on columns"""
type external_identifiers_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  type: smallint
}

"""
order by sum() on columns of table "external_identifiers"
"""
input external_identifiers_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""
update columns of table "external_identifiers"
"""
enum external_identifiers_update_column {
  """column name"""
  applications_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  tenants_id

  """column name"""
  type

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type external_identifiers_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by var_pop() on columns of table "external_identifiers"
"""
input external_identifiers_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""aggregate var_samp on columns"""
type external_identifiers_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by var_samp() on columns of table "external_identifiers"
"""
input external_identifiers_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""aggregate variance on columns"""
type external_identifiers_variance_fields {
  """"""
  insert_instant: Float

  """"""
  type: Float
}

"""
order by variance() on columns of table "external_identifiers"
"""
input external_identifiers_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  type: order_by
}

"""
columns and relationships of "failed_logins"
"""
type failed_logins {
  """"""
  count: Int!

  """"""
  last_failed_instant: bigint!

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "failed_logins"
"""
type failed_logins_aggregate {
  """"""
  aggregate: failed_logins_aggregate_fields

  """"""
  nodes: [failed_logins!]!
}

"""
aggregate fields of "failed_logins"
"""
type failed_logins_aggregate_fields {
  """"""
  avg: failed_logins_avg_fields

  """"""
  count(columns: [failed_logins_select_column!], distinct: Boolean): Int!

  """"""
  max: failed_logins_max_fields

  """"""
  min: failed_logins_min_fields

  """"""
  stddev: failed_logins_stddev_fields

  """"""
  stddev_pop: failed_logins_stddev_pop_fields

  """"""
  stddev_samp: failed_logins_stddev_samp_fields

  """"""
  sum: failed_logins_sum_fields

  """"""
  var_pop: failed_logins_var_pop_fields

  """"""
  var_samp: failed_logins_var_samp_fields

  """"""
  variance: failed_logins_variance_fields
}

"""
order by aggregate values of table "failed_logins"
"""
input failed_logins_aggregate_order_by {
  """"""
  avg: failed_logins_avg_order_by

  """"""
  count: order_by

  """"""
  max: failed_logins_max_order_by

  """"""
  min: failed_logins_min_order_by

  """"""
  stddev: failed_logins_stddev_order_by

  """"""
  stddev_pop: failed_logins_stddev_pop_order_by

  """"""
  stddev_samp: failed_logins_stddev_samp_order_by

  """"""
  sum: failed_logins_sum_order_by

  """"""
  var_pop: failed_logins_var_pop_order_by

  """"""
  var_samp: failed_logins_var_samp_order_by

  """"""
  variance: failed_logins_variance_order_by
}

"""
input type for inserting array relation for remote table "failed_logins"
"""
input failed_logins_arr_rel_insert_input {
  """"""
  data: [failed_logins_insert_input!]!

  """on conflict condition"""
  on_conflict: failed_logins_on_conflict
}

"""aggregate avg on columns"""
type failed_logins_avg_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by avg() on columns of table "failed_logins"
"""
input failed_logins_avg_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""
Boolean expression to filter rows from the table "failed_logins". All fields are combined with a logical 'AND'.
"""
input failed_logins_bool_exp {
  """"""
  _and: [failed_logins_bool_exp!]

  """"""
  _not: failed_logins_bool_exp

  """"""
  _or: [failed_logins_bool_exp!]

  """"""
  count: Int_comparison_exp

  """"""
  last_failed_instant: bigint_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "failed_logins"
"""
enum failed_logins_constraint {
  """unique or primary key constraint"""
  failed_logins_uk_1
}

"""
input type for incrementing numeric columns in table "failed_logins"
"""
input failed_logins_inc_input {
  """"""
  count: Int

  """"""
  last_failed_instant: bigint
}

"""
input type for inserting data into table "failed_logins"
"""
input failed_logins_insert_input {
  """"""
  count: Int

  """"""
  last_failed_instant: bigint

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type failed_logins_max_fields {
  """"""
  count: Int

  """"""
  last_failed_instant: bigint

  """"""
  tenants_id: uuid

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "failed_logins"
"""
input failed_logins_max_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by

  """"""
  tenants_id: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type failed_logins_min_fields {
  """"""
  count: Int

  """"""
  last_failed_instant: bigint

  """"""
  tenants_id: uuid

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "failed_logins"
"""
input failed_logins_min_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by

  """"""
  tenants_id: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "failed_logins"
"""
type failed_logins_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [failed_logins!]!
}

"""
input type for inserting object relation for remote table "failed_logins"
"""
input failed_logins_obj_rel_insert_input {
  """"""
  data: failed_logins_insert_input!

  """on conflict condition"""
  on_conflict: failed_logins_on_conflict
}

"""
on conflict condition type for table "failed_logins"
"""
input failed_logins_on_conflict {
  """"""
  constraint: failed_logins_constraint!

  """"""
  update_columns: [failed_logins_update_column!]!

  """"""
  where: failed_logins_bool_exp
}

"""Ordering options when selecting data from "failed_logins"."""
input failed_logins_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""
select columns of table "failed_logins"
"""
enum failed_logins_select_column {
  """column name"""
  count

  """column name"""
  last_failed_instant

  """column name"""
  tenants_id

  """column name"""
  users_id
}

"""
input type for updating data in table "failed_logins"
"""
input failed_logins_set_input {
  """"""
  count: Int

  """"""
  last_failed_instant: bigint

  """"""
  tenants_id: uuid

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type failed_logins_stddev_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by stddev() on columns of table "failed_logins"
"""
input failed_logins_stddev_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""aggregate stddev_pop on columns"""
type failed_logins_stddev_pop_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by stddev_pop() on columns of table "failed_logins"
"""
input failed_logins_stddev_pop_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""aggregate stddev_samp on columns"""
type failed_logins_stddev_samp_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by stddev_samp() on columns of table "failed_logins"
"""
input failed_logins_stddev_samp_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""aggregate sum on columns"""
type failed_logins_sum_fields {
  """"""
  count: Int

  """"""
  last_failed_instant: bigint
}

"""
order by sum() on columns of table "failed_logins"
"""
input failed_logins_sum_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""
update columns of table "failed_logins"
"""
enum failed_logins_update_column {
  """column name"""
  count

  """column name"""
  last_failed_instant

  """column name"""
  tenants_id

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type failed_logins_var_pop_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by var_pop() on columns of table "failed_logins"
"""
input failed_logins_var_pop_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""aggregate var_samp on columns"""
type failed_logins_var_samp_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by var_samp() on columns of table "failed_logins"
"""
input failed_logins_var_samp_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""aggregate variance on columns"""
type failed_logins_variance_fields {
  """"""
  count: Float

  """"""
  last_failed_instant: Float
}

"""
order by variance() on columns of table "failed_logins"
"""
input failed_logins_variance_order_by {
  """"""
  count: order_by

  """"""
  last_failed_instant: order_by
}

"""
columns and relationships of "families"
"""
type families {
  """"""
  data: String

  """"""
  family_id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  owner: Boolean!

  """"""
  role: smallint!

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "families"
"""
type families_aggregate {
  """"""
  aggregate: families_aggregate_fields

  """"""
  nodes: [families!]!
}

"""
aggregate fields of "families"
"""
type families_aggregate_fields {
  """"""
  avg: families_avg_fields

  """"""
  count(columns: [families_select_column!], distinct: Boolean): Int!

  """"""
  max: families_max_fields

  """"""
  min: families_min_fields

  """"""
  stddev: families_stddev_fields

  """"""
  stddev_pop: families_stddev_pop_fields

  """"""
  stddev_samp: families_stddev_samp_fields

  """"""
  sum: families_sum_fields

  """"""
  var_pop: families_var_pop_fields

  """"""
  var_samp: families_var_samp_fields

  """"""
  variance: families_variance_fields
}

"""
order by aggregate values of table "families"
"""
input families_aggregate_order_by {
  """"""
  avg: families_avg_order_by

  """"""
  count: order_by

  """"""
  max: families_max_order_by

  """"""
  min: families_min_order_by

  """"""
  stddev: families_stddev_order_by

  """"""
  stddev_pop: families_stddev_pop_order_by

  """"""
  stddev_samp: families_stddev_samp_order_by

  """"""
  sum: families_sum_order_by

  """"""
  var_pop: families_var_pop_order_by

  """"""
  var_samp: families_var_samp_order_by

  """"""
  variance: families_variance_order_by
}

"""
input type for inserting array relation for remote table "families"
"""
input families_arr_rel_insert_input {
  """"""
  data: [families_insert_input!]!

  """on conflict condition"""
  on_conflict: families_on_conflict
}

"""aggregate avg on columns"""
type families_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by avg() on columns of table "families"
"""
input families_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""
Boolean expression to filter rows from the table "families". All fields are combined with a logical 'AND'.
"""
input families_bool_exp {
  """"""
  _and: [families_bool_exp!]

  """"""
  _not: families_bool_exp

  """"""
  _or: [families_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  family_id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  owner: Boolean_comparison_exp

  """"""
  role: smallint_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "families"
"""
enum families_constraint {
  """unique or primary key constraint"""
  families_pkey
}

"""
input type for incrementing numeric columns in table "families"
"""
input families_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  role: smallint
}

"""
input type for inserting data into table "families"
"""
input families_insert_input {
  """"""
  data: String

  """"""
  family_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  owner: Boolean

  """"""
  role: smallint

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type families_max_fields {
  """"""
  data: String

  """"""
  family_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  role: smallint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "families"
"""
input families_max_order_by {
  """"""
  data: order_by

  """"""
  family_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type families_min_fields {
  """"""
  data: String

  """"""
  family_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  role: smallint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "families"
"""
input families_min_order_by {
  """"""
  data: order_by

  """"""
  family_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "families"
"""
type families_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [families!]!
}

"""
on conflict condition type for table "families"
"""
input families_on_conflict {
  """"""
  constraint: families_constraint!

  """"""
  update_columns: [families_update_column!]!

  """"""
  where: families_bool_exp
}

"""Ordering options when selecting data from "families"."""
input families_order_by {
  """"""
  data: order_by

  """"""
  family_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  owner: order_by

  """"""
  role: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""primary key columns input for table: families"""
input families_pk_columns_input {
  """"""
  family_id: uuid!

  """"""
  users_id: uuid!
}

"""
select columns of table "families"
"""
enum families_select_column {
  """column name"""
  data

  """column name"""
  family_id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  owner

  """column name"""
  role

  """column name"""
  users_id
}

"""
input type for updating data in table "families"
"""
input families_set_input {
  """"""
  data: String

  """"""
  family_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  owner: Boolean

  """"""
  role: smallint

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type families_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by stddev() on columns of table "families"
"""
input families_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""aggregate stddev_pop on columns"""
type families_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by stddev_pop() on columns of table "families"
"""
input families_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""aggregate stddev_samp on columns"""
type families_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by stddev_samp() on columns of table "families"
"""
input families_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""aggregate sum on columns"""
type families_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  role: smallint
}

"""
order by sum() on columns of table "families"
"""
input families_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""
update columns of table "families"
"""
enum families_update_column {
  """column name"""
  data

  """column name"""
  family_id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  owner

  """column name"""
  role

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type families_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by var_pop() on columns of table "families"
"""
input families_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""aggregate var_samp on columns"""
type families_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by var_samp() on columns of table "families"
"""
input families_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""aggregate variance on columns"""
type families_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  role: Float
}

"""
order by variance() on columns of table "families"
"""
input families_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  role: order_by
}

"""
columns and relationships of "federated_domains"
"""
type federated_domains {
  """"""
  domain: String!

  """An object relationship"""
  identity_provider: identity_providers!

  """"""
  identity_providers_id: uuid!
}

"""
aggregated selection of "federated_domains"
"""
type federated_domains_aggregate {
  """"""
  aggregate: federated_domains_aggregate_fields

  """"""
  nodes: [federated_domains!]!
}

"""
aggregate fields of "federated_domains"
"""
type federated_domains_aggregate_fields {
  """"""
  count(columns: [federated_domains_select_column!], distinct: Boolean): Int!

  """"""
  max: federated_domains_max_fields

  """"""
  min: federated_domains_min_fields
}

"""
order by aggregate values of table "federated_domains"
"""
input federated_domains_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: federated_domains_max_order_by

  """"""
  min: federated_domains_min_order_by
}

"""
input type for inserting array relation for remote table "federated_domains"
"""
input federated_domains_arr_rel_insert_input {
  """"""
  data: [federated_domains_insert_input!]!

  """on conflict condition"""
  on_conflict: federated_domains_on_conflict
}

"""
Boolean expression to filter rows from the table "federated_domains". All fields are combined with a logical 'AND'.
"""
input federated_domains_bool_exp {
  """"""
  _and: [federated_domains_bool_exp!]

  """"""
  _not: federated_domains_bool_exp

  """"""
  _or: [federated_domains_bool_exp!]

  """"""
  domain: String_comparison_exp

  """"""
  identity_provider: identity_providers_bool_exp

  """"""
  identity_providers_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "federated_domains"
"""
enum federated_domains_constraint {
  """unique or primary key constraint"""
  federated_domains_uk_1
}

"""
input type for inserting data into table "federated_domains"
"""
input federated_domains_insert_input {
  """"""
  domain: String

  """"""
  identity_provider: identity_providers_obj_rel_insert_input

  """"""
  identity_providers_id: uuid
}

"""aggregate max on columns"""
type federated_domains_max_fields {
  """"""
  domain: String

  """"""
  identity_providers_id: uuid
}

"""
order by max() on columns of table "federated_domains"
"""
input federated_domains_max_order_by {
  """"""
  domain: order_by

  """"""
  identity_providers_id: order_by
}

"""aggregate min on columns"""
type federated_domains_min_fields {
  """"""
  domain: String

  """"""
  identity_providers_id: uuid
}

"""
order by min() on columns of table "federated_domains"
"""
input federated_domains_min_order_by {
  """"""
  domain: order_by

  """"""
  identity_providers_id: order_by
}

"""
response of any mutation on the table "federated_domains"
"""
type federated_domains_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [federated_domains!]!
}

"""
on conflict condition type for table "federated_domains"
"""
input federated_domains_on_conflict {
  """"""
  constraint: federated_domains_constraint!

  """"""
  update_columns: [federated_domains_update_column!]!

  """"""
  where: federated_domains_bool_exp
}

"""Ordering options when selecting data from "federated_domains"."""
input federated_domains_order_by {
  """"""
  domain: order_by

  """"""
  identity_provider: identity_providers_order_by

  """"""
  identity_providers_id: order_by
}

"""
select columns of table "federated_domains"
"""
enum federated_domains_select_column {
  """column name"""
  domain

  """column name"""
  identity_providers_id
}

"""
input type for updating data in table "federated_domains"
"""
input federated_domains_set_input {
  """"""
  domain: String

  """"""
  identity_providers_id: uuid
}

"""
update columns of table "federated_domains"
"""
enum federated_domains_update_column {
  """column name"""
  domain

  """column name"""
  identity_providers_id
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
columns and relationships of "form_fields"
"""
type form_fields {
  """An object relationship"""
  consent: consents!

  """"""
  consents_id: uuid

  """"""
  data: String

  """An array relationship"""
  form_steps(
    """distinct select on columns"""
    distinct_on: [form_steps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_steps_order_by!]

    """filter the rows returned"""
    where: form_steps_bool_exp
  ): [form_steps!]!

  """An aggregate relationship"""
  form_steps_aggregate(
    """distinct select on columns"""
    distinct_on: [form_steps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_steps_order_by!]

    """filter the rows returned"""
    where: form_steps_bool_exp
  ): form_steps_aggregate!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!
}

"""
aggregated selection of "form_fields"
"""
type form_fields_aggregate {
  """"""
  aggregate: form_fields_aggregate_fields

  """"""
  nodes: [form_fields!]!
}

"""
aggregate fields of "form_fields"
"""
type form_fields_aggregate_fields {
  """"""
  avg: form_fields_avg_fields

  """"""
  count(columns: [form_fields_select_column!], distinct: Boolean): Int!

  """"""
  max: form_fields_max_fields

  """"""
  min: form_fields_min_fields

  """"""
  stddev: form_fields_stddev_fields

  """"""
  stddev_pop: form_fields_stddev_pop_fields

  """"""
  stddev_samp: form_fields_stddev_samp_fields

  """"""
  sum: form_fields_sum_fields

  """"""
  var_pop: form_fields_var_pop_fields

  """"""
  var_samp: form_fields_var_samp_fields

  """"""
  variance: form_fields_variance_fields
}

"""
order by aggregate values of table "form_fields"
"""
input form_fields_aggregate_order_by {
  """"""
  avg: form_fields_avg_order_by

  """"""
  count: order_by

  """"""
  max: form_fields_max_order_by

  """"""
  min: form_fields_min_order_by

  """"""
  stddev: form_fields_stddev_order_by

  """"""
  stddev_pop: form_fields_stddev_pop_order_by

  """"""
  stddev_samp: form_fields_stddev_samp_order_by

  """"""
  sum: form_fields_sum_order_by

  """"""
  var_pop: form_fields_var_pop_order_by

  """"""
  var_samp: form_fields_var_samp_order_by

  """"""
  variance: form_fields_variance_order_by
}

"""
input type for inserting array relation for remote table "form_fields"
"""
input form_fields_arr_rel_insert_input {
  """"""
  data: [form_fields_insert_input!]!

  """on conflict condition"""
  on_conflict: form_fields_on_conflict
}

"""aggregate avg on columns"""
type form_fields_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "form_fields"
"""
input form_fields_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "form_fields". All fields are combined with a logical 'AND'.
"""
input form_fields_bool_exp {
  """"""
  _and: [form_fields_bool_exp!]

  """"""
  _not: form_fields_bool_exp

  """"""
  _or: [form_fields_bool_exp!]

  """"""
  consent: consents_bool_exp

  """"""
  consents_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  form_steps: form_steps_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "form_fields"
"""
enum form_fields_constraint {
  """unique or primary key constraint"""
  form_fields_pkey

  """unique or primary key constraint"""
  form_fields_uk_1
}

"""
input type for incrementing numeric columns in table "form_fields"
"""
input form_fields_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "form_fields"
"""
input form_fields_insert_input {
  """"""
  consent: consents_obj_rel_insert_input

  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  form_steps: form_steps_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate max on columns"""
type form_fields_max_fields {
  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
order by max() on columns of table "form_fields"
"""
input form_fields_max_order_by {
  """"""
  consents_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""aggregate min on columns"""
type form_fields_min_fields {
  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
order by min() on columns of table "form_fields"
"""
input form_fields_min_order_by {
  """"""
  consents_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""
response of any mutation on the table "form_fields"
"""
type form_fields_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [form_fields!]!
}

"""
input type for inserting object relation for remote table "form_fields"
"""
input form_fields_obj_rel_insert_input {
  """"""
  data: form_fields_insert_input!

  """on conflict condition"""
  on_conflict: form_fields_on_conflict
}

"""
on conflict condition type for table "form_fields"
"""
input form_fields_on_conflict {
  """"""
  constraint: form_fields_constraint!

  """"""
  update_columns: [form_fields_update_column!]!

  """"""
  where: form_fields_bool_exp
}

"""Ordering options when selecting data from "form_fields"."""
input form_fields_order_by {
  """"""
  consent: consents_order_by

  """"""
  consents_id: order_by

  """"""
  data: order_by

  """"""
  form_steps_aggregate: form_steps_aggregate_order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by
}

"""primary key columns input for table: form_fields"""
input form_fields_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "form_fields"
"""
enum form_fields_select_column {
  """column name"""
  consents_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""
input type for updating data in table "form_fields"
"""
input form_fields_set_input {
  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate stddev on columns"""
type form_fields_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "form_fields"
"""
input form_fields_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type form_fields_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "form_fields"
"""
input form_fields_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type form_fields_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "form_fields"
"""
input form_fields_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type form_fields_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "form_fields"
"""
input form_fields_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "form_fields"
"""
enum form_fields_update_column {
  """column name"""
  consents_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type form_fields_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "form_fields"
"""
input form_fields_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type form_fields_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "form_fields"
"""
input form_fields_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type form_fields_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "form_fields"
"""
input form_fields_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "form_steps"
"""
type form_steps {
  """An object relationship"""
  form: forms!

  """An object relationship"""
  form_field: form_fields!

  """"""
  form_fields_id: uuid!

  """"""
  forms_id: uuid!

  """"""
  sequence: smallint!

  """"""
  step: smallint!
}

"""
aggregated selection of "form_steps"
"""
type form_steps_aggregate {
  """"""
  aggregate: form_steps_aggregate_fields

  """"""
  nodes: [form_steps!]!
}

"""
aggregate fields of "form_steps"
"""
type form_steps_aggregate_fields {
  """"""
  avg: form_steps_avg_fields

  """"""
  count(columns: [form_steps_select_column!], distinct: Boolean): Int!

  """"""
  max: form_steps_max_fields

  """"""
  min: form_steps_min_fields

  """"""
  stddev: form_steps_stddev_fields

  """"""
  stddev_pop: form_steps_stddev_pop_fields

  """"""
  stddev_samp: form_steps_stddev_samp_fields

  """"""
  sum: form_steps_sum_fields

  """"""
  var_pop: form_steps_var_pop_fields

  """"""
  var_samp: form_steps_var_samp_fields

  """"""
  variance: form_steps_variance_fields
}

"""
order by aggregate values of table "form_steps"
"""
input form_steps_aggregate_order_by {
  """"""
  avg: form_steps_avg_order_by

  """"""
  count: order_by

  """"""
  max: form_steps_max_order_by

  """"""
  min: form_steps_min_order_by

  """"""
  stddev: form_steps_stddev_order_by

  """"""
  stddev_pop: form_steps_stddev_pop_order_by

  """"""
  stddev_samp: form_steps_stddev_samp_order_by

  """"""
  sum: form_steps_sum_order_by

  """"""
  var_pop: form_steps_var_pop_order_by

  """"""
  var_samp: form_steps_var_samp_order_by

  """"""
  variance: form_steps_variance_order_by
}

"""
input type for inserting array relation for remote table "form_steps"
"""
input form_steps_arr_rel_insert_input {
  """"""
  data: [form_steps_insert_input!]!

  """on conflict condition"""
  on_conflict: form_steps_on_conflict
}

"""aggregate avg on columns"""
type form_steps_avg_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by avg() on columns of table "form_steps"
"""
input form_steps_avg_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""
Boolean expression to filter rows from the table "form_steps". All fields are combined with a logical 'AND'.
"""
input form_steps_bool_exp {
  """"""
  _and: [form_steps_bool_exp!]

  """"""
  _not: form_steps_bool_exp

  """"""
  _or: [form_steps_bool_exp!]

  """"""
  form: forms_bool_exp

  """"""
  form_field: form_fields_bool_exp

  """"""
  form_fields_id: uuid_comparison_exp

  """"""
  forms_id: uuid_comparison_exp

  """"""
  sequence: smallint_comparison_exp

  """"""
  step: smallint_comparison_exp
}

"""
unique or primary key constraints on table "form_steps"
"""
enum form_steps_constraint {
  """unique or primary key constraint"""
  form_steps_pkey
}

"""
input type for incrementing numeric columns in table "form_steps"
"""
input form_steps_inc_input {
  """"""
  sequence: smallint

  """"""
  step: smallint
}

"""
input type for inserting data into table "form_steps"
"""
input form_steps_insert_input {
  """"""
  form: forms_obj_rel_insert_input

  """"""
  form_field: form_fields_obj_rel_insert_input

  """"""
  form_fields_id: uuid

  """"""
  forms_id: uuid

  """"""
  sequence: smallint

  """"""
  step: smallint
}

"""aggregate max on columns"""
type form_steps_max_fields {
  """"""
  form_fields_id: uuid

  """"""
  forms_id: uuid

  """"""
  sequence: smallint

  """"""
  step: smallint
}

"""
order by max() on columns of table "form_steps"
"""
input form_steps_max_order_by {
  """"""
  form_fields_id: order_by

  """"""
  forms_id: order_by

  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""aggregate min on columns"""
type form_steps_min_fields {
  """"""
  form_fields_id: uuid

  """"""
  forms_id: uuid

  """"""
  sequence: smallint

  """"""
  step: smallint
}

"""
order by min() on columns of table "form_steps"
"""
input form_steps_min_order_by {
  """"""
  form_fields_id: order_by

  """"""
  forms_id: order_by

  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""
response of any mutation on the table "form_steps"
"""
type form_steps_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [form_steps!]!
}

"""
on conflict condition type for table "form_steps"
"""
input form_steps_on_conflict {
  """"""
  constraint: form_steps_constraint!

  """"""
  update_columns: [form_steps_update_column!]!

  """"""
  where: form_steps_bool_exp
}

"""Ordering options when selecting data from "form_steps"."""
input form_steps_order_by {
  """"""
  form: forms_order_by

  """"""
  form_field: form_fields_order_by

  """"""
  form_fields_id: order_by

  """"""
  forms_id: order_by

  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""primary key columns input for table: form_steps"""
input form_steps_pk_columns_input {
  """"""
  form_fields_id: uuid!

  """"""
  forms_id: uuid!
}

"""
select columns of table "form_steps"
"""
enum form_steps_select_column {
  """column name"""
  form_fields_id

  """column name"""
  forms_id

  """column name"""
  sequence

  """column name"""
  step
}

"""
input type for updating data in table "form_steps"
"""
input form_steps_set_input {
  """"""
  form_fields_id: uuid

  """"""
  forms_id: uuid

  """"""
  sequence: smallint

  """"""
  step: smallint
}

"""aggregate stddev on columns"""
type form_steps_stddev_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by stddev() on columns of table "form_steps"
"""
input form_steps_stddev_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""aggregate stddev_pop on columns"""
type form_steps_stddev_pop_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by stddev_pop() on columns of table "form_steps"
"""
input form_steps_stddev_pop_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""aggregate stddev_samp on columns"""
type form_steps_stddev_samp_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by stddev_samp() on columns of table "form_steps"
"""
input form_steps_stddev_samp_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""aggregate sum on columns"""
type form_steps_sum_fields {
  """"""
  sequence: smallint

  """"""
  step: smallint
}

"""
order by sum() on columns of table "form_steps"
"""
input form_steps_sum_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""
update columns of table "form_steps"
"""
enum form_steps_update_column {
  """column name"""
  form_fields_id

  """column name"""
  forms_id

  """column name"""
  sequence

  """column name"""
  step
}

"""aggregate var_pop on columns"""
type form_steps_var_pop_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by var_pop() on columns of table "form_steps"
"""
input form_steps_var_pop_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""aggregate var_samp on columns"""
type form_steps_var_samp_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by var_samp() on columns of table "form_steps"
"""
input form_steps_var_samp_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""aggregate variance on columns"""
type form_steps_variance_fields {
  """"""
  sequence: Float

  """"""
  step: Float
}

"""
order by variance() on columns of table "form_steps"
"""
input form_steps_variance_order_by {
  """"""
  sequence: order_by

  """"""
  step: order_by
}

"""
columns and relationships of "forms"
"""
type forms {
  """An array relationship"""
  applications(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applications_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """"""
  data: String

  """An array relationship"""
  form_steps(
    """distinct select on columns"""
    distinct_on: [form_steps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_steps_order_by!]

    """filter the rows returned"""
    where: form_steps_bool_exp
  ): [form_steps!]!

  """An aggregate relationship"""
  form_steps_aggregate(
    """distinct select on columns"""
    distinct_on: [form_steps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_steps_order_by!]

    """filter the rows returned"""
    where: form_steps_bool_exp
  ): form_steps_aggregate!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  type: smallint!
}

"""
aggregated selection of "forms"
"""
type forms_aggregate {
  """"""
  aggregate: forms_aggregate_fields

  """"""
  nodes: [forms!]!
}

"""
aggregate fields of "forms"
"""
type forms_aggregate_fields {
  """"""
  avg: forms_avg_fields

  """"""
  count(columns: [forms_select_column!], distinct: Boolean): Int!

  """"""
  max: forms_max_fields

  """"""
  min: forms_min_fields

  """"""
  stddev: forms_stddev_fields

  """"""
  stddev_pop: forms_stddev_pop_fields

  """"""
  stddev_samp: forms_stddev_samp_fields

  """"""
  sum: forms_sum_fields

  """"""
  var_pop: forms_var_pop_fields

  """"""
  var_samp: forms_var_samp_fields

  """"""
  variance: forms_variance_fields
}

"""aggregate avg on columns"""
type forms_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
Boolean expression to filter rows from the table "forms". All fields are combined with a logical 'AND'.
"""
input forms_bool_exp {
  """"""
  _and: [forms_bool_exp!]

  """"""
  _not: forms_bool_exp

  """"""
  _or: [forms_bool_exp!]

  """"""
  applications: applications_bool_exp

  """"""
  data: String_comparison_exp

  """"""
  form_steps: form_steps_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  type: smallint_comparison_exp
}

"""
unique or primary key constraints on table "forms"
"""
enum forms_constraint {
  """unique or primary key constraint"""
  forms_pkey

  """unique or primary key constraint"""
  forms_uk_1
}

"""
input type for incrementing numeric columns in table "forms"
"""
input forms_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  type: smallint
}

"""
input type for inserting data into table "forms"
"""
input forms_insert_input {
  """"""
  applications: applications_arr_rel_insert_input

  """"""
  data: String

  """"""
  form_steps: form_steps_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""aggregate max on columns"""
type forms_max_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""aggregate min on columns"""
type forms_min_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""
response of any mutation on the table "forms"
"""
type forms_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [forms!]!
}

"""
input type for inserting object relation for remote table "forms"
"""
input forms_obj_rel_insert_input {
  """"""
  data: forms_insert_input!

  """on conflict condition"""
  on_conflict: forms_on_conflict
}

"""
on conflict condition type for table "forms"
"""
input forms_on_conflict {
  """"""
  constraint: forms_constraint!

  """"""
  update_columns: [forms_update_column!]!

  """"""
  where: forms_bool_exp
}

"""Ordering options when selecting data from "forms"."""
input forms_order_by {
  """"""
  applications_aggregate: applications_aggregate_order_by

  """"""
  data: order_by

  """"""
  form_steps_aggregate: form_steps_aggregate_order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  type: order_by
}

"""primary key columns input for table: forms"""
input forms_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "forms"
"""
enum forms_select_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  type
}

"""
input type for updating data in table "forms"
"""
input forms_set_input {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""aggregate stddev on columns"""
type forms_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate stddev_pop on columns"""
type forms_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate stddev_samp on columns"""
type forms_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate sum on columns"""
type forms_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  type: smallint
}

"""
update columns of table "forms"
"""
enum forms_update_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  type
}

"""aggregate var_pop on columns"""
type forms_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate var_samp on columns"""
type forms_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate variance on columns"""
type forms_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
columns and relationships of "gender_cat_analysis"
"""
type gender_cat_analysis {
  block: String
  category: String
  district: String
  gender: String
  grade: String
  id: Int
  is_cwsn: Boolean
  mobile_no: bigint
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""
aggregated selection of "gender_cat_analysis"
"""
type gender_cat_analysis_aggregate {
  aggregate: gender_cat_analysis_aggregate_fields
  nodes: [gender_cat_analysis!]!
}

"""
aggregate fields of "gender_cat_analysis"
"""
type gender_cat_analysis_aggregate_fields {
  avg: gender_cat_analysis_avg_fields
  count(columns: [gender_cat_analysis_select_column!], distinct: Boolean): Int!
  max: gender_cat_analysis_max_fields
  min: gender_cat_analysis_min_fields
  stddev: gender_cat_analysis_stddev_fields
  stddev_pop: gender_cat_analysis_stddev_pop_fields
  stddev_samp: gender_cat_analysis_stddev_samp_fields
  sum: gender_cat_analysis_sum_fields
  var_pop: gender_cat_analysis_var_pop_fields
  var_samp: gender_cat_analysis_var_samp_fields
  variance: gender_cat_analysis_variance_fields
}

"""aggregate avg on columns"""
type gender_cat_analysis_avg_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""
Boolean expression to filter rows from the table "gender_cat_analysis". All fields are combined with a logical 'AND'.
"""
input gender_cat_analysis_bool_exp {
  _and: [gender_cat_analysis_bool_exp!]
  _not: gender_cat_analysis_bool_exp
  _or: [gender_cat_analysis_bool_exp!]
  block: String_comparison_exp
  category: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade: String_comparison_exp
  id: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  mobile_no: bigint_comparison_exp
  score: Int_comparison_exp
  subject: String_comparison_exp
  udise: Int_comparison_exp
  week: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "gender_cat_analysis"
"""
input gender_cat_analysis_inc_input {
  id: Int
  mobile_no: bigint
  score: Int
  udise: Int
  week: Int
}

"""
input type for inserting data into table "gender_cat_analysis"
"""
input gender_cat_analysis_insert_input {
  block: String
  category: String
  district: String
  gender: String
  grade: String
  id: Int
  is_cwsn: Boolean
  mobile_no: bigint
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""aggregate max on columns"""
type gender_cat_analysis_max_fields {
  block: String
  category: String
  district: String
  gender: String
  grade: String
  id: Int
  mobile_no: bigint
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""aggregate min on columns"""
type gender_cat_analysis_min_fields {
  block: String
  category: String
  district: String
  gender: String
  grade: String
  id: Int
  mobile_no: bigint
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""
response of any mutation on the table "gender_cat_analysis"
"""
type gender_cat_analysis_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [gender_cat_analysis!]!
}

"""Ordering options when selecting data from "gender_cat_analysis"."""
input gender_cat_analysis_order_by {
  block: order_by
  category: order_by
  district: order_by
  gender: order_by
  grade: order_by
  id: order_by
  is_cwsn: order_by
  mobile_no: order_by
  score: order_by
  subject: order_by
  udise: order_by
  week: order_by
}

"""
select columns of table "gender_cat_analysis"
"""
enum gender_cat_analysis_select_column {
  """column name"""
  block

  """column name"""
  category

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  is_cwsn

  """column name"""
  mobile_no

  """column name"""
  score

  """column name"""
  subject

  """column name"""
  udise

  """column name"""
  week
}

"""
input type for updating data in table "gender_cat_analysis"
"""
input gender_cat_analysis_set_input {
  block: String
  category: String
  district: String
  gender: String
  grade: String
  id: Int
  is_cwsn: Boolean
  mobile_no: bigint
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""aggregate stddev on columns"""
type gender_cat_analysis_stddev_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate stddev_pop on columns"""
type gender_cat_analysis_stddev_pop_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate stddev_samp on columns"""
type gender_cat_analysis_stddev_samp_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate sum on columns"""
type gender_cat_analysis_sum_fields {
  id: Int
  mobile_no: bigint
  score: Int
  udise: Int
  week: Int
}

"""aggregate var_pop on columns"""
type gender_cat_analysis_var_pop_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate var_samp on columns"""
type gender_cat_analysis_var_samp_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate variance on columns"""
type gender_cat_analysis_variance_fields {
  id: Float
  mobile_no: Float
  score: Float
  udise: Float
  week: Float
}

"""
columns and relationships of "genuine_profiles"
"""
type genuine_profiles {
  block: String
  district: String
  grade: String
  id: Int
  mobile: String
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""
aggregated selection of "genuine_profiles"
"""
type genuine_profiles_aggregate {
  aggregate: genuine_profiles_aggregate_fields
  nodes: [genuine_profiles!]!
}

"""
aggregate fields of "genuine_profiles"
"""
type genuine_profiles_aggregate_fields {
  avg: genuine_profiles_avg_fields
  count(columns: [genuine_profiles_select_column!], distinct: Boolean): Int!
  max: genuine_profiles_max_fields
  min: genuine_profiles_min_fields
  stddev: genuine_profiles_stddev_fields
  stddev_pop: genuine_profiles_stddev_pop_fields
  stddev_samp: genuine_profiles_stddev_samp_fields
  sum: genuine_profiles_sum_fields
  var_pop: genuine_profiles_var_pop_fields
  var_samp: genuine_profiles_var_samp_fields
  variance: genuine_profiles_variance_fields
}

"""aggregate avg on columns"""
type genuine_profiles_avg_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""
Boolean expression to filter rows from the table "genuine_profiles". All fields are combined with a logical 'AND'.
"""
input genuine_profiles_bool_exp {
  _and: [genuine_profiles_bool_exp!]
  _not: genuine_profiles_bool_exp
  _or: [genuine_profiles_bool_exp!]
  block: String_comparison_exp
  district: String_comparison_exp
  grade: String_comparison_exp
  id: Int_comparison_exp
  mobile: String_comparison_exp
  score: Int_comparison_exp
  subject: String_comparison_exp
  udise: Int_comparison_exp
  week: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "genuine_profiles"
"""
input genuine_profiles_inc_input {
  id: Int
  score: Int
  udise: Int
  week: Int
}

"""
input type for inserting data into table "genuine_profiles"
"""
input genuine_profiles_insert_input {
  block: String
  district: String
  grade: String
  id: Int
  mobile: String
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""aggregate max on columns"""
type genuine_profiles_max_fields {
  block: String
  district: String
  grade: String
  id: Int
  mobile: String
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""aggregate min on columns"""
type genuine_profiles_min_fields {
  block: String
  district: String
  grade: String
  id: Int
  mobile: String
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""
response of any mutation on the table "genuine_profiles"
"""
type genuine_profiles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [genuine_profiles!]!
}

"""Ordering options when selecting data from "genuine_profiles"."""
input genuine_profiles_order_by {
  block: order_by
  district: order_by
  grade: order_by
  id: order_by
  mobile: order_by
  score: order_by
  subject: order_by
  udise: order_by
  week: order_by
}

"""
select columns of table "genuine_profiles"
"""
enum genuine_profiles_select_column {
  """column name"""
  block

  """column name"""
  district

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  score

  """column name"""
  subject

  """column name"""
  udise

  """column name"""
  week
}

"""
input type for updating data in table "genuine_profiles"
"""
input genuine_profiles_set_input {
  block: String
  district: String
  grade: String
  id: Int
  mobile: String
  score: Int
  subject: String
  udise: Int
  week: Int
}

"""aggregate stddev on columns"""
type genuine_profiles_stddev_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate stddev_pop on columns"""
type genuine_profiles_stddev_pop_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate stddev_samp on columns"""
type genuine_profiles_stddev_samp_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate sum on columns"""
type genuine_profiles_sum_fields {
  id: Int
  score: Int
  udise: Int
  week: Int
}

"""aggregate var_pop on columns"""
type genuine_profiles_var_pop_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate var_samp on columns"""
type genuine_profiles_var_samp_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate variance on columns"""
type genuine_profiles_variance_fields {
  id: Float
  score: Float
  udise: Float
  week: Float
}

"""
columns and relationships of "global_daily_active_users"
"""
type global_daily_active_users {
  """"""
  count: Int!

  """"""
  day: Int!
}

"""
aggregated selection of "global_daily_active_users"
"""
type global_daily_active_users_aggregate {
  """"""
  aggregate: global_daily_active_users_aggregate_fields

  """"""
  nodes: [global_daily_active_users!]!
}

"""
aggregate fields of "global_daily_active_users"
"""
type global_daily_active_users_aggregate_fields {
  """"""
  avg: global_daily_active_users_avg_fields

  """"""
  count(columns: [global_daily_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: global_daily_active_users_max_fields

  """"""
  min: global_daily_active_users_min_fields

  """"""
  stddev: global_daily_active_users_stddev_fields

  """"""
  stddev_pop: global_daily_active_users_stddev_pop_fields

  """"""
  stddev_samp: global_daily_active_users_stddev_samp_fields

  """"""
  sum: global_daily_active_users_sum_fields

  """"""
  var_pop: global_daily_active_users_var_pop_fields

  """"""
  var_samp: global_daily_active_users_var_samp_fields

  """"""
  variance: global_daily_active_users_variance_fields
}

"""aggregate avg on columns"""
type global_daily_active_users_avg_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
Boolean expression to filter rows from the table "global_daily_active_users". All fields are combined with a logical 'AND'.
"""
input global_daily_active_users_bool_exp {
  """"""
  _and: [global_daily_active_users_bool_exp!]

  """"""
  _not: global_daily_active_users_bool_exp

  """"""
  _or: [global_daily_active_users_bool_exp!]

  """"""
  count: Int_comparison_exp

  """"""
  day: Int_comparison_exp
}

"""
unique or primary key constraints on table "global_daily_active_users"
"""
enum global_daily_active_users_constraint {
  """unique or primary key constraint"""
  global_daily_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "global_daily_active_users"
"""
input global_daily_active_users_inc_input {
  """"""
  count: Int

  """"""
  day: Int
}

"""
input type for inserting data into table "global_daily_active_users"
"""
input global_daily_active_users_insert_input {
  """"""
  count: Int

  """"""
  day: Int
}

"""aggregate max on columns"""
type global_daily_active_users_max_fields {
  """"""
  count: Int

  """"""
  day: Int
}

"""aggregate min on columns"""
type global_daily_active_users_min_fields {
  """"""
  count: Int

  """"""
  day: Int
}

"""
response of any mutation on the table "global_daily_active_users"
"""
type global_daily_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [global_daily_active_users!]!
}

"""
on conflict condition type for table "global_daily_active_users"
"""
input global_daily_active_users_on_conflict {
  """"""
  constraint: global_daily_active_users_constraint!

  """"""
  update_columns: [global_daily_active_users_update_column!]!

  """"""
  where: global_daily_active_users_bool_exp
}

"""Ordering options when selecting data from "global_daily_active_users"."""
input global_daily_active_users_order_by {
  """"""
  count: order_by

  """"""
  day: order_by
}

"""
select columns of table "global_daily_active_users"
"""
enum global_daily_active_users_select_column {
  """column name"""
  count

  """column name"""
  day
}

"""
input type for updating data in table "global_daily_active_users"
"""
input global_daily_active_users_set_input {
  """"""
  count: Int

  """"""
  day: Int
}

"""aggregate stddev on columns"""
type global_daily_active_users_stddev_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""aggregate stddev_pop on columns"""
type global_daily_active_users_stddev_pop_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""aggregate stddev_samp on columns"""
type global_daily_active_users_stddev_samp_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""aggregate sum on columns"""
type global_daily_active_users_sum_fields {
  """"""
  count: Int

  """"""
  day: Int
}

"""
update columns of table "global_daily_active_users"
"""
enum global_daily_active_users_update_column {
  """column name"""
  count

  """column name"""
  day
}

"""aggregate var_pop on columns"""
type global_daily_active_users_var_pop_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""aggregate var_samp on columns"""
type global_daily_active_users_var_samp_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""aggregate variance on columns"""
type global_daily_active_users_variance_fields {
  """"""
  count: Float

  """"""
  day: Float
}

"""
columns and relationships of "global_monthly_active_users"
"""
type global_monthly_active_users {
  """"""
  count: Int!

  """"""
  month: Int!
}

"""
aggregated selection of "global_monthly_active_users"
"""
type global_monthly_active_users_aggregate {
  """"""
  aggregate: global_monthly_active_users_aggregate_fields

  """"""
  nodes: [global_monthly_active_users!]!
}

"""
aggregate fields of "global_monthly_active_users"
"""
type global_monthly_active_users_aggregate_fields {
  """"""
  avg: global_monthly_active_users_avg_fields

  """"""
  count(columns: [global_monthly_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: global_monthly_active_users_max_fields

  """"""
  min: global_monthly_active_users_min_fields

  """"""
  stddev: global_monthly_active_users_stddev_fields

  """"""
  stddev_pop: global_monthly_active_users_stddev_pop_fields

  """"""
  stddev_samp: global_monthly_active_users_stddev_samp_fields

  """"""
  sum: global_monthly_active_users_sum_fields

  """"""
  var_pop: global_monthly_active_users_var_pop_fields

  """"""
  var_samp: global_monthly_active_users_var_samp_fields

  """"""
  variance: global_monthly_active_users_variance_fields
}

"""aggregate avg on columns"""
type global_monthly_active_users_avg_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
Boolean expression to filter rows from the table "global_monthly_active_users".
All fields are combined with a logical 'AND'.
"""
input global_monthly_active_users_bool_exp {
  """"""
  _and: [global_monthly_active_users_bool_exp!]

  """"""
  _not: global_monthly_active_users_bool_exp

  """"""
  _or: [global_monthly_active_users_bool_exp!]

  """"""
  count: Int_comparison_exp

  """"""
  month: Int_comparison_exp
}

"""
unique or primary key constraints on table "global_monthly_active_users"
"""
enum global_monthly_active_users_constraint {
  """unique or primary key constraint"""
  global_monthly_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "global_monthly_active_users"
"""
input global_monthly_active_users_inc_input {
  """"""
  count: Int

  """"""
  month: Int
}

"""
input type for inserting data into table "global_monthly_active_users"
"""
input global_monthly_active_users_insert_input {
  """"""
  count: Int

  """"""
  month: Int
}

"""aggregate max on columns"""
type global_monthly_active_users_max_fields {
  """"""
  count: Int

  """"""
  month: Int
}

"""aggregate min on columns"""
type global_monthly_active_users_min_fields {
  """"""
  count: Int

  """"""
  month: Int
}

"""
response of any mutation on the table "global_monthly_active_users"
"""
type global_monthly_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [global_monthly_active_users!]!
}

"""
on conflict condition type for table "global_monthly_active_users"
"""
input global_monthly_active_users_on_conflict {
  """"""
  constraint: global_monthly_active_users_constraint!

  """"""
  update_columns: [global_monthly_active_users_update_column!]!

  """"""
  where: global_monthly_active_users_bool_exp
}

"""
Ordering options when selecting data from "global_monthly_active_users".
"""
input global_monthly_active_users_order_by {
  """"""
  count: order_by

  """"""
  month: order_by
}

"""
select columns of table "global_monthly_active_users"
"""
enum global_monthly_active_users_select_column {
  """column name"""
  count

  """column name"""
  month
}

"""
input type for updating data in table "global_monthly_active_users"
"""
input global_monthly_active_users_set_input {
  """"""
  count: Int

  """"""
  month: Int
}

"""aggregate stddev on columns"""
type global_monthly_active_users_stddev_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""aggregate stddev_pop on columns"""
type global_monthly_active_users_stddev_pop_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""aggregate stddev_samp on columns"""
type global_monthly_active_users_stddev_samp_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""aggregate sum on columns"""
type global_monthly_active_users_sum_fields {
  """"""
  count: Int

  """"""
  month: Int
}

"""
update columns of table "global_monthly_active_users"
"""
enum global_monthly_active_users_update_column {
  """column name"""
  count

  """column name"""
  month
}

"""aggregate var_pop on columns"""
type global_monthly_active_users_var_pop_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""aggregate var_samp on columns"""
type global_monthly_active_users_var_samp_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""aggregate variance on columns"""
type global_monthly_active_users_variance_fields {
  """"""
  count: Float

  """"""
  month: Float
}

"""
columns and relationships of "global_registration_counts"
"""
type global_registration_counts {
  """"""
  count: Int!

  """"""
  decremented_count: Int!

  """"""
  hour: Int!
}

"""
aggregated selection of "global_registration_counts"
"""
type global_registration_counts_aggregate {
  """"""
  aggregate: global_registration_counts_aggregate_fields

  """"""
  nodes: [global_registration_counts!]!
}

"""
aggregate fields of "global_registration_counts"
"""
type global_registration_counts_aggregate_fields {
  """"""
  avg: global_registration_counts_avg_fields

  """"""
  count(columns: [global_registration_counts_select_column!], distinct: Boolean): Int!

  """"""
  max: global_registration_counts_max_fields

  """"""
  min: global_registration_counts_min_fields

  """"""
  stddev: global_registration_counts_stddev_fields

  """"""
  stddev_pop: global_registration_counts_stddev_pop_fields

  """"""
  stddev_samp: global_registration_counts_stddev_samp_fields

  """"""
  sum: global_registration_counts_sum_fields

  """"""
  var_pop: global_registration_counts_var_pop_fields

  """"""
  var_samp: global_registration_counts_var_samp_fields

  """"""
  variance: global_registration_counts_variance_fields
}

"""aggregate avg on columns"""
type global_registration_counts_avg_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
Boolean expression to filter rows from the table "global_registration_counts". All fields are combined with a logical 'AND'.
"""
input global_registration_counts_bool_exp {
  """"""
  _and: [global_registration_counts_bool_exp!]

  """"""
  _not: global_registration_counts_bool_exp

  """"""
  _or: [global_registration_counts_bool_exp!]

  """"""
  count: Int_comparison_exp

  """"""
  decremented_count: Int_comparison_exp

  """"""
  hour: Int_comparison_exp
}

"""
unique or primary key constraints on table "global_registration_counts"
"""
enum global_registration_counts_constraint {
  """unique or primary key constraint"""
  global_registration_counts_uk_1
}

"""
input type for incrementing numeric columns in table "global_registration_counts"
"""
input global_registration_counts_inc_input {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
input type for inserting data into table "global_registration_counts"
"""
input global_registration_counts_insert_input {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""aggregate max on columns"""
type global_registration_counts_max_fields {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""aggregate min on columns"""
type global_registration_counts_min_fields {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
response of any mutation on the table "global_registration_counts"
"""
type global_registration_counts_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [global_registration_counts!]!
}

"""
on conflict condition type for table "global_registration_counts"
"""
input global_registration_counts_on_conflict {
  """"""
  constraint: global_registration_counts_constraint!

  """"""
  update_columns: [global_registration_counts_update_column!]!

  """"""
  where: global_registration_counts_bool_exp
}

"""
Ordering options when selecting data from "global_registration_counts".
"""
input global_registration_counts_order_by {
  """"""
  count: order_by

  """"""
  decremented_count: order_by

  """"""
  hour: order_by
}

"""
select columns of table "global_registration_counts"
"""
enum global_registration_counts_select_column {
  """column name"""
  count

  """column name"""
  decremented_count

  """column name"""
  hour
}

"""
input type for updating data in table "global_registration_counts"
"""
input global_registration_counts_set_input {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""aggregate stddev on columns"""
type global_registration_counts_stddev_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""aggregate stddev_pop on columns"""
type global_registration_counts_stddev_pop_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""aggregate stddev_samp on columns"""
type global_registration_counts_stddev_samp_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""aggregate sum on columns"""
type global_registration_counts_sum_fields {
  """"""
  count: Int

  """"""
  decremented_count: Int

  """"""
  hour: Int
}

"""
update columns of table "global_registration_counts"
"""
enum global_registration_counts_update_column {
  """column name"""
  count

  """column name"""
  decremented_count

  """column name"""
  hour
}

"""aggregate var_pop on columns"""
type global_registration_counts_var_pop_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""aggregate var_samp on columns"""
type global_registration_counts_var_samp_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""aggregate variance on columns"""
type global_registration_counts_variance_fields {
  """"""
  count: Float

  """"""
  decremented_count: Float

  """"""
  hour: Float
}

"""
columns and relationships of "grade"
"""
type grade {
  """An array relationship"""
  assessment_au_lo_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): [assessment_au_lo_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_lo_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): assessment_au_lo_aggregate_submission_aggregate!

  """An array relationship"""
  assessment_au_question_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): [assessment_au_question_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_question_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): assessment_au_question_aggregate_submission_aggregate!

  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!

  """An array relationship"""
  assessment_grades(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): [assessment_grade!]!

  """An aggregate relationship"""
  assessment_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): assessment_grade_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!
  id: Int!

  """An array relationship"""
  lo_submissions(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): [lo_submission!]!

  """An aggregate relationship"""
  lo_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): lo_submission_aggregate!
  number: Int!

  """An array relationship"""
  question_submissions(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): [question_submission!]!

  """An aggregate relationship"""
  question_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): question_submission_aggregate!

  """An array relationship"""
  school_grades(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): [school_grade!]!

  """An aggregate relationship"""
  school_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): school_grade_aggregate!
  section: String!

  """An object relationship"""
  stream: stream
  stream_id: Int

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An array relationship"""
  subject_submissions(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """An aggregate relationship"""
  subject_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!
}

"""
aggregated selection of "grade"
"""
type grade_aggregate {
  aggregate: grade_aggregate_fields
  nodes: [grade!]!
}

"""
aggregate fields of "grade"
"""
type grade_aggregate_fields {
  avg: grade_avg_fields
  count(columns: [grade_select_column!], distinct: Boolean): Int!
  max: grade_max_fields
  min: grade_min_fields
  stddev: grade_stddev_fields
  stddev_pop: grade_stddev_pop_fields
  stddev_samp: grade_stddev_samp_fields
  sum: grade_sum_fields
  var_pop: grade_var_pop_fields
  var_samp: grade_var_samp_fields
  variance: grade_variance_fields
}

"""
order by aggregate values of table "grade"
"""
input grade_aggregate_order_by {
  avg: grade_avg_order_by
  count: order_by
  max: grade_max_order_by
  min: grade_min_order_by
  stddev: grade_stddev_order_by
  stddev_pop: grade_stddev_pop_order_by
  stddev_samp: grade_stddev_samp_order_by
  sum: grade_sum_order_by
  var_pop: grade_var_pop_order_by
  var_samp: grade_var_samp_order_by
  variance: grade_variance_order_by
}

"""
input type for inserting array relation for remote table "grade"
"""
input grade_arr_rel_insert_input {
  data: [grade_insert_input!]!

  """on conflict condition"""
  on_conflict: grade_on_conflict
}

"""
columns and relationships of "grade_assessment"
"""
type grade_assessment {
  """An object relationship"""
  assessment: assessment

  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!
  assessment_id: Int
  created: timestamptz
  form_id: uuid!
  grade_number: Int!
  id: Int!

  """An object relationship"""
  school: school
  school_id: Int
  section: String!
  signature: String

  """An object relationship"""
  stream: stream
  streams_id: Int

  """An array relationship"""
  student_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """An aggregate relationship"""
  student_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "grade_assessment"
"""
type grade_assessment_aggregate {
  aggregate: grade_assessment_aggregate_fields
  nodes: [grade_assessment!]!
}

"""
aggregate fields of "grade_assessment"
"""
type grade_assessment_aggregate_fields {
  avg: grade_assessment_avg_fields
  count(columns: [grade_assessment_select_column!], distinct: Boolean): Int!
  max: grade_assessment_max_fields
  min: grade_assessment_min_fields
  stddev: grade_assessment_stddev_fields
  stddev_pop: grade_assessment_stddev_pop_fields
  stddev_samp: grade_assessment_stddev_samp_fields
  sum: grade_assessment_sum_fields
  var_pop: grade_assessment_var_pop_fields
  var_samp: grade_assessment_var_samp_fields
  variance: grade_assessment_variance_fields
}

"""
order by aggregate values of table "grade_assessment"
"""
input grade_assessment_aggregate_order_by {
  avg: grade_assessment_avg_order_by
  count: order_by
  max: grade_assessment_max_order_by
  min: grade_assessment_min_order_by
  stddev: grade_assessment_stddev_order_by
  stddev_pop: grade_assessment_stddev_pop_order_by
  stddev_samp: grade_assessment_stddev_samp_order_by
  sum: grade_assessment_sum_order_by
  var_pop: grade_assessment_var_pop_order_by
  var_samp: grade_assessment_var_samp_order_by
  variance: grade_assessment_variance_order_by
}

"""
input type for inserting array relation for remote table "grade_assessment"
"""
input grade_assessment_arr_rel_insert_input {
  data: [grade_assessment_insert_input!]!

  """on conflict condition"""
  on_conflict: grade_assessment_on_conflict
}

"""aggregate avg on columns"""
type grade_assessment_avg_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by avg() on columns of table "grade_assessment"
"""
input grade_assessment_avg_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""
Boolean expression to filter rows from the table "grade_assessment". All fields are combined with a logical 'AND'.
"""
input grade_assessment_bool_exp {
  _and: [grade_assessment_bool_exp!]
  _not: grade_assessment_bool_exp
  _or: [grade_assessment_bool_exp!]
  assessment: assessment_bool_exp
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  form_id: uuid_comparison_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  signature: String_comparison_exp
  stream: stream_bool_exp
  streams_id: Int_comparison_exp
  student_submissions: student_submission_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "grade_assessment"
"""
enum grade_assessment_constraint {
  """unique or primary key constraint"""
  grade_assessment_formId_key

  """unique or primary key constraint"""
  grade_assessment_pkey
}

"""
input type for incrementing numeric columns in table "grade_assessment"
"""
input grade_assessment_inc_input {
  assessment_id: Int
  grade_number: Int
  id: Int
  school_id: Int
  streams_id: Int
}

"""
input type for inserting data into table "grade_assessment"
"""
input grade_assessment_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  assessment_id: Int
  created: timestamptz
  form_id: uuid
  grade_number: Int
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  section: String
  signature: String
  stream: stream_obj_rel_insert_input
  streams_id: Int
  student_submissions: student_submission_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type grade_assessment_max_fields {
  assessment_id: Int
  created: timestamptz
  form_id: uuid
  grade_number: Int
  id: Int
  school_id: Int
  section: String
  signature: String
  streams_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "grade_assessment"
"""
input grade_assessment_max_order_by {
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  section: order_by
  signature: order_by
  streams_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type grade_assessment_min_fields {
  assessment_id: Int
  created: timestamptz
  form_id: uuid
  grade_number: Int
  id: Int
  school_id: Int
  section: String
  signature: String
  streams_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "grade_assessment"
"""
input grade_assessment_min_order_by {
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  section: order_by
  signature: order_by
  streams_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "grade_assessment"
"""
type grade_assessment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [grade_assessment!]!
}

"""
input type for inserting object relation for remote table "grade_assessment"
"""
input grade_assessment_obj_rel_insert_input {
  data: grade_assessment_insert_input!

  """on conflict condition"""
  on_conflict: grade_assessment_on_conflict
}

"""
on conflict condition type for table "grade_assessment"
"""
input grade_assessment_on_conflict {
  constraint: grade_assessment_constraint!
  update_columns: [grade_assessment_update_column!]! = []
  where: grade_assessment_bool_exp
}

"""Ordering options when selecting data from "grade_assessment"."""
input grade_assessment_order_by {
  assessment: assessment_order_by
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  assessment_id: order_by
  created: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  section: order_by
  signature: order_by
  stream: stream_order_by
  streams_id: order_by
  student_submissions_aggregate: student_submission_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: grade_assessment"""
input grade_assessment_pk_columns_input {
  id: Int!
}

"""
select columns of table "grade_assessment"
"""
enum grade_assessment_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  signature

  """column name"""
  streams_id

  """column name"""
  updated
}

"""
input type for updating data in table "grade_assessment"
"""
input grade_assessment_set_input {
  assessment_id: Int
  created: timestamptz
  form_id: uuid
  grade_number: Int
  id: Int
  school_id: Int
  section: String
  signature: String
  streams_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type grade_assessment_stddev_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by stddev() on columns of table "grade_assessment"
"""
input grade_assessment_stddev_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""aggregate stddev_pop on columns"""
type grade_assessment_stddev_pop_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by stddev_pop() on columns of table "grade_assessment"
"""
input grade_assessment_stddev_pop_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""aggregate stddev_samp on columns"""
type grade_assessment_stddev_samp_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by stddev_samp() on columns of table "grade_assessment"
"""
input grade_assessment_stddev_samp_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""aggregate sum on columns"""
type grade_assessment_sum_fields {
  assessment_id: Int
  grade_number: Int
  id: Int
  school_id: Int
  streams_id: Int
}

"""
order by sum() on columns of table "grade_assessment"
"""
input grade_assessment_sum_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""
update columns of table "grade_assessment"
"""
enum grade_assessment_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  signature

  """column name"""
  streams_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type grade_assessment_var_pop_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by var_pop() on columns of table "grade_assessment"
"""
input grade_assessment_var_pop_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""aggregate var_samp on columns"""
type grade_assessment_var_samp_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by var_samp() on columns of table "grade_assessment"
"""
input grade_assessment_var_samp_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""aggregate variance on columns"""
type grade_assessment_variance_fields {
  assessment_id: Float
  grade_number: Float
  id: Float
  school_id: Float
  streams_id: Float
}

"""
order by variance() on columns of table "grade_assessment"
"""
input grade_assessment_variance_order_by {
  assessment_id: order_by
  grade_number: order_by
  id: order_by
  school_id: order_by
  streams_id: order_by
}

"""aggregate avg on columns"""
type grade_avg_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by avg() on columns of table "grade"
"""
input grade_avg_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""
Boolean expression to filter rows from the table "grade". All fields are combined with a logical 'AND'.
"""
input grade_bool_exp {
  _and: [grade_bool_exp!]
  _not: grade_bool_exp
  _or: [grade_bool_exp!]
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_bool_exp
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_bool_exp
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  assessment_grades: assessment_grade_bool_exp
  class_submissions: class_submission_bool_exp
  id: Int_comparison_exp
  lo_submissions: lo_submission_bool_exp
  number: Int_comparison_exp
  question_submissions: question_submission_bool_exp
  school_grades: school_grade_bool_exp
  section: String_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  student_submission_v2s: student_submission_v2_bool_exp
  subject_submissions: subject_submission_bool_exp
}

"""
unique or primary key constraints on table "grade"
"""
enum grade_constraint {
  """unique or primary key constraint"""
  grade_pkey
}

"""
input type for incrementing numeric columns in table "grade"
"""
input grade_inc_input {
  id: Int
  number: Int
  stream_id: Int
}

"""
input type for inserting data into table "grade"
"""
input grade_insert_input {
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_arr_rel_insert_input
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_arr_rel_insert_input
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  assessment_grades: assessment_grade_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  id: Int
  lo_submissions: lo_submission_arr_rel_insert_input
  number: Int
  question_submissions: question_submission_arr_rel_insert_input
  school_grades: school_grade_arr_rel_insert_input
  section: String
  stream: stream_obj_rel_insert_input
  stream_id: Int
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  subject_submissions: subject_submission_arr_rel_insert_input
}

"""aggregate max on columns"""
type grade_max_fields {
  id: Int
  number: Int
  section: String
  stream_id: Int
}

"""
order by max() on columns of table "grade"
"""
input grade_max_order_by {
  id: order_by
  number: order_by
  section: order_by
  stream_id: order_by
}

"""aggregate min on columns"""
type grade_min_fields {
  id: Int
  number: Int
  section: String
  stream_id: Int
}

"""
order by min() on columns of table "grade"
"""
input grade_min_order_by {
  id: order_by
  number: order_by
  section: order_by
  stream_id: order_by
}

"""
response of any mutation on the table "grade"
"""
type grade_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [grade!]!
}

"""
input type for inserting object relation for remote table "grade"
"""
input grade_obj_rel_insert_input {
  data: grade_insert_input!

  """on conflict condition"""
  on_conflict: grade_on_conflict
}

"""
on conflict condition type for table "grade"
"""
input grade_on_conflict {
  constraint: grade_constraint!
  update_columns: [grade_update_column!]! = []
  where: grade_bool_exp
}

"""Ordering options when selecting data from "grade"."""
input grade_order_by {
  assessment_au_lo_aggregate_submissions_aggregate: assessment_au_lo_aggregate_submission_aggregate_order_by
  assessment_au_question_aggregate_submissions_aggregate: assessment_au_question_aggregate_submission_aggregate_order_by
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  assessment_grades_aggregate: assessment_grade_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  id: order_by
  lo_submissions_aggregate: lo_submission_aggregate_order_by
  number: order_by
  question_submissions_aggregate: question_submission_aggregate_order_by
  school_grades_aggregate: school_grade_aggregate_order_by
  section: order_by
  stream: stream_order_by
  stream_id: order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  subject_submissions_aggregate: subject_submission_aggregate_order_by
}

"""primary key columns input for table: grade"""
input grade_pk_columns_input {
  id: Int!
}

"""
select columns of table "grade"
"""
enum grade_select_column {
  """column name"""
  id

  """column name"""
  number

  """column name"""
  section

  """column name"""
  stream_id
}

"""
input type for updating data in table "grade"
"""
input grade_set_input {
  id: Int
  number: Int
  section: String
  stream_id: Int
}

"""aggregate stddev on columns"""
type grade_stddev_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by stddev() on columns of table "grade"
"""
input grade_stddev_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""aggregate stddev_pop on columns"""
type grade_stddev_pop_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by stddev_pop() on columns of table "grade"
"""
input grade_stddev_pop_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""aggregate stddev_samp on columns"""
type grade_stddev_samp_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by stddev_samp() on columns of table "grade"
"""
input grade_stddev_samp_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""aggregate sum on columns"""
type grade_sum_fields {
  id: Int
  number: Int
  stream_id: Int
}

"""
order by sum() on columns of table "grade"
"""
input grade_sum_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""
update columns of table "grade"
"""
enum grade_update_column {
  """column name"""
  id

  """column name"""
  number

  """column name"""
  section

  """column name"""
  stream_id
}

"""aggregate var_pop on columns"""
type grade_var_pop_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by var_pop() on columns of table "grade"
"""
input grade_var_pop_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""aggregate var_samp on columns"""
type grade_var_samp_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by var_samp() on columns of table "grade"
"""
input grade_var_samp_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""aggregate variance on columns"""
type grade_variance_fields {
  id: Float
  number: Float
  stream_id: Float
}

"""
order by variance() on columns of table "grade"
"""
input grade_variance_order_by {
  id: order_by
  number: order_by
  stream_id: order_by
}

"""
columns and relationships of "group_application_roles"
"""
type group_application_roles {
  """An object relationship"""
  application_role: application_roles!

  """"""
  application_roles_id: uuid!

  """An object relationship"""
  group: groups!

  """"""
  groups_id: uuid!
}

"""
aggregated selection of "group_application_roles"
"""
type group_application_roles_aggregate {
  """"""
  aggregate: group_application_roles_aggregate_fields

  """"""
  nodes: [group_application_roles!]!
}

"""
aggregate fields of "group_application_roles"
"""
type group_application_roles_aggregate_fields {
  """"""
  count(columns: [group_application_roles_select_column!], distinct: Boolean): Int!

  """"""
  max: group_application_roles_max_fields

  """"""
  min: group_application_roles_min_fields
}

"""
order by aggregate values of table "group_application_roles"
"""
input group_application_roles_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: group_application_roles_max_order_by

  """"""
  min: group_application_roles_min_order_by
}

"""
input type for inserting array relation for remote table "group_application_roles"
"""
input group_application_roles_arr_rel_insert_input {
  """"""
  data: [group_application_roles_insert_input!]!

  """on conflict condition"""
  on_conflict: group_application_roles_on_conflict
}

"""
Boolean expression to filter rows from the table "group_application_roles". All fields are combined with a logical 'AND'.
"""
input group_application_roles_bool_exp {
  """"""
  _and: [group_application_roles_bool_exp!]

  """"""
  _not: group_application_roles_bool_exp

  """"""
  _or: [group_application_roles_bool_exp!]

  """"""
  application_role: application_roles_bool_exp

  """"""
  application_roles_id: uuid_comparison_exp

  """"""
  group: groups_bool_exp

  """"""
  groups_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "group_application_roles"
"""
enum group_application_roles_constraint {
  """unique or primary key constraint"""
  group_application_roles_uk_1
}

"""
input type for inserting data into table "group_application_roles"
"""
input group_application_roles_insert_input {
  """"""
  application_role: application_roles_obj_rel_insert_input

  """"""
  application_roles_id: uuid

  """"""
  group: groups_obj_rel_insert_input

  """"""
  groups_id: uuid
}

"""aggregate max on columns"""
type group_application_roles_max_fields {
  """"""
  application_roles_id: uuid

  """"""
  groups_id: uuid
}

"""
order by max() on columns of table "group_application_roles"
"""
input group_application_roles_max_order_by {
  """"""
  application_roles_id: order_by

  """"""
  groups_id: order_by
}

"""aggregate min on columns"""
type group_application_roles_min_fields {
  """"""
  application_roles_id: uuid

  """"""
  groups_id: uuid
}

"""
order by min() on columns of table "group_application_roles"
"""
input group_application_roles_min_order_by {
  """"""
  application_roles_id: order_by

  """"""
  groups_id: order_by
}

"""
response of any mutation on the table "group_application_roles"
"""
type group_application_roles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [group_application_roles!]!
}

"""
on conflict condition type for table "group_application_roles"
"""
input group_application_roles_on_conflict {
  """"""
  constraint: group_application_roles_constraint!

  """"""
  update_columns: [group_application_roles_update_column!]!

  """"""
  where: group_application_roles_bool_exp
}

"""Ordering options when selecting data from "group_application_roles"."""
input group_application_roles_order_by {
  """"""
  application_role: application_roles_order_by

  """"""
  application_roles_id: order_by

  """"""
  group: groups_order_by

  """"""
  groups_id: order_by
}

"""
select columns of table "group_application_roles"
"""
enum group_application_roles_select_column {
  """column name"""
  application_roles_id

  """column name"""
  groups_id
}

"""
input type for updating data in table "group_application_roles"
"""
input group_application_roles_set_input {
  """"""
  application_roles_id: uuid

  """"""
  groups_id: uuid
}

"""
update columns of table "group_application_roles"
"""
enum group_application_roles_update_column {
  """column name"""
  application_roles_id

  """column name"""
  groups_id
}

"""
columns and relationships of "group_members"
"""
type group_members {
  """"""
  data: String

  """An object relationship"""
  group: groups!

  """"""
  groups_id: uuid!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "group_members"
"""
type group_members_aggregate {
  """"""
  aggregate: group_members_aggregate_fields

  """"""
  nodes: [group_members!]!
}

"""
aggregate fields of "group_members"
"""
type group_members_aggregate_fields {
  """"""
  avg: group_members_avg_fields

  """"""
  count(columns: [group_members_select_column!], distinct: Boolean): Int!

  """"""
  max: group_members_max_fields

  """"""
  min: group_members_min_fields

  """"""
  stddev: group_members_stddev_fields

  """"""
  stddev_pop: group_members_stddev_pop_fields

  """"""
  stddev_samp: group_members_stddev_samp_fields

  """"""
  sum: group_members_sum_fields

  """"""
  var_pop: group_members_var_pop_fields

  """"""
  var_samp: group_members_var_samp_fields

  """"""
  variance: group_members_variance_fields
}

"""
order by aggregate values of table "group_members"
"""
input group_members_aggregate_order_by {
  """"""
  avg: group_members_avg_order_by

  """"""
  count: order_by

  """"""
  max: group_members_max_order_by

  """"""
  min: group_members_min_order_by

  """"""
  stddev: group_members_stddev_order_by

  """"""
  stddev_pop: group_members_stddev_pop_order_by

  """"""
  stddev_samp: group_members_stddev_samp_order_by

  """"""
  sum: group_members_sum_order_by

  """"""
  var_pop: group_members_var_pop_order_by

  """"""
  var_samp: group_members_var_samp_order_by

  """"""
  variance: group_members_variance_order_by
}

"""
input type for inserting array relation for remote table "group_members"
"""
input group_members_arr_rel_insert_input {
  """"""
  data: [group_members_insert_input!]!

  """on conflict condition"""
  on_conflict: group_members_on_conflict
}

"""aggregate avg on columns"""
type group_members_avg_fields {
  """"""
  insert_instant: Float
}

"""
order by avg() on columns of table "group_members"
"""
input group_members_avg_order_by {
  """"""
  insert_instant: order_by
}

"""
Boolean expression to filter rows from the table "group_members". All fields are combined with a logical 'AND'.
"""
input group_members_bool_exp {
  """"""
  _and: [group_members_bool_exp!]

  """"""
  _not: group_members_bool_exp

  """"""
  _or: [group_members_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  group: groups_bool_exp

  """"""
  groups_id: uuid_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "group_members"
"""
enum group_members_constraint {
  """unique or primary key constraint"""
  group_members_pkey

  """unique or primary key constraint"""
  group_members_uk_1
}

"""
input type for incrementing numeric columns in table "group_members"
"""
input group_members_inc_input {
  """"""
  insert_instant: bigint
}

"""
input type for inserting data into table "group_members"
"""
input group_members_insert_input {
  """"""
  data: String

  """"""
  group: groups_obj_rel_insert_input

  """"""
  groups_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type group_members_max_fields {
  """"""
  data: String

  """"""
  groups_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "group_members"
"""
input group_members_max_order_by {
  """"""
  data: order_by

  """"""
  groups_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type group_members_min_fields {
  """"""
  data: String

  """"""
  groups_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "group_members"
"""
input group_members_min_order_by {
  """"""
  data: order_by

  """"""
  groups_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "group_members"
"""
type group_members_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [group_members!]!
}

"""
on conflict condition type for table "group_members"
"""
input group_members_on_conflict {
  """"""
  constraint: group_members_constraint!

  """"""
  update_columns: [group_members_update_column!]!

  """"""
  where: group_members_bool_exp
}

"""Ordering options when selecting data from "group_members"."""
input group_members_order_by {
  """"""
  data: order_by

  """"""
  group: groups_order_by

  """"""
  groups_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""primary key columns input for table: group_members"""
input group_members_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "group_members"
"""
enum group_members_select_column {
  """column name"""
  data

  """column name"""
  groups_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  users_id
}

"""
input type for updating data in table "group_members"
"""
input group_members_set_input {
  """"""
  data: String

  """"""
  groups_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type group_members_stddev_fields {
  """"""
  insert_instant: Float
}

"""
order by stddev() on columns of table "group_members"
"""
input group_members_stddev_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate stddev_pop on columns"""
type group_members_stddev_pop_fields {
  """"""
  insert_instant: Float
}

"""
order by stddev_pop() on columns of table "group_members"
"""
input group_members_stddev_pop_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate stddev_samp on columns"""
type group_members_stddev_samp_fields {
  """"""
  insert_instant: Float
}

"""
order by stddev_samp() on columns of table "group_members"
"""
input group_members_stddev_samp_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate sum on columns"""
type group_members_sum_fields {
  """"""
  insert_instant: bigint
}

"""
order by sum() on columns of table "group_members"
"""
input group_members_sum_order_by {
  """"""
  insert_instant: order_by
}

"""
update columns of table "group_members"
"""
enum group_members_update_column {
  """column name"""
  data

  """column name"""
  groups_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type group_members_var_pop_fields {
  """"""
  insert_instant: Float
}

"""
order by var_pop() on columns of table "group_members"
"""
input group_members_var_pop_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate var_samp on columns"""
type group_members_var_samp_fields {
  """"""
  insert_instant: Float
}

"""
order by var_samp() on columns of table "group_members"
"""
input group_members_var_samp_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate variance on columns"""
type group_members_variance_fields {
  """"""
  insert_instant: Float
}

"""
order by variance() on columns of table "group_members"
"""
input group_members_variance_order_by {
  """"""
  insert_instant: order_by
}

"""
columns and relationships of "groups"
"""
type groups {
  """"""
  data: String

  """An array relationship"""
  group_application_roles(
    """distinct select on columns"""
    distinct_on: [group_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_application_roles_order_by!]

    """filter the rows returned"""
    where: group_application_roles_bool_exp
  ): [group_application_roles!]!

  """An aggregate relationship"""
  group_application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [group_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_application_roles_order_by!]

    """filter the rows returned"""
    where: group_application_roles_bool_exp
  ): group_application_roles_aggregate!

  """An array relationship"""
  group_members(
    """distinct select on columns"""
    distinct_on: [group_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_members_order_by!]

    """filter the rows returned"""
    where: group_members_bool_exp
  ): [group_members!]!

  """An aggregate relationship"""
  group_members_aggregate(
    """distinct select on columns"""
    distinct_on: [group_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_members_order_by!]

    """filter the rows returned"""
    where: group_members_bool_exp
  ): group_members_aggregate!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!
}

"""
aggregated selection of "groups"
"""
type groups_aggregate {
  """"""
  aggregate: groups_aggregate_fields

  """"""
  nodes: [groups!]!
}

"""
aggregate fields of "groups"
"""
type groups_aggregate_fields {
  """"""
  avg: groups_avg_fields

  """"""
  count(columns: [groups_select_column!], distinct: Boolean): Int!

  """"""
  max: groups_max_fields

  """"""
  min: groups_min_fields

  """"""
  stddev: groups_stddev_fields

  """"""
  stddev_pop: groups_stddev_pop_fields

  """"""
  stddev_samp: groups_stddev_samp_fields

  """"""
  sum: groups_sum_fields

  """"""
  var_pop: groups_var_pop_fields

  """"""
  var_samp: groups_var_samp_fields

  """"""
  variance: groups_variance_fields
}

"""
order by aggregate values of table "groups"
"""
input groups_aggregate_order_by {
  """"""
  avg: groups_avg_order_by

  """"""
  count: order_by

  """"""
  max: groups_max_order_by

  """"""
  min: groups_min_order_by

  """"""
  stddev: groups_stddev_order_by

  """"""
  stddev_pop: groups_stddev_pop_order_by

  """"""
  stddev_samp: groups_stddev_samp_order_by

  """"""
  sum: groups_sum_order_by

  """"""
  var_pop: groups_var_pop_order_by

  """"""
  var_samp: groups_var_samp_order_by

  """"""
  variance: groups_variance_order_by
}

"""
input type for inserting array relation for remote table "groups"
"""
input groups_arr_rel_insert_input {
  """"""
  data: [groups_insert_input!]!

  """on conflict condition"""
  on_conflict: groups_on_conflict
}

"""aggregate avg on columns"""
type groups_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "groups"
"""
input groups_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "groups". All fields are combined with a logical 'AND'.
"""
input groups_bool_exp {
  """"""
  _and: [groups_bool_exp!]

  """"""
  _not: groups_bool_exp

  """"""
  _or: [groups_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  group_application_roles: group_application_roles_bool_exp

  """"""
  group_members: group_members_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "groups"
"""
enum groups_constraint {
  """unique or primary key constraint"""
  groups_pkey

  """unique or primary key constraint"""
  groups_uk_1
}

"""
input type for incrementing numeric columns in table "groups"
"""
input groups_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "groups"
"""
input groups_insert_input {
  """"""
  data: String

  """"""
  group_application_roles: group_application_roles_arr_rel_insert_input

  """"""
  group_members: group_members_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid
}

"""aggregate max on columns"""
type groups_max_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  tenants_id: uuid
}

"""
order by max() on columns of table "groups"
"""
input groups_max_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  tenants_id: order_by
}

"""aggregate min on columns"""
type groups_min_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  tenants_id: uuid
}

"""
order by min() on columns of table "groups"
"""
input groups_min_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  tenants_id: order_by
}

"""
response of any mutation on the table "groups"
"""
type groups_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [groups!]!
}

"""
input type for inserting object relation for remote table "groups"
"""
input groups_obj_rel_insert_input {
  """"""
  data: groups_insert_input!

  """on conflict condition"""
  on_conflict: groups_on_conflict
}

"""
on conflict condition type for table "groups"
"""
input groups_on_conflict {
  """"""
  constraint: groups_constraint!

  """"""
  update_columns: [groups_update_column!]!

  """"""
  where: groups_bool_exp
}

"""Ordering options when selecting data from "groups"."""
input groups_order_by {
  """"""
  data: order_by

  """"""
  group_application_roles_aggregate: group_application_roles_aggregate_order_by

  """"""
  group_members_aggregate: group_members_aggregate_order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by
}

"""primary key columns input for table: groups"""
input groups_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "groups"
"""
enum groups_select_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  tenants_id
}

"""
input type for updating data in table "groups"
"""
input groups_set_input {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  tenants_id: uuid
}

"""aggregate stddev on columns"""
type groups_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "groups"
"""
input groups_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type groups_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "groups"
"""
input groups_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type groups_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "groups"
"""
input groups_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type groups_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "groups"
"""
input groups_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "groups"
"""
enum groups_update_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  tenants_id
}

"""aggregate var_pop on columns"""
type groups_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "groups"
"""
input groups_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type groups_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "groups"
"""
input groups_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type groups_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "groups"
"""
input groups_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "hourly_logins"
"""
type hourly_logins {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  count: Int!

  """"""
  data: String

  """"""
  hour: Int!
}

"""
aggregated selection of "hourly_logins"
"""
type hourly_logins_aggregate {
  """"""
  aggregate: hourly_logins_aggregate_fields

  """"""
  nodes: [hourly_logins!]!
}

"""
aggregate fields of "hourly_logins"
"""
type hourly_logins_aggregate_fields {
  """"""
  avg: hourly_logins_avg_fields

  """"""
  count(columns: [hourly_logins_select_column!], distinct: Boolean): Int!

  """"""
  max: hourly_logins_max_fields

  """"""
  min: hourly_logins_min_fields

  """"""
  stddev: hourly_logins_stddev_fields

  """"""
  stddev_pop: hourly_logins_stddev_pop_fields

  """"""
  stddev_samp: hourly_logins_stddev_samp_fields

  """"""
  sum: hourly_logins_sum_fields

  """"""
  var_pop: hourly_logins_var_pop_fields

  """"""
  var_samp: hourly_logins_var_samp_fields

  """"""
  variance: hourly_logins_variance_fields
}

"""
order by aggregate values of table "hourly_logins"
"""
input hourly_logins_aggregate_order_by {
  """"""
  avg: hourly_logins_avg_order_by

  """"""
  count: order_by

  """"""
  max: hourly_logins_max_order_by

  """"""
  min: hourly_logins_min_order_by

  """"""
  stddev: hourly_logins_stddev_order_by

  """"""
  stddev_pop: hourly_logins_stddev_pop_order_by

  """"""
  stddev_samp: hourly_logins_stddev_samp_order_by

  """"""
  sum: hourly_logins_sum_order_by

  """"""
  var_pop: hourly_logins_var_pop_order_by

  """"""
  var_samp: hourly_logins_var_samp_order_by

  """"""
  variance: hourly_logins_variance_order_by
}

"""
input type for inserting array relation for remote table "hourly_logins"
"""
input hourly_logins_arr_rel_insert_input {
  """"""
  data: [hourly_logins_insert_input!]!

  """on conflict condition"""
  on_conflict: hourly_logins_on_conflict
}

"""aggregate avg on columns"""
type hourly_logins_avg_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by avg() on columns of table "hourly_logins"
"""
input hourly_logins_avg_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""
Boolean expression to filter rows from the table "hourly_logins". All fields are combined with a logical 'AND'.
"""
input hourly_logins_bool_exp {
  """"""
  _and: [hourly_logins_bool_exp!]

  """"""
  _not: hourly_logins_bool_exp

  """"""
  _or: [hourly_logins_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  count: Int_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  hour: Int_comparison_exp
}

"""
unique or primary key constraints on table "hourly_logins"
"""
enum hourly_logins_constraint {
  """unique or primary key constraint"""
  hourly_logins_uk_1
}

"""
input type for incrementing numeric columns in table "hourly_logins"
"""
input hourly_logins_inc_input {
  """"""
  count: Int

  """"""
  hour: Int
}

"""
input type for inserting data into table "hourly_logins"
"""
input hourly_logins_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  data: String

  """"""
  hour: Int
}

"""aggregate max on columns"""
type hourly_logins_max_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  data: String

  """"""
  hour: Int
}

"""
order by max() on columns of table "hourly_logins"
"""
input hourly_logins_max_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  data: order_by

  """"""
  hour: order_by
}

"""aggregate min on columns"""
type hourly_logins_min_fields {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  data: String

  """"""
  hour: Int
}

"""
order by min() on columns of table "hourly_logins"
"""
input hourly_logins_min_order_by {
  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  data: order_by

  """"""
  hour: order_by
}

"""
response of any mutation on the table "hourly_logins"
"""
type hourly_logins_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [hourly_logins!]!
}

"""
on conflict condition type for table "hourly_logins"
"""
input hourly_logins_on_conflict {
  """"""
  constraint: hourly_logins_constraint!

  """"""
  update_columns: [hourly_logins_update_column!]!

  """"""
  where: hourly_logins_bool_exp
}

"""Ordering options when selecting data from "hourly_logins"."""
input hourly_logins_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  count: order_by

  """"""
  data: order_by

  """"""
  hour: order_by
}

"""
select columns of table "hourly_logins"
"""
enum hourly_logins_select_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  data

  """column name"""
  hour
}

"""
input type for updating data in table "hourly_logins"
"""
input hourly_logins_set_input {
  """"""
  applications_id: uuid

  """"""
  count: Int

  """"""
  data: String

  """"""
  hour: Int
}

"""aggregate stddev on columns"""
type hourly_logins_stddev_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by stddev() on columns of table "hourly_logins"
"""
input hourly_logins_stddev_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""aggregate stddev_pop on columns"""
type hourly_logins_stddev_pop_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by stddev_pop() on columns of table "hourly_logins"
"""
input hourly_logins_stddev_pop_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""aggregate stddev_samp on columns"""
type hourly_logins_stddev_samp_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by stddev_samp() on columns of table "hourly_logins"
"""
input hourly_logins_stddev_samp_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""aggregate sum on columns"""
type hourly_logins_sum_fields {
  """"""
  count: Int

  """"""
  hour: Int
}

"""
order by sum() on columns of table "hourly_logins"
"""
input hourly_logins_sum_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""
update columns of table "hourly_logins"
"""
enum hourly_logins_update_column {
  """column name"""
  applications_id

  """column name"""
  count

  """column name"""
  data

  """column name"""
  hour
}

"""aggregate var_pop on columns"""
type hourly_logins_var_pop_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by var_pop() on columns of table "hourly_logins"
"""
input hourly_logins_var_pop_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""aggregate var_samp on columns"""
type hourly_logins_var_samp_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by var_samp() on columns of table "hourly_logins"
"""
input hourly_logins_var_samp_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""aggregate variance on columns"""
type hourly_logins_variance_fields {
  """"""
  count: Float

  """"""
  hour: Float
}

"""
order by variance() on columns of table "hourly_logins"
"""
input hourly_logins_variance_order_by {
  """"""
  count: order_by

  """"""
  hour: order_by
}

"""
columns and relationships of "idb_attendance_by_date_aggregate"
"""
type idb_attendance_by_date_aggregate {
  date: date
  sum: numeric
}

"""
aggregated selection of "idb_attendance_by_date_aggregate"
"""
type idb_attendance_by_date_aggregate_aggregate {
  aggregate: idb_attendance_by_date_aggregate_aggregate_fields
  nodes: [idb_attendance_by_date_aggregate!]!
}

"""
aggregate fields of "idb_attendance_by_date_aggregate"
"""
type idb_attendance_by_date_aggregate_aggregate_fields {
  avg: idb_attendance_by_date_aggregate_avg_fields
  count(columns: [idb_attendance_by_date_aggregate_select_column!], distinct: Boolean): Int!
  max: idb_attendance_by_date_aggregate_max_fields
  min: idb_attendance_by_date_aggregate_min_fields
  stddev: idb_attendance_by_date_aggregate_stddev_fields
  stddev_pop: idb_attendance_by_date_aggregate_stddev_pop_fields
  stddev_samp: idb_attendance_by_date_aggregate_stddev_samp_fields
  sum: idb_attendance_by_date_aggregate_sum_fields
  var_pop: idb_attendance_by_date_aggregate_var_pop_fields
  var_samp: idb_attendance_by_date_aggregate_var_samp_fields
  variance: idb_attendance_by_date_aggregate_variance_fields
}

"""aggregate avg on columns"""
type idb_attendance_by_date_aggregate_avg_fields {
  sum: Float
}

"""
Boolean expression to filter rows from the table "idb_attendance_by_date_aggregate". All fields are combined with a logical 'AND'.
"""
input idb_attendance_by_date_aggregate_bool_exp {
  _and: [idb_attendance_by_date_aggregate_bool_exp!]
  _not: idb_attendance_by_date_aggregate_bool_exp
  _or: [idb_attendance_by_date_aggregate_bool_exp!]
  date: date_comparison_exp
  sum: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_attendance_by_date_aggregate"
"""
input idb_attendance_by_date_aggregate_inc_input {
  sum: numeric
}

"""
input type for inserting data into table "idb_attendance_by_date_aggregate"
"""
input idb_attendance_by_date_aggregate_insert_input {
  date: date
  sum: numeric
}

"""aggregate max on columns"""
type idb_attendance_by_date_aggregate_max_fields {
  date: date
  sum: numeric
}

"""aggregate min on columns"""
type idb_attendance_by_date_aggregate_min_fields {
  date: date
  sum: numeric
}

"""
response of any mutation on the table "idb_attendance_by_date_aggregate"
"""
type idb_attendance_by_date_aggregate_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_attendance_by_date_aggregate!]!
}

"""
Ordering options when selecting data from "idb_attendance_by_date_aggregate".
"""
input idb_attendance_by_date_aggregate_order_by {
  date: order_by
  sum: order_by
}

"""
select columns of table "idb_attendance_by_date_aggregate"
"""
enum idb_attendance_by_date_aggregate_select_column {
  """column name"""
  date

  """column name"""
  sum
}

"""
input type for updating data in table "idb_attendance_by_date_aggregate"
"""
input idb_attendance_by_date_aggregate_set_input {
  date: date
  sum: numeric
}

"""aggregate stddev on columns"""
type idb_attendance_by_date_aggregate_stddev_fields {
  sum: Float
}

"""aggregate stddev_pop on columns"""
type idb_attendance_by_date_aggregate_stddev_pop_fields {
  sum: Float
}

"""aggregate stddev_samp on columns"""
type idb_attendance_by_date_aggregate_stddev_samp_fields {
  sum: Float
}

"""aggregate sum on columns"""
type idb_attendance_by_date_aggregate_sum_fields {
  sum: numeric
}

"""aggregate var_pop on columns"""
type idb_attendance_by_date_aggregate_var_pop_fields {
  sum: Float
}

"""aggregate var_samp on columns"""
type idb_attendance_by_date_aggregate_var_samp_fields {
  sum: Float
}

"""aggregate variance on columns"""
type idb_attendance_by_date_aggregate_variance_fields {
  sum: Float
}

"""
columns and relationships of "idb_attendance_district_enrolment_percentage"
"""
type idb_attendance_district_enrolment_percentage {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  totalmarked: numeric
  totalpresent: numeric
}

"""
aggregated selection of "idb_attendance_district_enrolment_percentage"
"""
type idb_attendance_district_enrolment_percentage_aggregate {
  aggregate: idb_attendance_district_enrolment_percentage_aggregate_fields
  nodes: [idb_attendance_district_enrolment_percentage!]!
}

"""
aggregate fields of "idb_attendance_district_enrolment_percentage"
"""
type idb_attendance_district_enrolment_percentage_aggregate_fields {
  avg: idb_attendance_district_enrolment_percentage_avg_fields
  count(columns: [idb_attendance_district_enrolment_percentage_select_column!], distinct: Boolean): Int!
  max: idb_attendance_district_enrolment_percentage_max_fields
  min: idb_attendance_district_enrolment_percentage_min_fields
  stddev: idb_attendance_district_enrolment_percentage_stddev_fields
  stddev_pop: idb_attendance_district_enrolment_percentage_stddev_pop_fields
  stddev_samp: idb_attendance_district_enrolment_percentage_stddev_samp_fields
  sum: idb_attendance_district_enrolment_percentage_sum_fields
  var_pop: idb_attendance_district_enrolment_percentage_var_pop_fields
  var_samp: idb_attendance_district_enrolment_percentage_var_samp_fields
  variance: idb_attendance_district_enrolment_percentage_variance_fields
}

"""aggregate avg on columns"""
type idb_attendance_district_enrolment_percentage_avg_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""
Boolean expression to filter rows from the table "idb_attendance_district_enrolment_percentage". All fields are combined with a logical 'AND'.
"""
input idb_attendance_district_enrolment_percentage_bool_exp {
  Attendance_Percentage: float8_comparison_exp
  Data_Marked_For_Percentage: float8_comparison_exp
  Number_of_Students_Enrolled: bigint_comparison_exp
  _and: [idb_attendance_district_enrolment_percentage_bool_exp!]
  _not: idb_attendance_district_enrolment_percentage_bool_exp
  _or: [idb_attendance_district_enrolment_percentage_bool_exp!]
  date: date_comparison_exp
  district: String_comparison_exp
  totalmarked: numeric_comparison_exp
  totalpresent: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_attendance_district_enrolment_percentage"
"""
input idb_attendance_district_enrolment_percentage_inc_input {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  totalmarked: numeric
  totalpresent: numeric
}

"""
input type for inserting data into table "idb_attendance_district_enrolment_percentage"
"""
input idb_attendance_district_enrolment_percentage_insert_input {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate max on columns"""
type idb_attendance_district_enrolment_percentage_max_fields {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate min on columns"""
type idb_attendance_district_enrolment_percentage_min_fields {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  totalmarked: numeric
  totalpresent: numeric
}

"""
response of any mutation on the table "idb_attendance_district_enrolment_percentage"
"""
type idb_attendance_district_enrolment_percentage_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_attendance_district_enrolment_percentage!]!
}

"""
Ordering options when selecting data from "idb_attendance_district_enrolment_percentage".
"""
input idb_attendance_district_enrolment_percentage_order_by {
  Attendance_Percentage: order_by
  Data_Marked_For_Percentage: order_by
  Number_of_Students_Enrolled: order_by
  date: order_by
  district: order_by
  totalmarked: order_by
  totalpresent: order_by
}

"""
select columns of table "idb_attendance_district_enrolment_percentage"
"""
enum idb_attendance_district_enrolment_percentage_select_column {
  """column name"""
  Attendance_Percentage

  """column name"""
  Data_Marked_For_Percentage

  """column name"""
  Number_of_Students_Enrolled

  """column name"""
  date

  """column name"""
  district

  """column name"""
  totalmarked

  """column name"""
  totalpresent
}

"""
input type for updating data in table "idb_attendance_district_enrolment_percentage"
"""
input idb_attendance_district_enrolment_percentage_set_input {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate stddev on columns"""
type idb_attendance_district_enrolment_percentage_stddev_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate stddev_pop on columns"""
type idb_attendance_district_enrolment_percentage_stddev_pop_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate stddev_samp on columns"""
type idb_attendance_district_enrolment_percentage_stddev_samp_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate sum on columns"""
type idb_attendance_district_enrolment_percentage_sum_fields {
  Attendance_Percentage: float8
  Data_Marked_For_Percentage: float8
  Number_of_Students_Enrolled: bigint
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate var_pop on columns"""
type idb_attendance_district_enrolment_percentage_var_pop_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate var_samp on columns"""
type idb_attendance_district_enrolment_percentage_var_samp_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate variance on columns"""
type idb_attendance_district_enrolment_percentage_variance_fields {
  Attendance_Percentage: Float
  Data_Marked_For_Percentage: Float
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""
columns and relationships of "idb_block_wise_student_enrolment"
"""
type idb_block_wise_student_enrolment {
  Block: String
  District: String
  Number_of_Students_Enrolled: bigint
}

"""
aggregated selection of "idb_block_wise_student_enrolment"
"""
type idb_block_wise_student_enrolment_aggregate {
  aggregate: idb_block_wise_student_enrolment_aggregate_fields
  nodes: [idb_block_wise_student_enrolment!]!
}

"""
aggregate fields of "idb_block_wise_student_enrolment"
"""
type idb_block_wise_student_enrolment_aggregate_fields {
  avg: idb_block_wise_student_enrolment_avg_fields
  count(columns: [idb_block_wise_student_enrolment_select_column!], distinct: Boolean): Int!
  max: idb_block_wise_student_enrolment_max_fields
  min: idb_block_wise_student_enrolment_min_fields
  stddev: idb_block_wise_student_enrolment_stddev_fields
  stddev_pop: idb_block_wise_student_enrolment_stddev_pop_fields
  stddev_samp: idb_block_wise_student_enrolment_stddev_samp_fields
  sum: idb_block_wise_student_enrolment_sum_fields
  var_pop: idb_block_wise_student_enrolment_var_pop_fields
  var_samp: idb_block_wise_student_enrolment_var_samp_fields
  variance: idb_block_wise_student_enrolment_variance_fields
}

"""aggregate avg on columns"""
type idb_block_wise_student_enrolment_avg_fields {
  Number_of_Students_Enrolled: Float
}

"""
Boolean expression to filter rows from the table "idb_block_wise_student_enrolment". All fields are combined with a logical 'AND'.
"""
input idb_block_wise_student_enrolment_bool_exp {
  Block: String_comparison_exp
  District: String_comparison_exp
  Number_of_Students_Enrolled: bigint_comparison_exp
  _and: [idb_block_wise_student_enrolment_bool_exp!]
  _not: idb_block_wise_student_enrolment_bool_exp
  _or: [idb_block_wise_student_enrolment_bool_exp!]
}

"""
input type for incrementing numeric columns in table "idb_block_wise_student_enrolment"
"""
input idb_block_wise_student_enrolment_inc_input {
  Number_of_Students_Enrolled: bigint
}

"""
input type for inserting data into table "idb_block_wise_student_enrolment"
"""
input idb_block_wise_student_enrolment_insert_input {
  Block: String
  District: String
  Number_of_Students_Enrolled: bigint
}

"""aggregate max on columns"""
type idb_block_wise_student_enrolment_max_fields {
  Block: String
  District: String
  Number_of_Students_Enrolled: bigint
}

"""aggregate min on columns"""
type idb_block_wise_student_enrolment_min_fields {
  Block: String
  District: String
  Number_of_Students_Enrolled: bigint
}

"""
response of any mutation on the table "idb_block_wise_student_enrolment"
"""
type idb_block_wise_student_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_block_wise_student_enrolment!]!
}

"""
Ordering options when selecting data from "idb_block_wise_student_enrolment".
"""
input idb_block_wise_student_enrolment_order_by {
  Block: order_by
  District: order_by
  Number_of_Students_Enrolled: order_by
}

"""
select columns of table "idb_block_wise_student_enrolment"
"""
enum idb_block_wise_student_enrolment_select_column {
  """column name"""
  Block

  """column name"""
  District

  """column name"""
  Number_of_Students_Enrolled
}

"""
input type for updating data in table "idb_block_wise_student_enrolment"
"""
input idb_block_wise_student_enrolment_set_input {
  Block: String
  District: String
  Number_of_Students_Enrolled: bigint
}

"""aggregate stddev on columns"""
type idb_block_wise_student_enrolment_stddev_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate stddev_pop on columns"""
type idb_block_wise_student_enrolment_stddev_pop_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate stddev_samp on columns"""
type idb_block_wise_student_enrolment_stddev_samp_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate sum on columns"""
type idb_block_wise_student_enrolment_sum_fields {
  Number_of_Students_Enrolled: bigint
}

"""aggregate var_pop on columns"""
type idb_block_wise_student_enrolment_var_pop_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate var_samp on columns"""
type idb_block_wise_student_enrolment_var_samp_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate variance on columns"""
type idb_block_wise_student_enrolment_variance_fields {
  Number_of_Students_Enrolled: Float
}

"""
columns and relationships of "idb_daily_enrolment_aggregate"
"""
type idb_daily_enrolment_aggregate {
  date: date
  sum: bigint
}

"""
aggregated selection of "idb_daily_enrolment_aggregate"
"""
type idb_daily_enrolment_aggregate_aggregate {
  aggregate: idb_daily_enrolment_aggregate_aggregate_fields
  nodes: [idb_daily_enrolment_aggregate!]!
}

"""
aggregate fields of "idb_daily_enrolment_aggregate"
"""
type idb_daily_enrolment_aggregate_aggregate_fields {
  avg: idb_daily_enrolment_aggregate_avg_fields
  count(columns: [idb_daily_enrolment_aggregate_select_column!], distinct: Boolean): Int!
  max: idb_daily_enrolment_aggregate_max_fields
  min: idb_daily_enrolment_aggregate_min_fields
  stddev: idb_daily_enrolment_aggregate_stddev_fields
  stddev_pop: idb_daily_enrolment_aggregate_stddev_pop_fields
  stddev_samp: idb_daily_enrolment_aggregate_stddev_samp_fields
  sum: idb_daily_enrolment_aggregate_sum_fields
  var_pop: idb_daily_enrolment_aggregate_var_pop_fields
  var_samp: idb_daily_enrolment_aggregate_var_samp_fields
  variance: idb_daily_enrolment_aggregate_variance_fields
}

"""aggregate avg on columns"""
type idb_daily_enrolment_aggregate_avg_fields {
  sum: Float
}

"""
Boolean expression to filter rows from the table "idb_daily_enrolment_aggregate". All fields are combined with a logical 'AND'.
"""
input idb_daily_enrolment_aggregate_bool_exp {
  _and: [idb_daily_enrolment_aggregate_bool_exp!]
  _not: idb_daily_enrolment_aggregate_bool_exp
  _or: [idb_daily_enrolment_aggregate_bool_exp!]
  date: date_comparison_exp
  sum: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_daily_enrolment_aggregate"
"""
input idb_daily_enrolment_aggregate_inc_input {
  sum: bigint
}

"""
input type for inserting data into table "idb_daily_enrolment_aggregate"
"""
input idb_daily_enrolment_aggregate_insert_input {
  date: date
  sum: bigint
}

"""aggregate max on columns"""
type idb_daily_enrolment_aggregate_max_fields {
  date: date
  sum: bigint
}

"""aggregate min on columns"""
type idb_daily_enrolment_aggregate_min_fields {
  date: date
  sum: bigint
}

"""
response of any mutation on the table "idb_daily_enrolment_aggregate"
"""
type idb_daily_enrolment_aggregate_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_daily_enrolment_aggregate!]!
}

"""
Ordering options when selecting data from "idb_daily_enrolment_aggregate".
"""
input idb_daily_enrolment_aggregate_order_by {
  date: order_by
  sum: order_by
}

"""
select columns of table "idb_daily_enrolment_aggregate"
"""
enum idb_daily_enrolment_aggregate_select_column {
  """column name"""
  date

  """column name"""
  sum
}

"""
input type for updating data in table "idb_daily_enrolment_aggregate"
"""
input idb_daily_enrolment_aggregate_set_input {
  date: date
  sum: bigint
}

"""aggregate stddev on columns"""
type idb_daily_enrolment_aggregate_stddev_fields {
  sum: Float
}

"""aggregate stddev_pop on columns"""
type idb_daily_enrolment_aggregate_stddev_pop_fields {
  sum: Float
}

"""aggregate stddev_samp on columns"""
type idb_daily_enrolment_aggregate_stddev_samp_fields {
  sum: Float
}

"""aggregate sum on columns"""
type idb_daily_enrolment_aggregate_sum_fields {
  sum: bigint
}

"""aggregate var_pop on columns"""
type idb_daily_enrolment_aggregate_var_pop_fields {
  sum: Float
}

"""aggregate var_samp on columns"""
type idb_daily_enrolment_aggregate_var_samp_fields {
  sum: Float
}

"""aggregate variance on columns"""
type idb_daily_enrolment_aggregate_variance_fields {
  sum: Float
}

"""
columns and relationships of "idb_daily_total_attendance_percent_aggregate"
"""
type idb_daily_total_attendance_percent_aggregate {
  Percentage_Students_Present: float8
  date: date
  date_2: date
  sum: numeric
  sum_2: numeric
}

"""
aggregated selection of "idb_daily_total_attendance_percent_aggregate"
"""
type idb_daily_total_attendance_percent_aggregate_aggregate {
  aggregate: idb_daily_total_attendance_percent_aggregate_aggregate_fields
  nodes: [idb_daily_total_attendance_percent_aggregate!]!
}

"""
aggregate fields of "idb_daily_total_attendance_percent_aggregate"
"""
type idb_daily_total_attendance_percent_aggregate_aggregate_fields {
  avg: idb_daily_total_attendance_percent_aggregate_avg_fields
  count(columns: [idb_daily_total_attendance_percent_aggregate_select_column!], distinct: Boolean): Int!
  max: idb_daily_total_attendance_percent_aggregate_max_fields
  min: idb_daily_total_attendance_percent_aggregate_min_fields
  stddev: idb_daily_total_attendance_percent_aggregate_stddev_fields
  stddev_pop: idb_daily_total_attendance_percent_aggregate_stddev_pop_fields
  stddev_samp: idb_daily_total_attendance_percent_aggregate_stddev_samp_fields
  sum: idb_daily_total_attendance_percent_aggregate_sum_fields
  var_pop: idb_daily_total_attendance_percent_aggregate_var_pop_fields
  var_samp: idb_daily_total_attendance_percent_aggregate_var_samp_fields
  variance: idb_daily_total_attendance_percent_aggregate_variance_fields
}

"""aggregate avg on columns"""
type idb_daily_total_attendance_percent_aggregate_avg_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""
Boolean expression to filter rows from the table "idb_daily_total_attendance_percent_aggregate". All fields are combined with a logical 'AND'.
"""
input idb_daily_total_attendance_percent_aggregate_bool_exp {
  Percentage_Students_Present: float8_comparison_exp
  _and: [idb_daily_total_attendance_percent_aggregate_bool_exp!]
  _not: idb_daily_total_attendance_percent_aggregate_bool_exp
  _or: [idb_daily_total_attendance_percent_aggregate_bool_exp!]
  date: date_comparison_exp
  date_2: date_comparison_exp
  sum: numeric_comparison_exp
  sum_2: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_daily_total_attendance_percent_aggregate"
"""
input idb_daily_total_attendance_percent_aggregate_inc_input {
  Percentage_Students_Present: float8
  sum: numeric
  sum_2: numeric
}

"""
input type for inserting data into table "idb_daily_total_attendance_percent_aggregate"
"""
input idb_daily_total_attendance_percent_aggregate_insert_input {
  Percentage_Students_Present: float8
  date: date
  date_2: date
  sum: numeric
  sum_2: numeric
}

"""aggregate max on columns"""
type idb_daily_total_attendance_percent_aggregate_max_fields {
  Percentage_Students_Present: float8
  date: date
  date_2: date
  sum: numeric
  sum_2: numeric
}

"""aggregate min on columns"""
type idb_daily_total_attendance_percent_aggregate_min_fields {
  Percentage_Students_Present: float8
  date: date
  date_2: date
  sum: numeric
  sum_2: numeric
}

"""
response of any mutation on the table "idb_daily_total_attendance_percent_aggregate"
"""
type idb_daily_total_attendance_percent_aggregate_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_daily_total_attendance_percent_aggregate!]!
}

"""
Ordering options when selecting data from "idb_daily_total_attendance_percent_aggregate".
"""
input idb_daily_total_attendance_percent_aggregate_order_by {
  Percentage_Students_Present: order_by
  date: order_by
  date_2: order_by
  sum: order_by
  sum_2: order_by
}

"""
select columns of table "idb_daily_total_attendance_percent_aggregate"
"""
enum idb_daily_total_attendance_percent_aggregate_select_column {
  """column name"""
  Percentage_Students_Present

  """column name"""
  date

  """column name"""
  date_2

  """column name"""
  sum

  """column name"""
  sum_2
}

"""
input type for updating data in table "idb_daily_total_attendance_percent_aggregate"
"""
input idb_daily_total_attendance_percent_aggregate_set_input {
  Percentage_Students_Present: float8
  date: date
  date_2: date
  sum: numeric
  sum_2: numeric
}

"""aggregate stddev on columns"""
type idb_daily_total_attendance_percent_aggregate_stddev_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""aggregate stddev_pop on columns"""
type idb_daily_total_attendance_percent_aggregate_stddev_pop_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""aggregate stddev_samp on columns"""
type idb_daily_total_attendance_percent_aggregate_stddev_samp_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""aggregate sum on columns"""
type idb_daily_total_attendance_percent_aggregate_sum_fields {
  Percentage_Students_Present: float8
  sum: numeric
  sum_2: numeric
}

"""aggregate var_pop on columns"""
type idb_daily_total_attendance_percent_aggregate_var_pop_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""aggregate var_samp on columns"""
type idb_daily_total_attendance_percent_aggregate_var_samp_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""aggregate variance on columns"""
type idb_daily_total_attendance_percent_aggregate_variance_fields {
  Percentage_Students_Present: Float
  sum: Float
  sum_2: Float
}

"""
columns and relationships of "idb_daily_total_attendance_percentage"
"""
type idb_daily_total_attendance_percentage {
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""
aggregated selection of "idb_daily_total_attendance_percentage"
"""
type idb_daily_total_attendance_percentage_aggregate {
  aggregate: idb_daily_total_attendance_percentage_aggregate_fields
  nodes: [idb_daily_total_attendance_percentage!]!
}

"""
aggregate fields of "idb_daily_total_attendance_percentage"
"""
type idb_daily_total_attendance_percentage_aggregate_fields {
  avg: idb_daily_total_attendance_percentage_avg_fields
  count(columns: [idb_daily_total_attendance_percentage_select_column!], distinct: Boolean): Int!
  max: idb_daily_total_attendance_percentage_max_fields
  min: idb_daily_total_attendance_percentage_min_fields
  stddev: idb_daily_total_attendance_percentage_stddev_fields
  stddev_pop: idb_daily_total_attendance_percentage_stddev_pop_fields
  stddev_samp: idb_daily_total_attendance_percentage_stddev_samp_fields
  sum: idb_daily_total_attendance_percentage_sum_fields
  var_pop: idb_daily_total_attendance_percentage_var_pop_fields
  var_samp: idb_daily_total_attendance_percentage_var_samp_fields
  variance: idb_daily_total_attendance_percentage_variance_fields
}

"""aggregate avg on columns"""
type idb_daily_total_attendance_percentage_avg_fields {
  sum: Float
  sum_2: Float
}

"""
Boolean expression to filter rows from the table "idb_daily_total_attendance_percentage". All fields are combined with a logical 'AND'.
"""
input idb_daily_total_attendance_percentage_bool_exp {
  _and: [idb_daily_total_attendance_percentage_bool_exp!]
  _not: idb_daily_total_attendance_percentage_bool_exp
  _or: [idb_daily_total_attendance_percentage_bool_exp!]
  date: date_comparison_exp
  date_2: date_comparison_exp
  sum: bigint_comparison_exp
  sum_2: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_daily_total_attendance_percentage"
"""
input idb_daily_total_attendance_percentage_inc_input {
  sum: bigint
  sum_2: numeric
}

"""
input type for inserting data into table "idb_daily_total_attendance_percentage"
"""
input idb_daily_total_attendance_percentage_insert_input {
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""aggregate max on columns"""
type idb_daily_total_attendance_percentage_max_fields {
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""aggregate min on columns"""
type idb_daily_total_attendance_percentage_min_fields {
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""
response of any mutation on the table "idb_daily_total_attendance_percentage"
"""
type idb_daily_total_attendance_percentage_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_daily_total_attendance_percentage!]!
}

"""
columns and relationships of "idb_daily_total_attendance_percentage_mv"
"""
type idb_daily_total_attendance_percentage_mv {
  Percentage: float8
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""
aggregated selection of "idb_daily_total_attendance_percentage_mv"
"""
type idb_daily_total_attendance_percentage_mv_aggregate {
  aggregate: idb_daily_total_attendance_percentage_mv_aggregate_fields
  nodes: [idb_daily_total_attendance_percentage_mv!]!
}

"""
aggregate fields of "idb_daily_total_attendance_percentage_mv"
"""
type idb_daily_total_attendance_percentage_mv_aggregate_fields {
  avg: idb_daily_total_attendance_percentage_mv_avg_fields
  count(columns: [idb_daily_total_attendance_percentage_mv_select_column!], distinct: Boolean): Int!
  max: idb_daily_total_attendance_percentage_mv_max_fields
  min: idb_daily_total_attendance_percentage_mv_min_fields
  stddev: idb_daily_total_attendance_percentage_mv_stddev_fields
  stddev_pop: idb_daily_total_attendance_percentage_mv_stddev_pop_fields
  stddev_samp: idb_daily_total_attendance_percentage_mv_stddev_samp_fields
  sum: idb_daily_total_attendance_percentage_mv_sum_fields
  var_pop: idb_daily_total_attendance_percentage_mv_var_pop_fields
  var_samp: idb_daily_total_attendance_percentage_mv_var_samp_fields
  variance: idb_daily_total_attendance_percentage_mv_variance_fields
}

"""aggregate avg on columns"""
type idb_daily_total_attendance_percentage_mv_avg_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""
Boolean expression to filter rows from the table "idb_daily_total_attendance_percentage_mv". All fields are combined with a logical 'AND'.
"""
input idb_daily_total_attendance_percentage_mv_bool_exp {
  Percentage: float8_comparison_exp
  _and: [idb_daily_total_attendance_percentage_mv_bool_exp!]
  _not: idb_daily_total_attendance_percentage_mv_bool_exp
  _or: [idb_daily_total_attendance_percentage_mv_bool_exp!]
  date: date_comparison_exp
  date_2: date_comparison_exp
  sum: bigint_comparison_exp
  sum_2: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_daily_total_attendance_percentage_mv"
"""
input idb_daily_total_attendance_percentage_mv_inc_input {
  Percentage: float8
  sum: bigint
  sum_2: numeric
}

"""
input type for inserting data into table "idb_daily_total_attendance_percentage_mv"
"""
input idb_daily_total_attendance_percentage_mv_insert_input {
  Percentage: float8
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""aggregate max on columns"""
type idb_daily_total_attendance_percentage_mv_max_fields {
  Percentage: float8
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""aggregate min on columns"""
type idb_daily_total_attendance_percentage_mv_min_fields {
  Percentage: float8
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""
response of any mutation on the table "idb_daily_total_attendance_percentage_mv"
"""
type idb_daily_total_attendance_percentage_mv_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_daily_total_attendance_percentage_mv!]!
}

"""
Ordering options when selecting data from "idb_daily_total_attendance_percentage_mv".
"""
input idb_daily_total_attendance_percentage_mv_order_by {
  Percentage: order_by
  date: order_by
  date_2: order_by
  sum: order_by
  sum_2: order_by
}

"""
select columns of table "idb_daily_total_attendance_percentage_mv"
"""
enum idb_daily_total_attendance_percentage_mv_select_column {
  """column name"""
  Percentage

  """column name"""
  date

  """column name"""
  date_2

  """column name"""
  sum

  """column name"""
  sum_2
}

"""
input type for updating data in table "idb_daily_total_attendance_percentage_mv"
"""
input idb_daily_total_attendance_percentage_mv_set_input {
  Percentage: float8
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""aggregate stddev on columns"""
type idb_daily_total_attendance_percentage_mv_stddev_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""aggregate stddev_pop on columns"""
type idb_daily_total_attendance_percentage_mv_stddev_pop_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""aggregate stddev_samp on columns"""
type idb_daily_total_attendance_percentage_mv_stddev_samp_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""aggregate sum on columns"""
type idb_daily_total_attendance_percentage_mv_sum_fields {
  Percentage: float8
  sum: bigint
  sum_2: numeric
}

"""aggregate var_pop on columns"""
type idb_daily_total_attendance_percentage_mv_var_pop_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""aggregate var_samp on columns"""
type idb_daily_total_attendance_percentage_mv_var_samp_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""aggregate variance on columns"""
type idb_daily_total_attendance_percentage_mv_variance_fields {
  Percentage: Float
  sum: Float
  sum_2: Float
}

"""
Ordering options when selecting data from "idb_daily_total_attendance_percentage".
"""
input idb_daily_total_attendance_percentage_order_by {
  date: order_by
  date_2: order_by
  sum: order_by
  sum_2: order_by
}

"""
select columns of table "idb_daily_total_attendance_percentage"
"""
enum idb_daily_total_attendance_percentage_select_column {
  """column name"""
  date

  """column name"""
  date_2

  """column name"""
  sum

  """column name"""
  sum_2
}

"""
input type for updating data in table "idb_daily_total_attendance_percentage"
"""
input idb_daily_total_attendance_percentage_set_input {
  date: date
  date_2: date
  sum: bigint
  sum_2: numeric
}

"""aggregate stddev on columns"""
type idb_daily_total_attendance_percentage_stddev_fields {
  sum: Float
  sum_2: Float
}

"""aggregate stddev_pop on columns"""
type idb_daily_total_attendance_percentage_stddev_pop_fields {
  sum: Float
  sum_2: Float
}

"""aggregate stddev_samp on columns"""
type idb_daily_total_attendance_percentage_stddev_samp_fields {
  sum: Float
  sum_2: Float
}

"""aggregate sum on columns"""
type idb_daily_total_attendance_percentage_sum_fields {
  sum: bigint
  sum_2: numeric
}

"""aggregate var_pop on columns"""
type idb_daily_total_attendance_percentage_var_pop_fields {
  sum: Float
  sum_2: Float
}

"""aggregate var_samp on columns"""
type idb_daily_total_attendance_percentage_var_samp_fields {
  sum: Float
  sum_2: Float
}

"""aggregate variance on columns"""
type idb_daily_total_attendance_percentage_variance_fields {
  sum: Float
  sum_2: Float
}

"""
columns and relationships of "idb_district_school_type_percentage"
"""
type idb_district_school_type_percentage {
  block: String
  cluster: String
  district: String
  enroll_count: Int
  id: Int
  id_2: Int
  is_active: Boolean
  location_id: Int
  name: String
  session: String
  type: String
  udise: Int
}

"""
aggregated selection of "idb_district_school_type_percentage"
"""
type idb_district_school_type_percentage_aggregate {
  aggregate: idb_district_school_type_percentage_aggregate_fields
  nodes: [idb_district_school_type_percentage!]!
}

"""
aggregate fields of "idb_district_school_type_percentage"
"""
type idb_district_school_type_percentage_aggregate_fields {
  avg: idb_district_school_type_percentage_avg_fields
  count(columns: [idb_district_school_type_percentage_select_column!], distinct: Boolean): Int!
  max: idb_district_school_type_percentage_max_fields
  min: idb_district_school_type_percentage_min_fields
  stddev: idb_district_school_type_percentage_stddev_fields
  stddev_pop: idb_district_school_type_percentage_stddev_pop_fields
  stddev_samp: idb_district_school_type_percentage_stddev_samp_fields
  sum: idb_district_school_type_percentage_sum_fields
  var_pop: idb_district_school_type_percentage_var_pop_fields
  var_samp: idb_district_school_type_percentage_var_samp_fields
  variance: idb_district_school_type_percentage_variance_fields
}

"""aggregate avg on columns"""
type idb_district_school_type_percentage_avg_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "idb_district_school_type_percentage". All fields are combined with a logical 'AND'.
"""
input idb_district_school_type_percentage_bool_exp {
  _and: [idb_district_school_type_percentage_bool_exp!]
  _not: idb_district_school_type_percentage_bool_exp
  _or: [idb_district_school_type_percentage_bool_exp!]
  block: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  enroll_count: Int_comparison_exp
  id: Int_comparison_exp
  id_2: Int_comparison_exp
  is_active: Boolean_comparison_exp
  location_id: Int_comparison_exp
  name: String_comparison_exp
  session: String_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_district_school_type_percentage"
"""
input idb_district_school_type_percentage_inc_input {
  enroll_count: Int
  id: Int
  id_2: Int
  location_id: Int
  udise: Int
}

"""
input type for inserting data into table "idb_district_school_type_percentage"
"""
input idb_district_school_type_percentage_insert_input {
  block: String
  cluster: String
  district: String
  enroll_count: Int
  id: Int
  id_2: Int
  is_active: Boolean
  location_id: Int
  name: String
  session: String
  type: String
  udise: Int
}

"""aggregate max on columns"""
type idb_district_school_type_percentage_max_fields {
  block: String
  cluster: String
  district: String
  enroll_count: Int
  id: Int
  id_2: Int
  location_id: Int
  name: String
  session: String
  type: String
  udise: Int
}

"""aggregate min on columns"""
type idb_district_school_type_percentage_min_fields {
  block: String
  cluster: String
  district: String
  enroll_count: Int
  id: Int
  id_2: Int
  location_id: Int
  name: String
  session: String
  type: String
  udise: Int
}

"""
response of any mutation on the table "idb_district_school_type_percentage"
"""
type idb_district_school_type_percentage_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_district_school_type_percentage!]!
}

"""
Ordering options when selecting data from "idb_district_school_type_percentage".
"""
input idb_district_school_type_percentage_order_by {
  block: order_by
  cluster: order_by
  district: order_by
  enroll_count: order_by
  id: order_by
  id_2: order_by
  is_active: order_by
  location_id: order_by
  name: order_by
  session: order_by
  type: order_by
  udise: order_by
}

"""
select columns of table "idb_district_school_type_percentage"
"""
enum idb_district_school_type_percentage_select_column {
  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  enroll_count

  """column name"""
  id

  """column name"""
  id_2

  """column name"""
  is_active

  """column name"""
  location_id

  """column name"""
  name

  """column name"""
  session

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "idb_district_school_type_percentage"
"""
input idb_district_school_type_percentage_set_input {
  block: String
  cluster: String
  district: String
  enroll_count: Int
  id: Int
  id_2: Int
  is_active: Boolean
  location_id: Int
  name: String
  session: String
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type idb_district_school_type_percentage_stddev_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type idb_district_school_type_percentage_stddev_pop_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type idb_district_school_type_percentage_stddev_samp_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type idb_district_school_type_percentage_sum_fields {
  enroll_count: Int
  id: Int
  id_2: Int
  location_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type idb_district_school_type_percentage_var_pop_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type idb_district_school_type_percentage_var_samp_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type idb_district_school_type_percentage_variance_fields {
  enroll_count: Float
  id: Float
  id_2: Float
  location_id: Float
  udise: Float
}

"""
columns and relationships of "idb_district_wise_schools"
"""
type idb_district_wise_schools {
  count: bigint
  district: String
}

"""
aggregated selection of "idb_district_wise_schools"
"""
type idb_district_wise_schools_aggregate {
  aggregate: idb_district_wise_schools_aggregate_fields
  nodes: [idb_district_wise_schools!]!
}

"""
aggregate fields of "idb_district_wise_schools"
"""
type idb_district_wise_schools_aggregate_fields {
  avg: idb_district_wise_schools_avg_fields
  count(columns: [idb_district_wise_schools_select_column!], distinct: Boolean): Int!
  max: idb_district_wise_schools_max_fields
  min: idb_district_wise_schools_min_fields
  stddev: idb_district_wise_schools_stddev_fields
  stddev_pop: idb_district_wise_schools_stddev_pop_fields
  stddev_samp: idb_district_wise_schools_stddev_samp_fields
  sum: idb_district_wise_schools_sum_fields
  var_pop: idb_district_wise_schools_var_pop_fields
  var_samp: idb_district_wise_schools_var_samp_fields
  variance: idb_district_wise_schools_variance_fields
}

"""aggregate avg on columns"""
type idb_district_wise_schools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "idb_district_wise_schools". All fields are combined with a logical 'AND'.
"""
input idb_district_wise_schools_bool_exp {
  _and: [idb_district_wise_schools_bool_exp!]
  _not: idb_district_wise_schools_bool_exp
  _or: [idb_district_wise_schools_bool_exp!]
  count: bigint_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_district_wise_schools"
"""
input idb_district_wise_schools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "idb_district_wise_schools"
"""
input idb_district_wise_schools_insert_input {
  count: bigint
  district: String
}

"""aggregate max on columns"""
type idb_district_wise_schools_max_fields {
  count: bigint
  district: String
}

"""aggregate min on columns"""
type idb_district_wise_schools_min_fields {
  count: bigint
  district: String
}

"""
response of any mutation on the table "idb_district_wise_schools"
"""
type idb_district_wise_schools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_district_wise_schools!]!
}

"""Ordering options when selecting data from "idb_district_wise_schools"."""
input idb_district_wise_schools_order_by {
  count: order_by
  district: order_by
}

"""
select columns of table "idb_district_wise_schools"
"""
enum idb_district_wise_schools_select_column {
  """column name"""
  count

  """column name"""
  district
}

"""
input type for updating data in table "idb_district_wise_schools"
"""
input idb_district_wise_schools_set_input {
  count: bigint
  district: String
}

"""aggregate stddev on columns"""
type idb_district_wise_schools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type idb_district_wise_schools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type idb_district_wise_schools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type idb_district_wise_schools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type idb_district_wise_schools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type idb_district_wise_schools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type idb_district_wise_schools_variance_fields {
  count: Float
}

"""
columns and relationships of "idb_district_wise_student_enrolment"
"""
type idb_district_wise_student_enrolment {
  Number_of_Students_Enrolled: bigint
  district: String
}

"""
aggregated selection of "idb_district_wise_student_enrolment"
"""
type idb_district_wise_student_enrolment_aggregate {
  aggregate: idb_district_wise_student_enrolment_aggregate_fields
  nodes: [idb_district_wise_student_enrolment!]!
}

"""
aggregate fields of "idb_district_wise_student_enrolment"
"""
type idb_district_wise_student_enrolment_aggregate_fields {
  avg: idb_district_wise_student_enrolment_avg_fields
  count(columns: [idb_district_wise_student_enrolment_select_column!], distinct: Boolean): Int!
  max: idb_district_wise_student_enrolment_max_fields
  min: idb_district_wise_student_enrolment_min_fields
  stddev: idb_district_wise_student_enrolment_stddev_fields
  stddev_pop: idb_district_wise_student_enrolment_stddev_pop_fields
  stddev_samp: idb_district_wise_student_enrolment_stddev_samp_fields
  sum: idb_district_wise_student_enrolment_sum_fields
  var_pop: idb_district_wise_student_enrolment_var_pop_fields
  var_samp: idb_district_wise_student_enrolment_var_samp_fields
  variance: idb_district_wise_student_enrolment_variance_fields
}

"""aggregate avg on columns"""
type idb_district_wise_student_enrolment_avg_fields {
  Number_of_Students_Enrolled: Float
}

"""
Boolean expression to filter rows from the table "idb_district_wise_student_enrolment". All fields are combined with a logical 'AND'.
"""
input idb_district_wise_student_enrolment_bool_exp {
  Number_of_Students_Enrolled: bigint_comparison_exp
  _and: [idb_district_wise_student_enrolment_bool_exp!]
  _not: idb_district_wise_student_enrolment_bool_exp
  _or: [idb_district_wise_student_enrolment_bool_exp!]
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_district_wise_student_enrolment"
"""
input idb_district_wise_student_enrolment_inc_input {
  Number_of_Students_Enrolled: bigint
}

"""
input type for inserting data into table "idb_district_wise_student_enrolment"
"""
input idb_district_wise_student_enrolment_insert_input {
  Number_of_Students_Enrolled: bigint
  district: String
}

"""aggregate max on columns"""
type idb_district_wise_student_enrolment_max_fields {
  Number_of_Students_Enrolled: bigint
  district: String
}

"""aggregate min on columns"""
type idb_district_wise_student_enrolment_min_fields {
  Number_of_Students_Enrolled: bigint
  district: String
}

"""
response of any mutation on the table "idb_district_wise_student_enrolment"
"""
type idb_district_wise_student_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_district_wise_student_enrolment!]!
}

"""
Ordering options when selecting data from "idb_district_wise_student_enrolment".
"""
input idb_district_wise_student_enrolment_order_by {
  Number_of_Students_Enrolled: order_by
  district: order_by
}

"""
select columns of table "idb_district_wise_student_enrolment"
"""
enum idb_district_wise_student_enrolment_select_column {
  """column name"""
  Number_of_Students_Enrolled

  """column name"""
  district
}

"""
input type for updating data in table "idb_district_wise_student_enrolment"
"""
input idb_district_wise_student_enrolment_set_input {
  Number_of_Students_Enrolled: bigint
  district: String
}

"""aggregate stddev on columns"""
type idb_district_wise_student_enrolment_stddev_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate stddev_pop on columns"""
type idb_district_wise_student_enrolment_stddev_pop_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate stddev_samp on columns"""
type idb_district_wise_student_enrolment_stddev_samp_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate sum on columns"""
type idb_district_wise_student_enrolment_sum_fields {
  Number_of_Students_Enrolled: bigint
}

"""aggregate var_pop on columns"""
type idb_district_wise_student_enrolment_var_pop_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate var_samp on columns"""
type idb_district_wise_student_enrolment_var_samp_fields {
  Number_of_Students_Enrolled: Float
}

"""aggregate variance on columns"""
type idb_district_wise_student_enrolment_variance_fields {
  Number_of_Students_Enrolled: Float
}

"""
columns and relationships of "idb_enrolment_grade_wise_state"
"""
type idb_enrolment_grade_wise_state {
  Grade: Int
  Number_of_Students: bigint
}

"""
aggregated selection of "idb_enrolment_grade_wise_state"
"""
type idb_enrolment_grade_wise_state_aggregate {
  aggregate: idb_enrolment_grade_wise_state_aggregate_fields
  nodes: [idb_enrolment_grade_wise_state!]!
}

"""
aggregate fields of "idb_enrolment_grade_wise_state"
"""
type idb_enrolment_grade_wise_state_aggregate_fields {
  avg: idb_enrolment_grade_wise_state_avg_fields
  count(columns: [idb_enrolment_grade_wise_state_select_column!], distinct: Boolean): Int!
  max: idb_enrolment_grade_wise_state_max_fields
  min: idb_enrolment_grade_wise_state_min_fields
  stddev: idb_enrolment_grade_wise_state_stddev_fields
  stddev_pop: idb_enrolment_grade_wise_state_stddev_pop_fields
  stddev_samp: idb_enrolment_grade_wise_state_stddev_samp_fields
  sum: idb_enrolment_grade_wise_state_sum_fields
  var_pop: idb_enrolment_grade_wise_state_var_pop_fields
  var_samp: idb_enrolment_grade_wise_state_var_samp_fields
  variance: idb_enrolment_grade_wise_state_variance_fields
}

"""aggregate avg on columns"""
type idb_enrolment_grade_wise_state_avg_fields {
  Grade: Float
  Number_of_Students: Float
}

"""
Boolean expression to filter rows from the table "idb_enrolment_grade_wise_state". All fields are combined with a logical 'AND'.
"""
input idb_enrolment_grade_wise_state_bool_exp {
  Grade: Int_comparison_exp
  Number_of_Students: bigint_comparison_exp
  _and: [idb_enrolment_grade_wise_state_bool_exp!]
  _not: idb_enrolment_grade_wise_state_bool_exp
  _or: [idb_enrolment_grade_wise_state_bool_exp!]
}

"""
input type for incrementing numeric columns in table "idb_enrolment_grade_wise_state"
"""
input idb_enrolment_grade_wise_state_inc_input {
  Grade: Int
  Number_of_Students: bigint
}

"""
input type for inserting data into table "idb_enrolment_grade_wise_state"
"""
input idb_enrolment_grade_wise_state_insert_input {
  Grade: Int
  Number_of_Students: bigint
}

"""aggregate max on columns"""
type idb_enrolment_grade_wise_state_max_fields {
  Grade: Int
  Number_of_Students: bigint
}

"""aggregate min on columns"""
type idb_enrolment_grade_wise_state_min_fields {
  Grade: Int
  Number_of_Students: bigint
}

"""
response of any mutation on the table "idb_enrolment_grade_wise_state"
"""
type idb_enrolment_grade_wise_state_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_enrolment_grade_wise_state!]!
}

"""
Ordering options when selecting data from "idb_enrolment_grade_wise_state".
"""
input idb_enrolment_grade_wise_state_order_by {
  Grade: order_by
  Number_of_Students: order_by
}

"""
select columns of table "idb_enrolment_grade_wise_state"
"""
enum idb_enrolment_grade_wise_state_select_column {
  """column name"""
  Grade

  """column name"""
  Number_of_Students
}

"""
input type for updating data in table "idb_enrolment_grade_wise_state"
"""
input idb_enrolment_grade_wise_state_set_input {
  Grade: Int
  Number_of_Students: bigint
}

"""aggregate stddev on columns"""
type idb_enrolment_grade_wise_state_stddev_fields {
  Grade: Float
  Number_of_Students: Float
}

"""aggregate stddev_pop on columns"""
type idb_enrolment_grade_wise_state_stddev_pop_fields {
  Grade: Float
  Number_of_Students: Float
}

"""aggregate stddev_samp on columns"""
type idb_enrolment_grade_wise_state_stddev_samp_fields {
  Grade: Float
  Number_of_Students: Float
}

"""aggregate sum on columns"""
type idb_enrolment_grade_wise_state_sum_fields {
  Grade: Int
  Number_of_Students: bigint
}

"""aggregate var_pop on columns"""
type idb_enrolment_grade_wise_state_var_pop_fields {
  Grade: Float
  Number_of_Students: Float
}

"""aggregate var_samp on columns"""
type idb_enrolment_grade_wise_state_var_samp_fields {
  Grade: Float
  Number_of_Students: Float
}

"""aggregate variance on columns"""
type idb_enrolment_grade_wise_state_variance_fields {
  Grade: Float
  Number_of_Students: Float
}

"""
columns and relationships of "idb_student_attendance_attendance_final_by_date_grade"
"""
type idb_student_attendance_attendance_final_by_date_grade {
  Percentage: float8
  concat: String
  date: date
  date_2: date
  grade_number: Int
  grade_number_2: Int
  new_id: String
  present_students: bigint
  total_students: bigint
}

"""
aggregated selection of "idb_student_attendance_attendance_final_by_date_grade"
"""
type idb_student_attendance_attendance_final_by_date_grade_aggregate {
  aggregate: idb_student_attendance_attendance_final_by_date_grade_aggregate_fields
  nodes: [idb_student_attendance_attendance_final_by_date_grade!]!
}

"""
aggregate fields of "idb_student_attendance_attendance_final_by_date_grade"
"""
type idb_student_attendance_attendance_final_by_date_grade_aggregate_fields {
  avg: idb_student_attendance_attendance_final_by_date_grade_avg_fields
  count(columns: [idb_student_attendance_attendance_final_by_date_grade_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_attendance_final_by_date_grade_max_fields
  min: idb_student_attendance_attendance_final_by_date_grade_min_fields
  stddev: idb_student_attendance_attendance_final_by_date_grade_stddev_fields
  stddev_pop: idb_student_attendance_attendance_final_by_date_grade_stddev_pop_fields
  stddev_samp: idb_student_attendance_attendance_final_by_date_grade_stddev_samp_fields
  sum: idb_student_attendance_attendance_final_by_date_grade_sum_fields
  var_pop: idb_student_attendance_attendance_final_by_date_grade_var_pop_fields
  var_samp: idb_student_attendance_attendance_final_by_date_grade_var_samp_fields
  variance: idb_student_attendance_attendance_final_by_date_grade_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_attendance_final_by_date_grade_avg_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_attendance_final_by_date_grade". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_attendance_final_by_date_grade_bool_exp {
  Percentage: float8_comparison_exp
  _and: [idb_student_attendance_attendance_final_by_date_grade_bool_exp!]
  _not: idb_student_attendance_attendance_final_by_date_grade_bool_exp
  _or: [idb_student_attendance_attendance_final_by_date_grade_bool_exp!]
  concat: String_comparison_exp
  date: date_comparison_exp
  date_2: date_comparison_exp
  grade_number: Int_comparison_exp
  grade_number_2: Int_comparison_exp
  new_id: String_comparison_exp
  present_students: bigint_comparison_exp
  total_students: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_attendance_final_by_date_grade"
"""
input idb_student_attendance_attendance_final_by_date_grade_inc_input {
  Percentage: float8
  grade_number: Int
  grade_number_2: Int
  present_students: bigint
  total_students: bigint
}

"""
input type for inserting data into table "idb_student_attendance_attendance_final_by_date_grade"
"""
input idb_student_attendance_attendance_final_by_date_grade_insert_input {
  Percentage: float8
  concat: String
  date: date
  date_2: date
  grade_number: Int
  grade_number_2: Int
  new_id: String
  present_students: bigint
  total_students: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_attendance_final_by_date_grade_max_fields {
  Percentage: float8
  concat: String
  date: date
  date_2: date
  grade_number: Int
  grade_number_2: Int
  new_id: String
  present_students: bigint
  total_students: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_attendance_final_by_date_grade_min_fields {
  Percentage: float8
  concat: String
  date: date
  date_2: date
  grade_number: Int
  grade_number_2: Int
  new_id: String
  present_students: bigint
  total_students: bigint
}

"""
response of any mutation on the table "idb_student_attendance_attendance_final_by_date_grade"
"""
type idb_student_attendance_attendance_final_by_date_grade_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_attendance_final_by_date_grade!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_attendance_final_by_date_grade".
"""
input idb_student_attendance_attendance_final_by_date_grade_order_by {
  Percentage: order_by
  concat: order_by
  date: order_by
  date_2: order_by
  grade_number: order_by
  grade_number_2: order_by
  new_id: order_by
  present_students: order_by
  total_students: order_by
}

"""
select columns of table "idb_student_attendance_attendance_final_by_date_grade"
"""
enum idb_student_attendance_attendance_final_by_date_grade_select_column {
  """column name"""
  Percentage

  """column name"""
  concat

  """column name"""
  date

  """column name"""
  date_2

  """column name"""
  grade_number

  """column name"""
  grade_number_2

  """column name"""
  new_id

  """column name"""
  present_students

  """column name"""
  total_students
}

"""
input type for updating data in table "idb_student_attendance_attendance_final_by_date_grade"
"""
input idb_student_attendance_attendance_final_by_date_grade_set_input {
  Percentage: float8
  concat: String
  date: date
  date_2: date
  grade_number: Int
  grade_number_2: Int
  new_id: String
  present_students: bigint
  total_students: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_attendance_final_by_date_grade_stddev_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_attendance_final_by_date_grade_stddev_pop_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_attendance_final_by_date_grade_stddev_samp_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_attendance_final_by_date_grade_sum_fields {
  Percentage: float8
  grade_number: Int
  grade_number_2: Int
  present_students: bigint
  total_students: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_attendance_final_by_date_grade_var_pop_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_attendance_final_by_date_grade_var_samp_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_attendance_final_by_date_grade_variance_fields {
  Percentage: Float
  grade_number: Float
  grade_number_2: Float
  present_students: Float
  total_students: Float
}

"""
columns and relationships of "idb_student_attendance_attendance_merged"
"""
type idb_student_attendance_attendance_merged {
  admission_number: Int
  block: String
  category: String
  cluster: String
  created: timestamptz
  created_2: timestamptz
  date: date
  district: String
  enroll_count: Int
  father_name: String
  gender: String
  grade_number: Int
  grade_year_mapping: _varchar
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  is_active: Boolean
  is_cwsn: Boolean
  is_enabled: Boolean
  is_present: Boolean
  location_id: Int
  mother_name: String
  name: String
  name_2: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  session: String
  stream_tag: String
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  type: String
  udise: Int
  updated: timestamptz
  updated_2: timestamptz
}

"""
aggregated selection of "idb_student_attendance_attendance_merged"
"""
type idb_student_attendance_attendance_merged_aggregate {
  aggregate: idb_student_attendance_attendance_merged_aggregate_fields
  nodes: [idb_student_attendance_attendance_merged!]!
}

"""
aggregate fields of "idb_student_attendance_attendance_merged"
"""
type idb_student_attendance_attendance_merged_aggregate_fields {
  avg: idb_student_attendance_attendance_merged_avg_fields
  count(columns: [idb_student_attendance_attendance_merged_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_attendance_merged_max_fields
  min: idb_student_attendance_attendance_merged_min_fields
  stddev: idb_student_attendance_attendance_merged_stddev_fields
  stddev_pop: idb_student_attendance_attendance_merged_stddev_pop_fields
  stddev_samp: idb_student_attendance_attendance_merged_stddev_samp_fields
  sum: idb_student_attendance_attendance_merged_sum_fields
  var_pop: idb_student_attendance_attendance_merged_var_pop_fields
  var_samp: idb_student_attendance_attendance_merged_var_samp_fields
  variance: idb_student_attendance_attendance_merged_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_attendance_merged_avg_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_attendance_merged". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_attendance_merged_bool_exp {
  _and: [idb_student_attendance_attendance_merged_bool_exp!]
  _not: idb_student_attendance_attendance_merged_bool_exp
  _or: [idb_student_attendance_attendance_merged_bool_exp!]
  admission_number: Int_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  created: timestamptz_comparison_exp
  created_2: timestamptz_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  enroll_count: Int_comparison_exp
  father_name: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  grade_year_mapping: _varchar_comparison_exp
  id: Int_comparison_exp
  id_2: Int_comparison_exp
  id_3: Int_comparison_exp
  id_4: Int_comparison_exp
  is_active: Boolean_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  is_present: Boolean_comparison_exp
  location_id: Int_comparison_exp
  mother_name: String_comparison_exp
  name: String_comparison_exp
  name_2: String_comparison_exp
  phone: bigint_comparison_exp
  previous_acad_year: String_comparison_exp
  previous_grade: Int_comparison_exp
  roll: Int_comparison_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  taken_by_school_id: Int_comparison_exp
  temperature: float8_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
  updated: timestamptz_comparison_exp
  updated_2: timestamptz_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_attendance_merged"
"""
input idb_student_attendance_attendance_merged_inc_input {
  admission_number: Int
  enroll_count: Int
  grade_number: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  location_id: Int
  phone: bigint
  previous_grade: Int
  roll: Int
  school_id: Int
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  udise: Int
}

"""
input type for inserting data into table "idb_student_attendance_attendance_merged"
"""
input idb_student_attendance_attendance_merged_insert_input {
  admission_number: Int
  block: String
  category: String
  cluster: String
  created: timestamptz
  created_2: timestamptz
  date: date
  district: String
  enroll_count: Int
  father_name: String
  gender: String
  grade_number: Int
  grade_year_mapping: _varchar
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  is_active: Boolean
  is_cwsn: Boolean
  is_enabled: Boolean
  is_present: Boolean
  location_id: Int
  mother_name: String
  name: String
  name_2: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  session: String
  stream_tag: String
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  type: String
  udise: Int
  updated: timestamptz
  updated_2: timestamptz
}

"""aggregate max on columns"""
type idb_student_attendance_attendance_merged_max_fields {
  admission_number: Int
  block: String
  category: String
  cluster: String
  created: timestamptz
  created_2: timestamptz
  date: date
  district: String
  enroll_count: Int
  father_name: String
  gender: String
  grade_number: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  location_id: Int
  mother_name: String
  name: String
  name_2: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  session: String
  stream_tag: String
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  type: String
  udise: Int
  updated: timestamptz
  updated_2: timestamptz
}

"""aggregate min on columns"""
type idb_student_attendance_attendance_merged_min_fields {
  admission_number: Int
  block: String
  category: String
  cluster: String
  created: timestamptz
  created_2: timestamptz
  date: date
  district: String
  enroll_count: Int
  father_name: String
  gender: String
  grade_number: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  location_id: Int
  mother_name: String
  name: String
  name_2: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  session: String
  stream_tag: String
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  type: String
  udise: Int
  updated: timestamptz
  updated_2: timestamptz
}

"""
response of any mutation on the table "idb_student_attendance_attendance_merged"
"""
type idb_student_attendance_attendance_merged_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_attendance_merged!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_attendance_merged".
"""
input idb_student_attendance_attendance_merged_order_by {
  admission_number: order_by
  block: order_by
  category: order_by
  cluster: order_by
  created: order_by
  created_2: order_by
  date: order_by
  district: order_by
  enroll_count: order_by
  father_name: order_by
  gender: order_by
  grade_number: order_by
  grade_year_mapping: order_by
  id: order_by
  id_2: order_by
  id_3: order_by
  id_4: order_by
  is_active: order_by
  is_cwsn: order_by
  is_enabled: order_by
  is_present: order_by
  location_id: order_by
  mother_name: order_by
  name: order_by
  name_2: order_by
  phone: order_by
  previous_acad_year: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
  section: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  taken_by_school_id: order_by
  temperature: order_by
  type: order_by
  udise: order_by
  updated: order_by
  updated_2: order_by
}

"""
select columns of table "idb_student_attendance_attendance_merged"
"""
enum idb_student_attendance_attendance_merged_select_column {
  """column name"""
  admission_number

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  created_2

  """column name"""
  date

  """column name"""
  district

  """column name"""
  enroll_count

  """column name"""
  father_name

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  grade_year_mapping

  """column name"""
  id

  """column name"""
  id_2

  """column name"""
  id_3

  """column name"""
  id_4

  """column name"""
  is_active

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  is_present

  """column name"""
  location_id

  """column name"""
  mother_name

  """column name"""
  name

  """column name"""
  name_2

  """column name"""
  phone

  """column name"""
  previous_acad_year

  """column name"""
  previous_grade

  """column name"""
  roll

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  taken_by_school_id

  """column name"""
  temperature

  """column name"""
  type

  """column name"""
  udise

  """column name"""
  updated

  """column name"""
  updated_2
}

"""
input type for updating data in table "idb_student_attendance_attendance_merged"
"""
input idb_student_attendance_attendance_merged_set_input {
  admission_number: Int
  block: String
  category: String
  cluster: String
  created: timestamptz
  created_2: timestamptz
  date: date
  district: String
  enroll_count: Int
  father_name: String
  gender: String
  grade_number: Int
  grade_year_mapping: _varchar
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  is_active: Boolean
  is_cwsn: Boolean
  is_enabled: Boolean
  is_present: Boolean
  location_id: Int
  mother_name: String
  name: String
  name_2: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  session: String
  stream_tag: String
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  type: String
  udise: Int
  updated: timestamptz
  updated_2: timestamptz
}

"""aggregate stddev on columns"""
type idb_student_attendance_attendance_merged_stddev_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_attendance_merged_stddev_pop_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_attendance_merged_stddev_samp_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_attendance_merged_sum_fields {
  admission_number: Int
  enroll_count: Int
  grade_number: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  location_id: Int
  phone: bigint
  previous_grade: Int
  roll: Int
  school_id: Int
  student_id: Int
  taken_by_school_id: Int
  temperature: float8
  udise: Int
}

"""aggregate var_pop on columns"""
type idb_student_attendance_attendance_merged_var_pop_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_attendance_merged_var_samp_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_attendance_merged_variance_fields {
  admission_number: Float
  enroll_count: Float
  grade_number: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  location_id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
  student_id: Float
  taken_by_school_id: Float
  temperature: Float
  udise: Float
}

"""
columns and relationships of "idb_student_attendance_attendance_present_aggregate"
"""
type idb_student_attendance_attendance_present_aggregate {
  date: date
  sum: numeric
}

"""
aggregated selection of "idb_student_attendance_attendance_present_aggregate"
"""
type idb_student_attendance_attendance_present_aggregate_aggregate {
  aggregate: idb_student_attendance_attendance_present_aggregate_aggregate_fields
  nodes: [idb_student_attendance_attendance_present_aggregate!]!
}

"""
aggregate fields of "idb_student_attendance_attendance_present_aggregate"
"""
type idb_student_attendance_attendance_present_aggregate_aggregate_fields {
  avg: idb_student_attendance_attendance_present_aggregate_avg_fields
  count(columns: [idb_student_attendance_attendance_present_aggregate_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_attendance_present_aggregate_max_fields
  min: idb_student_attendance_attendance_present_aggregate_min_fields
  stddev: idb_student_attendance_attendance_present_aggregate_stddev_fields
  stddev_pop: idb_student_attendance_attendance_present_aggregate_stddev_pop_fields
  stddev_samp: idb_student_attendance_attendance_present_aggregate_stddev_samp_fields
  sum: idb_student_attendance_attendance_present_aggregate_sum_fields
  var_pop: idb_student_attendance_attendance_present_aggregate_var_pop_fields
  var_samp: idb_student_attendance_attendance_present_aggregate_var_samp_fields
  variance: idb_student_attendance_attendance_present_aggregate_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_attendance_present_aggregate_avg_fields {
  sum: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_attendance_present_aggregate". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_attendance_present_aggregate_bool_exp {
  _and: [idb_student_attendance_attendance_present_aggregate_bool_exp!]
  _not: idb_student_attendance_attendance_present_aggregate_bool_exp
  _or: [idb_student_attendance_attendance_present_aggregate_bool_exp!]
  date: date_comparison_exp
  sum: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_attendance_present_aggregate"
"""
input idb_student_attendance_attendance_present_aggregate_inc_input {
  sum: numeric
}

"""
input type for inserting data into table "idb_student_attendance_attendance_present_aggregate"
"""
input idb_student_attendance_attendance_present_aggregate_insert_input {
  date: date
  sum: numeric
}

"""aggregate max on columns"""
type idb_student_attendance_attendance_present_aggregate_max_fields {
  date: date
  sum: numeric
}

"""aggregate min on columns"""
type idb_student_attendance_attendance_present_aggregate_min_fields {
  date: date
  sum: numeric
}

"""
response of any mutation on the table "idb_student_attendance_attendance_present_aggregate"
"""
type idb_student_attendance_attendance_present_aggregate_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_attendance_present_aggregate!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_attendance_present_aggregate".
"""
input idb_student_attendance_attendance_present_aggregate_order_by {
  date: order_by
  sum: order_by
}

"""
select columns of table "idb_student_attendance_attendance_present_aggregate"
"""
enum idb_student_attendance_attendance_present_aggregate_select_column {
  """column name"""
  date

  """column name"""
  sum
}

"""
input type for updating data in table "idb_student_attendance_attendance_present_aggregate"
"""
input idb_student_attendance_attendance_present_aggregate_set_input {
  date: date
  sum: numeric
}

"""aggregate stddev on columns"""
type idb_student_attendance_attendance_present_aggregate_stddev_fields {
  sum: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_attendance_present_aggregate_stddev_pop_fields {
  sum: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_attendance_present_aggregate_stddev_samp_fields {
  sum: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_attendance_present_aggregate_sum_fields {
  sum: numeric
}

"""aggregate var_pop on columns"""
type idb_student_attendance_attendance_present_aggregate_var_pop_fields {
  sum: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_attendance_present_aggregate_var_samp_fields {
  sum: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_attendance_present_aggregate_variance_fields {
  sum: Float
}

"""
columns and relationships of "idb_student_attendance_attendance_present_marked_by_date"
"""
type idb_student_attendance_attendance_present_marked_by_date {
  date: date
  grade_number: Int
  new_id: String
  present_students: bigint
}

"""
aggregated selection of "idb_student_attendance_attendance_present_marked_by_date"
"""
type idb_student_attendance_attendance_present_marked_by_date_aggregate {
  aggregate: idb_student_attendance_attendance_present_marked_by_date_aggregate_fields
  nodes: [idb_student_attendance_attendance_present_marked_by_date!]!
}

"""
aggregate fields of "idb_student_attendance_attendance_present_marked_by_date"
"""
type idb_student_attendance_attendance_present_marked_by_date_aggregate_fields {
  avg: idb_student_attendance_attendance_present_marked_by_date_avg_fields
  count(columns: [idb_student_attendance_attendance_present_marked_by_date_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_attendance_present_marked_by_date_max_fields
  min: idb_student_attendance_attendance_present_marked_by_date_min_fields
  stddev: idb_student_attendance_attendance_present_marked_by_date_stddev_fields
  stddev_pop: idb_student_attendance_attendance_present_marked_by_date_stddev_pop_fields
  stddev_samp: idb_student_attendance_attendance_present_marked_by_date_stddev_samp_fields
  sum: idb_student_attendance_attendance_present_marked_by_date_sum_fields
  var_pop: idb_student_attendance_attendance_present_marked_by_date_var_pop_fields
  var_samp: idb_student_attendance_attendance_present_marked_by_date_var_samp_fields
  variance: idb_student_attendance_attendance_present_marked_by_date_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_attendance_present_marked_by_date_avg_fields {
  grade_number: Float
  present_students: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_attendance_present_marked_by_date". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_attendance_present_marked_by_date_bool_exp {
  _and: [idb_student_attendance_attendance_present_marked_by_date_bool_exp!]
  _not: idb_student_attendance_attendance_present_marked_by_date_bool_exp
  _or: [idb_student_attendance_attendance_present_marked_by_date_bool_exp!]
  date: date_comparison_exp
  grade_number: Int_comparison_exp
  new_id: String_comparison_exp
  present_students: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_attendance_present_marked_by_date"
"""
input idb_student_attendance_attendance_present_marked_by_date_inc_input {
  grade_number: Int
  present_students: bigint
}

"""
input type for inserting data into table "idb_student_attendance_attendance_present_marked_by_date"
"""
input idb_student_attendance_attendance_present_marked_by_date_insert_input {
  date: date
  grade_number: Int
  new_id: String
  present_students: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_attendance_present_marked_by_date_max_fields {
  date: date
  grade_number: Int
  new_id: String
  present_students: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_attendance_present_marked_by_date_min_fields {
  date: date
  grade_number: Int
  new_id: String
  present_students: bigint
}

"""
response of any mutation on the table "idb_student_attendance_attendance_present_marked_by_date"
"""
type idb_student_attendance_attendance_present_marked_by_date_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_attendance_present_marked_by_date!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_attendance_present_marked_by_date".
"""
input idb_student_attendance_attendance_present_marked_by_date_order_by {
  date: order_by
  grade_number: order_by
  new_id: order_by
  present_students: order_by
}

"""
select columns of table "idb_student_attendance_attendance_present_marked_by_date"
"""
enum idb_student_attendance_attendance_present_marked_by_date_select_column {
  """column name"""
  date

  """column name"""
  grade_number

  """column name"""
  new_id

  """column name"""
  present_students
}

"""
input type for updating data in table "idb_student_attendance_attendance_present_marked_by_date"
"""
input idb_student_attendance_attendance_present_marked_by_date_set_input {
  date: date
  grade_number: Int
  new_id: String
  present_students: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_attendance_present_marked_by_date_stddev_fields {
  grade_number: Float
  present_students: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_attendance_present_marked_by_date_stddev_pop_fields {
  grade_number: Float
  present_students: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_attendance_present_marked_by_date_stddev_samp_fields {
  grade_number: Float
  present_students: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_attendance_present_marked_by_date_sum_fields {
  grade_number: Int
  present_students: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_attendance_present_marked_by_date_var_pop_fields {
  grade_number: Float
  present_students: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_attendance_present_marked_by_date_var_samp_fields {
  grade_number: Float
  present_students: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_attendance_present_marked_by_date_variance_fields {
  grade_number: Float
  present_students: Float
}

"""
columns and relationships of "idb_student_attendance_attendance_total_marked_by_date"
"""
type idb_student_attendance_attendance_total_marked_by_date {
  concat: String
  date: date
  grade_number: Int
  total_students: bigint
}

"""
aggregated selection of "idb_student_attendance_attendance_total_marked_by_date"
"""
type idb_student_attendance_attendance_total_marked_by_date_aggregate {
  aggregate: idb_student_attendance_attendance_total_marked_by_date_aggregate_fields
  nodes: [idb_student_attendance_attendance_total_marked_by_date!]!
}

"""
aggregate fields of "idb_student_attendance_attendance_total_marked_by_date"
"""
type idb_student_attendance_attendance_total_marked_by_date_aggregate_fields {
  avg: idb_student_attendance_attendance_total_marked_by_date_avg_fields
  count(columns: [idb_student_attendance_attendance_total_marked_by_date_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_attendance_total_marked_by_date_max_fields
  min: idb_student_attendance_attendance_total_marked_by_date_min_fields
  stddev: idb_student_attendance_attendance_total_marked_by_date_stddev_fields
  stddev_pop: idb_student_attendance_attendance_total_marked_by_date_stddev_pop_fields
  stddev_samp: idb_student_attendance_attendance_total_marked_by_date_stddev_samp_fields
  sum: idb_student_attendance_attendance_total_marked_by_date_sum_fields
  var_pop: idb_student_attendance_attendance_total_marked_by_date_var_pop_fields
  var_samp: idb_student_attendance_attendance_total_marked_by_date_var_samp_fields
  variance: idb_student_attendance_attendance_total_marked_by_date_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_attendance_total_marked_by_date_avg_fields {
  grade_number: Float
  total_students: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_attendance_total_marked_by_date". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_attendance_total_marked_by_date_bool_exp {
  _and: [idb_student_attendance_attendance_total_marked_by_date_bool_exp!]
  _not: idb_student_attendance_attendance_total_marked_by_date_bool_exp
  _or: [idb_student_attendance_attendance_total_marked_by_date_bool_exp!]
  concat: String_comparison_exp
  date: date_comparison_exp
  grade_number: Int_comparison_exp
  total_students: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_attendance_total_marked_by_date"
"""
input idb_student_attendance_attendance_total_marked_by_date_inc_input {
  grade_number: Int
  total_students: bigint
}

"""
input type for inserting data into table "idb_student_attendance_attendance_total_marked_by_date"
"""
input idb_student_attendance_attendance_total_marked_by_date_insert_input {
  concat: String
  date: date
  grade_number: Int
  total_students: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_attendance_total_marked_by_date_max_fields {
  concat: String
  date: date
  grade_number: Int
  total_students: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_attendance_total_marked_by_date_min_fields {
  concat: String
  date: date
  grade_number: Int
  total_students: bigint
}

"""
response of any mutation on the table "idb_student_attendance_attendance_total_marked_by_date"
"""
type idb_student_attendance_attendance_total_marked_by_date_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_attendance_total_marked_by_date!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_attendance_total_marked_by_date".
"""
input idb_student_attendance_attendance_total_marked_by_date_order_by {
  concat: order_by
  date: order_by
  grade_number: order_by
  total_students: order_by
}

"""
select columns of table "idb_student_attendance_attendance_total_marked_by_date"
"""
enum idb_student_attendance_attendance_total_marked_by_date_select_column {
  """column name"""
  concat

  """column name"""
  date

  """column name"""
  grade_number

  """column name"""
  total_students
}

"""
input type for updating data in table "idb_student_attendance_attendance_total_marked_by_date"
"""
input idb_student_attendance_attendance_total_marked_by_date_set_input {
  concat: String
  date: date
  grade_number: Int
  total_students: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_attendance_total_marked_by_date_stddev_fields {
  grade_number: Float
  total_students: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_attendance_total_marked_by_date_stddev_pop_fields {
  grade_number: Float
  total_students: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_attendance_total_marked_by_date_stddev_samp_fields {
  grade_number: Float
  total_students: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_attendance_total_marked_by_date_sum_fields {
  grade_number: Int
  total_students: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_attendance_total_marked_by_date_var_pop_fields {
  grade_number: Float
  total_students: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_attendance_total_marked_by_date_var_samp_fields {
  grade_number: Float
  total_students: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_attendance_total_marked_by_date_variance_fields {
  grade_number: Float
  total_students: Float
}

"""
Merged total and present student column MV


columns and relationships of "idb_student_attendance_block_final"

"""
type idb_student_attendance_block_final {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
  students_present: float8
}

"""
aggregated selection of "idb_student_attendance_block_final"
"""
type idb_student_attendance_block_final_aggregate {
  aggregate: idb_student_attendance_block_final_aggregate_fields
  nodes: [idb_student_attendance_block_final!]!
}

"""
aggregate fields of "idb_student_attendance_block_final"
"""
type idb_student_attendance_block_final_aggregate_fields {
  avg: idb_student_attendance_block_final_avg_fields
  count(columns: [idb_student_attendance_block_final_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_block_final_max_fields
  min: idb_student_attendance_block_final_min_fields
  stddev: idb_student_attendance_block_final_stddev_fields
  stddev_pop: idb_student_attendance_block_final_stddev_pop_fields
  stddev_samp: idb_student_attendance_block_final_stddev_samp_fields
  sum: idb_student_attendance_block_final_sum_fields
  var_pop: idb_student_attendance_block_final_var_pop_fields
  var_samp: idb_student_attendance_block_final_var_samp_fields
  variance: idb_student_attendance_block_final_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_block_final_avg_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_block_final". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_block_final_bool_exp {
  Data_Marked_For: bigint_comparison_exp
  Percentage_of_Students_Present: float8_comparison_exp
  Present_Students: bigint_comparison_exp
  _and: [idb_student_attendance_block_final_bool_exp!]
  _not: idb_student_attendance_block_final_bool_exp
  _or: [idb_student_attendance_block_final_bool_exp!]
  block: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  students_present: float8_comparison_exp
}

"""
columns and relationships of "idb_student_attendance_block_final_enrolment"
"""
type idb_student_attendance_block_final_enrolment {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
}

"""
aggregated selection of "idb_student_attendance_block_final_enrolment"
"""
type idb_student_attendance_block_final_enrolment_aggregate {
  aggregate: idb_student_attendance_block_final_enrolment_aggregate_fields
  nodes: [idb_student_attendance_block_final_enrolment!]!
}

"""
aggregate fields of "idb_student_attendance_block_final_enrolment"
"""
type idb_student_attendance_block_final_enrolment_aggregate_fields {
  avg: idb_student_attendance_block_final_enrolment_avg_fields
  count(columns: [idb_student_attendance_block_final_enrolment_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_block_final_enrolment_max_fields
  min: idb_student_attendance_block_final_enrolment_min_fields
  stddev: idb_student_attendance_block_final_enrolment_stddev_fields
  stddev_pop: idb_student_attendance_block_final_enrolment_stddev_pop_fields
  stddev_samp: idb_student_attendance_block_final_enrolment_stddev_samp_fields
  sum: idb_student_attendance_block_final_enrolment_sum_fields
  var_pop: idb_student_attendance_block_final_enrolment_var_pop_fields
  var_samp: idb_student_attendance_block_final_enrolment_var_samp_fields
  variance: idb_student_attendance_block_final_enrolment_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_block_final_enrolment_avg_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_block_final_enrolment". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_block_final_enrolment_bool_exp {
  Data_Marked_For: bigint_comparison_exp
  Number_of_Students_Enrolled: bigint_comparison_exp
  Percentage_of_Students_Data_Marked_For: float8_comparison_exp
  Percentage_of_Students_Present: float8_comparison_exp
  Present_Students: bigint_comparison_exp
  _and: [idb_student_attendance_block_final_enrolment_bool_exp!]
  _not: idb_student_attendance_block_final_enrolment_bool_exp
  _or: [idb_student_attendance_block_final_enrolment_bool_exp!]
  block: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_block_final_enrolment"
"""
input idb_student_attendance_block_final_enrolment_inc_input {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
}

"""
input type for inserting data into table "idb_student_attendance_block_final_enrolment"
"""
input idb_student_attendance_block_final_enrolment_insert_input {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
}

"""aggregate max on columns"""
type idb_student_attendance_block_final_enrolment_max_fields {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
}

"""aggregate min on columns"""
type idb_student_attendance_block_final_enrolment_min_fields {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
}

"""
response of any mutation on the table "idb_student_attendance_block_final_enrolment"
"""
type idb_student_attendance_block_final_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_block_final_enrolment!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_block_final_enrolment".
"""
input idb_student_attendance_block_final_enrolment_order_by {
  Data_Marked_For: order_by
  Number_of_Students_Enrolled: order_by
  Percentage_of_Students_Data_Marked_For: order_by
  Percentage_of_Students_Present: order_by
  Present_Students: order_by
  block: order_by
  date: order_by
  district: order_by
}

"""
select columns of table "idb_student_attendance_block_final_enrolment"
"""
enum idb_student_attendance_block_final_enrolment_select_column {
  """column name"""
  Data_Marked_For

  """column name"""
  Number_of_Students_Enrolled

  """column name"""
  Percentage_of_Students_Data_Marked_For

  """column name"""
  Percentage_of_Students_Present

  """column name"""
  Present_Students

  """column name"""
  block

  """column name"""
  date

  """column name"""
  district
}

"""
input type for updating data in table "idb_student_attendance_block_final_enrolment"
"""
input idb_student_attendance_block_final_enrolment_set_input {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
}

"""aggregate stddev on columns"""
type idb_student_attendance_block_final_enrolment_stddev_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_block_final_enrolment_stddev_pop_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_block_final_enrolment_stddev_samp_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_block_final_enrolment_sum_fields {
  Data_Marked_For: bigint
  Number_of_Students_Enrolled: bigint
  Percentage_of_Students_Data_Marked_For: float8
  Percentage_of_Students_Present: float8
  Present_Students: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_block_final_enrolment_var_pop_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_block_final_enrolment_var_samp_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_block_final_enrolment_variance_fields {
  Data_Marked_For: Float
  Number_of_Students_Enrolled: Float
  Percentage_of_Students_Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_block_final"
"""
input idb_student_attendance_block_final_inc_input {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  students_present: float8
}

"""
input type for inserting data into table "idb_student_attendance_block_final"
"""
input idb_student_attendance_block_final_insert_input {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
  students_present: float8
}

"""aggregate max on columns"""
type idb_student_attendance_block_final_max_fields {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
  students_present: float8
}

"""aggregate min on columns"""
type idb_student_attendance_block_final_min_fields {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
  students_present: float8
}

"""
response of any mutation on the table "idb_student_attendance_block_final"
"""
type idb_student_attendance_block_final_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_block_final!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_block_final".
"""
input idb_student_attendance_block_final_order_by {
  Data_Marked_For: order_by
  Percentage_of_Students_Present: order_by
  Present_Students: order_by
  block: order_by
  date: order_by
  district: order_by
  students_present: order_by
}

"""
select columns of table "idb_student_attendance_block_final"
"""
enum idb_student_attendance_block_final_select_column {
  """column name"""
  Data_Marked_For

  """column name"""
  Percentage_of_Students_Present

  """column name"""
  Present_Students

  """column name"""
  block

  """column name"""
  date

  """column name"""
  district

  """column name"""
  students_present
}

"""
input type for updating data in table "idb_student_attendance_block_final"
"""
input idb_student_attendance_block_final_set_input {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  block: String
  date: date
  district: String
  students_present: float8
}

"""aggregate stddev on columns"""
type idb_student_attendance_block_final_stddev_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_block_final_stddev_pop_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_block_final_stddev_samp_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_block_final_sum_fields {
  Data_Marked_For: bigint
  Percentage_of_Students_Present: float8
  Present_Students: bigint
  students_present: float8
}

"""aggregate var_pop on columns"""
type idb_student_attendance_block_final_var_pop_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_block_final_var_samp_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_block_final_variance_fields {
  Data_Marked_For: Float
  Percentage_of_Students_Present: Float
  Present_Students: Float
  students_present: Float
}

"""
columns and relationships of "idb_student_attendance_block_level_daily_present_marked"
"""
type idb_student_attendance_block_level_daily_present_marked {
  Present_Students: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""
aggregated selection of "idb_student_attendance_block_level_daily_present_marked"
"""
type idb_student_attendance_block_level_daily_present_marked_aggregate {
  aggregate: idb_student_attendance_block_level_daily_present_marked_aggregate_fields
  nodes: [idb_student_attendance_block_level_daily_present_marked!]!
}

"""
aggregate fields of "idb_student_attendance_block_level_daily_present_marked"
"""
type idb_student_attendance_block_level_daily_present_marked_aggregate_fields {
  avg: idb_student_attendance_block_level_daily_present_marked_avg_fields
  count(columns: [idb_student_attendance_block_level_daily_present_marked_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_block_level_daily_present_marked_max_fields
  min: idb_student_attendance_block_level_daily_present_marked_min_fields
  stddev: idb_student_attendance_block_level_daily_present_marked_stddev_fields
  stddev_pop: idb_student_attendance_block_level_daily_present_marked_stddev_pop_fields
  stddev_samp: idb_student_attendance_block_level_daily_present_marked_stddev_samp_fields
  sum: idb_student_attendance_block_level_daily_present_marked_sum_fields
  var_pop: idb_student_attendance_block_level_daily_present_marked_var_pop_fields
  var_samp: idb_student_attendance_block_level_daily_present_marked_var_samp_fields
  variance: idb_student_attendance_block_level_daily_present_marked_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_block_level_daily_present_marked_avg_fields {
  Present_Students: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_block_level_daily_present_marked". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_block_level_daily_present_marked_bool_exp {
  Present_Students: bigint_comparison_exp
  _and: [idb_student_attendance_block_level_daily_present_marked_bool_exp!]
  _not: idb_student_attendance_block_level_daily_present_marked_bool_exp
  _or: [idb_student_attendance_block_level_daily_present_marked_bool_exp!]
  block: String_comparison_exp
  concat: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_block_level_daily_present_marked"
"""
input idb_student_attendance_block_level_daily_present_marked_inc_input {
  Present_Students: bigint
}

"""
input type for inserting data into table "idb_student_attendance_block_level_daily_present_marked"
"""
input idb_student_attendance_block_level_daily_present_marked_insert_input {
  Present_Students: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""aggregate max on columns"""
type idb_student_attendance_block_level_daily_present_marked_max_fields {
  Present_Students: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""aggregate min on columns"""
type idb_student_attendance_block_level_daily_present_marked_min_fields {
  Present_Students: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""
response of any mutation on the table "idb_student_attendance_block_level_daily_present_marked"
"""
type idb_student_attendance_block_level_daily_present_marked_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_block_level_daily_present_marked!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_block_level_daily_present_marked".
"""
input idb_student_attendance_block_level_daily_present_marked_order_by {
  Present_Students: order_by
  block: order_by
  concat: order_by
  date: order_by
  district: order_by
}

"""
select columns of table "idb_student_attendance_block_level_daily_present_marked"
"""
enum idb_student_attendance_block_level_daily_present_marked_select_column {
  """column name"""
  Present_Students

  """column name"""
  block

  """column name"""
  concat

  """column name"""
  date

  """column name"""
  district
}

"""
input type for updating data in table "idb_student_attendance_block_level_daily_present_marked"
"""
input idb_student_attendance_block_level_daily_present_marked_set_input {
  Present_Students: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""aggregate stddev on columns"""
type idb_student_attendance_block_level_daily_present_marked_stddev_fields {
  Present_Students: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_block_level_daily_present_marked_stddev_pop_fields {
  Present_Students: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_block_level_daily_present_marked_stddev_samp_fields {
  Present_Students: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_block_level_daily_present_marked_sum_fields {
  Present_Students: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_block_level_daily_present_marked_var_pop_fields {
  Present_Students: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_block_level_daily_present_marked_var_samp_fields {
  Present_Students: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_block_level_daily_present_marked_variance_fields {
  Present_Students: Float
}

"""
columns and relationships of "idb_student_attendance_block_level_daily_total_marked"
"""
type idb_student_attendance_block_level_daily_total_marked {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""
aggregated selection of "idb_student_attendance_block_level_daily_total_marked"
"""
type idb_student_attendance_block_level_daily_total_marked_aggregate {
  aggregate: idb_student_attendance_block_level_daily_total_marked_aggregate_fields
  nodes: [idb_student_attendance_block_level_daily_total_marked!]!
}

"""
aggregate fields of "idb_student_attendance_block_level_daily_total_marked"
"""
type idb_student_attendance_block_level_daily_total_marked_aggregate_fields {
  avg: idb_student_attendance_block_level_daily_total_marked_avg_fields
  count(columns: [idb_student_attendance_block_level_daily_total_marked_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_block_level_daily_total_marked_max_fields
  min: idb_student_attendance_block_level_daily_total_marked_min_fields
  stddev: idb_student_attendance_block_level_daily_total_marked_stddev_fields
  stddev_pop: idb_student_attendance_block_level_daily_total_marked_stddev_pop_fields
  stddev_samp: idb_student_attendance_block_level_daily_total_marked_stddev_samp_fields
  sum: idb_student_attendance_block_level_daily_total_marked_sum_fields
  var_pop: idb_student_attendance_block_level_daily_total_marked_var_pop_fields
  var_samp: idb_student_attendance_block_level_daily_total_marked_var_samp_fields
  variance: idb_student_attendance_block_level_daily_total_marked_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_block_level_daily_total_marked_avg_fields {
  Data_Marked_For: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_block_level_daily_total_marked". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_block_level_daily_total_marked_bool_exp {
  Data_Marked_For: bigint_comparison_exp
  _and: [idb_student_attendance_block_level_daily_total_marked_bool_exp!]
  _not: idb_student_attendance_block_level_daily_total_marked_bool_exp
  _or: [idb_student_attendance_block_level_daily_total_marked_bool_exp!]
  block: String_comparison_exp
  concat: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_block_level_daily_total_marked"
"""
input idb_student_attendance_block_level_daily_total_marked_inc_input {
  Data_Marked_For: bigint
}

"""
input type for inserting data into table "idb_student_attendance_block_level_daily_total_marked"
"""
input idb_student_attendance_block_level_daily_total_marked_insert_input {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""aggregate max on columns"""
type idb_student_attendance_block_level_daily_total_marked_max_fields {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""aggregate min on columns"""
type idb_student_attendance_block_level_daily_total_marked_min_fields {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""
response of any mutation on the table "idb_student_attendance_block_level_daily_total_marked"
"""
type idb_student_attendance_block_level_daily_total_marked_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_block_level_daily_total_marked!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_block_level_daily_total_marked".
"""
input idb_student_attendance_block_level_daily_total_marked_order_by {
  Data_Marked_For: order_by
  block: order_by
  concat: order_by
  date: order_by
  district: order_by
}

"""
select columns of table "idb_student_attendance_block_level_daily_total_marked"
"""
enum idb_student_attendance_block_level_daily_total_marked_select_column {
  """column name"""
  Data_Marked_For

  """column name"""
  block

  """column name"""
  concat

  """column name"""
  date

  """column name"""
  district
}

"""
input type for updating data in table "idb_student_attendance_block_level_daily_total_marked"
"""
input idb_student_attendance_block_level_daily_total_marked_set_input {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
}

"""aggregate stddev on columns"""
type idb_student_attendance_block_level_daily_total_marked_stddev_fields {
  Data_Marked_For: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_block_level_daily_total_marked_stddev_pop_fields {
  Data_Marked_For: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_block_level_daily_total_marked_stddev_samp_fields {
  Data_Marked_For: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_block_level_daily_total_marked_sum_fields {
  Data_Marked_For: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_block_level_daily_total_marked_var_pop_fields {
  Data_Marked_For: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_block_level_daily_total_marked_var_samp_fields {
  Data_Marked_For: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_block_level_daily_total_marked_variance_fields {
  Data_Marked_For: Float
}

"""
columns and relationships of "idb_student_attendance_compliance_district_wise"
"""
type idb_student_attendance_compliance_district_wise {
  count: bigint
  date: date
  district: String
}

"""
aggregated selection of "idb_student_attendance_compliance_district_wise"
"""
type idb_student_attendance_compliance_district_wise_aggregate {
  aggregate: idb_student_attendance_compliance_district_wise_aggregate_fields
  nodes: [idb_student_attendance_compliance_district_wise!]!
}

"""
aggregate fields of "idb_student_attendance_compliance_district_wise"
"""
type idb_student_attendance_compliance_district_wise_aggregate_fields {
  avg: idb_student_attendance_compliance_district_wise_avg_fields
  count(columns: [idb_student_attendance_compliance_district_wise_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_compliance_district_wise_max_fields
  min: idb_student_attendance_compliance_district_wise_min_fields
  stddev: idb_student_attendance_compliance_district_wise_stddev_fields
  stddev_pop: idb_student_attendance_compliance_district_wise_stddev_pop_fields
  stddev_samp: idb_student_attendance_compliance_district_wise_stddev_samp_fields
  sum: idb_student_attendance_compliance_district_wise_sum_fields
  var_pop: idb_student_attendance_compliance_district_wise_var_pop_fields
  var_samp: idb_student_attendance_compliance_district_wise_var_samp_fields
  variance: idb_student_attendance_compliance_district_wise_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_compliance_district_wise_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_compliance_district_wise". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_compliance_district_wise_bool_exp {
  _and: [idb_student_attendance_compliance_district_wise_bool_exp!]
  _not: idb_student_attendance_compliance_district_wise_bool_exp
  _or: [idb_student_attendance_compliance_district_wise_bool_exp!]
  count: bigint_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
}

"""
columns and relationships of "idb_student_attendance_compliance_district_wise_final"
"""
type idb_student_attendance_compliance_district_wise_final {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
  date: date
  district: String
  district_2: String
}

"""
aggregated selection of "idb_student_attendance_compliance_district_wise_final"
"""
type idb_student_attendance_compliance_district_wise_final_aggregate {
  aggregate: idb_student_attendance_compliance_district_wise_final_aggregate_fields
  nodes: [idb_student_attendance_compliance_district_wise_final!]!
}

"""
aggregate fields of "idb_student_attendance_compliance_district_wise_final"
"""
type idb_student_attendance_compliance_district_wise_final_aggregate_fields {
  avg: idb_student_attendance_compliance_district_wise_final_avg_fields
  count(columns: [idb_student_attendance_compliance_district_wise_final_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_compliance_district_wise_final_max_fields
  min: idb_student_attendance_compliance_district_wise_final_min_fields
  stddev: idb_student_attendance_compliance_district_wise_final_stddev_fields
  stddev_pop: idb_student_attendance_compliance_district_wise_final_stddev_pop_fields
  stddev_samp: idb_student_attendance_compliance_district_wise_final_stddev_samp_fields
  sum: idb_student_attendance_compliance_district_wise_final_sum_fields
  var_pop: idb_student_attendance_compliance_district_wise_final_var_pop_fields
  var_samp: idb_student_attendance_compliance_district_wise_final_var_samp_fields
  variance: idb_student_attendance_compliance_district_wise_final_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_compliance_district_wise_final_avg_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_compliance_district_wise_final". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_compliance_district_wise_final_bool_exp {
  Percentage_of_Compliant_Schools: float8_comparison_exp
  _and: [idb_student_attendance_compliance_district_wise_final_bool_exp!]
  _not: idb_student_attendance_compliance_district_wise_final_bool_exp
  _or: [idb_student_attendance_compliance_district_wise_final_bool_exp!]
  count: bigint_comparison_exp
  count_2: bigint_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  district_2: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_compliance_district_wise_final"
"""
input idb_student_attendance_compliance_district_wise_final_inc_input {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
}

"""
input type for inserting data into table "idb_student_attendance_compliance_district_wise_final"
"""
input idb_student_attendance_compliance_district_wise_final_insert_input {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
  date: date
  district: String
  district_2: String
}

"""aggregate max on columns"""
type idb_student_attendance_compliance_district_wise_final_max_fields {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
  date: date
  district: String
  district_2: String
}

"""aggregate min on columns"""
type idb_student_attendance_compliance_district_wise_final_min_fields {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
  date: date
  district: String
  district_2: String
}

"""
response of any mutation on the table "idb_student_attendance_compliance_district_wise_final"
"""
type idb_student_attendance_compliance_district_wise_final_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_compliance_district_wise_final!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_compliance_district_wise_final".
"""
input idb_student_attendance_compliance_district_wise_final_order_by {
  Percentage_of_Compliant_Schools: order_by
  count: order_by
  count_2: order_by
  date: order_by
  district: order_by
  district_2: order_by
}

"""
select columns of table "idb_student_attendance_compliance_district_wise_final"
"""
enum idb_student_attendance_compliance_district_wise_final_select_column {
  """column name"""
  Percentage_of_Compliant_Schools

  """column name"""
  count

  """column name"""
  count_2

  """column name"""
  date

  """column name"""
  district

  """column name"""
  district_2
}

"""
input type for updating data in table "idb_student_attendance_compliance_district_wise_final"
"""
input idb_student_attendance_compliance_district_wise_final_set_input {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
  date: date
  district: String
  district_2: String
}

"""aggregate stddev on columns"""
type idb_student_attendance_compliance_district_wise_final_stddev_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_compliance_district_wise_final_stddev_pop_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_compliance_district_wise_final_stddev_samp_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_compliance_district_wise_final_sum_fields {
  Percentage_of_Compliant_Schools: float8
  count: bigint
  count_2: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_compliance_district_wise_final_var_pop_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_compliance_district_wise_final_var_samp_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_compliance_district_wise_final_variance_fields {
  Percentage_of_Compliant_Schools: Float
  count: Float
  count_2: Float
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_compliance_district_wise"
"""
input idb_student_attendance_compliance_district_wise_inc_input {
  count: bigint
}

"""
input type for inserting data into table "idb_student_attendance_compliance_district_wise"
"""
input idb_student_attendance_compliance_district_wise_insert_input {
  count: bigint
  date: date
  district: String
}

"""aggregate max on columns"""
type idb_student_attendance_compliance_district_wise_max_fields {
  count: bigint
  date: date
  district: String
}

"""aggregate min on columns"""
type idb_student_attendance_compliance_district_wise_min_fields {
  count: bigint
  date: date
  district: String
}

"""
response of any mutation on the table "idb_student_attendance_compliance_district_wise"
"""
type idb_student_attendance_compliance_district_wise_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_compliance_district_wise!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_compliance_district_wise".
"""
input idb_student_attendance_compliance_district_wise_order_by {
  count: order_by
  date: order_by
  district: order_by
}

"""
select columns of table "idb_student_attendance_compliance_district_wise"
"""
enum idb_student_attendance_compliance_district_wise_select_column {
  """column name"""
  count

  """column name"""
  date

  """column name"""
  district
}

"""
input type for updating data in table "idb_student_attendance_compliance_district_wise"
"""
input idb_student_attendance_compliance_district_wise_set_input {
  count: bigint
  date: date
  district: String
}

"""aggregate stddev on columns"""
type idb_student_attendance_compliance_district_wise_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_compliance_district_wise_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_compliance_district_wise_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_compliance_district_wise_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_compliance_district_wise_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_compliance_district_wise_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_compliance_district_wise_variance_fields {
  count: Float
}

"""
columns and relationships of "idb_student_attendance_compliance_school_wise"
"""
type idb_student_attendance_compliance_school_wise {
  block: String
  count: bigint
  date: date
  district: String
  name_2: String
  udise: Int
}

"""
aggregated selection of "idb_student_attendance_compliance_school_wise"
"""
type idb_student_attendance_compliance_school_wise_aggregate {
  aggregate: idb_student_attendance_compliance_school_wise_aggregate_fields
  nodes: [idb_student_attendance_compliance_school_wise!]!
}

"""
aggregate fields of "idb_student_attendance_compliance_school_wise"
"""
type idb_student_attendance_compliance_school_wise_aggregate_fields {
  avg: idb_student_attendance_compliance_school_wise_avg_fields
  count(columns: [idb_student_attendance_compliance_school_wise_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_compliance_school_wise_max_fields
  min: idb_student_attendance_compliance_school_wise_min_fields
  stddev: idb_student_attendance_compliance_school_wise_stddev_fields
  stddev_pop: idb_student_attendance_compliance_school_wise_stddev_pop_fields
  stddev_samp: idb_student_attendance_compliance_school_wise_stddev_samp_fields
  sum: idb_student_attendance_compliance_school_wise_sum_fields
  var_pop: idb_student_attendance_compliance_school_wise_var_pop_fields
  var_samp: idb_student_attendance_compliance_school_wise_var_samp_fields
  variance: idb_student_attendance_compliance_school_wise_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_compliance_school_wise_avg_fields {
  count: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_compliance_school_wise". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_compliance_school_wise_bool_exp {
  _and: [idb_student_attendance_compliance_school_wise_bool_exp!]
  _not: idb_student_attendance_compliance_school_wise_bool_exp
  _or: [idb_student_attendance_compliance_school_wise_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  name_2: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_compliance_school_wise"
"""
input idb_student_attendance_compliance_school_wise_inc_input {
  count: bigint
  udise: Int
}

"""
input type for inserting data into table "idb_student_attendance_compliance_school_wise"
"""
input idb_student_attendance_compliance_school_wise_insert_input {
  block: String
  count: bigint
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate max on columns"""
type idb_student_attendance_compliance_school_wise_max_fields {
  block: String
  count: bigint
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate min on columns"""
type idb_student_attendance_compliance_school_wise_min_fields {
  block: String
  count: bigint
  date: date
  district: String
  name_2: String
  udise: Int
}

"""
response of any mutation on the table "idb_student_attendance_compliance_school_wise"
"""
type idb_student_attendance_compliance_school_wise_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_compliance_school_wise!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_compliance_school_wise".
"""
input idb_student_attendance_compliance_school_wise_order_by {
  block: order_by
  count: order_by
  date: order_by
  district: order_by
  name_2: order_by
  udise: order_by
}

"""
select columns of table "idb_student_attendance_compliance_school_wise"
"""
enum idb_student_attendance_compliance_school_wise_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  date

  """column name"""
  district

  """column name"""
  name_2

  """column name"""
  udise
}

"""
input type for updating data in table "idb_student_attendance_compliance_school_wise"
"""
input idb_student_attendance_compliance_school_wise_set_input {
  block: String
  count: bigint
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate stddev on columns"""
type idb_student_attendance_compliance_school_wise_stddev_fields {
  count: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_compliance_school_wise_stddev_pop_fields {
  count: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_compliance_school_wise_stddev_samp_fields {
  count: Float
  udise: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_compliance_school_wise_sum_fields {
  count: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type idb_student_attendance_compliance_school_wise_var_pop_fields {
  count: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_compliance_school_wise_var_samp_fields {
  count: Float
  udise: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_compliance_school_wise_variance_fields {
  count: Float
  udise: Float
}

"""
columns and relationships of "idb_student_attendance_district_final"
"""
type idb_student_attendance_district_final {
  coalesce: bigint
  concat: String
  concat_2: String
  date: date
  date_2: date
  district: String
  district_2: String
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""
aggregated selection of "idb_student_attendance_district_final"
"""
type idb_student_attendance_district_final_aggregate {
  aggregate: idb_student_attendance_district_final_aggregate_fields
  nodes: [idb_student_attendance_district_final!]!
}

"""
aggregate fields of "idb_student_attendance_district_final"
"""
type idb_student_attendance_district_final_aggregate_fields {
  avg: idb_student_attendance_district_final_avg_fields
  count(columns: [idb_student_attendance_district_final_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_district_final_max_fields
  min: idb_student_attendance_district_final_min_fields
  stddev: idb_student_attendance_district_final_stddev_fields
  stddev_pop: idb_student_attendance_district_final_stddev_pop_fields
  stddev_samp: idb_student_attendance_district_final_stddev_samp_fields
  sum: idb_student_attendance_district_final_sum_fields
  var_pop: idb_student_attendance_district_final_var_pop_fields
  var_samp: idb_student_attendance_district_final_var_samp_fields
  variance: idb_student_attendance_district_final_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_district_final_avg_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_district_final". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_district_final_bool_exp {
  _and: [idb_student_attendance_district_final_bool_exp!]
  _not: idb_student_attendance_district_final_bool_exp
  _or: [idb_student_attendance_district_final_bool_exp!]
  coalesce: bigint_comparison_exp
  concat: String_comparison_exp
  concat_2: String_comparison_exp
  date: date_comparison_exp
  date_2: date_comparison_exp
  district: String_comparison_exp
  district_2: String_comparison_exp
  fr: float8_comparison_exp
  grade_number: Int_comparison_exp
  grade_number_2: Int_comparison_exp
  totalindistrict: bigint_comparison_exp
}

"""
columns and relationships of "idb_student_attendance_district_final_enrolment"
"""
type idb_student_attendance_district_final_enrolment {
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  district_2: String
  totalmarked: numeric
  totalpresent: numeric
}

"""
aggregated selection of "idb_student_attendance_district_final_enrolment"
"""
type idb_student_attendance_district_final_enrolment_aggregate {
  aggregate: idb_student_attendance_district_final_enrolment_aggregate_fields
  nodes: [idb_student_attendance_district_final_enrolment!]!
}

"""
aggregate fields of "idb_student_attendance_district_final_enrolment"
"""
type idb_student_attendance_district_final_enrolment_aggregate_fields {
  avg: idb_student_attendance_district_final_enrolment_avg_fields
  count(columns: [idb_student_attendance_district_final_enrolment_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_district_final_enrolment_max_fields
  min: idb_student_attendance_district_final_enrolment_min_fields
  stddev: idb_student_attendance_district_final_enrolment_stddev_fields
  stddev_pop: idb_student_attendance_district_final_enrolment_stddev_pop_fields
  stddev_samp: idb_student_attendance_district_final_enrolment_stddev_samp_fields
  sum: idb_student_attendance_district_final_enrolment_sum_fields
  var_pop: idb_student_attendance_district_final_enrolment_var_pop_fields
  var_samp: idb_student_attendance_district_final_enrolment_var_samp_fields
  variance: idb_student_attendance_district_final_enrolment_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_district_final_enrolment_avg_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_district_final_enrolment". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_district_final_enrolment_bool_exp {
  Number_of_Students_Enrolled: bigint_comparison_exp
  _and: [idb_student_attendance_district_final_enrolment_bool_exp!]
  _not: idb_student_attendance_district_final_enrolment_bool_exp
  _or: [idb_student_attendance_district_final_enrolment_bool_exp!]
  date: date_comparison_exp
  district: String_comparison_exp
  district_2: String_comparison_exp
  totalmarked: numeric_comparison_exp
  totalpresent: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_district_final_enrolment"
"""
input idb_student_attendance_district_final_enrolment_inc_input {
  Number_of_Students_Enrolled: bigint
  totalmarked: numeric
  totalpresent: numeric
}

"""
input type for inserting data into table "idb_student_attendance_district_final_enrolment"
"""
input idb_student_attendance_district_final_enrolment_insert_input {
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  district_2: String
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate max on columns"""
type idb_student_attendance_district_final_enrolment_max_fields {
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  district_2: String
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate min on columns"""
type idb_student_attendance_district_final_enrolment_min_fields {
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  district_2: String
  totalmarked: numeric
  totalpresent: numeric
}

"""
response of any mutation on the table "idb_student_attendance_district_final_enrolment"
"""
type idb_student_attendance_district_final_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_district_final_enrolment!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_district_final_enrolment".
"""
input idb_student_attendance_district_final_enrolment_order_by {
  Number_of_Students_Enrolled: order_by
  date: order_by
  district: order_by
  district_2: order_by
  totalmarked: order_by
  totalpresent: order_by
}

"""
select columns of table "idb_student_attendance_district_final_enrolment"
"""
enum idb_student_attendance_district_final_enrolment_select_column {
  """column name"""
  Number_of_Students_Enrolled

  """column name"""
  date

  """column name"""
  district

  """column name"""
  district_2

  """column name"""
  totalmarked

  """column name"""
  totalpresent
}

"""
input type for updating data in table "idb_student_attendance_district_final_enrolment"
"""
input idb_student_attendance_district_final_enrolment_set_input {
  Number_of_Students_Enrolled: bigint
  date: date
  district: String
  district_2: String
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate stddev on columns"""
type idb_student_attendance_district_final_enrolment_stddev_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_district_final_enrolment_stddev_pop_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_district_final_enrolment_stddev_samp_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_district_final_enrolment_sum_fields {
  Number_of_Students_Enrolled: bigint
  totalmarked: numeric
  totalpresent: numeric
}

"""aggregate var_pop on columns"""
type idb_student_attendance_district_final_enrolment_var_pop_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_district_final_enrolment_var_samp_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_district_final_enrolment_variance_fields {
  Number_of_Students_Enrolled: Float
  totalmarked: Float
  totalpresent: Float
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_district_final"
"""
input idb_student_attendance_district_final_inc_input {
  coalesce: bigint
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""
input type for inserting data into table "idb_student_attendance_district_final"
"""
input idb_student_attendance_district_final_insert_input {
  coalesce: bigint
  concat: String
  concat_2: String
  date: date
  date_2: date
  district: String
  district_2: String
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_district_final_max_fields {
  coalesce: bigint
  concat: String
  concat_2: String
  date: date
  date_2: date
  district: String
  district_2: String
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_district_final_min_fields {
  coalesce: bigint
  concat: String
  concat_2: String
  date: date
  date_2: date
  district: String
  district_2: String
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""
response of any mutation on the table "idb_student_attendance_district_final"
"""
type idb_student_attendance_district_final_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_district_final!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_district_final".
"""
input idb_student_attendance_district_final_order_by {
  coalesce: order_by
  concat: order_by
  concat_2: order_by
  date: order_by
  date_2: order_by
  district: order_by
  district_2: order_by
  fr: order_by
  grade_number: order_by
  grade_number_2: order_by
  totalindistrict: order_by
}

"""
select columns of table "idb_student_attendance_district_final"
"""
enum idb_student_attendance_district_final_select_column {
  """column name"""
  coalesce

  """column name"""
  concat

  """column name"""
  concat_2

  """column name"""
  date

  """column name"""
  date_2

  """column name"""
  district

  """column name"""
  district_2

  """column name"""
  fr

  """column name"""
  grade_number

  """column name"""
  grade_number_2

  """column name"""
  totalindistrict
}

"""
input type for updating data in table "idb_student_attendance_district_final"
"""
input idb_student_attendance_district_final_set_input {
  coalesce: bigint
  concat: String
  concat_2: String
  date: date
  date_2: date
  district: String
  district_2: String
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_district_final_stddev_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_district_final_stddev_pop_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_district_final_stddev_samp_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_district_final_sum_fields {
  coalesce: bigint
  fr: float8
  grade_number: Int
  grade_number_2: Int
  totalindistrict: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_district_final_var_pop_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_district_final_var_samp_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_district_final_variance_fields {
  coalesce: Float
  fr: Float
  grade_number: Float
  grade_number_2: Float
  totalindistrict: Float
}

"""
columns and relationships of "idb_student_attendance_district_present_marked_by_date"
"""
type idb_student_attendance_district_present_marked_by_date {
  concat: String
  date: date
  district: String
  grade_number: Int
  resent: bigint
}

"""
aggregated selection of "idb_student_attendance_district_present_marked_by_date"
"""
type idb_student_attendance_district_present_marked_by_date_aggregate {
  aggregate: idb_student_attendance_district_present_marked_by_date_aggregate_fields
  nodes: [idb_student_attendance_district_present_marked_by_date!]!
}

"""
aggregate fields of "idb_student_attendance_district_present_marked_by_date"
"""
type idb_student_attendance_district_present_marked_by_date_aggregate_fields {
  avg: idb_student_attendance_district_present_marked_by_date_avg_fields
  count(columns: [idb_student_attendance_district_present_marked_by_date_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_district_present_marked_by_date_max_fields
  min: idb_student_attendance_district_present_marked_by_date_min_fields
  stddev: idb_student_attendance_district_present_marked_by_date_stddev_fields
  stddev_pop: idb_student_attendance_district_present_marked_by_date_stddev_pop_fields
  stddev_samp: idb_student_attendance_district_present_marked_by_date_stddev_samp_fields
  sum: idb_student_attendance_district_present_marked_by_date_sum_fields
  var_pop: idb_student_attendance_district_present_marked_by_date_var_pop_fields
  var_samp: idb_student_attendance_district_present_marked_by_date_var_samp_fields
  variance: idb_student_attendance_district_present_marked_by_date_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_district_present_marked_by_date_avg_fields {
  grade_number: Float
  resent: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_district_present_marked_by_date". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_district_present_marked_by_date_bool_exp {
  _and: [idb_student_attendance_district_present_marked_by_date_bool_exp!]
  _not: idb_student_attendance_district_present_marked_by_date_bool_exp
  _or: [idb_student_attendance_district_present_marked_by_date_bool_exp!]
  concat: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  grade_number: Int_comparison_exp
  resent: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_district_present_marked_by_date"
"""
input idb_student_attendance_district_present_marked_by_date_inc_input {
  grade_number: Int
  resent: bigint
}

"""
input type for inserting data into table "idb_student_attendance_district_present_marked_by_date"
"""
input idb_student_attendance_district_present_marked_by_date_insert_input {
  concat: String
  date: date
  district: String
  grade_number: Int
  resent: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_district_present_marked_by_date_max_fields {
  concat: String
  date: date
  district: String
  grade_number: Int
  resent: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_district_present_marked_by_date_min_fields {
  concat: String
  date: date
  district: String
  grade_number: Int
  resent: bigint
}

"""
response of any mutation on the table "idb_student_attendance_district_present_marked_by_date"
"""
type idb_student_attendance_district_present_marked_by_date_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_district_present_marked_by_date!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_district_present_marked_by_date".
"""
input idb_student_attendance_district_present_marked_by_date_order_by {
  concat: order_by
  date: order_by
  district: order_by
  grade_number: order_by
  resent: order_by
}

"""
select columns of table "idb_student_attendance_district_present_marked_by_date"
"""
enum idb_student_attendance_district_present_marked_by_date_select_column {
  """column name"""
  concat

  """column name"""
  date

  """column name"""
  district

  """column name"""
  grade_number

  """column name"""
  resent
}

"""
input type for updating data in table "idb_student_attendance_district_present_marked_by_date"
"""
input idb_student_attendance_district_present_marked_by_date_set_input {
  concat: String
  date: date
  district: String
  grade_number: Int
  resent: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_district_present_marked_by_date_stddev_fields {
  grade_number: Float
  resent: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_district_present_marked_by_date_stddev_pop_fields {
  grade_number: Float
  resent: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_district_present_marked_by_date_stddev_samp_fields {
  grade_number: Float
  resent: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_district_present_marked_by_date_sum_fields {
  grade_number: Int
  resent: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_district_present_marked_by_date_var_pop_fields {
  grade_number: Float
  resent: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_district_present_marked_by_date_var_samp_fields {
  grade_number: Float
  resent: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_district_present_marked_by_date_variance_fields {
  grade_number: Float
  resent: Float
}

"""
columns and relationships of "idb_student_attendance_district_total_marked_by_date"
"""
type idb_student_attendance_district_total_marked_by_date {
  concat: String
  date: date
  district: String
  grade_number: Int
  totalindistrict: bigint
}

"""
aggregated selection of "idb_student_attendance_district_total_marked_by_date"
"""
type idb_student_attendance_district_total_marked_by_date_aggregate {
  aggregate: idb_student_attendance_district_total_marked_by_date_aggregate_fields
  nodes: [idb_student_attendance_district_total_marked_by_date!]!
}

"""
aggregate fields of "idb_student_attendance_district_total_marked_by_date"
"""
type idb_student_attendance_district_total_marked_by_date_aggregate_fields {
  avg: idb_student_attendance_district_total_marked_by_date_avg_fields
  count(columns: [idb_student_attendance_district_total_marked_by_date_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_district_total_marked_by_date_max_fields
  min: idb_student_attendance_district_total_marked_by_date_min_fields
  stddev: idb_student_attendance_district_total_marked_by_date_stddev_fields
  stddev_pop: idb_student_attendance_district_total_marked_by_date_stddev_pop_fields
  stddev_samp: idb_student_attendance_district_total_marked_by_date_stddev_samp_fields
  sum: idb_student_attendance_district_total_marked_by_date_sum_fields
  var_pop: idb_student_attendance_district_total_marked_by_date_var_pop_fields
  var_samp: idb_student_attendance_district_total_marked_by_date_var_samp_fields
  variance: idb_student_attendance_district_total_marked_by_date_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_district_total_marked_by_date_avg_fields {
  grade_number: Float
  totalindistrict: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_district_total_marked_by_date". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_district_total_marked_by_date_bool_exp {
  _and: [idb_student_attendance_district_total_marked_by_date_bool_exp!]
  _not: idb_student_attendance_district_total_marked_by_date_bool_exp
  _or: [idb_student_attendance_district_total_marked_by_date_bool_exp!]
  concat: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  grade_number: Int_comparison_exp
  totalindistrict: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_district_total_marked_by_date"
"""
input idb_student_attendance_district_total_marked_by_date_inc_input {
  grade_number: Int
  totalindistrict: bigint
}

"""
input type for inserting data into table "idb_student_attendance_district_total_marked_by_date"
"""
input idb_student_attendance_district_total_marked_by_date_insert_input {
  concat: String
  date: date
  district: String
  grade_number: Int
  totalindistrict: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_district_total_marked_by_date_max_fields {
  concat: String
  date: date
  district: String
  grade_number: Int
  totalindistrict: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_district_total_marked_by_date_min_fields {
  concat: String
  date: date
  district: String
  grade_number: Int
  totalindistrict: bigint
}

"""
response of any mutation on the table "idb_student_attendance_district_total_marked_by_date"
"""
type idb_student_attendance_district_total_marked_by_date_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_district_total_marked_by_date!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_district_total_marked_by_date".
"""
input idb_student_attendance_district_total_marked_by_date_order_by {
  concat: order_by
  date: order_by
  district: order_by
  grade_number: order_by
  totalindistrict: order_by
}

"""
select columns of table "idb_student_attendance_district_total_marked_by_date"
"""
enum idb_student_attendance_district_total_marked_by_date_select_column {
  """column name"""
  concat

  """column name"""
  date

  """column name"""
  district

  """column name"""
  grade_number

  """column name"""
  totalindistrict
}

"""
input type for updating data in table "idb_student_attendance_district_total_marked_by_date"
"""
input idb_student_attendance_district_total_marked_by_date_set_input {
  concat: String
  date: date
  district: String
  grade_number: Int
  totalindistrict: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_district_total_marked_by_date_stddev_fields {
  grade_number: Float
  totalindistrict: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_district_total_marked_by_date_stddev_pop_fields {
  grade_number: Float
  totalindistrict: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_district_total_marked_by_date_stddev_samp_fields {
  grade_number: Float
  totalindistrict: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_district_total_marked_by_date_sum_fields {
  grade_number: Int
  totalindistrict: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_district_total_marked_by_date_var_pop_fields {
  grade_number: Float
  totalindistrict: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_district_total_marked_by_date_var_samp_fields {
  grade_number: Float
  totalindistrict: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_district_total_marked_by_date_variance_fields {
  grade_number: Float
  totalindistrict: Float
}

"""
columns and relationships of "idb_student_attendance_final_grade_wise_with_enrolment"
"""
type idb_student_attendance_final_grade_wise_with_enrolment {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  date: date
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""
aggregated selection of "idb_student_attendance_final_grade_wise_with_enrolment"
"""
type idb_student_attendance_final_grade_wise_with_enrolment_aggregate {
  aggregate: idb_student_attendance_final_grade_wise_with_enrolment_aggregate_fields
  nodes: [idb_student_attendance_final_grade_wise_with_enrolment!]!
}

"""
aggregate fields of "idb_student_attendance_final_grade_wise_with_enrolment"
"""
type idb_student_attendance_final_grade_wise_with_enrolment_aggregate_fields {
  avg: idb_student_attendance_final_grade_wise_with_enrolment_avg_fields
  count(columns: [idb_student_attendance_final_grade_wise_with_enrolment_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_final_grade_wise_with_enrolment_max_fields
  min: idb_student_attendance_final_grade_wise_with_enrolment_min_fields
  stddev: idb_student_attendance_final_grade_wise_with_enrolment_stddev_fields
  stddev_pop: idb_student_attendance_final_grade_wise_with_enrolment_stddev_pop_fields
  stddev_samp: idb_student_attendance_final_grade_wise_with_enrolment_stddev_samp_fields
  sum: idb_student_attendance_final_grade_wise_with_enrolment_sum_fields
  var_pop: idb_student_attendance_final_grade_wise_with_enrolment_var_pop_fields
  var_samp: idb_student_attendance_final_grade_wise_with_enrolment_var_samp_fields
  variance: idb_student_attendance_final_grade_wise_with_enrolment_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_avg_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_final_grade_wise_with_enrolment". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_final_grade_wise_with_enrolment_bool_exp {
  Data_Marked_for_Percentage: float8_comparison_exp
  Number_of_Students: bigint_comparison_exp
  Percentage: float8_comparison_exp
  _and: [idb_student_attendance_final_grade_wise_with_enrolment_bool_exp!]
  _not: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp
  _or: [idb_student_attendance_final_grade_wise_with_enrolment_bool_exp!]
  date: date_comparison_exp
  grade_number: Int_comparison_exp
  present_students: bigint_comparison_exp
  total_students: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_final_grade_wise_with_enrolment"
"""
input idb_student_attendance_final_grade_wise_with_enrolment_inc_input {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""
input type for inserting data into table "idb_student_attendance_final_grade_wise_with_enrolment"
"""
input idb_student_attendance_final_grade_wise_with_enrolment_insert_input {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  date: date
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""aggregate max on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_max_fields {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  date: date
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""aggregate min on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_min_fields {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  date: date
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""
response of any mutation on the table "idb_student_attendance_final_grade_wise_with_enrolment"
"""
type idb_student_attendance_final_grade_wise_with_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_final_grade_wise_with_enrolment!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_final_grade_wise_with_enrolment".
"""
input idb_student_attendance_final_grade_wise_with_enrolment_order_by {
  Data_Marked_for_Percentage: order_by
  Number_of_Students: order_by
  Percentage: order_by
  date: order_by
  grade_number: order_by
  present_students: order_by
  total_students: order_by
}

"""
select columns of table "idb_student_attendance_final_grade_wise_with_enrolment"
"""
enum idb_student_attendance_final_grade_wise_with_enrolment_select_column {
  """column name"""
  Data_Marked_for_Percentage

  """column name"""
  Number_of_Students

  """column name"""
  Percentage

  """column name"""
  date

  """column name"""
  grade_number

  """column name"""
  present_students

  """column name"""
  total_students
}

"""
input type for updating data in table "idb_student_attendance_final_grade_wise_with_enrolment"
"""
input idb_student_attendance_final_grade_wise_with_enrolment_set_input {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  date: date
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""aggregate stddev on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_stddev_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_stddev_pop_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_stddev_samp_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_sum_fields {
  Data_Marked_for_Percentage: float8
  Number_of_Students: bigint
  Percentage: float8
  grade_number: Int
  present_students: bigint
  total_students: bigint
}

"""aggregate var_pop on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_var_pop_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_var_samp_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_final_grade_wise_with_enrolment_variance_fields {
  Data_Marked_for_Percentage: Float
  Number_of_Students: Float
  Percentage: Float
  grade_number: Float
  present_students: Float
  total_students: Float
}

"""
columns and relationships of "idb_student_attendance_present_school_wise"
"""
type idb_student_attendance_present_school_wise {
  attendance: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""
aggregated selection of "idb_student_attendance_present_school_wise"
"""
type idb_student_attendance_present_school_wise_aggregate {
  aggregate: idb_student_attendance_present_school_wise_aggregate_fields
  nodes: [idb_student_attendance_present_school_wise!]!
}

"""
aggregate fields of "idb_student_attendance_present_school_wise"
"""
type idb_student_attendance_present_school_wise_aggregate_fields {
  avg: idb_student_attendance_present_school_wise_avg_fields
  count(columns: [idb_student_attendance_present_school_wise_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_present_school_wise_max_fields
  min: idb_student_attendance_present_school_wise_min_fields
  stddev: idb_student_attendance_present_school_wise_stddev_fields
  stddev_pop: idb_student_attendance_present_school_wise_stddev_pop_fields
  stddev_samp: idb_student_attendance_present_school_wise_stddev_samp_fields
  sum: idb_student_attendance_present_school_wise_sum_fields
  var_pop: idb_student_attendance_present_school_wise_var_pop_fields
  var_samp: idb_student_attendance_present_school_wise_var_samp_fields
  variance: idb_student_attendance_present_school_wise_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_present_school_wise_avg_fields {
  attendance: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_present_school_wise". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_present_school_wise_bool_exp {
  _and: [idb_student_attendance_present_school_wise_bool_exp!]
  _not: idb_student_attendance_present_school_wise_bool_exp
  _or: [idb_student_attendance_present_school_wise_bool_exp!]
  attendance: bigint_comparison_exp
  block: String_comparison_exp
  concat: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  name_2: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_present_school_wise"
"""
input idb_student_attendance_present_school_wise_inc_input {
  attendance: bigint
  udise: Int
}

"""
input type for inserting data into table "idb_student_attendance_present_school_wise"
"""
input idb_student_attendance_present_school_wise_insert_input {
  attendance: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate max on columns"""
type idb_student_attendance_present_school_wise_max_fields {
  attendance: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate min on columns"""
type idb_student_attendance_present_school_wise_min_fields {
  attendance: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""
response of any mutation on the table "idb_student_attendance_present_school_wise"
"""
type idb_student_attendance_present_school_wise_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_present_school_wise!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_present_school_wise".
"""
input idb_student_attendance_present_school_wise_order_by {
  attendance: order_by
  block: order_by
  concat: order_by
  date: order_by
  district: order_by
  name_2: order_by
  udise: order_by
}

"""
select columns of table "idb_student_attendance_present_school_wise"
"""
enum idb_student_attendance_present_school_wise_select_column {
  """column name"""
  attendance

  """column name"""
  block

  """column name"""
  concat

  """column name"""
  date

  """column name"""
  district

  """column name"""
  name_2

  """column name"""
  udise
}

"""
input type for updating data in table "idb_student_attendance_present_school_wise"
"""
input idb_student_attendance_present_school_wise_set_input {
  attendance: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate stddev on columns"""
type idb_student_attendance_present_school_wise_stddev_fields {
  attendance: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_present_school_wise_stddev_pop_fields {
  attendance: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_present_school_wise_stddev_samp_fields {
  attendance: Float
  udise: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_present_school_wise_sum_fields {
  attendance: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type idb_student_attendance_present_school_wise_var_pop_fields {
  attendance: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_present_school_wise_var_samp_fields {
  attendance: Float
  udise: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_present_school_wise_variance_fields {
  attendance: Float
  udise: Float
}

"""
columns and relationships of "idb_student_attendance_school_wise_final"
"""
type idb_student_attendance_school_wise_final {
  Block: String
  Data_Marked_For: bigint
  Date: date
  District: String
  School_Name: String
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""
aggregated selection of "idb_student_attendance_school_wise_final"
"""
type idb_student_attendance_school_wise_final_aggregate {
  aggregate: idb_student_attendance_school_wise_final_aggregate_fields
  nodes: [idb_student_attendance_school_wise_final!]!
}

"""
aggregate fields of "idb_student_attendance_school_wise_final"
"""
type idb_student_attendance_school_wise_final_aggregate_fields {
  avg: idb_student_attendance_school_wise_final_avg_fields
  count(columns: [idb_student_attendance_school_wise_final_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_school_wise_final_max_fields
  min: idb_student_attendance_school_wise_final_min_fields
  stddev: idb_student_attendance_school_wise_final_stddev_fields
  stddev_pop: idb_student_attendance_school_wise_final_stddev_pop_fields
  stddev_samp: idb_student_attendance_school_wise_final_stddev_samp_fields
  sum: idb_student_attendance_school_wise_final_sum_fields
  var_pop: idb_student_attendance_school_wise_final_var_pop_fields
  var_samp: idb_student_attendance_school_wise_final_var_samp_fields
  variance: idb_student_attendance_school_wise_final_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_school_wise_final_avg_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_school_wise_final". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_school_wise_final_bool_exp {
  Block: String_comparison_exp
  Data_Marked_For: bigint_comparison_exp
  Date: date_comparison_exp
  District: String_comparison_exp
  School_Name: String_comparison_exp
  UDISE: Int_comparison_exp
  _and: [idb_student_attendance_school_wise_final_bool_exp!]
  _not: idb_student_attendance_school_wise_final_bool_exp
  _or: [idb_student_attendance_school_wise_final_bool_exp!]
  attendance: bigint_comparison_exp
  nh: float8_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_school_wise_final"
"""
input idb_student_attendance_school_wise_final_inc_input {
  Data_Marked_For: bigint
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""
input type for inserting data into table "idb_student_attendance_school_wise_final"
"""
input idb_student_attendance_school_wise_final_insert_input {
  Block: String
  Data_Marked_For: bigint
  Date: date
  District: String
  School_Name: String
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""aggregate max on columns"""
type idb_student_attendance_school_wise_final_max_fields {
  Block: String
  Data_Marked_For: bigint
  Date: date
  District: String
  School_Name: String
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""aggregate min on columns"""
type idb_student_attendance_school_wise_final_min_fields {
  Block: String
  Data_Marked_For: bigint
  Date: date
  District: String
  School_Name: String
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""
response of any mutation on the table "idb_student_attendance_school_wise_final"
"""
type idb_student_attendance_school_wise_final_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_school_wise_final!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_school_wise_final".
"""
input idb_student_attendance_school_wise_final_order_by {
  Block: order_by
  Data_Marked_For: order_by
  Date: order_by
  District: order_by
  School_Name: order_by
  UDISE: order_by
  attendance: order_by
  nh: order_by
}

"""
select columns of table "idb_student_attendance_school_wise_final"
"""
enum idb_student_attendance_school_wise_final_select_column {
  """column name"""
  Block

  """column name"""
  Data_Marked_For

  """column name"""
  Date

  """column name"""
  District

  """column name"""
  School_Name

  """column name"""
  UDISE

  """column name"""
  attendance

  """column name"""
  nh
}

"""
input type for updating data in table "idb_student_attendance_school_wise_final"
"""
input idb_student_attendance_school_wise_final_set_input {
  Block: String
  Data_Marked_For: bigint
  Date: date
  District: String
  School_Name: String
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""aggregate stddev on columns"""
type idb_student_attendance_school_wise_final_stddev_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_school_wise_final_stddev_pop_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_school_wise_final_stddev_samp_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_school_wise_final_sum_fields {
  Data_Marked_For: bigint
  UDISE: Int
  attendance: bigint
  nh: float8
}

"""aggregate var_pop on columns"""
type idb_student_attendance_school_wise_final_var_pop_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_school_wise_final_var_samp_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_school_wise_final_variance_fields {
  Data_Marked_For: Float
  UDISE: Float
  attendance: Float
  nh: Float
}

"""
columns and relationships of "idb_student_attendance_total_school_wise"
"""
type idb_student_attendance_total_school_wise {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""
aggregated selection of "idb_student_attendance_total_school_wise"
"""
type idb_student_attendance_total_school_wise_aggregate {
  aggregate: idb_student_attendance_total_school_wise_aggregate_fields
  nodes: [idb_student_attendance_total_school_wise!]!
}

"""
aggregate fields of "idb_student_attendance_total_school_wise"
"""
type idb_student_attendance_total_school_wise_aggregate_fields {
  avg: idb_student_attendance_total_school_wise_avg_fields
  count(columns: [idb_student_attendance_total_school_wise_select_column!], distinct: Boolean): Int!
  max: idb_student_attendance_total_school_wise_max_fields
  min: idb_student_attendance_total_school_wise_min_fields
  stddev: idb_student_attendance_total_school_wise_stddev_fields
  stddev_pop: idb_student_attendance_total_school_wise_stddev_pop_fields
  stddev_samp: idb_student_attendance_total_school_wise_stddev_samp_fields
  sum: idb_student_attendance_total_school_wise_sum_fields
  var_pop: idb_student_attendance_total_school_wise_var_pop_fields
  var_samp: idb_student_attendance_total_school_wise_var_samp_fields
  variance: idb_student_attendance_total_school_wise_variance_fields
}

"""aggregate avg on columns"""
type idb_student_attendance_total_school_wise_avg_fields {
  Data_Marked_For: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "idb_student_attendance_total_school_wise". All fields are combined with a logical 'AND'.
"""
input idb_student_attendance_total_school_wise_bool_exp {
  Data_Marked_For: bigint_comparison_exp
  _and: [idb_student_attendance_total_school_wise_bool_exp!]
  _not: idb_student_attendance_total_school_wise_bool_exp
  _or: [idb_student_attendance_total_school_wise_bool_exp!]
  block: String_comparison_exp
  concat: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  name_2: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_student_attendance_total_school_wise"
"""
input idb_student_attendance_total_school_wise_inc_input {
  Data_Marked_For: bigint
  udise: Int
}

"""
input type for inserting data into table "idb_student_attendance_total_school_wise"
"""
input idb_student_attendance_total_school_wise_insert_input {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate max on columns"""
type idb_student_attendance_total_school_wise_max_fields {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate min on columns"""
type idb_student_attendance_total_school_wise_min_fields {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""
response of any mutation on the table "idb_student_attendance_total_school_wise"
"""
type idb_student_attendance_total_school_wise_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_student_attendance_total_school_wise!]!
}

"""
Ordering options when selecting data from "idb_student_attendance_total_school_wise".
"""
input idb_student_attendance_total_school_wise_order_by {
  Data_Marked_For: order_by
  block: order_by
  concat: order_by
  date: order_by
  district: order_by
  name_2: order_by
  udise: order_by
}

"""
select columns of table "idb_student_attendance_total_school_wise"
"""
enum idb_student_attendance_total_school_wise_select_column {
  """column name"""
  Data_Marked_For

  """column name"""
  block

  """column name"""
  concat

  """column name"""
  date

  """column name"""
  district

  """column name"""
  name_2

  """column name"""
  udise
}

"""
input type for updating data in table "idb_student_attendance_total_school_wise"
"""
input idb_student_attendance_total_school_wise_set_input {
  Data_Marked_For: bigint
  block: String
  concat: String
  date: date
  district: String
  name_2: String
  udise: Int
}

"""aggregate stddev on columns"""
type idb_student_attendance_total_school_wise_stddev_fields {
  Data_Marked_For: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type idb_student_attendance_total_school_wise_stddev_pop_fields {
  Data_Marked_For: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type idb_student_attendance_total_school_wise_stddev_samp_fields {
  Data_Marked_For: Float
  udise: Float
}

"""aggregate sum on columns"""
type idb_student_attendance_total_school_wise_sum_fields {
  Data_Marked_For: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type idb_student_attendance_total_school_wise_var_pop_fields {
  Data_Marked_For: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type idb_student_attendance_total_school_wise_var_samp_fields {
  Data_Marked_For: Float
  udise: Float
}

"""aggregate variance on columns"""
type idb_student_attendance_total_school_wise_variance_fields {
  Data_Marked_For: Float
  udise: Float
}

"""
columns and relationships of "idb_total_state_student_enrolment"
"""
type idb_total_state_student_enrolment {
  total_enrollment: bigint
}

"""
aggregated selection of "idb_total_state_student_enrolment"
"""
type idb_total_state_student_enrolment_aggregate {
  aggregate: idb_total_state_student_enrolment_aggregate_fields
  nodes: [idb_total_state_student_enrolment!]!
}

"""
aggregate fields of "idb_total_state_student_enrolment"
"""
type idb_total_state_student_enrolment_aggregate_fields {
  avg: idb_total_state_student_enrolment_avg_fields
  count(columns: [idb_total_state_student_enrolment_select_column!], distinct: Boolean): Int!
  max: idb_total_state_student_enrolment_max_fields
  min: idb_total_state_student_enrolment_min_fields
  stddev: idb_total_state_student_enrolment_stddev_fields
  stddev_pop: idb_total_state_student_enrolment_stddev_pop_fields
  stddev_samp: idb_total_state_student_enrolment_stddev_samp_fields
  sum: idb_total_state_student_enrolment_sum_fields
  var_pop: idb_total_state_student_enrolment_var_pop_fields
  var_samp: idb_total_state_student_enrolment_var_samp_fields
  variance: idb_total_state_student_enrolment_variance_fields
}

"""aggregate avg on columns"""
type idb_total_state_student_enrolment_avg_fields {
  total_enrollment: Float
}

"""
Boolean expression to filter rows from the table "idb_total_state_student_enrolment". All fields are combined with a logical 'AND'.
"""
input idb_total_state_student_enrolment_bool_exp {
  _and: [idb_total_state_student_enrolment_bool_exp!]
  _not: idb_total_state_student_enrolment_bool_exp
  _or: [idb_total_state_student_enrolment_bool_exp!]
  total_enrollment: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "idb_total_state_student_enrolment"
"""
input idb_total_state_student_enrolment_inc_input {
  total_enrollment: bigint
}

"""
input type for inserting data into table "idb_total_state_student_enrolment"
"""
input idb_total_state_student_enrolment_insert_input {
  total_enrollment: bigint
}

"""aggregate max on columns"""
type idb_total_state_student_enrolment_max_fields {
  total_enrollment: bigint
}

"""aggregate min on columns"""
type idb_total_state_student_enrolment_min_fields {
  total_enrollment: bigint
}

"""
response of any mutation on the table "idb_total_state_student_enrolment"
"""
type idb_total_state_student_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [idb_total_state_student_enrolment!]!
}

"""
Ordering options when selecting data from "idb_total_state_student_enrolment".
"""
input idb_total_state_student_enrolment_order_by {
  total_enrollment: order_by
}

"""
select columns of table "idb_total_state_student_enrolment"
"""
enum idb_total_state_student_enrolment_select_column {
  """column name"""
  total_enrollment
}

"""
input type for updating data in table "idb_total_state_student_enrolment"
"""
input idb_total_state_student_enrolment_set_input {
  total_enrollment: bigint
}

"""aggregate stddev on columns"""
type idb_total_state_student_enrolment_stddev_fields {
  total_enrollment: Float
}

"""aggregate stddev_pop on columns"""
type idb_total_state_student_enrolment_stddev_pop_fields {
  total_enrollment: Float
}

"""aggregate stddev_samp on columns"""
type idb_total_state_student_enrolment_stddev_samp_fields {
  total_enrollment: Float
}

"""aggregate sum on columns"""
type idb_total_state_student_enrolment_sum_fields {
  total_enrollment: bigint
}

"""aggregate var_pop on columns"""
type idb_total_state_student_enrolment_var_pop_fields {
  total_enrollment: Float
}

"""aggregate var_samp on columns"""
type idb_total_state_student_enrolment_var_samp_fields {
  total_enrollment: Float
}

"""aggregate variance on columns"""
type idb_total_state_student_enrolment_variance_fields {
  total_enrollment: Float
}

"""
columns and relationships of "identities"
"""
type identities {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  connectors_id: uuid!

  """"""
  email: String

  """"""
  encryption_scheme: String!

  """"""
  factor: Int!

  """"""
  id: bigint!

  """"""
  insert_instant: bigint!

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint!

  """"""
  password: String!

  """"""
  password_change_reason: smallint

  """"""
  password_change_required: Boolean!

  """"""
  password_last_update_instant: bigint!

  """"""
  salt: String!

  """"""
  status: smallint!

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!

  """"""
  two_factor_delivery: smallint!

  """"""
  two_factor_enabled: Boolean!

  """"""
  two_factor_secret: String

  """An object relationship"""
  user: users!

  """"""
  username: String

  """"""
  username_index: String

  """"""
  username_status: smallint!

  """"""
  users_id: uuid!

  """"""
  verified: Boolean!
}

"""
aggregated selection of "identities"
"""
type identities_aggregate {
  """"""
  aggregate: identities_aggregate_fields

  """"""
  nodes: [identities!]!
}

"""
aggregate fields of "identities"
"""
type identities_aggregate_fields {
  """"""
  avg: identities_avg_fields

  """"""
  count(columns: [identities_select_column!], distinct: Boolean): Int!

  """"""
  max: identities_max_fields

  """"""
  min: identities_min_fields

  """"""
  stddev: identities_stddev_fields

  """"""
  stddev_pop: identities_stddev_pop_fields

  """"""
  stddev_samp: identities_stddev_samp_fields

  """"""
  sum: identities_sum_fields

  """"""
  var_pop: identities_var_pop_fields

  """"""
  var_samp: identities_var_samp_fields

  """"""
  variance: identities_variance_fields
}

"""
order by aggregate values of table "identities"
"""
input identities_aggregate_order_by {
  """"""
  avg: identities_avg_order_by

  """"""
  count: order_by

  """"""
  max: identities_max_order_by

  """"""
  min: identities_min_order_by

  """"""
  stddev: identities_stddev_order_by

  """"""
  stddev_pop: identities_stddev_pop_order_by

  """"""
  stddev_samp: identities_stddev_samp_order_by

  """"""
  sum: identities_sum_order_by

  """"""
  var_pop: identities_var_pop_order_by

  """"""
  var_samp: identities_var_samp_order_by

  """"""
  variance: identities_variance_order_by
}

"""
input type for inserting array relation for remote table "identities"
"""
input identities_arr_rel_insert_input {
  """"""
  data: [identities_insert_input!]!

  """on conflict condition"""
  on_conflict: identities_on_conflict
}

"""aggregate avg on columns"""
type identities_avg_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by avg() on columns of table "identities"
"""
input identities_avg_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""
Boolean expression to filter rows from the table "identities". All fields are combined with a logical 'AND'.
"""
input identities_bool_exp {
  """"""
  _and: [identities_bool_exp!]

  """"""
  _not: identities_bool_exp

  """"""
  _or: [identities_bool_exp!]

  """"""
  breached_password_last_checked_instant: bigint_comparison_exp

  """"""
  breached_password_status: smallint_comparison_exp

  """"""
  connectors_id: uuid_comparison_exp

  """"""
  email: String_comparison_exp

  """"""
  encryption_scheme: String_comparison_exp

  """"""
  factor: Int_comparison_exp

  """"""
  id: bigint_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_login_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  password: String_comparison_exp

  """"""
  password_change_reason: smallint_comparison_exp

  """"""
  password_change_required: Boolean_comparison_exp

  """"""
  password_last_update_instant: bigint_comparison_exp

  """"""
  salt: String_comparison_exp

  """"""
  status: smallint_comparison_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp

  """"""
  two_factor_delivery: smallint_comparison_exp

  """"""
  two_factor_enabled: Boolean_comparison_exp

  """"""
  two_factor_secret: String_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  username: String_comparison_exp

  """"""
  username_index: String_comparison_exp

  """"""
  username_status: smallint_comparison_exp

  """"""
  users_id: uuid_comparison_exp

  """"""
  verified: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "identities"
"""
enum identities_constraint {
  """unique or primary key constraint"""
  identities_pkey1

  """unique or primary key constraint"""
  identities_uk_1

  """unique or primary key constraint"""
  identities_uk_2
}

"""
input type for incrementing numeric columns in table "identities"
"""
input identities_inc_input {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  factor: Int

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  password_change_reason: smallint

  """"""
  password_last_update_instant: bigint

  """"""
  status: smallint

  """"""
  two_factor_delivery: smallint

  """"""
  username_status: smallint
}

"""
input type for inserting data into table "identities"
"""
input identities_insert_input {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  connectors_id: uuid

  """"""
  email: String

  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  password: String

  """"""
  password_change_reason: smallint

  """"""
  password_change_required: Boolean

  """"""
  password_last_update_instant: bigint

  """"""
  salt: String

  """"""
  status: smallint

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid

  """"""
  two_factor_delivery: smallint

  """"""
  two_factor_enabled: Boolean

  """"""
  two_factor_secret: String

  """"""
  user: users_obj_rel_insert_input

  """"""
  username: String

  """"""
  username_index: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid

  """"""
  verified: Boolean
}

"""aggregate max on columns"""
type identities_max_fields {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  connectors_id: uuid

  """"""
  email: String

  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  password: String

  """"""
  password_change_reason: smallint

  """"""
  password_last_update_instant: bigint

  """"""
  salt: String

  """"""
  status: smallint

  """"""
  tenants_id: uuid

  """"""
  two_factor_delivery: smallint

  """"""
  two_factor_secret: String

  """"""
  username: String

  """"""
  username_index: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "identities"
"""
input identities_max_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  connectors_id: order_by

  """"""
  email: order_by

  """"""
  encryption_scheme: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  salt: order_by

  """"""
  status: order_by

  """"""
  tenants_id: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  two_factor_secret: order_by

  """"""
  username: order_by

  """"""
  username_index: order_by

  """"""
  username_status: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type identities_min_fields {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  connectors_id: uuid

  """"""
  email: String

  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  password: String

  """"""
  password_change_reason: smallint

  """"""
  password_last_update_instant: bigint

  """"""
  salt: String

  """"""
  status: smallint

  """"""
  tenants_id: uuid

  """"""
  two_factor_delivery: smallint

  """"""
  two_factor_secret: String

  """"""
  username: String

  """"""
  username_index: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "identities"
"""
input identities_min_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  connectors_id: order_by

  """"""
  email: order_by

  """"""
  encryption_scheme: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  salt: order_by

  """"""
  status: order_by

  """"""
  tenants_id: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  two_factor_secret: order_by

  """"""
  username: order_by

  """"""
  username_index: order_by

  """"""
  username_status: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "identities"
"""
type identities_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identities!]!
}

"""
on conflict condition type for table "identities"
"""
input identities_on_conflict {
  """"""
  constraint: identities_constraint!

  """"""
  update_columns: [identities_update_column!]!

  """"""
  where: identities_bool_exp
}

"""Ordering options when selecting data from "identities"."""
input identities_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  connectors_id: order_by

  """"""
  email: order_by

  """"""
  encryption_scheme: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_change_required: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  salt: order_by

  """"""
  status: order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  two_factor_enabled: order_by

  """"""
  two_factor_secret: order_by

  """"""
  user: users_order_by

  """"""
  username: order_by

  """"""
  username_index: order_by

  """"""
  username_status: order_by

  """"""
  users_id: order_by

  """"""
  verified: order_by
}

"""primary key columns input for table: identities"""
input identities_pk_columns_input {
  """"""
  id: bigint!
}

"""
select columns of table "identities"
"""
enum identities_select_column {
  """column name"""
  breached_password_last_checked_instant

  """column name"""
  breached_password_status

  """column name"""
  connectors_id

  """column name"""
  email

  """column name"""
  encryption_scheme

  """column name"""
  factor

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_login_instant

  """column name"""
  last_update_instant

  """column name"""
  password

  """column name"""
  password_change_reason

  """column name"""
  password_change_required

  """column name"""
  password_last_update_instant

  """column name"""
  salt

  """column name"""
  status

  """column name"""
  tenants_id

  """column name"""
  two_factor_delivery

  """column name"""
  two_factor_enabled

  """column name"""
  two_factor_secret

  """column name"""
  username

  """column name"""
  username_index

  """column name"""
  username_status

  """column name"""
  users_id

  """column name"""
  verified
}

"""
input type for updating data in table "identities"
"""
input identities_set_input {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  connectors_id: uuid

  """"""
  email: String

  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  password: String

  """"""
  password_change_reason: smallint

  """"""
  password_change_required: Boolean

  """"""
  password_last_update_instant: bigint

  """"""
  salt: String

  """"""
  status: smallint

  """"""
  tenants_id: uuid

  """"""
  two_factor_delivery: smallint

  """"""
  two_factor_enabled: Boolean

  """"""
  two_factor_secret: String

  """"""
  username: String

  """"""
  username_index: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid

  """"""
  verified: Boolean
}

"""aggregate stddev on columns"""
type identities_stddev_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by stddev() on columns of table "identities"
"""
input identities_stddev_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""aggregate stddev_pop on columns"""
type identities_stddev_pop_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by stddev_pop() on columns of table "identities"
"""
input identities_stddev_pop_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""aggregate stddev_samp on columns"""
type identities_stddev_samp_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by stddev_samp() on columns of table "identities"
"""
input identities_stddev_samp_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""aggregate sum on columns"""
type identities_sum_fields {
  """"""
  breached_password_last_checked_instant: bigint

  """"""
  breached_password_status: smallint

  """"""
  factor: Int

  """"""
  id: bigint

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  password_change_reason: smallint

  """"""
  password_last_update_instant: bigint

  """"""
  status: smallint

  """"""
  two_factor_delivery: smallint

  """"""
  username_status: smallint
}

"""
order by sum() on columns of table "identities"
"""
input identities_sum_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""
update columns of table "identities"
"""
enum identities_update_column {
  """column name"""
  breached_password_last_checked_instant

  """column name"""
  breached_password_status

  """column name"""
  connectors_id

  """column name"""
  email

  """column name"""
  encryption_scheme

  """column name"""
  factor

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_login_instant

  """column name"""
  last_update_instant

  """column name"""
  password

  """column name"""
  password_change_reason

  """column name"""
  password_change_required

  """column name"""
  password_last_update_instant

  """column name"""
  salt

  """column name"""
  status

  """column name"""
  tenants_id

  """column name"""
  two_factor_delivery

  """column name"""
  two_factor_enabled

  """column name"""
  two_factor_secret

  """column name"""
  username

  """column name"""
  username_index

  """column name"""
  username_status

  """column name"""
  users_id

  """column name"""
  verified
}

"""aggregate var_pop on columns"""
type identities_var_pop_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by var_pop() on columns of table "identities"
"""
input identities_var_pop_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""aggregate var_samp on columns"""
type identities_var_samp_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by var_samp() on columns of table "identities"
"""
input identities_var_samp_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""aggregate variance on columns"""
type identities_variance_fields {
  """"""
  breached_password_last_checked_instant: Float

  """"""
  breached_password_status: Float

  """"""
  factor: Float

  """"""
  id: Float

  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  password_change_reason: Float

  """"""
  password_last_update_instant: Float

  """"""
  status: Float

  """"""
  two_factor_delivery: Float

  """"""
  username_status: Float
}

"""
order by variance() on columns of table "identities"
"""
input identities_variance_order_by {
  """"""
  breached_password_last_checked_instant: order_by

  """"""
  breached_password_status: order_by

  """"""
  factor: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  password_change_reason: order_by

  """"""
  password_last_update_instant: order_by

  """"""
  status: order_by

  """"""
  two_factor_delivery: order_by

  """"""
  username_status: order_by
}

"""
columns and relationships of "identity_providers"
"""
type identity_providers {
  """"""
  data: String!

  """"""
  enabled: Boolean!

  """An array relationship"""
  federated_domains(
    """distinct select on columns"""
    distinct_on: [federated_domains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [federated_domains_order_by!]

    """filter the rows returned"""
    where: federated_domains_bool_exp
  ): [federated_domains!]!

  """An aggregate relationship"""
  federated_domains_aggregate(
    """distinct select on columns"""
    distinct_on: [federated_domains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [federated_domains_order_by!]

    """filter the rows returned"""
    where: federated_domains_bool_exp
  ): federated_domains_aggregate!

  """"""
  id: uuid!

  """
  fetch data from the table: "identity_providers_applications"
  """
  identity_providers_applications(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): [identity_providers_applications!]!

  """An aggregate relationship"""
  identity_providers_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): identity_providers_applications_aggregate!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  key: keys!

  """"""
  keys_id: uuid

  """An object relationship"""
  lambda: lambdas!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  reconcile_lambdas_id: uuid

  """"""
  type: String!
}

"""
aggregated selection of "identity_providers"
"""
type identity_providers_aggregate {
  """"""
  aggregate: identity_providers_aggregate_fields

  """"""
  nodes: [identity_providers!]!
}

"""
aggregate fields of "identity_providers"
"""
type identity_providers_aggregate_fields {
  """"""
  avg: identity_providers_avg_fields

  """"""
  count(columns: [identity_providers_select_column!], distinct: Boolean): Int!

  """"""
  max: identity_providers_max_fields

  """"""
  min: identity_providers_min_fields

  """"""
  stddev: identity_providers_stddev_fields

  """"""
  stddev_pop: identity_providers_stddev_pop_fields

  """"""
  stddev_samp: identity_providers_stddev_samp_fields

  """"""
  sum: identity_providers_sum_fields

  """"""
  var_pop: identity_providers_var_pop_fields

  """"""
  var_samp: identity_providers_var_samp_fields

  """"""
  variance: identity_providers_variance_fields
}

"""
order by aggregate values of table "identity_providers"
"""
input identity_providers_aggregate_order_by {
  """"""
  avg: identity_providers_avg_order_by

  """"""
  count: order_by

  """"""
  max: identity_providers_max_order_by

  """"""
  min: identity_providers_min_order_by

  """"""
  stddev: identity_providers_stddev_order_by

  """"""
  stddev_pop: identity_providers_stddev_pop_order_by

  """"""
  stddev_samp: identity_providers_stddev_samp_order_by

  """"""
  sum: identity_providers_sum_order_by

  """"""
  var_pop: identity_providers_var_pop_order_by

  """"""
  var_samp: identity_providers_var_samp_order_by

  """"""
  variance: identity_providers_variance_order_by
}

"""
columns and relationships of "identity_providers_applications"
"""
type identity_providers_applications {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  data: String!

  """"""
  enabled: Boolean!

  """An object relationship"""
  identity_provider: identity_providers!

  """"""
  identity_providers_id: uuid!

  """An object relationship"""
  key: keys!

  """"""
  keys_id: uuid
}

"""
aggregated selection of "identity_providers_applications"
"""
type identity_providers_applications_aggregate {
  """"""
  aggregate: identity_providers_applications_aggregate_fields

  """"""
  nodes: [identity_providers_applications!]!
}

"""
aggregate fields of "identity_providers_applications"
"""
type identity_providers_applications_aggregate_fields {
  """"""
  count(columns: [identity_providers_applications_select_column!], distinct: Boolean): Int!

  """"""
  max: identity_providers_applications_max_fields

  """"""
  min: identity_providers_applications_min_fields
}

"""
order by aggregate values of table "identity_providers_applications"
"""
input identity_providers_applications_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: identity_providers_applications_max_order_by

  """"""
  min: identity_providers_applications_min_order_by
}

"""
input type for inserting array relation for remote table "identity_providers_applications"
"""
input identity_providers_applications_arr_rel_insert_input {
  """"""
  data: [identity_providers_applications_insert_input!]!
}

"""
Boolean expression to filter rows from the table
"identity_providers_applications". All fields are combined with a logical 'AND'.
"""
input identity_providers_applications_bool_exp {
  """"""
  _and: [identity_providers_applications_bool_exp!]

  """"""
  _not: identity_providers_applications_bool_exp

  """"""
  _or: [identity_providers_applications_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  enabled: Boolean_comparison_exp

  """"""
  identity_provider: identity_providers_bool_exp

  """"""
  identity_providers_id: uuid_comparison_exp

  """"""
  key: keys_bool_exp

  """"""
  keys_id: uuid_comparison_exp
}

"""
input type for inserting data into table "identity_providers_applications"
"""
input identity_providers_applications_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  enabled: Boolean

  """"""
  identity_provider: identity_providers_obj_rel_insert_input

  """"""
  identity_providers_id: uuid

  """"""
  key: keys_obj_rel_insert_input

  """"""
  keys_id: uuid
}

"""aggregate max on columns"""
type identity_providers_applications_max_fields {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  identity_providers_id: uuid

  """"""
  keys_id: uuid
}

"""
order by max() on columns of table "identity_providers_applications"
"""
input identity_providers_applications_max_order_by {
  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  identity_providers_id: order_by

  """"""
  keys_id: order_by
}

"""aggregate min on columns"""
type identity_providers_applications_min_fields {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  identity_providers_id: uuid

  """"""
  keys_id: uuid
}

"""
order by min() on columns of table "identity_providers_applications"
"""
input identity_providers_applications_min_order_by {
  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  identity_providers_id: order_by

  """"""
  keys_id: order_by
}

"""
response of any mutation on the table "identity_providers_applications"
"""
type identity_providers_applications_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identity_providers_applications!]!
}

"""
Ordering options when selecting data from "identity_providers_applications".
"""
input identity_providers_applications_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  enabled: order_by

  """"""
  identity_provider: identity_providers_order_by

  """"""
  identity_providers_id: order_by

  """"""
  key: keys_order_by

  """"""
  keys_id: order_by
}

"""
select columns of table "identity_providers_applications"
"""
enum identity_providers_applications_select_column {
  """column name"""
  applications_id

  """column name"""
  data

  """column name"""
  enabled

  """column name"""
  identity_providers_id

  """column name"""
  keys_id
}

"""
input type for updating data in table "identity_providers_applications"
"""
input identity_providers_applications_set_input {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  enabled: Boolean

  """"""
  identity_providers_id: uuid

  """"""
  keys_id: uuid
}

"""
input type for inserting array relation for remote table "identity_providers"
"""
input identity_providers_arr_rel_insert_input {
  """"""
  data: [identity_providers_insert_input!]!

  """on conflict condition"""
  on_conflict: identity_providers_on_conflict
}

"""aggregate avg on columns"""
type identity_providers_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "identity_providers"
"""
input identity_providers_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "identity_providers". All fields are combined with a logical 'AND'.
"""
input identity_providers_bool_exp {
  """"""
  _and: [identity_providers_bool_exp!]

  """"""
  _not: identity_providers_bool_exp

  """"""
  _or: [identity_providers_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  enabled: Boolean_comparison_exp

  """"""
  federated_domains: federated_domains_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  identity_providers_applications: identity_providers_applications_bool_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  key: keys_bool_exp

  """"""
  keys_id: uuid_comparison_exp

  """"""
  lambda: lambdas_bool_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  reconcile_lambdas_id: uuid_comparison_exp

  """"""
  type: String_comparison_exp
}

"""
unique or primary key constraints on table "identity_providers"
"""
enum identity_providers_constraint {
  """unique or primary key constraint"""
  identity_providers_pkey

  """unique or primary key constraint"""
  identity_providers_uk_1
}

"""
input type for incrementing numeric columns in table "identity_providers"
"""
input identity_providers_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "identity_providers"
"""
input identity_providers_insert_input {
  """"""
  data: String

  """"""
  enabled: Boolean

  """"""
  federated_domains: federated_domains_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  identity_providers_applications: identity_providers_applications_arr_rel_insert_input

  """"""
  insert_instant: bigint

  """"""
  key: keys_obj_rel_insert_input

  """"""
  keys_id: uuid

  """"""
  lambda: lambdas_obj_rel_insert_input

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  type: String
}

"""aggregate max on columns"""
type identity_providers_max_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  keys_id: uuid

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  type: String
}

"""
order by max() on columns of table "identity_providers"
"""
input identity_providers_max_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  keys_id: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  reconcile_lambdas_id: order_by

  """"""
  type: order_by
}

"""aggregate min on columns"""
type identity_providers_min_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  keys_id: uuid

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  type: String
}

"""
order by min() on columns of table "identity_providers"
"""
input identity_providers_min_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  keys_id: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  reconcile_lambdas_id: order_by

  """"""
  type: order_by
}

"""
response of any mutation on the table "identity_providers"
"""
type identity_providers_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identity_providers!]!
}

"""
input type for inserting object relation for remote table "identity_providers"
"""
input identity_providers_obj_rel_insert_input {
  """"""
  data: identity_providers_insert_input!

  """on conflict condition"""
  on_conflict: identity_providers_on_conflict
}

"""
on conflict condition type for table "identity_providers"
"""
input identity_providers_on_conflict {
  """"""
  constraint: identity_providers_constraint!

  """"""
  update_columns: [identity_providers_update_column!]!

  """"""
  where: identity_providers_bool_exp
}

"""Ordering options when selecting data from "identity_providers"."""
input identity_providers_order_by {
  """"""
  data: order_by

  """"""
  enabled: order_by

  """"""
  federated_domains_aggregate: federated_domains_aggregate_order_by

  """"""
  id: order_by

  """"""
  identity_providers_applications_aggregate: identity_providers_applications_aggregate_order_by

  """"""
  insert_instant: order_by

  """"""
  key: keys_order_by

  """"""
  keys_id: order_by

  """"""
  lambda: lambdas_order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  reconcile_lambdas_id: order_by

  """"""
  type: order_by
}

"""primary key columns input for table: identity_providers"""
input identity_providers_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "identity_providers"
"""
enum identity_providers_select_column {
  """column name"""
  data

  """column name"""
  enabled

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  keys_id

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  reconcile_lambdas_id

  """column name"""
  type
}

"""
input type for updating data in table "identity_providers"
"""
input identity_providers_set_input {
  """"""
  data: String

  """"""
  enabled: Boolean

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  keys_id: uuid

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  reconcile_lambdas_id: uuid

  """"""
  type: String
}

"""aggregate stddev on columns"""
type identity_providers_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "identity_providers"
"""
input identity_providers_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type identity_providers_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "identity_providers"
"""
input identity_providers_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type identity_providers_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "identity_providers"
"""
input identity_providers_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type identity_providers_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "identity_providers"
"""
input identity_providers_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "identity_providers"
"""
enum identity_providers_update_column {
  """column name"""
  data

  """column name"""
  enabled

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  keys_id

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  reconcile_lambdas_id

  """column name"""
  type
}

"""aggregate var_pop on columns"""
type identity_providers_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "identity_providers"
"""
input identity_providers_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type identity_providers_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "identity_providers"
"""
input identity_providers_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type identity_providers_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "identity_providers"
"""
input identity_providers_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "instance"
"""
type instance {
  """"""
  encryption_key: String

  """"""
  id: uuid!

  """"""
  license_id: String
}

"""
aggregated selection of "instance"
"""
type instance_aggregate {
  """"""
  aggregate: instance_aggregate_fields

  """"""
  nodes: [instance!]!
}

"""
aggregate fields of "instance"
"""
type instance_aggregate_fields {
  """"""
  count(columns: [instance_select_column!], distinct: Boolean): Int!

  """"""
  max: instance_max_fields

  """"""
  min: instance_min_fields
}

"""
Boolean expression to filter rows from the table "instance". All fields are combined with a logical 'AND'.
"""
input instance_bool_exp {
  """"""
  _and: [instance_bool_exp!]

  """"""
  _not: instance_bool_exp

  """"""
  _or: [instance_bool_exp!]

  """"""
  encryption_key: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  license_id: String_comparison_exp
}

"""
input type for inserting data into table "instance"
"""
input instance_insert_input {
  """"""
  encryption_key: String

  """"""
  id: uuid

  """"""
  license_id: String
}

"""aggregate max on columns"""
type instance_max_fields {
  """"""
  encryption_key: String

  """"""
  id: uuid

  """"""
  license_id: String
}

"""aggregate min on columns"""
type instance_min_fields {
  """"""
  encryption_key: String

  """"""
  id: uuid

  """"""
  license_id: String
}

"""
response of any mutation on the table "instance"
"""
type instance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [instance!]!
}

"""Ordering options when selecting data from "instance"."""
input instance_order_by {
  """"""
  encryption_key: order_by

  """"""
  id: order_by

  """"""
  license_id: order_by
}

"""
select columns of table "instance"
"""
enum instance_select_column {
  """column name"""
  encryption_key

  """column name"""
  id

  """column name"""
  license_id
}

"""
input type for updating data in table "instance"
"""
input instance_set_input {
  """"""
  encryption_key: String

  """"""
  id: uuid

  """"""
  license_id: String
}

"""
columns and relationships of "integrations"
"""
type integrations {
  """"""
  data: String!
}

"""
aggregated selection of "integrations"
"""
type integrations_aggregate {
  """"""
  aggregate: integrations_aggregate_fields

  """"""
  nodes: [integrations!]!
}

"""
aggregate fields of "integrations"
"""
type integrations_aggregate_fields {
  """"""
  count(columns: [integrations_select_column!], distinct: Boolean): Int!

  """"""
  max: integrations_max_fields

  """"""
  min: integrations_min_fields
}

"""
Boolean expression to filter rows from the table "integrations". All fields are combined with a logical 'AND'.
"""
input integrations_bool_exp {
  """"""
  _and: [integrations_bool_exp!]

  """"""
  _not: integrations_bool_exp

  """"""
  _or: [integrations_bool_exp!]

  """"""
  data: String_comparison_exp
}

"""
input type for inserting data into table "integrations"
"""
input integrations_insert_input {
  """"""
  data: String
}

"""aggregate max on columns"""
type integrations_max_fields {
  """"""
  data: String
}

"""aggregate min on columns"""
type integrations_min_fields {
  """"""
  data: String
}

"""
response of any mutation on the table "integrations"
"""
type integrations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [integrations!]!
}

"""Ordering options when selecting data from "integrations"."""
input integrations_order_by {
  """"""
  data: order_by
}

"""
select columns of table "integrations"
"""
enum integrations_select_column {
  """column name"""
  data
}

"""
input type for updating data in table "integrations"
"""
input integrations_set_input {
  """"""
  data: String
}

"""
columns and relationships of "jet_bookmark"
"""
type jet_bookmark {
  date_add: timestamptz!
  id: Int!
  title: String!
  url: String!
  user: Int!
}

"""
aggregated selection of "jet_bookmark"
"""
type jet_bookmark_aggregate {
  aggregate: jet_bookmark_aggregate_fields
  nodes: [jet_bookmark!]!
}

"""
aggregate fields of "jet_bookmark"
"""
type jet_bookmark_aggregate_fields {
  avg: jet_bookmark_avg_fields
  count(columns: [jet_bookmark_select_column!], distinct: Boolean): Int!
  max: jet_bookmark_max_fields
  min: jet_bookmark_min_fields
  stddev: jet_bookmark_stddev_fields
  stddev_pop: jet_bookmark_stddev_pop_fields
  stddev_samp: jet_bookmark_stddev_samp_fields
  sum: jet_bookmark_sum_fields
  var_pop: jet_bookmark_var_pop_fields
  var_samp: jet_bookmark_var_samp_fields
  variance: jet_bookmark_variance_fields
}

"""aggregate avg on columns"""
type jet_bookmark_avg_fields {
  id: Float
  user: Float
}

"""
Boolean expression to filter rows from the table "jet_bookmark". All fields are combined with a logical 'AND'.
"""
input jet_bookmark_bool_exp {
  _and: [jet_bookmark_bool_exp!]
  _not: jet_bookmark_bool_exp
  _or: [jet_bookmark_bool_exp!]
  date_add: timestamptz_comparison_exp
  id: Int_comparison_exp
  title: String_comparison_exp
  url: String_comparison_exp
  user: Int_comparison_exp
}

"""
unique or primary key constraints on table "jet_bookmark"
"""
enum jet_bookmark_constraint {
  """unique or primary key constraint"""
  jet_bookmark_pkey
}

"""
input type for incrementing numeric columns in table "jet_bookmark"
"""
input jet_bookmark_inc_input {
  id: Int
  user: Int
}

"""
input type for inserting data into table "jet_bookmark"
"""
input jet_bookmark_insert_input {
  date_add: timestamptz
  id: Int
  title: String
  url: String
  user: Int
}

"""aggregate max on columns"""
type jet_bookmark_max_fields {
  date_add: timestamptz
  id: Int
  title: String
  url: String
  user: Int
}

"""aggregate min on columns"""
type jet_bookmark_min_fields {
  date_add: timestamptz
  id: Int
  title: String
  url: String
  user: Int
}

"""
response of any mutation on the table "jet_bookmark"
"""
type jet_bookmark_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [jet_bookmark!]!
}

"""
on conflict condition type for table "jet_bookmark"
"""
input jet_bookmark_on_conflict {
  constraint: jet_bookmark_constraint!
  update_columns: [jet_bookmark_update_column!]! = []
  where: jet_bookmark_bool_exp
}

"""Ordering options when selecting data from "jet_bookmark"."""
input jet_bookmark_order_by {
  date_add: order_by
  id: order_by
  title: order_by
  url: order_by
  user: order_by
}

"""primary key columns input for table: jet_bookmark"""
input jet_bookmark_pk_columns_input {
  id: Int!
}

"""
select columns of table "jet_bookmark"
"""
enum jet_bookmark_select_column {
  """column name"""
  date_add

  """column name"""
  id

  """column name"""
  title

  """column name"""
  url

  """column name"""
  user
}

"""
input type for updating data in table "jet_bookmark"
"""
input jet_bookmark_set_input {
  date_add: timestamptz
  id: Int
  title: String
  url: String
  user: Int
}

"""aggregate stddev on columns"""
type jet_bookmark_stddev_fields {
  id: Float
  user: Float
}

"""aggregate stddev_pop on columns"""
type jet_bookmark_stddev_pop_fields {
  id: Float
  user: Float
}

"""aggregate stddev_samp on columns"""
type jet_bookmark_stddev_samp_fields {
  id: Float
  user: Float
}

"""aggregate sum on columns"""
type jet_bookmark_sum_fields {
  id: Int
  user: Int
}

"""
update columns of table "jet_bookmark"
"""
enum jet_bookmark_update_column {
  """column name"""
  date_add

  """column name"""
  id

  """column name"""
  title

  """column name"""
  url

  """column name"""
  user
}

"""aggregate var_pop on columns"""
type jet_bookmark_var_pop_fields {
  id: Float
  user: Float
}

"""aggregate var_samp on columns"""
type jet_bookmark_var_samp_fields {
  id: Float
  user: Float
}

"""aggregate variance on columns"""
type jet_bookmark_variance_fields {
  id: Float
  user: Float
}

"""
columns and relationships of "jet_pinnedapplication"
"""
type jet_pinnedapplication {
  app_label: String!
  date_add: timestamptz!
  id: Int!
  user: Int!
}

"""
aggregated selection of "jet_pinnedapplication"
"""
type jet_pinnedapplication_aggregate {
  aggregate: jet_pinnedapplication_aggregate_fields
  nodes: [jet_pinnedapplication!]!
}

"""
aggregate fields of "jet_pinnedapplication"
"""
type jet_pinnedapplication_aggregate_fields {
  avg: jet_pinnedapplication_avg_fields
  count(columns: [jet_pinnedapplication_select_column!], distinct: Boolean): Int!
  max: jet_pinnedapplication_max_fields
  min: jet_pinnedapplication_min_fields
  stddev: jet_pinnedapplication_stddev_fields
  stddev_pop: jet_pinnedapplication_stddev_pop_fields
  stddev_samp: jet_pinnedapplication_stddev_samp_fields
  sum: jet_pinnedapplication_sum_fields
  var_pop: jet_pinnedapplication_var_pop_fields
  var_samp: jet_pinnedapplication_var_samp_fields
  variance: jet_pinnedapplication_variance_fields
}

"""aggregate avg on columns"""
type jet_pinnedapplication_avg_fields {
  id: Float
  user: Float
}

"""
Boolean expression to filter rows from the table "jet_pinnedapplication". All fields are combined with a logical 'AND'.
"""
input jet_pinnedapplication_bool_exp {
  _and: [jet_pinnedapplication_bool_exp!]
  _not: jet_pinnedapplication_bool_exp
  _or: [jet_pinnedapplication_bool_exp!]
  app_label: String_comparison_exp
  date_add: timestamptz_comparison_exp
  id: Int_comparison_exp
  user: Int_comparison_exp
}

"""
unique or primary key constraints on table "jet_pinnedapplication"
"""
enum jet_pinnedapplication_constraint {
  """unique or primary key constraint"""
  jet_pinnedapplication_pkey
}

"""
input type for incrementing numeric columns in table "jet_pinnedapplication"
"""
input jet_pinnedapplication_inc_input {
  id: Int
  user: Int
}

"""
input type for inserting data into table "jet_pinnedapplication"
"""
input jet_pinnedapplication_insert_input {
  app_label: String
  date_add: timestamptz
  id: Int
  user: Int
}

"""aggregate max on columns"""
type jet_pinnedapplication_max_fields {
  app_label: String
  date_add: timestamptz
  id: Int
  user: Int
}

"""aggregate min on columns"""
type jet_pinnedapplication_min_fields {
  app_label: String
  date_add: timestamptz
  id: Int
  user: Int
}

"""
response of any mutation on the table "jet_pinnedapplication"
"""
type jet_pinnedapplication_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [jet_pinnedapplication!]!
}

"""
on conflict condition type for table "jet_pinnedapplication"
"""
input jet_pinnedapplication_on_conflict {
  constraint: jet_pinnedapplication_constraint!
  update_columns: [jet_pinnedapplication_update_column!]! = []
  where: jet_pinnedapplication_bool_exp
}

"""Ordering options when selecting data from "jet_pinnedapplication"."""
input jet_pinnedapplication_order_by {
  app_label: order_by
  date_add: order_by
  id: order_by
  user: order_by
}

"""primary key columns input for table: jet_pinnedapplication"""
input jet_pinnedapplication_pk_columns_input {
  id: Int!
}

"""
select columns of table "jet_pinnedapplication"
"""
enum jet_pinnedapplication_select_column {
  """column name"""
  app_label

  """column name"""
  date_add

  """column name"""
  id

  """column name"""
  user
}

"""
input type for updating data in table "jet_pinnedapplication"
"""
input jet_pinnedapplication_set_input {
  app_label: String
  date_add: timestamptz
  id: Int
  user: Int
}

"""aggregate stddev on columns"""
type jet_pinnedapplication_stddev_fields {
  id: Float
  user: Float
}

"""aggregate stddev_pop on columns"""
type jet_pinnedapplication_stddev_pop_fields {
  id: Float
  user: Float
}

"""aggregate stddev_samp on columns"""
type jet_pinnedapplication_stddev_samp_fields {
  id: Float
  user: Float
}

"""aggregate sum on columns"""
type jet_pinnedapplication_sum_fields {
  id: Int
  user: Int
}

"""
update columns of table "jet_pinnedapplication"
"""
enum jet_pinnedapplication_update_column {
  """column name"""
  app_label

  """column name"""
  date_add

  """column name"""
  id

  """column name"""
  user
}

"""aggregate var_pop on columns"""
type jet_pinnedapplication_var_pop_fields {
  id: Float
  user: Float
}

"""aggregate var_samp on columns"""
type jet_pinnedapplication_var_samp_fields {
  id: Float
  user: Float
}

"""aggregate variance on columns"""
type jet_pinnedapplication_variance_fields {
  id: Float
  user: Float
}

scalar jsonb

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "keys"
"""
type keys {
  """"""
  algorithm: String

  """An array relationship"""
  applications(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An array relationship"""
  applicationsByAccessTokenSigningKeysId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsByAccessTokenSigningKeysId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  applicationsByIdTokenSigningKeysId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsByIdTokenSigningKeysId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An aggregate relationship"""
  applications_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """"""
  certificate: String

  """An array relationship"""
  connectors(
    """distinct select on columns"""
    distinct_on: [connectors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_order_by!]

    """filter the rows returned"""
    where: connectors_bool_exp
  ): [connectors!]!

  """An aggregate relationship"""
  connectors_aggregate(
    """distinct select on columns"""
    distinct_on: [connectors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_order_by!]

    """filter the rows returned"""
    where: connectors_bool_exp
  ): connectors_aggregate!

  """"""
  expiration_instant: bigint

  """"""
  id: uuid!

  """An array relationship"""
  identity_providers(
    """distinct select on columns"""
    distinct_on: [identity_providers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_order_by!]

    """filter the rows returned"""
    where: identity_providers_bool_exp
  ): [identity_providers!]!

  """An aggregate relationship"""
  identity_providers_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_order_by!]

    """filter the rows returned"""
    where: identity_providers_bool_exp
  ): identity_providers_aggregate!

  """
  fetch data from the table: "identity_providers_applications"
  """
  identity_providers_applications(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): [identity_providers_applications!]!

  """An aggregate relationship"""
  identity_providers_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): identity_providers_applications_aggregate!

  """"""
  insert_instant: bigint!

  """"""
  issuer: String

  """"""
  kid: String!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  private_key: String

  """"""
  public_key: String

  """"""
  secret: String

  """An array relationship"""
  tenants(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An array relationship"""
  tenantsByIdTokenSigningKeysId(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenantsByIdTokenSigningKeysId_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """An aggregate relationship"""
  tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """"""
  type: String!
}

"""
aggregated selection of "keys"
"""
type keys_aggregate {
  """"""
  aggregate: keys_aggregate_fields

  """"""
  nodes: [keys!]!
}

"""
aggregate fields of "keys"
"""
type keys_aggregate_fields {
  """"""
  avg: keys_avg_fields

  """"""
  count(columns: [keys_select_column!], distinct: Boolean): Int!

  """"""
  max: keys_max_fields

  """"""
  min: keys_min_fields

  """"""
  stddev: keys_stddev_fields

  """"""
  stddev_pop: keys_stddev_pop_fields

  """"""
  stddev_samp: keys_stddev_samp_fields

  """"""
  sum: keys_sum_fields

  """"""
  var_pop: keys_var_pop_fields

  """"""
  var_samp: keys_var_samp_fields

  """"""
  variance: keys_variance_fields
}

"""aggregate avg on columns"""
type keys_avg_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
Boolean expression to filter rows from the table "keys". All fields are combined with a logical 'AND'.
"""
input keys_bool_exp {
  """"""
  _and: [keys_bool_exp!]

  """"""
  _not: keys_bool_exp

  """"""
  _or: [keys_bool_exp!]

  """"""
  algorithm: String_comparison_exp

  """"""
  applications: applications_bool_exp

  """"""
  applicationsByAccessTokenSigningKeysId: applications_bool_exp

  """"""
  applicationsByIdTokenSigningKeysId: applications_bool_exp

  """"""
  certificate: String_comparison_exp

  """"""
  connectors: connectors_bool_exp

  """"""
  expiration_instant: bigint_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  identity_providers: identity_providers_bool_exp

  """"""
  identity_providers_applications: identity_providers_applications_bool_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  issuer: String_comparison_exp

  """"""
  kid: String_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  private_key: String_comparison_exp

  """"""
  public_key: String_comparison_exp

  """"""
  secret: String_comparison_exp

  """"""
  tenants: tenants_bool_exp

  """"""
  tenantsByIdTokenSigningKeysId: tenants_bool_exp

  """"""
  type: String_comparison_exp
}

"""
unique or primary key constraints on table "keys"
"""
enum keys_constraint {
  """unique or primary key constraint"""
  keys_pkey

  """unique or primary key constraint"""
  keys_uk_1

  """unique or primary key constraint"""
  keys_uk_2
}

"""
input type for incrementing numeric columns in table "keys"
"""
input keys_inc_input {
  """"""
  expiration_instant: bigint

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "keys"
"""
input keys_insert_input {
  """"""
  algorithm: String

  """"""
  applications: applications_arr_rel_insert_input

  """"""
  applicationsByAccessTokenSigningKeysId: applications_arr_rel_insert_input

  """"""
  applicationsByIdTokenSigningKeysId: applications_arr_rel_insert_input

  """"""
  certificate: String

  """"""
  connectors: connectors_arr_rel_insert_input

  """"""
  expiration_instant: bigint

  """"""
  id: uuid

  """"""
  identity_providers: identity_providers_arr_rel_insert_input

  """"""
  identity_providers_applications: identity_providers_applications_arr_rel_insert_input

  """"""
  insert_instant: bigint

  """"""
  issuer: String

  """"""
  kid: String

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  private_key: String

  """"""
  public_key: String

  """"""
  secret: String

  """"""
  tenants: tenants_arr_rel_insert_input

  """"""
  tenantsByIdTokenSigningKeysId: tenants_arr_rel_insert_input

  """"""
  type: String
}

"""aggregate max on columns"""
type keys_max_fields {
  """"""
  algorithm: String

  """"""
  certificate: String

  """"""
  expiration_instant: bigint

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  issuer: String

  """"""
  kid: String

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  private_key: String

  """"""
  public_key: String

  """"""
  secret: String

  """"""
  type: String
}

"""aggregate min on columns"""
type keys_min_fields {
  """"""
  algorithm: String

  """"""
  certificate: String

  """"""
  expiration_instant: bigint

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  issuer: String

  """"""
  kid: String

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  private_key: String

  """"""
  public_key: String

  """"""
  secret: String

  """"""
  type: String
}

"""
response of any mutation on the table "keys"
"""
type keys_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [keys!]!
}

"""
input type for inserting object relation for remote table "keys"
"""
input keys_obj_rel_insert_input {
  """"""
  data: keys_insert_input!

  """on conflict condition"""
  on_conflict: keys_on_conflict
}

"""
on conflict condition type for table "keys"
"""
input keys_on_conflict {
  """"""
  constraint: keys_constraint!

  """"""
  update_columns: [keys_update_column!]!

  """"""
  where: keys_bool_exp
}

"""Ordering options when selecting data from "keys"."""
input keys_order_by {
  """"""
  algorithm: order_by

  """"""
  applicationsByAccessTokenSigningKeysId_aggregate: applications_aggregate_order_by

  """"""
  applicationsByIdTokenSigningKeysId_aggregate: applications_aggregate_order_by

  """"""
  applications_aggregate: applications_aggregate_order_by

  """"""
  certificate: order_by

  """"""
  connectors_aggregate: connectors_aggregate_order_by

  """"""
  expiration_instant: order_by

  """"""
  id: order_by

  """"""
  identity_providers_aggregate: identity_providers_aggregate_order_by

  """"""
  identity_providers_applications_aggregate: identity_providers_applications_aggregate_order_by

  """"""
  insert_instant: order_by

  """"""
  issuer: order_by

  """"""
  kid: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  private_key: order_by

  """"""
  public_key: order_by

  """"""
  secret: order_by

  """"""
  tenantsByIdTokenSigningKeysId_aggregate: tenants_aggregate_order_by

  """"""
  tenants_aggregate: tenants_aggregate_order_by

  """"""
  type: order_by
}

"""primary key columns input for table: keys"""
input keys_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "keys"
"""
enum keys_select_column {
  """column name"""
  algorithm

  """column name"""
  certificate

  """column name"""
  expiration_instant

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  issuer

  """column name"""
  kid

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  private_key

  """column name"""
  public_key

  """column name"""
  secret

  """column name"""
  type
}

"""
input type for updating data in table "keys"
"""
input keys_set_input {
  """"""
  algorithm: String

  """"""
  certificate: String

  """"""
  expiration_instant: bigint

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  issuer: String

  """"""
  kid: String

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  private_key: String

  """"""
  public_key: String

  """"""
  secret: String

  """"""
  type: String
}

"""aggregate stddev on columns"""
type keys_stddev_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_pop on columns"""
type keys_stddev_pop_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_samp on columns"""
type keys_stddev_samp_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate sum on columns"""
type keys_sum_fields {
  """"""
  expiration_instant: bigint

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
update columns of table "keys"
"""
enum keys_update_column {
  """column name"""
  algorithm

  """column name"""
  certificate

  """column name"""
  expiration_instant

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  issuer

  """column name"""
  kid

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  private_key

  """column name"""
  public_key

  """column name"""
  secret

  """column name"""
  type
}

"""aggregate var_pop on columns"""
type keys_var_pop_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate var_samp on columns"""
type keys_var_samp_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate variance on columns"""
type keys_variance_fields {
  """"""
  expiration_instant: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
columns and relationships of "lambdas"
"""
type lambdas {
  """An array relationship"""
  applications(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An array relationship"""
  applicationsByIdTokenPopulateLambdasId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsByIdTokenPopulateLambdasId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  applicationsBySamlv2PopulateLambdasId(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applicationsBySamlv2PopulateLambdasId_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An aggregate relationship"""
  applications_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """"""
  body: String!

  """An array relationship"""
  connectors(
    """distinct select on columns"""
    distinct_on: [connectors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_order_by!]

    """filter the rows returned"""
    where: connectors_bool_exp
  ): [connectors!]!

  """An aggregate relationship"""
  connectors_aggregate(
    """distinct select on columns"""
    distinct_on: [connectors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_order_by!]

    """filter the rows returned"""
    where: connectors_bool_exp
  ): connectors_aggregate!

  """"""
  debug: Boolean!

  """"""
  enabled: Boolean!

  """"""
  id: uuid!

  """An array relationship"""
  identity_providers(
    """distinct select on columns"""
    distinct_on: [identity_providers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_order_by!]

    """filter the rows returned"""
    where: identity_providers_bool_exp
  ): [identity_providers!]!

  """An aggregate relationship"""
  identity_providers_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_order_by!]

    """filter the rows returned"""
    where: identity_providers_bool_exp
  ): identity_providers_aggregate!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  type: smallint!
}

"""
aggregated selection of "lambdas"
"""
type lambdas_aggregate {
  """"""
  aggregate: lambdas_aggregate_fields

  """"""
  nodes: [lambdas!]!
}

"""
aggregate fields of "lambdas"
"""
type lambdas_aggregate_fields {
  """"""
  avg: lambdas_avg_fields

  """"""
  count(columns: [lambdas_select_column!], distinct: Boolean): Int!

  """"""
  max: lambdas_max_fields

  """"""
  min: lambdas_min_fields

  """"""
  stddev: lambdas_stddev_fields

  """"""
  stddev_pop: lambdas_stddev_pop_fields

  """"""
  stddev_samp: lambdas_stddev_samp_fields

  """"""
  sum: lambdas_sum_fields

  """"""
  var_pop: lambdas_var_pop_fields

  """"""
  var_samp: lambdas_var_samp_fields

  """"""
  variance: lambdas_variance_fields
}

"""aggregate avg on columns"""
type lambdas_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
Boolean expression to filter rows from the table "lambdas". All fields are combined with a logical 'AND'.
"""
input lambdas_bool_exp {
  """"""
  _and: [lambdas_bool_exp!]

  """"""
  _not: lambdas_bool_exp

  """"""
  _or: [lambdas_bool_exp!]

  """"""
  applications: applications_bool_exp

  """"""
  applicationsByIdTokenPopulateLambdasId: applications_bool_exp

  """"""
  applicationsBySamlv2PopulateLambdasId: applications_bool_exp

  """"""
  body: String_comparison_exp

  """"""
  connectors: connectors_bool_exp

  """"""
  debug: Boolean_comparison_exp

  """"""
  enabled: Boolean_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  identity_providers: identity_providers_bool_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  type: smallint_comparison_exp
}

"""
unique or primary key constraints on table "lambdas"
"""
enum lambdas_constraint {
  """unique or primary key constraint"""
  lambdas_pkey
}

"""
input type for incrementing numeric columns in table "lambdas"
"""
input lambdas_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  type: smallint
}

"""
input type for inserting data into table "lambdas"
"""
input lambdas_insert_input {
  """"""
  applications: applications_arr_rel_insert_input

  """"""
  applicationsByIdTokenPopulateLambdasId: applications_arr_rel_insert_input

  """"""
  applicationsBySamlv2PopulateLambdasId: applications_arr_rel_insert_input

  """"""
  body: String

  """"""
  connectors: connectors_arr_rel_insert_input

  """"""
  debug: Boolean

  """"""
  enabled: Boolean

  """"""
  id: uuid

  """"""
  identity_providers: identity_providers_arr_rel_insert_input

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""aggregate max on columns"""
type lambdas_max_fields {
  """"""
  body: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""aggregate min on columns"""
type lambdas_min_fields {
  """"""
  body: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""
response of any mutation on the table "lambdas"
"""
type lambdas_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lambdas!]!
}

"""
input type for inserting object relation for remote table "lambdas"
"""
input lambdas_obj_rel_insert_input {
  """"""
  data: lambdas_insert_input!

  """on conflict condition"""
  on_conflict: lambdas_on_conflict
}

"""
on conflict condition type for table "lambdas"
"""
input lambdas_on_conflict {
  """"""
  constraint: lambdas_constraint!

  """"""
  update_columns: [lambdas_update_column!]!

  """"""
  where: lambdas_bool_exp
}

"""Ordering options when selecting data from "lambdas"."""
input lambdas_order_by {
  """"""
  applicationsByIdTokenPopulateLambdasId_aggregate: applications_aggregate_order_by

  """"""
  applicationsBySamlv2PopulateLambdasId_aggregate: applications_aggregate_order_by

  """"""
  applications_aggregate: applications_aggregate_order_by

  """"""
  body: order_by

  """"""
  connectors_aggregate: connectors_aggregate_order_by

  """"""
  debug: order_by

  """"""
  enabled: order_by

  """"""
  id: order_by

  """"""
  identity_providers_aggregate: identity_providers_aggregate_order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  type: order_by
}

"""primary key columns input for table: lambdas"""
input lambdas_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "lambdas"
"""
enum lambdas_select_column {
  """column name"""
  body

  """column name"""
  debug

  """column name"""
  enabled

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  type
}

"""
input type for updating data in table "lambdas"
"""
input lambdas_set_input {
  """"""
  body: String

  """"""
  debug: Boolean

  """"""
  enabled: Boolean

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  type: smallint
}

"""aggregate stddev on columns"""
type lambdas_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate stddev_pop on columns"""
type lambdas_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate stddev_samp on columns"""
type lambdas_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate sum on columns"""
type lambdas_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  type: smallint
}

"""
update columns of table "lambdas"
"""
enum lambdas_update_column {
  """column name"""
  body

  """column name"""
  debug

  """column name"""
  enabled

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  type
}

"""aggregate var_pop on columns"""
type lambdas_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate var_samp on columns"""
type lambdas_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""aggregate variance on columns"""
type lambdas_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  type: Float
}

"""
columns and relationships of "lo"
"""
type lo {
  """An array relationship"""
  assessment_au_lo_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): [assessment_au_lo_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_lo_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): assessment_au_lo_aggregate_submission_aggregate!
  code: String
  grade_number: Int!
  id: Int!
  is_unit: Boolean!

  """An array relationship"""
  lo_assessments(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): [lo_assessment!]!

  """An aggregate relationship"""
  lo_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): lo_assessment_aggregate!

  """An array relationship"""
  lo_submissions(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): [lo_submission!]!

  """An aggregate relationship"""
  lo_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): lo_submission_aggregate!
  name: String!

  """An array relationship"""
  questions(
    """distinct select on columns"""
    distinct_on: [question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_order_by!]

    """filter the rows returned"""
    where: question_bool_exp
  ): [question!]!

  """An aggregate relationship"""
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_order_by!]

    """filter the rows returned"""
    where: question_bool_exp
  ): question_aggregate!

  """An array relationship"""
  server_logroup_los(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): [server_logroup_lo!]!

  """An aggregate relationship"""
  server_logroup_los_aggregate(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): server_logroup_lo_aggregate!

  """An object relationship"""
  subject: subject
  subject_id: Int

  """An array relationship"""
  subject_submission_selected_los(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): [subject_submission_selected_lo!]!

  """An aggregate relationship"""
  subject_submission_selected_los_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): subject_submission_selected_lo_aggregate!
}

"""
aggregated selection of "lo"
"""
type lo_aggregate {
  aggregate: lo_aggregate_fields
  nodes: [lo!]!
}

"""
aggregate fields of "lo"
"""
type lo_aggregate_fields {
  avg: lo_avg_fields
  count(columns: [lo_select_column!], distinct: Boolean): Int!
  max: lo_max_fields
  min: lo_min_fields
  stddev: lo_stddev_fields
  stddev_pop: lo_stddev_pop_fields
  stddev_samp: lo_stddev_samp_fields
  sum: lo_sum_fields
  var_pop: lo_var_pop_fields
  var_samp: lo_var_samp_fields
  variance: lo_variance_fields
}

"""
order by aggregate values of table "lo"
"""
input lo_aggregate_order_by {
  avg: lo_avg_order_by
  count: order_by
  max: lo_max_order_by
  min: lo_min_order_by
  stddev: lo_stddev_order_by
  stddev_pop: lo_stddev_pop_order_by
  stddev_samp: lo_stddev_samp_order_by
  sum: lo_sum_order_by
  var_pop: lo_var_pop_order_by
  var_samp: lo_var_samp_order_by
  variance: lo_variance_order_by
}

"""
input type for inserting array relation for remote table "lo"
"""
input lo_arr_rel_insert_input {
  data: [lo_insert_input!]!

  """on conflict condition"""
  on_conflict: lo_on_conflict
}

"""
columns and relationships of "lo_assessment"
"""
type lo_assessment {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  lo: lo!
  lo_id: Int!
}

"""
aggregated selection of "lo_assessment"
"""
type lo_assessment_aggregate {
  aggregate: lo_assessment_aggregate_fields
  nodes: [lo_assessment!]!
}

"""
aggregate fields of "lo_assessment"
"""
type lo_assessment_aggregate_fields {
  avg: lo_assessment_avg_fields
  count(columns: [lo_assessment_select_column!], distinct: Boolean): Int!
  max: lo_assessment_max_fields
  min: lo_assessment_min_fields
  stddev: lo_assessment_stddev_fields
  stddev_pop: lo_assessment_stddev_pop_fields
  stddev_samp: lo_assessment_stddev_samp_fields
  sum: lo_assessment_sum_fields
  var_pop: lo_assessment_var_pop_fields
  var_samp: lo_assessment_var_samp_fields
  variance: lo_assessment_variance_fields
}

"""
order by aggregate values of table "lo_assessment"
"""
input lo_assessment_aggregate_order_by {
  avg: lo_assessment_avg_order_by
  count: order_by
  max: lo_assessment_max_order_by
  min: lo_assessment_min_order_by
  stddev: lo_assessment_stddev_order_by
  stddev_pop: lo_assessment_stddev_pop_order_by
  stddev_samp: lo_assessment_stddev_samp_order_by
  sum: lo_assessment_sum_order_by
  var_pop: lo_assessment_var_pop_order_by
  var_samp: lo_assessment_var_samp_order_by
  variance: lo_assessment_variance_order_by
}

"""
input type for inserting array relation for remote table "lo_assessment"
"""
input lo_assessment_arr_rel_insert_input {
  data: [lo_assessment_insert_input!]!

  """on conflict condition"""
  on_conflict: lo_assessment_on_conflict
}

"""aggregate avg on columns"""
type lo_assessment_avg_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by avg() on columns of table "lo_assessment"
"""
input lo_assessment_avg_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""
Boolean expression to filter rows from the table "lo_assessment". All fields are combined with a logical 'AND'.
"""
input lo_assessment_bool_exp {
  _and: [lo_assessment_bool_exp!]
  _not: lo_assessment_bool_exp
  _or: [lo_assessment_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  lo: lo_bool_exp
  lo_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "lo_assessment"
"""
enum lo_assessment_constraint {
  """unique or primary key constraint"""
  lo_assessment_lo_id_assessment_id_f2d05033_uniq

  """unique or primary key constraint"""
  lo_assessment_pkey
}

"""
input type for incrementing numeric columns in table "lo_assessment"
"""
input lo_assessment_inc_input {
  assessment_id: Int
  id: Int
  lo_id: Int
}

"""
input type for inserting data into table "lo_assessment"
"""
input lo_assessment_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  lo: lo_obj_rel_insert_input
  lo_id: Int
}

"""aggregate max on columns"""
type lo_assessment_max_fields {
  assessment_id: Int
  id: Int
  lo_id: Int
}

"""
order by max() on columns of table "lo_assessment"
"""
input lo_assessment_max_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate min on columns"""
type lo_assessment_min_fields {
  assessment_id: Int
  id: Int
  lo_id: Int
}

"""
order by min() on columns of table "lo_assessment"
"""
input lo_assessment_min_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""
response of any mutation on the table "lo_assessment"
"""
type lo_assessment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_assessment!]!
}

"""
on conflict condition type for table "lo_assessment"
"""
input lo_assessment_on_conflict {
  constraint: lo_assessment_constraint!
  update_columns: [lo_assessment_update_column!]! = []
  where: lo_assessment_bool_exp
}

"""Ordering options when selecting data from "lo_assessment"."""
input lo_assessment_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  lo: lo_order_by
  lo_id: order_by
}

"""primary key columns input for table: lo_assessment"""
input lo_assessment_pk_columns_input {
  id: Int!
}

"""
select columns of table "lo_assessment"
"""
enum lo_assessment_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  lo_id
}

"""
input type for updating data in table "lo_assessment"
"""
input lo_assessment_set_input {
  assessment_id: Int
  id: Int
  lo_id: Int
}

"""aggregate stddev on columns"""
type lo_assessment_stddev_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by stddev() on columns of table "lo_assessment"
"""
input lo_assessment_stddev_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate stddev_pop on columns"""
type lo_assessment_stddev_pop_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by stddev_pop() on columns of table "lo_assessment"
"""
input lo_assessment_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate stddev_samp on columns"""
type lo_assessment_stddev_samp_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by stddev_samp() on columns of table "lo_assessment"
"""
input lo_assessment_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate sum on columns"""
type lo_assessment_sum_fields {
  assessment_id: Int
  id: Int
  lo_id: Int
}

"""
order by sum() on columns of table "lo_assessment"
"""
input lo_assessment_sum_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""
update columns of table "lo_assessment"
"""
enum lo_assessment_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  lo_id
}

"""aggregate var_pop on columns"""
type lo_assessment_var_pop_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by var_pop() on columns of table "lo_assessment"
"""
input lo_assessment_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate var_samp on columns"""
type lo_assessment_var_samp_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by var_samp() on columns of table "lo_assessment"
"""
input lo_assessment_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate variance on columns"""
type lo_assessment_variance_fields {
  assessment_id: Float
  id: Float
  lo_id: Float
}

"""
order by variance() on columns of table "lo_assessment"
"""
input lo_assessment_variance_order_by {
  assessment_id: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate avg on columns"""
type lo_avg_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "lo"
"""
input lo_avg_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "lo". All fields are combined with a logical 'AND'.
"""
input lo_bool_exp {
  _and: [lo_bool_exp!]
  _not: lo_bool_exp
  _or: [lo_bool_exp!]
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_bool_exp
  code: String_comparison_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  is_unit: Boolean_comparison_exp
  lo_assessments: lo_assessment_bool_exp
  lo_submissions: lo_submission_bool_exp
  name: String_comparison_exp
  questions: question_bool_exp
  server_logroup_los: server_logroup_lo_bool_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  subject_submission_selected_los: subject_submission_selected_lo_bool_exp
}

"""
columns and relationships of "lo_bundle"
"""
type lo_bundle {
  """An array relationship"""
  assessment_lo_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): [assessment_lo_bundles!]!

  """An aggregate relationship"""
  assessment_lo_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): assessment_lo_bundles_aggregate!
  cache(
    """JSON select path"""
    path: String
  ): jsonb
  created: timestamptz
  desc: String!
  id: Int!

  """An array relationship"""
  lo_bundle_los(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): [lo_bundle_los!]!

  """An aggregate relationship"""
  lo_bundle_los_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): lo_bundle_los_aggregate!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "lo_bundle"
"""
type lo_bundle_aggregate {
  aggregate: lo_bundle_aggregate_fields
  nodes: [lo_bundle!]!
}

"""
aggregate fields of "lo_bundle"
"""
type lo_bundle_aggregate_fields {
  avg: lo_bundle_avg_fields
  count(columns: [lo_bundle_select_column!], distinct: Boolean): Int!
  max: lo_bundle_max_fields
  min: lo_bundle_min_fields
  stddev: lo_bundle_stddev_fields
  stddev_pop: lo_bundle_stddev_pop_fields
  stddev_samp: lo_bundle_stddev_samp_fields
  sum: lo_bundle_sum_fields
  var_pop: lo_bundle_var_pop_fields
  var_samp: lo_bundle_var_samp_fields
  variance: lo_bundle_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input lo_bundle_append_input {
  cache: jsonb
}

"""aggregate avg on columns"""
type lo_bundle_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "lo_bundle". All fields are combined with a logical 'AND'.
"""
input lo_bundle_bool_exp {
  _and: [lo_bundle_bool_exp!]
  _not: lo_bundle_bool_exp
  _or: [lo_bundle_bool_exp!]
  assessment_lo_bundles: assessment_lo_bundles_bool_exp
  cache: jsonb_comparison_exp
  created: timestamptz_comparison_exp
  desc: String_comparison_exp
  id: Int_comparison_exp
  lo_bundle_los: lo_bundle_los_bool_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lo_bundle"
"""
enum lo_bundle_constraint {
  """unique or primary key constraint"""
  lo_bundle_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input lo_bundle_delete_at_path_input {
  cache: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input lo_bundle_delete_elem_input {
  cache: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input lo_bundle_delete_key_input {
  cache: String
}

"""
input type for incrementing numeric columns in table "lo_bundle"
"""
input lo_bundle_inc_input {
  id: Int
}

"""
input type for inserting data into table "lo_bundle"
"""
input lo_bundle_insert_input {
  assessment_lo_bundles: assessment_lo_bundles_arr_rel_insert_input
  cache: jsonb
  created: timestamptz
  desc: String
  id: Int
  lo_bundle_los: lo_bundle_los_arr_rel_insert_input
  name: String
  updated: timestamptz
}

"""
columns and relationships of "lo_bundle_los"
"""
type lo_bundle_los {
  id: Int!

  """An object relationship"""
  lo_bundle: lo_bundle!

  """An object relationship"""
  lo_v2: lo_v2!
  lo_v2_id: Int!
  lobundle_id: Int!
}

"""
aggregated selection of "lo_bundle_los"
"""
type lo_bundle_los_aggregate {
  aggregate: lo_bundle_los_aggregate_fields
  nodes: [lo_bundle_los!]!
}

"""
aggregate fields of "lo_bundle_los"
"""
type lo_bundle_los_aggregate_fields {
  avg: lo_bundle_los_avg_fields
  count(columns: [lo_bundle_los_select_column!], distinct: Boolean): Int!
  max: lo_bundle_los_max_fields
  min: lo_bundle_los_min_fields
  stddev: lo_bundle_los_stddev_fields
  stddev_pop: lo_bundle_los_stddev_pop_fields
  stddev_samp: lo_bundle_los_stddev_samp_fields
  sum: lo_bundle_los_sum_fields
  var_pop: lo_bundle_los_var_pop_fields
  var_samp: lo_bundle_los_var_samp_fields
  variance: lo_bundle_los_variance_fields
}

"""
order by aggregate values of table "lo_bundle_los"
"""
input lo_bundle_los_aggregate_order_by {
  avg: lo_bundle_los_avg_order_by
  count: order_by
  max: lo_bundle_los_max_order_by
  min: lo_bundle_los_min_order_by
  stddev: lo_bundle_los_stddev_order_by
  stddev_pop: lo_bundle_los_stddev_pop_order_by
  stddev_samp: lo_bundle_los_stddev_samp_order_by
  sum: lo_bundle_los_sum_order_by
  var_pop: lo_bundle_los_var_pop_order_by
  var_samp: lo_bundle_los_var_samp_order_by
  variance: lo_bundle_los_variance_order_by
}

"""
input type for inserting array relation for remote table "lo_bundle_los"
"""
input lo_bundle_los_arr_rel_insert_input {
  data: [lo_bundle_los_insert_input!]!

  """on conflict condition"""
  on_conflict: lo_bundle_los_on_conflict
}

"""aggregate avg on columns"""
type lo_bundle_los_avg_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by avg() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_avg_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""
Boolean expression to filter rows from the table "lo_bundle_los". All fields are combined with a logical 'AND'.
"""
input lo_bundle_los_bool_exp {
  _and: [lo_bundle_los_bool_exp!]
  _not: lo_bundle_los_bool_exp
  _or: [lo_bundle_los_bool_exp!]
  id: Int_comparison_exp
  lo_bundle: lo_bundle_bool_exp
  lo_v2: lo_v2_bool_exp
  lo_v2_id: Int_comparison_exp
  lobundle_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "lo_bundle_los"
"""
enum lo_bundle_los_constraint {
  """unique or primary key constraint"""
  lo_bundle_lo_lobundle_id_lo_v2_id_f4fc4856_uniq

  """unique or primary key constraint"""
  lo_bundle_lo_pkey
}

"""
input type for incrementing numeric columns in table "lo_bundle_los"
"""
input lo_bundle_los_inc_input {
  id: Int
  lo_v2_id: Int
  lobundle_id: Int
}

"""
input type for inserting data into table "lo_bundle_los"
"""
input lo_bundle_los_insert_input {
  id: Int
  lo_bundle: lo_bundle_obj_rel_insert_input
  lo_v2: lo_v2_obj_rel_insert_input
  lo_v2_id: Int
  lobundle_id: Int
}

"""aggregate max on columns"""
type lo_bundle_los_max_fields {
  id: Int
  lo_v2_id: Int
  lobundle_id: Int
}

"""
order by max() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_max_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate min on columns"""
type lo_bundle_los_min_fields {
  id: Int
  lo_v2_id: Int
  lobundle_id: Int
}

"""
order by min() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_min_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""
response of any mutation on the table "lo_bundle_los"
"""
type lo_bundle_los_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_bundle_los!]!
}

"""
on conflict condition type for table "lo_bundle_los"
"""
input lo_bundle_los_on_conflict {
  constraint: lo_bundle_los_constraint!
  update_columns: [lo_bundle_los_update_column!]! = []
  where: lo_bundle_los_bool_exp
}

"""Ordering options when selecting data from "lo_bundle_los"."""
input lo_bundle_los_order_by {
  id: order_by
  lo_bundle: lo_bundle_order_by
  lo_v2: lo_v2_order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""primary key columns input for table: lo_bundle_los"""
input lo_bundle_los_pk_columns_input {
  id: Int!
}

"""
select columns of table "lo_bundle_los"
"""
enum lo_bundle_los_select_column {
  """column name"""
  id

  """column name"""
  lo_v2_id

  """column name"""
  lobundle_id
}

"""
input type for updating data in table "lo_bundle_los"
"""
input lo_bundle_los_set_input {
  id: Int
  lo_v2_id: Int
  lobundle_id: Int
}

"""aggregate stddev on columns"""
type lo_bundle_los_stddev_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by stddev() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_stddev_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate stddev_pop on columns"""
type lo_bundle_los_stddev_pop_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by stddev_pop() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_stddev_pop_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate stddev_samp on columns"""
type lo_bundle_los_stddev_samp_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by stddev_samp() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_stddev_samp_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate sum on columns"""
type lo_bundle_los_sum_fields {
  id: Int
  lo_v2_id: Int
  lobundle_id: Int
}

"""
order by sum() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_sum_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""
update columns of table "lo_bundle_los"
"""
enum lo_bundle_los_update_column {
  """column name"""
  id

  """column name"""
  lo_v2_id

  """column name"""
  lobundle_id
}

"""aggregate var_pop on columns"""
type lo_bundle_los_var_pop_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by var_pop() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_var_pop_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate var_samp on columns"""
type lo_bundle_los_var_samp_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by var_samp() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_var_samp_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate variance on columns"""
type lo_bundle_los_variance_fields {
  id: Float
  lo_v2_id: Float
  lobundle_id: Float
}

"""
order by variance() on columns of table "lo_bundle_los"
"""
input lo_bundle_los_variance_order_by {
  id: order_by
  lo_v2_id: order_by
  lobundle_id: order_by
}

"""aggregate max on columns"""
type lo_bundle_max_fields {
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type lo_bundle_min_fields {
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "lo_bundle"
"""
type lo_bundle_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_bundle!]!
}

"""
input type for inserting object relation for remote table "lo_bundle"
"""
input lo_bundle_obj_rel_insert_input {
  data: lo_bundle_insert_input!

  """on conflict condition"""
  on_conflict: lo_bundle_on_conflict
}

"""
on conflict condition type for table "lo_bundle"
"""
input lo_bundle_on_conflict {
  constraint: lo_bundle_constraint!
  update_columns: [lo_bundle_update_column!]! = []
  where: lo_bundle_bool_exp
}

"""Ordering options when selecting data from "lo_bundle"."""
input lo_bundle_order_by {
  assessment_lo_bundles_aggregate: assessment_lo_bundles_aggregate_order_by
  cache: order_by
  created: order_by
  desc: order_by
  id: order_by
  lo_bundle_los_aggregate: lo_bundle_los_aggregate_order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: lo_bundle"""
input lo_bundle_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input lo_bundle_prepend_input {
  cache: jsonb
}

"""
select columns of table "lo_bundle"
"""
enum lo_bundle_select_column {
  """column name"""
  cache

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "lo_bundle"
"""
input lo_bundle_set_input {
  cache: jsonb
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type lo_bundle_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type lo_bundle_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type lo_bundle_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type lo_bundle_sum_fields {
  id: Int
}

"""
update columns of table "lo_bundle"
"""
enum lo_bundle_update_column {
  """column name"""
  cache

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type lo_bundle_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type lo_bundle_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type lo_bundle_variance_fields {
  id: Float
}

"""
unique or primary key constraints on table "lo"
"""
enum lo_constraint {
  """unique or primary key constraint"""
  lo_pkey
}

"""
input type for incrementing numeric columns in table "lo"
"""
input lo_inc_input {
  grade_number: Int
  id: Int
  subject_id: Int
}

"""
input type for inserting data into table "lo"
"""
input lo_insert_input {
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_arr_rel_insert_input
  code: String
  grade_number: Int
  id: Int
  is_unit: Boolean
  lo_assessments: lo_assessment_arr_rel_insert_input
  lo_submissions: lo_submission_arr_rel_insert_input
  name: String
  questions: question_arr_rel_insert_input
  server_logroup_los: server_logroup_lo_arr_rel_insert_input
  subject: subject_obj_rel_insert_input
  subject_id: Int
  subject_submission_selected_los: subject_submission_selected_lo_arr_rel_insert_input
}

"""aggregate max on columns"""
type lo_max_fields {
  code: String
  grade_number: Int
  id: Int
  name: String
  subject_id: Int
}

"""
order by max() on columns of table "lo"
"""
input lo_max_order_by {
  code: order_by
  grade_number: order_by
  id: order_by
  name: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type lo_min_fields {
  code: String
  grade_number: Int
  id: Int
  name: String
  subject_id: Int
}

"""
order by min() on columns of table "lo"
"""
input lo_min_order_by {
  code: order_by
  grade_number: order_by
  id: order_by
  name: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "lo"
"""
type lo_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo!]!
}

"""
input type for inserting object relation for remote table "lo"
"""
input lo_obj_rel_insert_input {
  data: lo_insert_input!

  """on conflict condition"""
  on_conflict: lo_on_conflict
}

"""
on conflict condition type for table "lo"
"""
input lo_on_conflict {
  constraint: lo_constraint!
  update_columns: [lo_update_column!]! = []
  where: lo_bool_exp
}

"""Ordering options when selecting data from "lo"."""
input lo_order_by {
  assessment_au_lo_aggregate_submissions_aggregate: assessment_au_lo_aggregate_submission_aggregate_order_by
  code: order_by
  grade_number: order_by
  id: order_by
  is_unit: order_by
  lo_assessments_aggregate: lo_assessment_aggregate_order_by
  lo_submissions_aggregate: lo_submission_aggregate_order_by
  name: order_by
  questions_aggregate: question_aggregate_order_by
  server_logroup_los_aggregate: server_logroup_lo_aggregate_order_by
  subject: subject_order_by
  subject_id: order_by
  subject_submission_selected_los_aggregate: subject_submission_selected_lo_aggregate_order_by
}

"""primary key columns input for table: lo"""
input lo_pk_columns_input {
  id: Int!
}

"""
select columns of table "lo"
"""
enum lo_select_column {
  """column name"""
  code

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  is_unit

  """column name"""
  name

  """column name"""
  subject_id
}

"""
input type for updating data in table "lo"
"""
input lo_set_input {
  code: String
  grade_number: Int
  id: Int
  is_unit: Boolean
  name: String
  subject_id: Int
}

"""aggregate stddev on columns"""
type lo_stddev_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "lo"
"""
input lo_stddev_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type lo_stddev_pop_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "lo"
"""
input lo_stddev_pop_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type lo_stddev_samp_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "lo"
"""
input lo_stddev_samp_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
columns and relationships of "lo_submission"
"""
type lo_submission {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  created: timestamptz

  """An object relationship"""
  grade: grade!
  grade_id: Int!
  id: Int!

  """An object relationship"""
  lo: lo!
  lo_id: Int!

  """An object relationship"""
  school: school!
  school_id: Int!
  students_cleared: Int!
  updated: timestamptz
}

"""
aggregated selection of "lo_submission"
"""
type lo_submission_aggregate {
  aggregate: lo_submission_aggregate_fields
  nodes: [lo_submission!]!
}

"""
aggregate fields of "lo_submission"
"""
type lo_submission_aggregate_fields {
  avg: lo_submission_avg_fields
  count(columns: [lo_submission_select_column!], distinct: Boolean): Int!
  max: lo_submission_max_fields
  min: lo_submission_min_fields
  stddev: lo_submission_stddev_fields
  stddev_pop: lo_submission_stddev_pop_fields
  stddev_samp: lo_submission_stddev_samp_fields
  sum: lo_submission_sum_fields
  var_pop: lo_submission_var_pop_fields
  var_samp: lo_submission_var_samp_fields
  variance: lo_submission_variance_fields
}

"""
order by aggregate values of table "lo_submission"
"""
input lo_submission_aggregate_order_by {
  avg: lo_submission_avg_order_by
  count: order_by
  max: lo_submission_max_order_by
  min: lo_submission_min_order_by
  stddev: lo_submission_stddev_order_by
  stddev_pop: lo_submission_stddev_pop_order_by
  stddev_samp: lo_submission_stddev_samp_order_by
  sum: lo_submission_sum_order_by
  var_pop: lo_submission_var_pop_order_by
  var_samp: lo_submission_var_samp_order_by
  variance: lo_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "lo_submission"
"""
input lo_submission_arr_rel_insert_input {
  data: [lo_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: lo_submission_on_conflict
}

"""aggregate avg on columns"""
type lo_submission_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by avg() on columns of table "lo_submission"
"""
input lo_submission_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
Boolean expression to filter rows from the table "lo_submission". All fields are combined with a logical 'AND'.
"""
input lo_submission_bool_exp {
  _and: [lo_submission_bool_exp!]
  _not: lo_submission_bool_exp
  _or: [lo_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  lo: lo_bool_exp
  lo_id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  students_cleared: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lo_submission"
"""
enum lo_submission_constraint {
  """unique or primary key constraint"""
  lo_submission_pkey
}

"""
input type for incrementing numeric columns in table "lo_submission"
"""
input lo_submission_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
}

"""
input type for inserting data into table "lo_submission"
"""
input lo_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  lo: lo_obj_rel_insert_input
  lo_id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type lo_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by max() on columns of table "lo_submission"
"""
input lo_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""aggregate min on columns"""
type lo_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by min() on columns of table "lo_submission"
"""
input lo_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""
response of any mutation on the table "lo_submission"
"""
type lo_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_submission!]!
}

"""
on conflict condition type for table "lo_submission"
"""
input lo_submission_on_conflict {
  constraint: lo_submission_constraint!
  update_columns: [lo_submission_update_column!]! = []
  where: lo_submission_bool_exp
}

"""Ordering options when selecting data from "lo_submission"."""
input lo_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  lo: lo_order_by
  lo_id: order_by
  school: school_order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""primary key columns input for table: lo_submission"""
input lo_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "lo_submission"
"""
enum lo_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""
input type for updating data in table "lo_submission"
"""
input lo_submission_set_input {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type lo_submission_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev() on columns of table "lo_submission"
"""
input lo_submission_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_pop on columns"""
type lo_submission_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_pop() on columns of table "lo_submission"
"""
input lo_submission_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_samp on columns"""
type lo_submission_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_samp() on columns of table "lo_submission"
"""
input lo_submission_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type lo_submission_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
}

"""
order by sum() on columns of table "lo_submission"
"""
input lo_submission_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
update columns of table "lo_submission"
"""
enum lo_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type lo_submission_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_pop() on columns of table "lo_submission"
"""
input lo_submission_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate var_samp on columns"""
type lo_submission_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_samp() on columns of table "lo_submission"
"""
input lo_submission_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate variance on columns"""
type lo_submission_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by variance() on columns of table "lo_submission"
"""
input lo_submission_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  lo_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type lo_sum_fields {
  grade_number: Int
  id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "lo"
"""
input lo_sum_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
columns and relationships of "lo_table"
"""
type lo_table {
  Learning_Outcome: String
  acad_year: String
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
  sub: String
  subject: String
  type: String
}

"""
columns and relationships of "lo_table2"
"""
type lo_table2 {
  Learning_Outcome: String
  acad_year: String
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  section: String
  students_cleared: Int
  students_present: bigint
  subject: String
  type: String
}

"""
aggregated selection of "lo_table2"
"""
type lo_table2_aggregate {
  aggregate: lo_table2_aggregate_fields
  nodes: [lo_table2!]!
}

"""
aggregate fields of "lo_table2"
"""
type lo_table2_aggregate_fields {
  avg: lo_table2_avg_fields
  count(columns: [lo_table2_select_column!], distinct: Boolean): Int!
  max: lo_table2_max_fields
  min: lo_table2_min_fields
  stddev: lo_table2_stddev_fields
  stddev_pop: lo_table2_stddev_pop_fields
  stddev_samp: lo_table2_stddev_samp_fields
  sum: lo_table2_sum_fields
  var_pop: lo_table2_var_pop_fields
  var_samp: lo_table2_var_samp_fields
  variance: lo_table2_variance_fields
}

"""aggregate avg on columns"""
type lo_table2_avg_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""
Boolean expression to filter rows from the table "lo_table2". All fields are combined with a logical 'AND'.
"""
input lo_table2_bool_exp {
  Learning_Outcome: String_comparison_exp
  _and: [lo_table2_bool_exp!]
  _not: lo_table2_bool_exp
  _or: [lo_table2_bool_exp!]
  acad_year: String_comparison_exp
  achievement_level: float8_comparison_exp
  assessment_id: Int_comparison_exp
  deadline_id: Int_comparison_exp
  grade_number: Int_comparison_exp
  lo_id: Int_comparison_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  students_cleared: Int_comparison_exp
  students_present: bigint_comparison_exp
  subject: String_comparison_exp
  type: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "lo_table2"
"""
input lo_table2_inc_input {
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  students_present: bigint
}

"""
input type for inserting data into table "lo_table2"
"""
input lo_table2_insert_input {
  Learning_Outcome: String
  acad_year: String
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  section: String
  students_cleared: Int
  students_present: bigint
  subject: String
  type: String
}

"""aggregate max on columns"""
type lo_table2_max_fields {
  Learning_Outcome: String
  acad_year: String
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  section: String
  students_cleared: Int
  students_present: bigint
  subject: String
  type: String
}

"""aggregate min on columns"""
type lo_table2_min_fields {
  Learning_Outcome: String
  acad_year: String
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  section: String
  students_cleared: Int
  students_present: bigint
  subject: String
  type: String
}

"""
response of any mutation on the table "lo_table2"
"""
type lo_table2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_table2!]!
}

"""Ordering options when selecting data from "lo_table2"."""
input lo_table2_order_by {
  Learning_Outcome: order_by
  acad_year: order_by
  achievement_level: order_by
  assessment_id: order_by
  deadline_id: order_by
  grade_number: order_by
  lo_id: order_by
  school_id: order_by
  section: order_by
  students_cleared: order_by
  students_present: order_by
  subject: order_by
  type: order_by
}

"""
select columns of table "lo_table2"
"""
enum lo_table2_select_column {
  """column name"""
  Learning_Outcome

  """column name"""
  acad_year

  """column name"""
  achievement_level

  """column name"""
  assessment_id

  """column name"""
  deadline_id

  """column name"""
  grade_number

  """column name"""
  lo_id

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  students_cleared

  """column name"""
  students_present

  """column name"""
  subject

  """column name"""
  type
}

"""
input type for updating data in table "lo_table2"
"""
input lo_table2_set_input {
  Learning_Outcome: String
  acad_year: String
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  section: String
  students_cleared: Int
  students_present: bigint
  subject: String
  type: String
}

"""aggregate stddev on columns"""
type lo_table2_stddev_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""aggregate stddev_pop on columns"""
type lo_table2_stddev_pop_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""aggregate stddev_samp on columns"""
type lo_table2_stddev_samp_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""aggregate sum on columns"""
type lo_table2_sum_fields {
  achievement_level: float8
  assessment_id: Int
  deadline_id: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  students_cleared: Int
  students_present: bigint
}

"""aggregate var_pop on columns"""
type lo_table2_var_pop_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""aggregate var_samp on columns"""
type lo_table2_var_samp_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""aggregate variance on columns"""
type lo_table2_variance_fields {
  achievement_level: Float
  assessment_id: Float
  deadline_id: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  students_cleared: Float
  students_present: Float
}

"""
aggregated selection of "lo_table"
"""
type lo_table_aggregate {
  aggregate: lo_table_aggregate_fields
  nodes: [lo_table!]!
}

"""
aggregate fields of "lo_table"
"""
type lo_table_aggregate_fields {
  avg: lo_table_avg_fields
  count(columns: [lo_table_select_column!], distinct: Boolean): Int!
  max: lo_table_max_fields
  min: lo_table_min_fields
  stddev: lo_table_stddev_fields
  stddev_pop: lo_table_stddev_pop_fields
  stddev_samp: lo_table_stddev_samp_fields
  sum: lo_table_sum_fields
  var_pop: lo_table_var_pop_fields
  var_samp: lo_table_var_samp_fields
  variance: lo_table_variance_fields
}

"""aggregate avg on columns"""
type lo_table_avg_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""
Boolean expression to filter rows from the table "lo_table". All fields are combined with a logical 'AND'.
"""
input lo_table_bool_exp {
  Learning_Outcome: String_comparison_exp
  _and: [lo_table_bool_exp!]
  _not: lo_table_bool_exp
  _or: [lo_table_bool_exp!]
  acad_year: String_comparison_exp
  asess_id: Int_comparison_exp
  assessment_id: Int_comparison_exp
  deadline_id: Int_comparison_exp
  grade_no: Int_comparison_exp
  grade_number: Int_comparison_exp
  lo_id: Int_comparison_exp
  school_id: Int_comparison_exp
  scl_id: Int_comparison_exp
  students_cleared: Int_comparison_exp
  sub: String_comparison_exp
  subject: String_comparison_exp
  type: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "lo_table"
"""
input lo_table_inc_input {
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
}

"""
input type for inserting data into table "lo_table"
"""
input lo_table_insert_input {
  Learning_Outcome: String
  acad_year: String
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
  sub: String
  subject: String
  type: String
}

"""aggregate max on columns"""
type lo_table_max_fields {
  Learning_Outcome: String
  acad_year: String
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
  sub: String
  subject: String
  type: String
}

"""aggregate min on columns"""
type lo_table_min_fields {
  Learning_Outcome: String
  acad_year: String
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
  sub: String
  subject: String
  type: String
}

"""
response of any mutation on the table "lo_table"
"""
type lo_table_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_table!]!
}

"""Ordering options when selecting data from "lo_table"."""
input lo_table_order_by {
  Learning_Outcome: order_by
  acad_year: order_by
  asess_id: order_by
  assessment_id: order_by
  deadline_id: order_by
  grade_no: order_by
  grade_number: order_by
  lo_id: order_by
  school_id: order_by
  scl_id: order_by
  students_cleared: order_by
  sub: order_by
  subject: order_by
  type: order_by
}

"""
select columns of table "lo_table"
"""
enum lo_table_select_column {
  """column name"""
  Learning_Outcome

  """column name"""
  acad_year

  """column name"""
  asess_id

  """column name"""
  assessment_id

  """column name"""
  deadline_id

  """column name"""
  grade_no

  """column name"""
  grade_number

  """column name"""
  lo_id

  """column name"""
  school_id

  """column name"""
  scl_id

  """column name"""
  students_cleared

  """column name"""
  sub

  """column name"""
  subject

  """column name"""
  type
}

"""
input type for updating data in table "lo_table"
"""
input lo_table_set_input {
  Learning_Outcome: String
  acad_year: String
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
  sub: String
  subject: String
  type: String
}

"""aggregate stddev on columns"""
type lo_table_stddev_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""aggregate stddev_pop on columns"""
type lo_table_stddev_pop_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""aggregate stddev_samp on columns"""
type lo_table_stddev_samp_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""aggregate sum on columns"""
type lo_table_sum_fields {
  asess_id: Int
  assessment_id: Int
  deadline_id: Int
  grade_no: Int
  grade_number: Int
  lo_id: Int
  school_id: Int
  scl_id: Int
  students_cleared: Int
}

"""aggregate var_pop on columns"""
type lo_table_var_pop_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""aggregate var_samp on columns"""
type lo_table_var_samp_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""aggregate variance on columns"""
type lo_table_variance_fields {
  asess_id: Float
  assessment_id: Float
  deadline_id: Float
  grade_no: Float
  grade_number: Float
  lo_id: Float
  school_id: Float
  scl_id: Float
  students_cleared: Float
}

"""
update columns of table "lo"
"""
enum lo_update_column {
  """column name"""
  code

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  is_unit

  """column name"""
  name

  """column name"""
  subject_id
}

"""
columns and relationships of "lo_v2"
"""
type lo_v2 {
  """An array relationship"""
  assessment_unit_selected_los(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): [assessment_unit_selected_lo!]!

  """An aggregate relationship"""
  assessment_unit_selected_los_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): assessment_unit_selected_lo_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!
  code: String
  created: timestamptz
  grade_number: Int!
  id: Int!
  is_unit: Boolean!

  """An array relationship"""
  lo_bundle_los(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): [lo_bundle_los!]!

  """An aggregate relationship"""
  lo_bundle_los_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): lo_bundle_los_aggregate!
  name: String!

  """An array relationship"""
  question_v2s(
    """distinct select on columns"""
    distinct_on: [question_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_v2_order_by!]

    """filter the rows returned"""
    where: question_v2_bool_exp
  ): [question_v2!]!

  """An aggregate relationship"""
  question_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [question_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_v2_order_by!]

    """filter the rows returned"""
    where: question_v2_bool_exp
  ): question_v2_aggregate!

  """An object relationship"""
  subject: subject
  subject_id: Int
  updated: timestamptz
}

"""
aggregated selection of "lo_v2"
"""
type lo_v2_aggregate {
  aggregate: lo_v2_aggregate_fields
  nodes: [lo_v2!]!
}

"""
aggregate fields of "lo_v2"
"""
type lo_v2_aggregate_fields {
  avg: lo_v2_avg_fields
  count(columns: [lo_v2_select_column!], distinct: Boolean): Int!
  max: lo_v2_max_fields
  min: lo_v2_min_fields
  stddev: lo_v2_stddev_fields
  stddev_pop: lo_v2_stddev_pop_fields
  stddev_samp: lo_v2_stddev_samp_fields
  sum: lo_v2_sum_fields
  var_pop: lo_v2_var_pop_fields
  var_samp: lo_v2_var_samp_fields
  variance: lo_v2_variance_fields
}

"""
order by aggregate values of table "lo_v2"
"""
input lo_v2_aggregate_order_by {
  avg: lo_v2_avg_order_by
  count: order_by
  max: lo_v2_max_order_by
  min: lo_v2_min_order_by
  stddev: lo_v2_stddev_order_by
  stddev_pop: lo_v2_stddev_pop_order_by
  stddev_samp: lo_v2_stddev_samp_order_by
  sum: lo_v2_sum_order_by
  var_pop: lo_v2_var_pop_order_by
  var_samp: lo_v2_var_samp_order_by
  variance: lo_v2_variance_order_by
}

"""
input type for inserting array relation for remote table "lo_v2"
"""
input lo_v2_arr_rel_insert_input {
  data: [lo_v2_insert_input!]!

  """on conflict condition"""
  on_conflict: lo_v2_on_conflict
}

"""aggregate avg on columns"""
type lo_v2_avg_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "lo_v2"
"""
input lo_v2_avg_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "lo_v2". All fields are combined with a logical 'AND'.
"""
input lo_v2_bool_exp {
  _and: [lo_v2_bool_exp!]
  _not: lo_v2_bool_exp
  _or: [lo_v2_bool_exp!]
  assessment_unit_selected_los: assessment_unit_selected_lo_bool_exp
  class_submissions: class_submission_bool_exp
  code: String_comparison_exp
  created: timestamptz_comparison_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  is_unit: Boolean_comparison_exp
  lo_bundle_los: lo_bundle_los_bool_exp
  name: String_comparison_exp
  question_v2s: question_v2_bool_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lo_v2"
"""
enum lo_v2_constraint {
  """unique or primary key constraint"""
  lo_v2_pkey
}

"""
input type for incrementing numeric columns in table "lo_v2"
"""
input lo_v2_inc_input {
  grade_number: Int
  id: Int
  subject_id: Int
}

"""
input type for inserting data into table "lo_v2"
"""
input lo_v2_insert_input {
  assessment_unit_selected_los: assessment_unit_selected_lo_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  is_unit: Boolean
  lo_bundle_los: lo_bundle_los_arr_rel_insert_input
  name: String
  question_v2s: question_v2_arr_rel_insert_input
  subject: subject_obj_rel_insert_input
  subject_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type lo_v2_max_fields {
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  name: String
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "lo_v2"
"""
input lo_v2_max_order_by {
  code: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  name: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type lo_v2_min_fields {
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  name: String
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "lo_v2"
"""
input lo_v2_min_order_by {
  code: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  name: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "lo_v2"
"""
type lo_v2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [lo_v2!]!
}

"""
input type for inserting object relation for remote table "lo_v2"
"""
input lo_v2_obj_rel_insert_input {
  data: lo_v2_insert_input!

  """on conflict condition"""
  on_conflict: lo_v2_on_conflict
}

"""
on conflict condition type for table "lo_v2"
"""
input lo_v2_on_conflict {
  constraint: lo_v2_constraint!
  update_columns: [lo_v2_update_column!]! = []
  where: lo_v2_bool_exp
}

"""Ordering options when selecting data from "lo_v2"."""
input lo_v2_order_by {
  assessment_unit_selected_los_aggregate: assessment_unit_selected_lo_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  code: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  is_unit: order_by
  lo_bundle_los_aggregate: lo_bundle_los_aggregate_order_by
  name: order_by
  question_v2s_aggregate: question_v2_aggregate_order_by
  subject: subject_order_by
  subject_id: order_by
  updated: order_by
}

"""primary key columns input for table: lo_v2"""
input lo_v2_pk_columns_input {
  id: Int!
}

"""
select columns of table "lo_v2"
"""
enum lo_v2_select_column {
  """column name"""
  code

  """column name"""
  created

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  is_unit

  """column name"""
  name

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
input type for updating data in table "lo_v2"
"""
input lo_v2_set_input {
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  is_unit: Boolean
  name: String
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type lo_v2_stddev_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "lo_v2"
"""
input lo_v2_stddev_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type lo_v2_stddev_pop_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "lo_v2"
"""
input lo_v2_stddev_pop_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type lo_v2_stddev_samp_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "lo_v2"
"""
input lo_v2_stddev_samp_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type lo_v2_sum_fields {
  grade_number: Int
  id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "lo_v2"
"""
input lo_v2_sum_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
update columns of table "lo_v2"
"""
enum lo_v2_update_column {
  """column name"""
  code

  """column name"""
  created

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  is_unit

  """column name"""
  name

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type lo_v2_var_pop_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "lo_v2"
"""
input lo_v2_var_pop_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type lo_v2_var_samp_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "lo_v2"
"""
input lo_v2_var_samp_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type lo_v2_variance_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "lo_v2"
"""
input lo_v2_variance_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate var_pop on columns"""
type lo_var_pop_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "lo"
"""
input lo_var_pop_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type lo_var_samp_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "lo"
"""
input lo_var_samp_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type lo_variance_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "lo"
"""
input lo_variance_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
columns and relationships of "location"
"""
type location {
  block: String
  cluster: String
  district: String!
  id: Int!

  """An array relationship"""
  schools(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): [school!]!

  """An aggregate relationship"""
  schools_aggregate(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): school_aggregate!
}

"""
aggregated selection of "location"
"""
type location_aggregate {
  aggregate: location_aggregate_fields
  nodes: [location!]!
}

"""
aggregate fields of "location"
"""
type location_aggregate_fields {
  avg: location_avg_fields
  count(columns: [location_select_column!], distinct: Boolean): Int!
  max: location_max_fields
  min: location_min_fields
  stddev: location_stddev_fields
  stddev_pop: location_stddev_pop_fields
  stddev_samp: location_stddev_samp_fields
  sum: location_sum_fields
  var_pop: location_var_pop_fields
  var_samp: location_var_samp_fields
  variance: location_variance_fields
}

"""aggregate avg on columns"""
type location_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "location". All fields are combined with a logical 'AND'.
"""
input location_bool_exp {
  _and: [location_bool_exp!]
  _not: location_bool_exp
  _or: [location_bool_exp!]
  block: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  id: Int_comparison_exp
  schools: school_bool_exp
}

"""
unique or primary key constraints on table "location"
"""
enum location_constraint {
  """unique or primary key constraint"""
  location_pkey
}

"""
input type for incrementing numeric columns in table "location"
"""
input location_inc_input {
  id: Int
}

"""
input type for inserting data into table "location"
"""
input location_insert_input {
  block: String
  cluster: String
  district: String
  id: Int
  schools: school_arr_rel_insert_input
}

"""aggregate max on columns"""
type location_max_fields {
  block: String
  cluster: String
  district: String
  id: Int
}

"""aggregate min on columns"""
type location_min_fields {
  block: String
  cluster: String
  district: String
  id: Int
}

"""
response of any mutation on the table "location"
"""
type location_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [location!]!
}

"""
input type for inserting object relation for remote table "location"
"""
input location_obj_rel_insert_input {
  data: location_insert_input!

  """on conflict condition"""
  on_conflict: location_on_conflict
}

"""
on conflict condition type for table "location"
"""
input location_on_conflict {
  constraint: location_constraint!
  update_columns: [location_update_column!]! = []
  where: location_bool_exp
}

"""Ordering options when selecting data from "location"."""
input location_order_by {
  block: order_by
  cluster: order_by
  district: order_by
  id: order_by
  schools_aggregate: school_aggregate_order_by
}

"""primary key columns input for table: location"""
input location_pk_columns_input {
  id: Int!
}

"""
select columns of table "location"
"""
enum location_select_column {
  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  id
}

"""
input type for updating data in table "location"
"""
input location_set_input {
  block: String
  cluster: String
  district: String
  id: Int
}

"""aggregate stddev on columns"""
type location_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type location_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type location_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type location_sum_fields {
  id: Int
}

"""
update columns of table "location"
"""
enum location_update_column {
  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  id
}

"""aggregate var_pop on columns"""
type location_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type location_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type location_variance_fields {
  id: Float
}

"""
columns and relationships of "locks"
"""
type locks {
  """"""
  type: String!

  """"""
  update_instant: bigint
}

"""
aggregated selection of "locks"
"""
type locks_aggregate {
  """"""
  aggregate: locks_aggregate_fields

  """"""
  nodes: [locks!]!
}

"""
aggregate fields of "locks"
"""
type locks_aggregate_fields {
  """"""
  avg: locks_avg_fields

  """"""
  count(columns: [locks_select_column!], distinct: Boolean): Int!

  """"""
  max: locks_max_fields

  """"""
  min: locks_min_fields

  """"""
  stddev: locks_stddev_fields

  """"""
  stddev_pop: locks_stddev_pop_fields

  """"""
  stddev_samp: locks_stddev_samp_fields

  """"""
  sum: locks_sum_fields

  """"""
  var_pop: locks_var_pop_fields

  """"""
  var_samp: locks_var_samp_fields

  """"""
  variance: locks_variance_fields
}

"""aggregate avg on columns"""
type locks_avg_fields {
  """"""
  update_instant: Float
}

"""
Boolean expression to filter rows from the table "locks". All fields are combined with a logical 'AND'.
"""
input locks_bool_exp {
  """"""
  _and: [locks_bool_exp!]

  """"""
  _not: locks_bool_exp

  """"""
  _or: [locks_bool_exp!]

  """"""
  type: String_comparison_exp

  """"""
  update_instant: bigint_comparison_exp
}

"""
unique or primary key constraints on table "locks"
"""
enum locks_constraint {
  """unique or primary key constraint"""
  locks_pkey
}

"""
input type for incrementing numeric columns in table "locks"
"""
input locks_inc_input {
  """"""
  update_instant: bigint
}

"""
input type for inserting data into table "locks"
"""
input locks_insert_input {
  """"""
  type: String

  """"""
  update_instant: bigint
}

"""aggregate max on columns"""
type locks_max_fields {
  """"""
  type: String

  """"""
  update_instant: bigint
}

"""aggregate min on columns"""
type locks_min_fields {
  """"""
  type: String

  """"""
  update_instant: bigint
}

"""
response of any mutation on the table "locks"
"""
type locks_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [locks!]!
}

"""
on conflict condition type for table "locks"
"""
input locks_on_conflict {
  """"""
  constraint: locks_constraint!

  """"""
  update_columns: [locks_update_column!]!

  """"""
  where: locks_bool_exp
}

"""Ordering options when selecting data from "locks"."""
input locks_order_by {
  """"""
  type: order_by

  """"""
  update_instant: order_by
}

"""primary key columns input for table: locks"""
input locks_pk_columns_input {
  """"""
  type: String!
}

"""
select columns of table "locks"
"""
enum locks_select_column {
  """column name"""
  type

  """column name"""
  update_instant
}

"""
input type for updating data in table "locks"
"""
input locks_set_input {
  """"""
  type: String

  """"""
  update_instant: bigint
}

"""aggregate stddev on columns"""
type locks_stddev_fields {
  """"""
  update_instant: Float
}

"""aggregate stddev_pop on columns"""
type locks_stddev_pop_fields {
  """"""
  update_instant: Float
}

"""aggregate stddev_samp on columns"""
type locks_stddev_samp_fields {
  """"""
  update_instant: Float
}

"""aggregate sum on columns"""
type locks_sum_fields {
  """"""
  update_instant: bigint
}

"""
update columns of table "locks"
"""
enum locks_update_column {
  """column name"""
  type

  """column name"""
  update_instant
}

"""aggregate var_pop on columns"""
type locks_var_pop_fields {
  """"""
  update_instant: Float
}

"""aggregate var_samp on columns"""
type locks_var_samp_fields {
  """"""
  update_instant: Float
}

"""aggregate variance on columns"""
type locks_variance_fields {
  """"""
  update_instant: Float
}

"""
columns and relationships of "mapping"
"""
type mapping {
  created: timestamptz
  id: Int!

  """An object relationship"""
  mapping_detail: mapping_details
  mapping_id: Int
  updated: timestamptz
}

"""
aggregated selection of "mapping"
"""
type mapping_aggregate {
  aggregate: mapping_aggregate_fields
  nodes: [mapping!]!
}

"""
aggregate fields of "mapping"
"""
type mapping_aggregate_fields {
  avg: mapping_avg_fields
  count(columns: [mapping_select_column!], distinct: Boolean): Int!
  max: mapping_max_fields
  min: mapping_min_fields
  stddev: mapping_stddev_fields
  stddev_pop: mapping_stddev_pop_fields
  stddev_samp: mapping_stddev_samp_fields
  sum: mapping_sum_fields
  var_pop: mapping_var_pop_fields
  var_samp: mapping_var_samp_fields
  variance: mapping_variance_fields
}

"""
order by aggregate values of table "mapping"
"""
input mapping_aggregate_order_by {
  avg: mapping_avg_order_by
  count: order_by
  max: mapping_max_order_by
  min: mapping_min_order_by
  stddev: mapping_stddev_order_by
  stddev_pop: mapping_stddev_pop_order_by
  stddev_samp: mapping_stddev_samp_order_by
  sum: mapping_sum_order_by
  var_pop: mapping_var_pop_order_by
  var_samp: mapping_var_samp_order_by
  variance: mapping_variance_order_by
}

"""
input type for inserting array relation for remote table "mapping"
"""
input mapping_arr_rel_insert_input {
  data: [mapping_insert_input!]!

  """on conflict condition"""
  on_conflict: mapping_on_conflict
}

"""aggregate avg on columns"""
type mapping_avg_fields {
  id: Float
  mapping_id: Float
}

"""
order by avg() on columns of table "mapping"
"""
input mapping_avg_order_by {
  id: order_by
  mapping_id: order_by
}

"""
Boolean expression to filter rows from the table "mapping". All fields are combined with a logical 'AND'.
"""
input mapping_bool_exp {
  _and: [mapping_bool_exp!]
  _not: mapping_bool_exp
  _or: [mapping_bool_exp!]
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  mapping_detail: mapping_details_bool_exp
  mapping_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "mapping"
"""
enum mapping_constraint {
  """unique or primary key constraint"""
  mapping_pkey
}

"""
columns and relationships of "mapping_details"
"""
type mapping_details {
  """An array relationship"""
  assessments(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """An aggregate relationship"""
  assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!
  created: timestamptz
  id: Int!
  mapping_fields(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  mapping_submissions(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): [mapping_submission!]!

  """An aggregate relationship"""
  mapping_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): mapping_submission_aggregate!

  """An array relationship"""
  mappings(
    """distinct select on columns"""
    distinct_on: [mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_order_by!]

    """filter the rows returned"""
    where: mapping_bool_exp
  ): [mapping!]!

  """An aggregate relationship"""
  mappings_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_order_by!]

    """filter the rows returned"""
    where: mapping_bool_exp
  ): mapping_aggregate!
  name: String!
  updated: timestamptz
}

"""
aggregated selection of "mapping_details"
"""
type mapping_details_aggregate {
  aggregate: mapping_details_aggregate_fields
  nodes: [mapping_details!]!
}

"""
aggregate fields of "mapping_details"
"""
type mapping_details_aggregate_fields {
  avg: mapping_details_avg_fields
  count(columns: [mapping_details_select_column!], distinct: Boolean): Int!
  max: mapping_details_max_fields
  min: mapping_details_min_fields
  stddev: mapping_details_stddev_fields
  stddev_pop: mapping_details_stddev_pop_fields
  stddev_samp: mapping_details_stddev_samp_fields
  sum: mapping_details_sum_fields
  var_pop: mapping_details_var_pop_fields
  var_samp: mapping_details_var_samp_fields
  variance: mapping_details_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input mapping_details_append_input {
  mapping_fields: jsonb
}

"""aggregate avg on columns"""
type mapping_details_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "mapping_details". All fields are combined with a logical 'AND'.
"""
input mapping_details_bool_exp {
  _and: [mapping_details_bool_exp!]
  _not: mapping_details_bool_exp
  _or: [mapping_details_bool_exp!]
  assessments: assessment_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  mapping_fields: jsonb_comparison_exp
  mapping_submissions: mapping_submission_bool_exp
  mappings: mapping_bool_exp
  name: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "mapping_details"
"""
enum mapping_details_constraint {
  """unique or primary key constraint"""
  mapping_details_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input mapping_details_delete_at_path_input {
  mapping_fields: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input mapping_details_delete_elem_input {
  mapping_fields: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input mapping_details_delete_key_input {
  mapping_fields: String
}

"""
input type for incrementing numeric columns in table "mapping_details"
"""
input mapping_details_inc_input {
  id: Int
}

"""
input type for inserting data into table "mapping_details"
"""
input mapping_details_insert_input {
  assessments: assessment_arr_rel_insert_input
  created: timestamptz
  id: Int
  mapping_fields: jsonb
  mapping_submissions: mapping_submission_arr_rel_insert_input
  mappings: mapping_arr_rel_insert_input
  name: String
  updated: timestamptz
}

"""aggregate max on columns"""
type mapping_details_max_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type mapping_details_min_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "mapping_details"
"""
type mapping_details_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mapping_details!]!
}

"""
input type for inserting object relation for remote table "mapping_details"
"""
input mapping_details_obj_rel_insert_input {
  data: mapping_details_insert_input!

  """on conflict condition"""
  on_conflict: mapping_details_on_conflict
}

"""
on conflict condition type for table "mapping_details"
"""
input mapping_details_on_conflict {
  constraint: mapping_details_constraint!
  update_columns: [mapping_details_update_column!]! = []
  where: mapping_details_bool_exp
}

"""Ordering options when selecting data from "mapping_details"."""
input mapping_details_order_by {
  assessments_aggregate: assessment_aggregate_order_by
  created: order_by
  id: order_by
  mapping_fields: order_by
  mapping_submissions_aggregate: mapping_submission_aggregate_order_by
  mappings_aggregate: mapping_aggregate_order_by
  name: order_by
  updated: order_by
}

"""primary key columns input for table: mapping_details"""
input mapping_details_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input mapping_details_prepend_input {
  mapping_fields: jsonb
}

"""
select columns of table "mapping_details"
"""
enum mapping_details_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping_fields

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "mapping_details"
"""
input mapping_details_set_input {
  created: timestamptz
  id: Int
  mapping_fields: jsonb
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type mapping_details_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type mapping_details_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type mapping_details_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type mapping_details_sum_fields {
  id: Int
}

"""
update columns of table "mapping_details"
"""
enum mapping_details_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping_fields

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type mapping_details_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type mapping_details_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type mapping_details_variance_fields {
  id: Float
}

"""
input type for incrementing numeric columns in table "mapping"
"""
input mapping_inc_input {
  id: Int
  mapping_id: Int
}

"""
input type for inserting data into table "mapping"
"""
input mapping_insert_input {
  created: timestamptz
  id: Int
  mapping_detail: mapping_details_obj_rel_insert_input
  mapping_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type mapping_max_fields {
  created: timestamptz
  id: Int
  mapping_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "mapping"
"""
input mapping_max_order_by {
  created: order_by
  id: order_by
  mapping_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type mapping_min_fields {
  created: timestamptz
  id: Int
  mapping_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "mapping"
"""
input mapping_min_order_by {
  created: order_by
  id: order_by
  mapping_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "mapping"
"""
type mapping_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mapping!]!
}

"""
on conflict condition type for table "mapping"
"""
input mapping_on_conflict {
  constraint: mapping_constraint!
  update_columns: [mapping_update_column!]! = []
  where: mapping_bool_exp
}

"""Ordering options when selecting data from "mapping"."""
input mapping_order_by {
  created: order_by
  id: order_by
  mapping_detail: mapping_details_order_by
  mapping_id: order_by
  updated: order_by
}

"""primary key columns input for table: mapping"""
input mapping_pk_columns_input {
  id: Int!
}

"""
select columns of table "mapping"
"""
enum mapping_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping_id

  """column name"""
  updated
}

"""
input type for updating data in table "mapping"
"""
input mapping_set_input {
  created: timestamptz
  id: Int
  mapping_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type mapping_stddev_fields {
  id: Float
  mapping_id: Float
}

"""
order by stddev() on columns of table "mapping"
"""
input mapping_stddev_order_by {
  id: order_by
  mapping_id: order_by
}

"""aggregate stddev_pop on columns"""
type mapping_stddev_pop_fields {
  id: Float
  mapping_id: Float
}

"""
order by stddev_pop() on columns of table "mapping"
"""
input mapping_stddev_pop_order_by {
  id: order_by
  mapping_id: order_by
}

"""aggregate stddev_samp on columns"""
type mapping_stddev_samp_fields {
  id: Float
  mapping_id: Float
}

"""
order by stddev_samp() on columns of table "mapping"
"""
input mapping_stddev_samp_order_by {
  id: order_by
  mapping_id: order_by
}

"""
columns and relationships of "mapping_submission"
"""
type mapping_submission {
  """An object relationship"""
  assessment: assessment
  assessment_grade: String!
  assessment_id: Int
  id: Int!
  is_present: Boolean!

  """An object relationship"""
  mapping_detail: mapping_details
  mapping_id: Int

  """An object relationship"""
  school: school
  school_id: Int

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An object relationship"""
  subject: subject
  subject_id: Int
}

"""
aggregated selection of "mapping_submission"
"""
type mapping_submission_aggregate {
  aggregate: mapping_submission_aggregate_fields
  nodes: [mapping_submission!]!
}

"""
aggregate fields of "mapping_submission"
"""
type mapping_submission_aggregate_fields {
  avg: mapping_submission_avg_fields
  count(columns: [mapping_submission_select_column!], distinct: Boolean): Int!
  max: mapping_submission_max_fields
  min: mapping_submission_min_fields
  stddev: mapping_submission_stddev_fields
  stddev_pop: mapping_submission_stddev_pop_fields
  stddev_samp: mapping_submission_stddev_samp_fields
  sum: mapping_submission_sum_fields
  var_pop: mapping_submission_var_pop_fields
  var_samp: mapping_submission_var_samp_fields
  variance: mapping_submission_variance_fields
}

"""
order by aggregate values of table "mapping_submission"
"""
input mapping_submission_aggregate_order_by {
  avg: mapping_submission_avg_order_by
  count: order_by
  max: mapping_submission_max_order_by
  min: mapping_submission_min_order_by
  stddev: mapping_submission_stddev_order_by
  stddev_pop: mapping_submission_stddev_pop_order_by
  stddev_samp: mapping_submission_stddev_samp_order_by
  sum: mapping_submission_sum_order_by
  var_pop: mapping_submission_var_pop_order_by
  var_samp: mapping_submission_var_samp_order_by
  variance: mapping_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "mapping_submission"
"""
input mapping_submission_arr_rel_insert_input {
  data: [mapping_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: mapping_submission_on_conflict
}

"""aggregate avg on columns"""
type mapping_submission_avg_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "mapping_submission"
"""
input mapping_submission_avg_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "mapping_submission". All fields are combined with a logical 'AND'.
"""
input mapping_submission_bool_exp {
  _and: [mapping_submission_bool_exp!]
  _not: mapping_submission_bool_exp
  _or: [mapping_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_grade: String_comparison_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  is_present: Boolean_comparison_exp
  mapping_detail: mapping_details_bool_exp
  mapping_id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  student_submission_v2s: student_submission_v2_bool_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "mapping_submission"
"""
enum mapping_submission_constraint {
  """unique or primary key constraint"""
  mapping_submission_pkey
}

"""
input type for incrementing numeric columns in table "mapping_submission"
"""
input mapping_submission_inc_input {
  assessment_id: Int
  id: Int
  mapping_id: Int
  school_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "mapping_submission"
"""
input mapping_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_grade: String
  assessment_id: Int
  id: Int
  is_present: Boolean
  mapping_detail: mapping_details_obj_rel_insert_input
  mapping_id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type mapping_submission_max_fields {
  assessment_grade: String
  assessment_id: Int
  id: Int
  mapping_id: Int
  school_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "mapping_submission"
"""
input mapping_submission_max_order_by {
  assessment_grade: order_by
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type mapping_submission_min_fields {
  assessment_grade: String
  assessment_id: Int
  id: Int
  mapping_id: Int
  school_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "mapping_submission"
"""
input mapping_submission_min_order_by {
  assessment_grade: order_by
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "mapping_submission"
"""
type mapping_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mapping_submission!]!
}

"""
input type for inserting object relation for remote table "mapping_submission"
"""
input mapping_submission_obj_rel_insert_input {
  data: mapping_submission_insert_input!

  """on conflict condition"""
  on_conflict: mapping_submission_on_conflict
}

"""
on conflict condition type for table "mapping_submission"
"""
input mapping_submission_on_conflict {
  constraint: mapping_submission_constraint!
  update_columns: [mapping_submission_update_column!]! = []
  where: mapping_submission_bool_exp
}

"""Ordering options when selecting data from "mapping_submission"."""
input mapping_submission_order_by {
  assessment: assessment_order_by
  assessment_grade: order_by
  assessment_id: order_by
  id: order_by
  is_present: order_by
  mapping_detail: mapping_details_order_by
  mapping_id: order_by
  school: school_order_by
  school_id: order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: mapping_submission"""
input mapping_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "mapping_submission"
"""
enum mapping_submission_select_column {
  """column name"""
  assessment_grade

  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  is_present

  """column name"""
  mapping_id

  """column name"""
  school_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "mapping_submission"
"""
input mapping_submission_set_input {
  assessment_grade: String
  assessment_id: Int
  id: Int
  is_present: Boolean
  mapping_id: Int
  school_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type mapping_submission_stddev_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "mapping_submission"
"""
input mapping_submission_stddev_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type mapping_submission_stddev_pop_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "mapping_submission"
"""
input mapping_submission_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type mapping_submission_stddev_samp_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "mapping_submission"
"""
input mapping_submission_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type mapping_submission_sum_fields {
  assessment_id: Int
  id: Int
  mapping_id: Int
  school_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "mapping_submission"
"""
input mapping_submission_sum_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""
update columns of table "mapping_submission"
"""
enum mapping_submission_update_column {
  """column name"""
  assessment_grade

  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  is_present

  """column name"""
  mapping_id

  """column name"""
  school_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type mapping_submission_var_pop_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "mapping_submission"
"""
input mapping_submission_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type mapping_submission_var_samp_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "mapping_submission"
"""
input mapping_submission_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type mapping_submission_variance_fields {
  assessment_id: Float
  id: Float
  mapping_id: Float
  school_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "mapping_submission"
"""
input mapping_submission_variance_order_by {
  assessment_id: order_by
  id: order_by
  mapping_id: order_by
  school_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type mapping_sum_fields {
  id: Int
  mapping_id: Int
}

"""
order by sum() on columns of table "mapping"
"""
input mapping_sum_order_by {
  id: order_by
  mapping_id: order_by
}

"""
update columns of table "mapping"
"""
enum mapping_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  mapping_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type mapping_var_pop_fields {
  id: Float
  mapping_id: Float
}

"""
order by var_pop() on columns of table "mapping"
"""
input mapping_var_pop_order_by {
  id: order_by
  mapping_id: order_by
}

"""aggregate var_samp on columns"""
type mapping_var_samp_fields {
  id: Float
  mapping_id: Float
}

"""
order by var_samp() on columns of table "mapping"
"""
input mapping_var_samp_order_by {
  id: order_by
  mapping_id: order_by
}

"""aggregate variance on columns"""
type mapping_variance_fields {
  id: Float
  mapping_id: Float
}

"""
order by variance() on columns of table "mapping"
"""
input mapping_variance_order_by {
  id: order_by
  mapping_id: order_by
}

"""
columns and relationships of "master_attendance"
"""
type master_attendance {
  block: String
  date: date
  district: String
  is_present: Boolean
  name: String
  studentid: Int
  udise: Int
}

"""
aggregated selection of "master_attendance"
"""
type master_attendance_aggregate {
  aggregate: master_attendance_aggregate_fields
  nodes: [master_attendance!]!
}

"""
aggregate fields of "master_attendance"
"""
type master_attendance_aggregate_fields {
  avg: master_attendance_avg_fields
  count(columns: [master_attendance_select_column!], distinct: Boolean): Int!
  max: master_attendance_max_fields
  min: master_attendance_min_fields
  stddev: master_attendance_stddev_fields
  stddev_pop: master_attendance_stddev_pop_fields
  stddev_samp: master_attendance_stddev_samp_fields
  sum: master_attendance_sum_fields
  var_pop: master_attendance_var_pop_fields
  var_samp: master_attendance_var_samp_fields
  variance: master_attendance_variance_fields
}

"""aggregate avg on columns"""
type master_attendance_avg_fields {
  studentid: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "master_attendance". All fields are combined with a logical 'AND'.
"""
input master_attendance_bool_exp {
  _and: [master_attendance_bool_exp!]
  _not: master_attendance_bool_exp
  _or: [master_attendance_bool_exp!]
  block: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  is_present: Boolean_comparison_exp
  name: String_comparison_exp
  studentid: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "master_attendance"
"""
input master_attendance_inc_input {
  studentid: Int
  udise: Int
}

"""
input type for inserting data into table "master_attendance"
"""
input master_attendance_insert_input {
  block: String
  date: date
  district: String
  is_present: Boolean
  name: String
  studentid: Int
  udise: Int
}

"""aggregate max on columns"""
type master_attendance_max_fields {
  block: String
  date: date
  district: String
  name: String
  studentid: Int
  udise: Int
}

"""aggregate min on columns"""
type master_attendance_min_fields {
  block: String
  date: date
  district: String
  name: String
  studentid: Int
  udise: Int
}

"""
response of any mutation on the table "master_attendance"
"""
type master_attendance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_attendance!]!
}

"""Ordering options when selecting data from "master_attendance"."""
input master_attendance_order_by {
  block: order_by
  date: order_by
  district: order_by
  is_present: order_by
  name: order_by
  studentid: order_by
  udise: order_by
}

"""
select columns of table "master_attendance"
"""
enum master_attendance_select_column {
  """column name"""
  block

  """column name"""
  date

  """column name"""
  district

  """column name"""
  is_present

  """column name"""
  name

  """column name"""
  studentid

  """column name"""
  udise
}

"""
input type for updating data in table "master_attendance"
"""
input master_attendance_set_input {
  block: String
  date: date
  district: String
  is_present: Boolean
  name: String
  studentid: Int
  udise: Int
}

"""aggregate stddev on columns"""
type master_attendance_stddev_fields {
  studentid: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type master_attendance_stddev_pop_fields {
  studentid: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type master_attendance_stddev_samp_fields {
  studentid: Float
  udise: Float
}

"""aggregate sum on columns"""
type master_attendance_sum_fields {
  studentid: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type master_attendance_var_pop_fields {
  studentid: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type master_attendance_var_samp_fields {
  studentid: Float
  udise: Float
}

"""aggregate variance on columns"""
type master_attendance_variance_fields {
  studentid: Float
  udise: Float
}

"""
columns and relationships of "master_presentstudents"
"""
type master_presentstudents {
  block: String
  date: date
  district: String
  grade_number: Int
  is_present: Boolean
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""
columns and relationships of "master_presentstudents1"
"""
type master_presentstudents1 {
  block: String
  date: date
  district: String
  grade_number: Int
  is_present: Boolean
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""
aggregated selection of "master_presentstudents1"
"""
type master_presentstudents1_aggregate {
  aggregate: master_presentstudents1_aggregate_fields
  nodes: [master_presentstudents1!]!
}

"""
aggregate fields of "master_presentstudents1"
"""
type master_presentstudents1_aggregate_fields {
  avg: master_presentstudents1_avg_fields
  count(columns: [master_presentstudents1_select_column!], distinct: Boolean): Int!
  max: master_presentstudents1_max_fields
  min: master_presentstudents1_min_fields
  stddev: master_presentstudents1_stddev_fields
  stddev_pop: master_presentstudents1_stddev_pop_fields
  stddev_samp: master_presentstudents1_stddev_samp_fields
  sum: master_presentstudents1_sum_fields
  var_pop: master_presentstudents1_var_pop_fields
  var_samp: master_presentstudents1_var_samp_fields
  variance: master_presentstudents1_variance_fields
}

"""aggregate avg on columns"""
type master_presentstudents1_avg_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "master_presentstudents1". All fields are combined with a logical 'AND'.
"""
input master_presentstudents1_bool_exp {
  _and: [master_presentstudents1_bool_exp!]
  _not: master_presentstudents1_bool_exp
  _or: [master_presentstudents1_bool_exp!]
  block: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  grade_number: Int_comparison_exp
  is_present: Boolean_comparison_exp
  name: String_comparison_exp
  studentid: Int_comparison_exp
  taken_by_school_id: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "master_presentstudents1"
"""
input master_presentstudents1_inc_input {
  grade_number: Int
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""
input type for inserting data into table "master_presentstudents1"
"""
input master_presentstudents1_insert_input {
  block: String
  date: date
  district: String
  grade_number: Int
  is_present: Boolean
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate max on columns"""
type master_presentstudents1_max_fields {
  block: String
  date: date
  district: String
  grade_number: Int
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate min on columns"""
type master_presentstudents1_min_fields {
  block: String
  date: date
  district: String
  grade_number: Int
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""
response of any mutation on the table "master_presentstudents1"
"""
type master_presentstudents1_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_presentstudents1!]!
}

"""Ordering options when selecting data from "master_presentstudents1"."""
input master_presentstudents1_order_by {
  block: order_by
  date: order_by
  district: order_by
  grade_number: order_by
  is_present: order_by
  name: order_by
  studentid: order_by
  taken_by_school_id: order_by
  udise: order_by
}

"""
select columns of table "master_presentstudents1"
"""
enum master_presentstudents1_select_column {
  """column name"""
  block

  """column name"""
  date

  """column name"""
  district

  """column name"""
  grade_number

  """column name"""
  is_present

  """column name"""
  name

  """column name"""
  studentid

  """column name"""
  taken_by_school_id

  """column name"""
  udise
}

"""
input type for updating data in table "master_presentstudents1"
"""
input master_presentstudents1_set_input {
  block: String
  date: date
  district: String
  grade_number: Int
  is_present: Boolean
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate stddev on columns"""
type master_presentstudents1_stddev_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type master_presentstudents1_stddev_pop_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type master_presentstudents1_stddev_samp_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type master_presentstudents1_sum_fields {
  grade_number: Int
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type master_presentstudents1_var_pop_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type master_presentstudents1_var_samp_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type master_presentstudents1_variance_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""
aggregated selection of "master_presentstudents"
"""
type master_presentstudents_aggregate {
  aggregate: master_presentstudents_aggregate_fields
  nodes: [master_presentstudents!]!
}

"""
aggregate fields of "master_presentstudents"
"""
type master_presentstudents_aggregate_fields {
  avg: master_presentstudents_avg_fields
  count(columns: [master_presentstudents_select_column!], distinct: Boolean): Int!
  max: master_presentstudents_max_fields
  min: master_presentstudents_min_fields
  stddev: master_presentstudents_stddev_fields
  stddev_pop: master_presentstudents_stddev_pop_fields
  stddev_samp: master_presentstudents_stddev_samp_fields
  sum: master_presentstudents_sum_fields
  var_pop: master_presentstudents_var_pop_fields
  var_samp: master_presentstudents_var_samp_fields
  variance: master_presentstudents_variance_fields
}

"""aggregate avg on columns"""
type master_presentstudents_avg_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "master_presentstudents". All fields are combined with a logical 'AND'.
"""
input master_presentstudents_bool_exp {
  _and: [master_presentstudents_bool_exp!]
  _not: master_presentstudents_bool_exp
  _or: [master_presentstudents_bool_exp!]
  block: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  grade_number: Int_comparison_exp
  is_present: Boolean_comparison_exp
  name: String_comparison_exp
  studentid: Int_comparison_exp
  taken_by_school_id: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "master_presentstudents"
"""
input master_presentstudents_inc_input {
  grade_number: Int
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""
input type for inserting data into table "master_presentstudents"
"""
input master_presentstudents_insert_input {
  block: String
  date: date
  district: String
  grade_number: Int
  is_present: Boolean
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate max on columns"""
type master_presentstudents_max_fields {
  block: String
  date: date
  district: String
  grade_number: Int
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate min on columns"""
type master_presentstudents_min_fields {
  block: String
  date: date
  district: String
  grade_number: Int
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""
response of any mutation on the table "master_presentstudents"
"""
type master_presentstudents_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_presentstudents!]!
}

"""Ordering options when selecting data from "master_presentstudents"."""
input master_presentstudents_order_by {
  block: order_by
  date: order_by
  district: order_by
  grade_number: order_by
  is_present: order_by
  name: order_by
  studentid: order_by
  taken_by_school_id: order_by
  udise: order_by
}

"""
select columns of table "master_presentstudents"
"""
enum master_presentstudents_select_column {
  """column name"""
  block

  """column name"""
  date

  """column name"""
  district

  """column name"""
  grade_number

  """column name"""
  is_present

  """column name"""
  name

  """column name"""
  studentid

  """column name"""
  taken_by_school_id

  """column name"""
  udise
}

"""
input type for updating data in table "master_presentstudents"
"""
input master_presentstudents_set_input {
  block: String
  date: date
  district: String
  grade_number: Int
  is_present: Boolean
  name: String
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate stddev on columns"""
type master_presentstudents_stddev_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type master_presentstudents_stddev_pop_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type master_presentstudents_stddev_samp_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type master_presentstudents_sum_fields {
  grade_number: Int
  studentid: Int
  taken_by_school_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type master_presentstudents_var_pop_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type master_presentstudents_var_samp_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type master_presentstudents_variance_fields {
  grade_number: Float
  studentid: Float
  taken_by_school_id: Float
  udise: Float
}

"""
columns and relationships of "master_record"
"""
type master_record {
  """"""
  id: uuid!

  """"""
  instant: bigint!
}

"""
aggregated selection of "master_record"
"""
type master_record_aggregate {
  """"""
  aggregate: master_record_aggregate_fields

  """"""
  nodes: [master_record!]!
}

"""
aggregate fields of "master_record"
"""
type master_record_aggregate_fields {
  """"""
  avg: master_record_avg_fields

  """"""
  count(columns: [master_record_select_column!], distinct: Boolean): Int!

  """"""
  max: master_record_max_fields

  """"""
  min: master_record_min_fields

  """"""
  stddev: master_record_stddev_fields

  """"""
  stddev_pop: master_record_stddev_pop_fields

  """"""
  stddev_samp: master_record_stddev_samp_fields

  """"""
  sum: master_record_sum_fields

  """"""
  var_pop: master_record_var_pop_fields

  """"""
  var_samp: master_record_var_samp_fields

  """"""
  variance: master_record_variance_fields
}

"""aggregate avg on columns"""
type master_record_avg_fields {
  """"""
  instant: Float
}

"""
Boolean expression to filter rows from the table "master_record". All fields are combined with a logical 'AND'.
"""
input master_record_bool_exp {
  """"""
  _and: [master_record_bool_exp!]

  """"""
  _not: master_record_bool_exp

  """"""
  _or: [master_record_bool_exp!]

  """"""
  id: uuid_comparison_exp

  """"""
  instant: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "master_record"
"""
input master_record_inc_input {
  """"""
  instant: bigint
}

"""
input type for inserting data into table "master_record"
"""
input master_record_insert_input {
  """"""
  id: uuid

  """"""
  instant: bigint
}

"""aggregate max on columns"""
type master_record_max_fields {
  """"""
  id: uuid

  """"""
  instant: bigint
}

"""aggregate min on columns"""
type master_record_min_fields {
  """"""
  id: uuid

  """"""
  instant: bigint
}

"""
response of any mutation on the table "master_record"
"""
type master_record_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_record!]!
}

"""Ordering options when selecting data from "master_record"."""
input master_record_order_by {
  """"""
  id: order_by

  """"""
  instant: order_by
}

"""
select columns of table "master_record"
"""
enum master_record_select_column {
  """column name"""
  id

  """column name"""
  instant
}

"""
input type for updating data in table "master_record"
"""
input master_record_set_input {
  """"""
  id: uuid

  """"""
  instant: bigint
}

"""aggregate stddev on columns"""
type master_record_stddev_fields {
  """"""
  instant: Float
}

"""aggregate stddev_pop on columns"""
type master_record_stddev_pop_fields {
  """"""
  instant: Float
}

"""aggregate stddev_samp on columns"""
type master_record_stddev_samp_fields {
  """"""
  instant: Float
}

"""aggregate sum on columns"""
type master_record_sum_fields {
  """"""
  instant: bigint
}

"""aggregate var_pop on columns"""
type master_record_var_pop_fields {
  """"""
  instant: Float
}

"""aggregate var_samp on columns"""
type master_record_var_samp_fields {
  """"""
  instant: Float
}

"""aggregate variance on columns"""
type master_record_variance_fields {
  """"""
  instant: Float
}

"""
columns and relationships of "master_students"
"""
type master_students {
  block: String
  district: String
  is_enabled: Boolean
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""
aggregated selection of "master_students"
"""
type master_students_aggregate {
  aggregate: master_students_aggregate_fields
  nodes: [master_students!]!
}

"""
aggregate fields of "master_students"
"""
type master_students_aggregate_fields {
  avg: master_students_avg_fields
  count(columns: [master_students_select_column!], distinct: Boolean): Int!
  max: master_students_max_fields
  min: master_students_min_fields
  stddev: master_students_stddev_fields
  stddev_pop: master_students_stddev_pop_fields
  stddev_samp: master_students_stddev_samp_fields
  sum: master_students_sum_fields
  var_pop: master_students_var_pop_fields
  var_samp: master_students_var_samp_fields
  variance: master_students_variance_fields
}

"""aggregate avg on columns"""
type master_students_avg_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "master_students". All fields are combined with a logical 'AND'.
"""
input master_students_bool_exp {
  _and: [master_students_bool_exp!]
  _not: master_students_bool_exp
  _or: [master_students_bool_exp!]
  block: String_comparison_exp
  district: String_comparison_exp
  is_enabled: Boolean_comparison_exp
  name: String_comparison_exp
  school_id: Int_comparison_exp
  studentid: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "master_students"
"""
input master_students_inc_input {
  school_id: Int
  studentid: Int
  udise: Int
}

"""
input type for inserting data into table "master_students"
"""
input master_students_insert_input {
  block: String
  district: String
  is_enabled: Boolean
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate max on columns"""
type master_students_max_fields {
  block: String
  district: String
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate min on columns"""
type master_students_min_fields {
  block: String
  district: String
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""
response of any mutation on the table "master_students"
"""
type master_students_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_students!]!
}

"""Ordering options when selecting data from "master_students"."""
input master_students_order_by {
  block: order_by
  district: order_by
  is_enabled: order_by
  name: order_by
  school_id: order_by
  studentid: order_by
  udise: order_by
}

"""
select columns of table "master_students"
"""
enum master_students_select_column {
  """column name"""
  block

  """column name"""
  district

  """column name"""
  is_enabled

  """column name"""
  name

  """column name"""
  school_id

  """column name"""
  studentid

  """column name"""
  udise
}

"""
input type for updating data in table "master_students"
"""
input master_students_set_input {
  block: String
  district: String
  is_enabled: Boolean
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate stddev on columns"""
type master_students_stddev_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type master_students_stddev_pop_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type master_students_stddev_samp_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate sum on columns"""
type master_students_sum_fields {
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type master_students_var_pop_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type master_students_var_samp_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate variance on columns"""
type master_students_variance_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""
columns and relationships of "master_table"
"""
type master_table {
  acad_year: String
  admission_number: Int
  assess_type: String
  assessment_grade: String
  block: String
  category: String
  cluster: String
  district: String
  form_id: Int
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  location_id: Int
  name: String
  school_id: Int
  section: String
  session: String
  stud_scl_id: Int
  student_id: Int
  subject: String
  type: String
  udise: Int
}

"""
aggregated selection of "master_table"
"""
type master_table_aggregate {
  aggregate: master_table_aggregate_fields
  nodes: [master_table!]!
}

"""
aggregate fields of "master_table"
"""
type master_table_aggregate_fields {
  avg: master_table_avg_fields
  count(columns: [master_table_select_column!], distinct: Boolean): Int!
  max: master_table_max_fields
  min: master_table_min_fields
  stddev: master_table_stddev_fields
  stddev_pop: master_table_stddev_pop_fields
  stddev_samp: master_table_stddev_samp_fields
  sum: master_table_sum_fields
  var_pop: master_table_var_pop_fields
  var_samp: master_table_var_samp_fields
  variance: master_table_variance_fields
}

"""aggregate avg on columns"""
type master_table_avg_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "master_table". All fields are combined with a logical 'AND'.
"""
input master_table_bool_exp {
  _and: [master_table_bool_exp!]
  _not: master_table_bool_exp
  _or: [master_table_bool_exp!]
  acad_year: String_comparison_exp
  admission_number: Int_comparison_exp
  assess_type: String_comparison_exp
  assessment_grade: String_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  form_id: Int_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  location_id: Int_comparison_exp
  name: String_comparison_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stud_scl_id: Int_comparison_exp
  student_id: Int_comparison_exp
  subject: String_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
columns and relationships of "master_table_higher2"
"""
type master_table_higher2 {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""
aggregated selection of "master_table_higher2"
"""
type master_table_higher2_aggregate {
  aggregate: master_table_higher2_aggregate_fields
  nodes: [master_table_higher2!]!
}

"""
aggregate fields of "master_table_higher2"
"""
type master_table_higher2_aggregate_fields {
  avg: master_table_higher2_avg_fields
  count(columns: [master_table_higher2_select_column!], distinct: Boolean): Int!
  max: master_table_higher2_max_fields
  min: master_table_higher2_min_fields
  stddev: master_table_higher2_stddev_fields
  stddev_pop: master_table_higher2_stddev_pop_fields
  stddev_samp: master_table_higher2_stddev_samp_fields
  sum: master_table_higher2_sum_fields
  var_pop: master_table_higher2_var_pop_fields
  var_samp: master_table_higher2_var_samp_fields
  variance: master_table_higher2_variance_fields
}

"""aggregate avg on columns"""
type master_table_higher2_avg_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "master_table_higher2". All fields are combined with a logical 'AND'.
"""
input master_table_higher2_bool_exp {
  Performance: String_comparison_exp
  _and: [master_table_higher2_bool_exp!]
  _not: master_table_higher2_bool_exp
  _or: [master_table_higher2_bool_exp!]
  acad_year: String_comparison_exp
  admission_number: Int_comparison_exp
  assessment: String_comparison_exp
  assessment_percent: float8_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  school_id: Int_comparison_exp
  school_name: String_comparison_exp
  school_type: String_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  subject: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "master_table_higher2"
"""
input master_table_higher2_inc_input {
  admission_number: Int
  assessment_percent: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""
input type for inserting data into table "master_table_higher2"
"""
input master_table_higher2_insert_input {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""aggregate max on columns"""
type master_table_higher2_max_fields {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""aggregate min on columns"""
type master_table_higher2_min_fields {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""
response of any mutation on the table "master_table_higher2"
"""
type master_table_higher2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_table_higher2!]!
}

"""Ordering options when selecting data from "master_table_higher2"."""
input master_table_higher2_order_by {
  Performance: order_by
  acad_year: order_by
  admission_number: order_by
  assessment: order_by
  assessment_percent: order_by
  block: order_by
  category: order_by
  cluster: order_by
  district: order_by
  gender: order_by
  grade_number: order_by
  is_cwsn: order_by
  is_enabled: order_by
  school_id: order_by
  school_name: order_by
  school_type: order_by
  section: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  subject: order_by
  udise: order_by
}

"""
select columns of table "master_table_higher2"
"""
enum master_table_higher2_select_column {
  """column name"""
  Performance

  """column name"""
  acad_year

  """column name"""
  admission_number

  """column name"""
  assessment

  """column name"""
  assessment_percent

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  school_id

  """column name"""
  school_name

  """column name"""
  school_type

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  subject

  """column name"""
  udise
}

"""
input type for updating data in table "master_table_higher2"
"""
input master_table_higher2_set_input {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""aggregate stddev on columns"""
type master_table_higher2_stddev_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type master_table_higher2_stddev_pop_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type master_table_higher2_stddev_samp_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type master_table_higher2_sum_fields {
  admission_number: Int
  assessment_percent: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type master_table_higher2_var_pop_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type master_table_higher2_var_samp_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type master_table_higher2_variance_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
input type for incrementing numeric columns in table "master_table"
"""
input master_table_inc_input {
  admission_number: Int
  form_id: Int
  grade_number: Int
  location_id: Int
  school_id: Int
  stud_scl_id: Int
  student_id: Int
  udise: Int
}

"""
input type for inserting data into table "master_table"
"""
input master_table_insert_input {
  acad_year: String
  admission_number: Int
  assess_type: String
  assessment_grade: String
  block: String
  category: String
  cluster: String
  district: String
  form_id: Int
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  location_id: Int
  name: String
  school_id: Int
  section: String
  session: String
  stud_scl_id: Int
  student_id: Int
  subject: String
  type: String
  udise: Int
}

"""aggregate max on columns"""
type master_table_max_fields {
  acad_year: String
  admission_number: Int
  assess_type: String
  assessment_grade: String
  block: String
  category: String
  cluster: String
  district: String
  form_id: Int
  gender: String
  grade_number: Int
  location_id: Int
  name: String
  school_id: Int
  section: String
  session: String
  stud_scl_id: Int
  student_id: Int
  subject: String
  type: String
  udise: Int
}

"""aggregate min on columns"""
type master_table_min_fields {
  acad_year: String
  admission_number: Int
  assess_type: String
  assessment_grade: String
  block: String
  category: String
  cluster: String
  district: String
  form_id: Int
  gender: String
  grade_number: Int
  location_id: Int
  name: String
  school_id: Int
  section: String
  session: String
  stud_scl_id: Int
  student_id: Int
  subject: String
  type: String
  udise: Int
}

"""
response of any mutation on the table "master_table"
"""
type master_table_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [master_table!]!
}

"""Ordering options when selecting data from "master_table"."""
input master_table_order_by {
  acad_year: order_by
  admission_number: order_by
  assess_type: order_by
  assessment_grade: order_by
  block: order_by
  category: order_by
  cluster: order_by
  district: order_by
  form_id: order_by
  gender: order_by
  grade_number: order_by
  is_cwsn: order_by
  is_enabled: order_by
  location_id: order_by
  name: order_by
  school_id: order_by
  section: order_by
  session: order_by
  stud_scl_id: order_by
  student_id: order_by
  subject: order_by
  type: order_by
  udise: order_by
}

"""
select columns of table "master_table"
"""
enum master_table_select_column {
  """column name"""
  acad_year

  """column name"""
  admission_number

  """column name"""
  assess_type

  """column name"""
  assessment_grade

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  form_id

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  location_id

  """column name"""
  name

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stud_scl_id

  """column name"""
  student_id

  """column name"""
  subject

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "master_table"
"""
input master_table_set_input {
  acad_year: String
  admission_number: Int
  assess_type: String
  assessment_grade: String
  block: String
  category: String
  cluster: String
  district: String
  form_id: Int
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  location_id: Int
  name: String
  school_id: Int
  section: String
  session: String
  stud_scl_id: Int
  student_id: Int
  subject: String
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type master_table_stddev_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type master_table_stddev_pop_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type master_table_stddev_samp_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type master_table_sum_fields {
  admission_number: Int
  form_id: Int
  grade_number: Int
  location_id: Int
  school_id: Int
  stud_scl_id: Int
  student_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type master_table_var_pop_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type master_table_var_samp_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type master_table_variance_fields {
  admission_number: Float
  form_id: Float
  grade_number: Float
  location_id: Float
  school_id: Float
  stud_scl_id: Float
  student_id: Float
  udise: Float
}

"""
columns and relationships of "masterstudents"
"""
type masterstudents {
  block: String
  district: String
  is_enabled: Boolean
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""
aggregated selection of "masterstudents"
"""
type masterstudents_aggregate {
  aggregate: masterstudents_aggregate_fields
  nodes: [masterstudents!]!
}

"""
aggregate fields of "masterstudents"
"""
type masterstudents_aggregate_fields {
  avg: masterstudents_avg_fields
  count(columns: [masterstudents_select_column!], distinct: Boolean): Int!
  max: masterstudents_max_fields
  min: masterstudents_min_fields
  stddev: masterstudents_stddev_fields
  stddev_pop: masterstudents_stddev_pop_fields
  stddev_samp: masterstudents_stddev_samp_fields
  sum: masterstudents_sum_fields
  var_pop: masterstudents_var_pop_fields
  var_samp: masterstudents_var_samp_fields
  variance: masterstudents_variance_fields
}

"""aggregate avg on columns"""
type masterstudents_avg_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "masterstudents". All fields are combined with a logical 'AND'.
"""
input masterstudents_bool_exp {
  _and: [masterstudents_bool_exp!]
  _not: masterstudents_bool_exp
  _or: [masterstudents_bool_exp!]
  block: String_comparison_exp
  district: String_comparison_exp
  is_enabled: Boolean_comparison_exp
  name: String_comparison_exp
  school_id: Int_comparison_exp
  studentid: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "masterstudents"
"""
input masterstudents_inc_input {
  school_id: Int
  studentid: Int
  udise: Int
}

"""
input type for inserting data into table "masterstudents"
"""
input masterstudents_insert_input {
  block: String
  district: String
  is_enabled: Boolean
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate max on columns"""
type masterstudents_max_fields {
  block: String
  district: String
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate min on columns"""
type masterstudents_min_fields {
  block: String
  district: String
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""
response of any mutation on the table "masterstudents"
"""
type masterstudents_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [masterstudents!]!
}

"""Ordering options when selecting data from "masterstudents"."""
input masterstudents_order_by {
  block: order_by
  district: order_by
  is_enabled: order_by
  name: order_by
  school_id: order_by
  studentid: order_by
  udise: order_by
}

"""
select columns of table "masterstudents"
"""
enum masterstudents_select_column {
  """column name"""
  block

  """column name"""
  district

  """column name"""
  is_enabled

  """column name"""
  name

  """column name"""
  school_id

  """column name"""
  studentid

  """column name"""
  udise
}

"""
input type for updating data in table "masterstudents"
"""
input masterstudents_set_input {
  block: String
  district: String
  is_enabled: Boolean
  name: String
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate stddev on columns"""
type masterstudents_stddev_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type masterstudents_stddev_pop_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type masterstudents_stddev_samp_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate sum on columns"""
type masterstudents_sum_fields {
  school_id: Int
  studentid: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type masterstudents_var_pop_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type masterstudents_var_samp_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""aggregate variance on columns"""
type masterstudents_variance_fields {
  school_id: Float
  studentid: Float
  udise: Float
}

"""
columns and relationships of "matchingteachernos"
"""
type matchingteachernos {
  id: Int
  matchingteacherno: String
}

"""
aggregated selection of "matchingteachernos"
"""
type matchingteachernos_aggregate {
  aggregate: matchingteachernos_aggregate_fields
  nodes: [matchingteachernos!]!
}

"""
aggregate fields of "matchingteachernos"
"""
type matchingteachernos_aggregate_fields {
  avg: matchingteachernos_avg_fields
  count(columns: [matchingteachernos_select_column!], distinct: Boolean): Int!
  max: matchingteachernos_max_fields
  min: matchingteachernos_min_fields
  stddev: matchingteachernos_stddev_fields
  stddev_pop: matchingteachernos_stddev_pop_fields
  stddev_samp: matchingteachernos_stddev_samp_fields
  sum: matchingteachernos_sum_fields
  var_pop: matchingteachernos_var_pop_fields
  var_samp: matchingteachernos_var_samp_fields
  variance: matchingteachernos_variance_fields
}

"""aggregate avg on columns"""
type matchingteachernos_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "matchingteachernos". All fields are combined with a logical 'AND'.
"""
input matchingteachernos_bool_exp {
  _and: [matchingteachernos_bool_exp!]
  _not: matchingteachernos_bool_exp
  _or: [matchingteachernos_bool_exp!]
  id: Int_comparison_exp
  matchingteacherno: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "matchingteachernos"
"""
input matchingteachernos_inc_input {
  id: Int
}

"""
input type for inserting data into table "matchingteachernos"
"""
input matchingteachernos_insert_input {
  id: Int
  matchingteacherno: String
}

"""aggregate max on columns"""
type matchingteachernos_max_fields {
  id: Int
  matchingteacherno: String
}

"""aggregate min on columns"""
type matchingteachernos_min_fields {
  id: Int
  matchingteacherno: String
}

"""
response of any mutation on the table "matchingteachernos"
"""
type matchingteachernos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [matchingteachernos!]!
}

"""Ordering options when selecting data from "matchingteachernos"."""
input matchingteachernos_order_by {
  id: order_by
  matchingteacherno: order_by
}

"""
select columns of table "matchingteachernos"
"""
enum matchingteachernos_select_column {
  """column name"""
  id

  """column name"""
  matchingteacherno
}

"""
input type for updating data in table "matchingteachernos"
"""
input matchingteachernos_set_input {
  id: Int
  matchingteacherno: String
}

"""aggregate stddev on columns"""
type matchingteachernos_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type matchingteachernos_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type matchingteachernos_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type matchingteachernos_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type matchingteachernos_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type matchingteachernos_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type matchingteachernos_variance_fields {
  id: Float
}

"""
columns and relationships of "migrations"
"""
type migrations {
  """"""
  name: String!

  """"""
  run_instant: bigint!
}

"""
aggregated selection of "migrations"
"""
type migrations_aggregate {
  """"""
  aggregate: migrations_aggregate_fields

  """"""
  nodes: [migrations!]!
}

"""
aggregate fields of "migrations"
"""
type migrations_aggregate_fields {
  """"""
  avg: migrations_avg_fields

  """"""
  count(columns: [migrations_select_column!], distinct: Boolean): Int!

  """"""
  max: migrations_max_fields

  """"""
  min: migrations_min_fields

  """"""
  stddev: migrations_stddev_fields

  """"""
  stddev_pop: migrations_stddev_pop_fields

  """"""
  stddev_samp: migrations_stddev_samp_fields

  """"""
  sum: migrations_sum_fields

  """"""
  var_pop: migrations_var_pop_fields

  """"""
  var_samp: migrations_var_samp_fields

  """"""
  variance: migrations_variance_fields
}

"""aggregate avg on columns"""
type migrations_avg_fields {
  """"""
  run_instant: Float
}

"""
Boolean expression to filter rows from the table "migrations". All fields are combined with a logical 'AND'.
"""
input migrations_bool_exp {
  """"""
  _and: [migrations_bool_exp!]

  """"""
  _not: migrations_bool_exp

  """"""
  _or: [migrations_bool_exp!]

  """"""
  name: String_comparison_exp

  """"""
  run_instant: bigint_comparison_exp
}

"""
unique or primary key constraints on table "migrations"
"""
enum migrations_constraint {
  """unique or primary key constraint"""
  migrations_pkey
}

"""
input type for incrementing numeric columns in table "migrations"
"""
input migrations_inc_input {
  """"""
  run_instant: bigint
}

"""
input type for inserting data into table "migrations"
"""
input migrations_insert_input {
  """"""
  name: String

  """"""
  run_instant: bigint
}

"""aggregate max on columns"""
type migrations_max_fields {
  """"""
  name: String

  """"""
  run_instant: bigint
}

"""aggregate min on columns"""
type migrations_min_fields {
  """"""
  name: String

  """"""
  run_instant: bigint
}

"""
response of any mutation on the table "migrations"
"""
type migrations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [migrations!]!
}

"""
on conflict condition type for table "migrations"
"""
input migrations_on_conflict {
  """"""
  constraint: migrations_constraint!

  """"""
  update_columns: [migrations_update_column!]!

  """"""
  where: migrations_bool_exp
}

"""Ordering options when selecting data from "migrations"."""
input migrations_order_by {
  """"""
  name: order_by

  """"""
  run_instant: order_by
}

"""primary key columns input for table: migrations"""
input migrations_pk_columns_input {
  """"""
  name: String!
}

"""
select columns of table "migrations"
"""
enum migrations_select_column {
  """column name"""
  name

  """column name"""
  run_instant
}

"""
input type for updating data in table "migrations"
"""
input migrations_set_input {
  """"""
  name: String

  """"""
  run_instant: bigint
}

"""aggregate stddev on columns"""
type migrations_stddev_fields {
  """"""
  run_instant: Float
}

"""aggregate stddev_pop on columns"""
type migrations_stddev_pop_fields {
  """"""
  run_instant: Float
}

"""aggregate stddev_samp on columns"""
type migrations_stddev_samp_fields {
  """"""
  run_instant: Float
}

"""aggregate sum on columns"""
type migrations_sum_fields {
  """"""
  run_instant: bigint
}

"""
update columns of table "migrations"
"""
enum migrations_update_column {
  """column name"""
  name

  """column name"""
  run_instant
}

"""aggregate var_pop on columns"""
type migrations_var_pop_fields {
  """"""
  run_instant: Float
}

"""aggregate var_samp on columns"""
type migrations_var_samp_fields {
  """"""
  run_instant: Float
}

"""aggregate variance on columns"""
type migrations_variance_fields {
  """"""
  run_instant: Float
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "Quiz_beforeWeek21"
  """
  delete_Quiz_beforeWeek21(
    """filter the rows which have to be deleted"""
    where: Quiz_beforeWeek21_bool_exp!
  ): Quiz_beforeWeek21_mutation_response

  """
  delete data from the table: "Quiz_beforeWeek21_2"
  """
  delete_Quiz_beforeWeek21_2(
    """filter the rows which have to be deleted"""
    where: Quiz_beforeWeek21_2_bool_exp!
  ): Quiz_beforeWeek21_2_mutation_response

  """
  delete data from the table: "activeusers2"
  """
  delete_activeusers2(
    """filter the rows which have to be deleted"""
    where: activeusers2_bool_exp!
  ): activeusers2_mutation_response

  """
  delete data from the table: "application_daily_active_users"
  """
  delete_application_daily_active_users(
    """filter the rows which have to be deleted"""
    where: application_daily_active_users_bool_exp!
  ): application_daily_active_users_mutation_response

  """
  delete data from the table: "application_monthly_active_users"
  """
  delete_application_monthly_active_users(
    """filter the rows which have to be deleted"""
    where: application_monthly_active_users_bool_exp!
  ): application_monthly_active_users_mutation_response

  """
  delete data from the table: "application_registration_counts"
  """
  delete_application_registration_counts(
    """filter the rows which have to be deleted"""
    where: application_registration_counts_bool_exp!
  ): application_registration_counts_mutation_response

  """
  delete data from the table: "application_roles"
  """
  delete_application_roles(
    """filter the rows which have to be deleted"""
    where: application_roles_bool_exp!
  ): application_roles_mutation_response

  """
  delete single row from the table: "application_roles"
  """
  delete_application_roles_by_pk(id: uuid!): application_roles

  """
  delete data from the table: "applications"
  """
  delete_applications(
    """filter the rows which have to be deleted"""
    where: applications_bool_exp!
  ): applications_mutation_response

  """
  delete single row from the table: "applications"
  """
  delete_applications_by_pk(id: uuid!): applications

  """
  delete data from the table: "assessment"
  """
  delete_assessment(
    """filter the rows which have to be deleted"""
    where: assessment_bool_exp!
  ): assessment_mutation_response

  """
  delete data from the table: "assessment_au_lo_aggregate"
  """
  delete_assessment_au_lo_aggregate(
    """filter the rows which have to be deleted"""
    where: assessment_au_lo_aggregate_bool_exp!
  ): assessment_au_lo_aggregate_mutation_response

  """
  delete single row from the table: "assessment_au_lo_aggregate"
  """
  delete_assessment_au_lo_aggregate_by_pk(id: Int!): assessment_au_lo_aggregate

  """
  delete data from the table: "assessment_au_lo_aggregate_submission"
  """
  delete_assessment_au_lo_aggregate_submission(
    """filter the rows which have to be deleted"""
    where: assessment_au_lo_aggregate_submission_bool_exp!
  ): assessment_au_lo_aggregate_submission_mutation_response

  """
  delete single row from the table: "assessment_au_lo_aggregate_submission"
  """
  delete_assessment_au_lo_aggregate_submission_by_pk(id: Int!): assessment_au_lo_aggregate_submission

  """
  delete data from the table: "assessment_au_question_aggregate"
  """
  delete_assessment_au_question_aggregate(
    """filter the rows which have to be deleted"""
    where: assessment_au_question_aggregate_bool_exp!
  ): assessment_au_question_aggregate_mutation_response

  """
  delete single row from the table: "assessment_au_question_aggregate"
  """
  delete_assessment_au_question_aggregate_by_pk(id: Int!): assessment_au_question_aggregate

  """
  delete data from the table: "assessment_au_question_aggregate_submission"
  """
  delete_assessment_au_question_aggregate_submission(
    """filter the rows which have to be deleted"""
    where: assessment_au_question_aggregate_submission_bool_exp!
  ): assessment_au_question_aggregate_submission_mutation_response

  """
  delete single row from the table: "assessment_au_question_aggregate_submission"
  """
  delete_assessment_au_question_aggregate_submission_by_pk(id: Int!): assessment_au_question_aggregate_submission

  """
  delete data from the table: "assessment_builder"
  """
  delete_assessment_builder(
    """filter the rows which have to be deleted"""
    where: assessment_builder_bool_exp!
  ): assessment_builder_mutation_response

  """
  delete single row from the table: "assessment_builder"
  """
  delete_assessment_builder_by_pk(id: Int!): assessment_builder

  """
  delete single row from the table: "assessment"
  """
  delete_assessment_by_pk(id: Int!): assessment

  """
  delete data from the table: "assessment_cache"
  """
  delete_assessment_cache(
    """filter the rows which have to be deleted"""
    where: assessment_cache_bool_exp!
  ): assessment_cache_mutation_response

  """
  delete single row from the table: "assessment_cache"
  """
  delete_assessment_cache_by_pk(id: Int!): assessment_cache

  """
  delete data from the table: "assessment_cache_v5"
  """
  delete_assessment_cache_v5(
    """filter the rows which have to be deleted"""
    where: assessment_cache_v5_bool_exp!
  ): assessment_cache_v5_mutation_response

  """
  delete single row from the table: "assessment_cache_v5"
  """
  delete_assessment_cache_v5_by_pk(assessment_id: Int!, school_id: Int!): assessment_cache_v5

  """
  delete data from the table: "assessment_category"
  """
  delete_assessment_category(
    """filter the rows which have to be deleted"""
    where: assessment_category_bool_exp!
  ): assessment_category_mutation_response

  """
  delete single row from the table: "assessment_category"
  """
  delete_assessment_category_by_pk(id: Int!): assessment_category

  """
  delete data from the table: "assessment_compliance_grade_aggregation"
  """
  delete_assessment_compliance_grade_aggregation(
    """filter the rows which have to be deleted"""
    where: assessment_compliance_grade_aggregation_bool_exp!
  ): assessment_compliance_grade_aggregation_mutation_response

  """
  delete data from the table: "assessment_components"
  """
  delete_assessment_components(
    """filter the rows which have to be deleted"""
    where: assessment_components_bool_exp!
  ): assessment_components_mutation_response

  """
  delete single row from the table: "assessment_components"
  """
  delete_assessment_components_by_pk(id: Int!): assessment_components

  """
  delete data from the table: "assessment_ep_grade"
  """
  delete_assessment_ep_grade(
    """filter the rows which have to be deleted"""
    where: assessment_ep_grade_bool_exp!
  ): assessment_ep_grade_mutation_response

  """
  delete single row from the table: "assessment_ep_grade"
  """
  delete_assessment_ep_grade_by_pk(id: Int!): assessment_ep_grade

  """
  delete data from the table: "assessment_ep_grade_submission"
  """
  delete_assessment_ep_grade_submission(
    """filter the rows which have to be deleted"""
    where: assessment_ep_grade_submission_bool_exp!
  ): assessment_ep_grade_submission_mutation_response

  """
  delete single row from the table: "assessment_ep_grade_submission"
  """
  delete_assessment_ep_grade_submission_by_pk(id: Int!): assessment_ep_grade_submission

  """
  delete data from the table: "assessment_ep_marks"
  """
  delete_assessment_ep_marks(
    """filter the rows which have to be deleted"""
    where: assessment_ep_marks_bool_exp!
  ): assessment_ep_marks_mutation_response

  """
  delete single row from the table: "assessment_ep_marks"
  """
  delete_assessment_ep_marks_by_pk(id: Int!): assessment_ep_marks

  """
  delete data from the table: "assessment_ep_marks_submission"
  """
  delete_assessment_ep_marks_submission(
    """filter the rows which have to be deleted"""
    where: assessment_ep_marks_submission_bool_exp!
  ): assessment_ep_marks_submission_mutation_response

  """
  delete single row from the table: "assessment_ep_marks_submission"
  """
  delete_assessment_ep_marks_submission_by_pk(id: Int!): assessment_ep_marks_submission

  """
  delete data from the table: "assessment_grade"
  """
  delete_assessment_grade(
    """filter the rows which have to be deleted"""
    where: assessment_grade_bool_exp!
  ): assessment_grade_mutation_response

  """
  delete single row from the table: "assessment_grade"
  """
  delete_assessment_grade_by_pk(id: Int!): assessment_grade

  """
  delete data from the table: "assessment_grade_mapping"
  """
  delete_assessment_grade_mapping(
    """filter the rows which have to be deleted"""
    where: assessment_grade_mapping_bool_exp!
  ): assessment_grade_mapping_mutation_response

  """
  delete single row from the table: "assessment_grade_mapping"
  """
  delete_assessment_grade_mapping_by_pk(id: Int!): assessment_grade_mapping

  """
  delete data from the table: "assessment_lo_bundles"
  """
  delete_assessment_lo_bundles(
    """filter the rows which have to be deleted"""
    where: assessment_lo_bundles_bool_exp!
  ): assessment_lo_bundles_mutation_response

  """
  delete single row from the table: "assessment_lo_bundles"
  """
  delete_assessment_lo_bundles_by_pk(id: Int!): assessment_lo_bundles

  """
  delete data from the table: "assessment_question_bundles"
  """
  delete_assessment_question_bundles(
    """filter the rows which have to be deleted"""
    where: assessment_question_bundles_bool_exp!
  ): assessment_question_bundles_mutation_response

  """
  delete single row from the table: "assessment_question_bundles"
  """
  delete_assessment_question_bundles_by_pk(id: Int!): assessment_question_bundles

  """
  delete data from the table: "assessment_result"
  """
  delete_assessment_result(
    """filter the rows which have to be deleted"""
    where: assessment_result_bool_exp!
  ): assessment_result_mutation_response

  """
  delete single row from the table: "assessment_result"
  """
  delete_assessment_result_by_pk(id: Int!): assessment_result

  """
  delete data from the table: "assessment_stream"
  """
  delete_assessment_stream(
    """filter the rows which have to be deleted"""
    where: assessment_stream_bool_exp!
  ): assessment_stream_mutation_response

  """
  delete single row from the table: "assessment_stream"
  """
  delete_assessment_stream_by_pk(id: Int!): assessment_stream

  """
  delete data from the table: "assessment_subjects"
  """
  delete_assessment_subjects(
    """filter the rows which have to be deleted"""
    where: assessment_subjects_bool_exp!
  ): assessment_subjects_mutation_response

  """
  delete single row from the table: "assessment_subjects"
  """
  delete_assessment_subjects_by_pk(id: Int!): assessment_subjects

  """
  delete data from the table: "assessment_type"
  """
  delete_assessment_type(
    """filter the rows which have to be deleted"""
    where: assessment_type_bool_exp!
  ): assessment_type_mutation_response

  """
  delete single row from the table: "assessment_type"
  """
  delete_assessment_type_by_pk(id: Int!): assessment_type

  """
  delete data from the table: "assessment_unit"
  """
  delete_assessment_unit(
    """filter the rows which have to be deleted"""
    where: assessment_unit_bool_exp!
  ): assessment_unit_mutation_response

  """
  delete data from the table: "assessment_unit_bundles"
  """
  delete_assessment_unit_bundles(
    """filter the rows which have to be deleted"""
    where: assessment_unit_bundles_bool_exp!
  ): assessment_unit_bundles_mutation_response

  """
  delete single row from the table: "assessment_unit_bundles"
  """
  delete_assessment_unit_bundles_by_pk(id: Int!): assessment_unit_bundles

  """
  delete single row from the table: "assessment_unit"
  """
  delete_assessment_unit_by_pk(id: Int!): assessment_unit

  """
  delete data from the table: "assessment_unit_selected_lo"
  """
  delete_assessment_unit_selected_lo(
    """filter the rows which have to be deleted"""
    where: assessment_unit_selected_lo_bool_exp!
  ): assessment_unit_selected_lo_mutation_response

  """
  delete single row from the table: "assessment_unit_selected_lo"
  """
  delete_assessment_unit_selected_lo_by_pk(id: Int!): assessment_unit_selected_lo

  """
  delete data from the table: "assessment_unit_selected_question"
  """
  delete_assessment_unit_selected_question(
    """filter the rows which have to be deleted"""
    where: assessment_unit_selected_question_bool_exp!
  ): assessment_unit_selected_question_mutation_response

  """
  delete single row from the table: "assessment_unit_selected_question"
  """
  delete_assessment_unit_selected_question_by_pk(id: Int!): assessment_unit_selected_question

  """
  delete data from the table: "assessment_unit_selected_unit"
  """
  delete_assessment_unit_selected_unit(
    """filter the rows which have to be deleted"""
    where: assessment_unit_selected_unit_bool_exp!
  ): assessment_unit_selected_unit_mutation_response

  """
  delete single row from the table: "assessment_unit_selected_unit"
  """
  delete_assessment_unit_selected_unit_by_pk(id: Int!): assessment_unit_selected_unit

  """
  delete data from the table: "attendance"
  """
  delete_attendance(
    """filter the rows which have to be deleted"""
    where: attendance_bool_exp!
  ): attendance_mutation_response

  """
  delete single row from the table: "attendance"
  """
  delete_attendance_by_pk(id: Int!): attendance

  """
  delete data from the table: "attendance_sms_logs"
  """
  delete_attendance_sms_logs(
    """filter the rows which have to be deleted"""
    where: attendance_sms_logs_bool_exp!
  ): attendance_sms_logs_mutation_response

  """
  delete single row from the table: "attendance_sms_logs"
  """
  delete_attendance_sms_logs_by_pk(id: Int!): attendance_sms_logs

  """
  delete data from the table: "attendance_teacher"
  """
  delete_attendance_teacher(
    """filter the rows which have to be deleted"""
    where: attendance_teacher_bool_exp!
  ): attendance_teacher_mutation_response

  """
  delete single row from the table: "attendance_teacher"
  """
  delete_attendance_teacher_by_pk(id: Int!): attendance_teacher

  """
  delete data from the table: "audit_logs"
  """
  delete_audit_logs(
    """filter the rows which have to be deleted"""
    where: audit_logs_bool_exp!
  ): audit_logs_mutation_response

  """
  delete single row from the table: "audit_logs"
  """
  delete_audit_logs_by_pk(id: bigint!): audit_logs

  """
  delete data from the table: "auth_group"
  """
  delete_auth_group(
    """filter the rows which have to be deleted"""
    where: auth_group_bool_exp!
  ): auth_group_mutation_response

  """
  delete single row from the table: "auth_group"
  """
  delete_auth_group_by_pk(id: Int!): auth_group

  """
  delete data from the table: "auth_group_permissions"
  """
  delete_auth_group_permissions(
    """filter the rows which have to be deleted"""
    where: auth_group_permissions_bool_exp!
  ): auth_group_permissions_mutation_response

  """
  delete single row from the table: "auth_group_permissions"
  """
  delete_auth_group_permissions_by_pk(id: Int!): auth_group_permissions

  """
  delete data from the table: "auth_permission"
  """
  delete_auth_permission(
    """filter the rows which have to be deleted"""
    where: auth_permission_bool_exp!
  ): auth_permission_mutation_response

  """
  delete single row from the table: "auth_permission"
  """
  delete_auth_permission_by_pk(id: Int!): auth_permission

  """
  delete data from the table: "auth_user"
  """
  delete_auth_user(
    """filter the rows which have to be deleted"""
    where: auth_user_bool_exp!
  ): auth_user_mutation_response

  """
  delete single row from the table: "auth_user"
  """
  delete_auth_user_by_pk(id: Int!): auth_user

  """
  delete data from the table: "auth_user_groups"
  """
  delete_auth_user_groups(
    """filter the rows which have to be deleted"""
    where: auth_user_groups_bool_exp!
  ): auth_user_groups_mutation_response

  """
  delete single row from the table: "auth_user_groups"
  """
  delete_auth_user_groups_by_pk(id: Int!): auth_user_groups

  """
  delete data from the table: "auth_user_user_permissions"
  """
  delete_auth_user_user_permissions(
    """filter the rows which have to be deleted"""
    where: auth_user_user_permissions_bool_exp!
  ): auth_user_user_permissions_mutation_response

  """
  delete single row from the table: "auth_user_user_permissions"
  """
  delete_auth_user_user_permissions_by_pk(id: Int!): auth_user_user_permissions

  """
  delete data from the table: "authentication_keys"
  """
  delete_authentication_keys(
    """filter the rows which have to be deleted"""
    where: authentication_keys_bool_exp!
  ): authentication_keys_mutation_response

  """
  delete single row from the table: "authentication_keys"
  """
  delete_authentication_keys_by_pk(id: String!): authentication_keys

  """
  delete data from the table: "breached_password_metrics"
  """
  delete_breached_password_metrics(
    """filter the rows which have to be deleted"""
    where: breached_password_metrics_bool_exp!
  ): breached_password_metrics_mutation_response

  """
  delete single row from the table: "breached_password_metrics"
  """
  delete_breached_password_metrics_by_pk(tenants_id: uuid!): breached_password_metrics

  """
  delete data from the table: "bucketwiseenrolment"
  """
  delete_bucketwiseenrolment(
    """filter the rows which have to be deleted"""
    where: bucketwiseenrolment_bool_exp!
  ): bucketwiseenrolment_mutation_response

  """
  delete data from the table: "cdac_sms_input"
  """
  delete_cdac_sms_input(
    """filter the rows which have to be deleted"""
    where: cdac_sms_input_bool_exp!
  ): cdac_sms_input_mutation_response

  """
  delete single row from the table: "cdac_sms_input"
  """
  delete_cdac_sms_input_by_pk(id: Int!): cdac_sms_input

  """
  delete data from the table: "celery_duplicate_remove"
  """
  delete_celery_duplicate_remove(
    """filter the rows which have to be deleted"""
    where: celery_duplicate_remove_bool_exp!
  ): celery_duplicate_remove_mutation_response

  """
  delete single row from the table: "celery_duplicate_remove"
  """
  delete_celery_duplicate_remove_by_pk(assessment_id: Int!, school_id: Int!): celery_duplicate_remove

  """
  delete data from the table: "cg_hp_teacher_data"
  """
  delete_cg_hp_teacher_data(
    """filter the rows which have to be deleted"""
    where: cg_hp_teacher_data_bool_exp!
  ): cg_hp_teacher_data_mutation_response

  """
  delete data from the table: "cg_to_state_list"
  """
  delete_cg_to_state_list(
    """filter the rows which have to be deleted"""
    where: cg_to_state_list_bool_exp!
  ): cg_to_state_list_mutation_response

  """
  delete data from the table: "class_level_component_submission"
  """
  delete_class_level_component_submission(
    """filter the rows which have to be deleted"""
    where: class_level_component_submission_bool_exp!
  ): class_level_component_submission_mutation_response

  """
  delete single row from the table: "class_level_component_submission"
  """
  delete_class_level_component_submission_by_pk(id: Int!): class_level_component_submission

  """
  delete data from the table: "class_submission"
  """
  delete_class_submission(
    """filter the rows which have to be deleted"""
    where: class_submission_bool_exp!
  ): class_submission_mutation_response

  """
  delete single row from the table: "class_submission"
  """
  delete_class_submission_by_pk(id: Int!): class_submission

  """
  delete data from the table: "clean_speak_applications"
  """
  delete_clean_speak_applications(
    """filter the rows which have to be deleted"""
    where: clean_speak_applications_bool_exp!
  ): clean_speak_applications_mutation_response

  """
  delete data from the table: "common_breached_passwords"
  """
  delete_common_breached_passwords(
    """filter the rows which have to be deleted"""
    where: common_breached_passwords_bool_exp!
  ): common_breached_passwords_mutation_response

  """
  delete single row from the table: "common_breached_passwords"
  """
  delete_common_breached_passwords_by_pk(password: String!): common_breached_passwords

  """
  delete data from the table: "component"
  """
  delete_component(
    """filter the rows which have to be deleted"""
    where: component_bool_exp!
  ): component_mutation_response

  """
  delete single row from the table: "component"
  """
  delete_component_by_pk(id: Int!): component

  """
  delete data from the table: "component_subjects"
  """
  delete_component_subjects(
    """filter the rows which have to be deleted"""
    where: component_subjects_bool_exp!
  ): component_subjects_mutation_response

  """
  delete single row from the table: "component_subjects"
  """
  delete_component_subjects_by_pk(id: Int!): component_subjects

  """
  delete data from the table: "component_submission"
  """
  delete_component_submission(
    """filter the rows which have to be deleted"""
    where: component_submission_bool_exp!
  ): component_submission_mutation_response

  """
  delete single row from the table: "component_submission"
  """
  delete_component_submission_by_pk(id: Int!): component_submission

  """
  delete data from the table: "component_type"
  """
  delete_component_type(
    """filter the rows which have to be deleted"""
    where: component_type_bool_exp!
  ): component_type_mutation_response

  """
  delete single row from the table: "component_type"
  """
  delete_component_type_by_pk(id: Int!): component_type

  """
  delete data from the table: "connectors"
  """
  delete_connectors(
    """filter the rows which have to be deleted"""
    where: connectors_bool_exp!
  ): connectors_mutation_response

  """
  delete single row from the table: "connectors"
  """
  delete_connectors_by_pk(id: uuid!): connectors

  """
  delete data from the table: "connectors_tenants"
  """
  delete_connectors_tenants(
    """filter the rows which have to be deleted"""
    where: connectors_tenants_bool_exp!
  ): connectors_tenants_mutation_response

  """
  delete single row from the table: "connectors_tenants"
  """
  delete_connectors_tenants_by_pk(connectors_id: uuid!, tenants_id: uuid!): connectors_tenants

  """
  delete data from the table: "consents"
  """
  delete_consents(
    """filter the rows which have to be deleted"""
    where: consents_bool_exp!
  ): consents_mutation_response

  """
  delete single row from the table: "consents"
  """
  delete_consents_by_pk(id: uuid!): consents

  """
  delete data from the table: "corporate_donor_devices"
  """
  delete_corporate_donor_devices(
    """filter the rows which have to be deleted"""
    where: corporate_donor_devices_bool_exp!
  ): corporate_donor_devices_mutation_response

  """
  delete single row from the table: "corporate_donor_devices"
  """
  delete_corporate_donor_devices_by_pk(id: Int!): corporate_donor_devices

  """
  delete data from the table: "dashboard_role_access_config"
  """
  delete_dashboard_role_access_config(
    """filter the rows which have to be deleted"""
    where: dashboard_role_access_config_bool_exp!
  ): dashboard_role_access_config_mutation_response

  """
  delete single row from the table: "dashboard_role_access_config"
  """
  delete_dashboard_role_access_config_by_pk(id: uuid!): dashboard_role_access_config

  """
  delete data from the table: "dashboard_userdashboardmodule"
  """
  delete_dashboard_userdashboardmodule(
    """filter the rows which have to be deleted"""
    where: dashboard_userdashboardmodule_bool_exp!
  ): dashboard_userdashboardmodule_mutation_response

  """
  delete single row from the table: "dashboard_userdashboardmodule"
  """
  delete_dashboard_userdashboardmodule_by_pk(id: Int!): dashboard_userdashboardmodule

  """
  delete data from the table: "data_sets"
  """
  delete_data_sets(
    """filter the rows which have to be deleted"""
    where: data_sets_bool_exp!
  ): data_sets_mutation_response

  """
  delete single row from the table: "data_sets"
  """
  delete_data_sets_by_pk(name: String!): data_sets

  """
  delete data from the table: "deadline"
  """
  delete_deadline(
    """filter the rows which have to be deleted"""
    where: deadline_bool_exp!
  ): deadline_mutation_response

  """
  delete single row from the table: "deadline"
  """
  delete_deadline_by_pk(id: Int!): deadline

  """
  delete data from the table: "designation_scope_mapping"
  """
  delete_designation_scope_mapping(
    """filter the rows which have to be deleted"""
    where: designation_scope_mapping_bool_exp!
  ): designation_scope_mapping_mutation_response

  """
  delete single row from the table: "designation_scope_mapping"
  """
  delete_designation_scope_mapping_by_pk(id: uuid!): designation_scope_mapping

  """
  delete data from the table: "device_demand_response"
  """
  delete_device_demand_response(
    """filter the rows which have to be deleted"""
    where: device_demand_response_bool_exp!
  ): device_demand_response_mutation_response

  """
  delete single row from the table: "device_demand_response"
  """
  delete_device_demand_response_by_pk(id: Int!): device_demand_response

  """
  delete data from the table: "device_donation_corporates"
  """
  delete_device_donation_corporates(
    """filter the rows which have to be deleted"""
    where: device_donation_corporates_bool_exp!
  ): device_donation_corporates_mutation_response

  """
  delete single row from the table: "device_donation_corporates"
  """
  delete_device_donation_corporates_by_pk(company_id: String!): device_donation_corporates

  """
  delete data from the table: "device_donation_donor"
  """
  delete_device_donation_donor(
    """filter the rows which have to be deleted"""
    where: device_donation_donor_bool_exp!
  ): device_donation_donor_mutation_response

  """
  delete single row from the table: "device_donation_donor"
  """
  delete_device_donation_donor_by_pk(id: Int!): device_donation_donor

  """
  delete data from the table: "device_verification_records"
  """
  delete_device_verification_records(
    """filter the rows which have to be deleted"""
    where: device_verification_records_bool_exp!
  ): device_verification_records_mutation_response

  """
  delete single row from the table: "device_verification_records"
  """
  delete_device_verification_records_by_pk(id: Int!): device_verification_records

  """
  delete data from the table: "django_admin_log"
  """
  delete_django_admin_log(
    """filter the rows which have to be deleted"""
    where: django_admin_log_bool_exp!
  ): django_admin_log_mutation_response

  """
  delete single row from the table: "django_admin_log"
  """
  delete_django_admin_log_by_pk(id: Int!): django_admin_log

  """
  delete data from the table: "django_celery_results_chordcounter"
  """
  delete_django_celery_results_chordcounter(
    """filter the rows which have to be deleted"""
    where: django_celery_results_chordcounter_bool_exp!
  ): django_celery_results_chordcounter_mutation_response

  """
  delete single row from the table: "django_celery_results_chordcounter"
  """
  delete_django_celery_results_chordcounter_by_pk(id: Int!): django_celery_results_chordcounter

  """
  delete data from the table: "django_celery_results_groupresult"
  """
  delete_django_celery_results_groupresult(
    """filter the rows which have to be deleted"""
    where: django_celery_results_groupresult_bool_exp!
  ): django_celery_results_groupresult_mutation_response

  """
  delete single row from the table: "django_celery_results_groupresult"
  """
  delete_django_celery_results_groupresult_by_pk(id: Int!): django_celery_results_groupresult

  """
  delete data from the table: "django_celery_results_taskresult"
  """
  delete_django_celery_results_taskresult(
    """filter the rows which have to be deleted"""
    where: django_celery_results_taskresult_bool_exp!
  ): django_celery_results_taskresult_mutation_response

  """
  delete single row from the table: "django_celery_results_taskresult"
  """
  delete_django_celery_results_taskresult_by_pk(id: Int!): django_celery_results_taskresult

  """
  delete data from the table: "django_content_type"
  """
  delete_django_content_type(
    """filter the rows which have to be deleted"""
    where: django_content_type_bool_exp!
  ): django_content_type_mutation_response

  """
  delete single row from the table: "django_content_type"
  """
  delete_django_content_type_by_pk(id: Int!): django_content_type

  """
  delete data from the table: "django_migrations"
  """
  delete_django_migrations(
    """filter the rows which have to be deleted"""
    where: django_migrations_bool_exp!
  ): django_migrations_mutation_response

  """
  delete single row from the table: "django_migrations"
  """
  delete_django_migrations_by_pk(id: Int!): django_migrations

  """
  delete data from the table: "django_session"
  """
  delete_django_session(
    """filter the rows which have to be deleted"""
    where: django_session_bool_exp!
  ): django_session_mutation_response

  """
  delete single row from the table: "django_session"
  """
  delete_django_session_by_pk(session_key: String!): django_session

  """
  delete data from the table: "duplicates"
  """
  delete_duplicates(
    """filter the rows which have to be deleted"""
    where: duplicates_bool_exp!
  ): duplicates_mutation_response

  """
  delete data from the table: "email_templates"
  """
  delete_email_templates(
    """filter the rows which have to be deleted"""
    where: email_templates_bool_exp!
  ): email_templates_mutation_response

  """
  delete single row from the table: "email_templates"
  """
  delete_email_templates_by_pk(id: uuid!): email_templates

  """
  delete data from the table: "enroll_group"
  """
  delete_enroll_group(
    """filter the rows which have to be deleted"""
    where: enroll_group_bool_exp!
  ): enroll_group_mutation_response

  """
  delete data from the table: "enrollment"
  """
  delete_enrollment(
    """filter the rows which have to be deleted"""
    where: enrollment_bool_exp!
  ): enrollment_mutation_response

  """
  delete single row from the table: "enrollment"
  """
  delete_enrollment_by_pk(id: Int!): enrollment

  """
  delete data from the table: "esamwadmatching"
  """
  delete_esamwadmatching(
    """filter the rows which have to be deleted"""
    where: esamwadmatching_bool_exp!
  ): esamwadmatching_mutation_response

  """
  delete data from the table: "evaluation_param"
  """
  delete_evaluation_param(
    """filter the rows which have to be deleted"""
    where: evaluation_param_bool_exp!
  ): evaluation_param_mutation_response

  """
  delete single row from the table: "evaluation_param"
  """
  delete_evaluation_param_by_pk(id: Int!): evaluation_param

  """
  delete data from the table: "event_logs"
  """
  delete_event_logs(
    """filter the rows which have to be deleted"""
    where: event_logs_bool_exp!
  ): event_logs_mutation_response

  """
  delete single row from the table: "event_logs"
  """
  delete_event_logs_by_pk(id: bigint!): event_logs

  """
  delete data from the table: "external_identifiers"
  """
  delete_external_identifiers(
    """filter the rows which have to be deleted"""
    where: external_identifiers_bool_exp!
  ): external_identifiers_mutation_response

  """
  delete single row from the table: "external_identifiers"
  """
  delete_external_identifiers_by_pk(id: String!): external_identifiers

  """
  delete data from the table: "failed_logins"
  """
  delete_failed_logins(
    """filter the rows which have to be deleted"""
    where: failed_logins_bool_exp!
  ): failed_logins_mutation_response

  """
  delete data from the table: "families"
  """
  delete_families(
    """filter the rows which have to be deleted"""
    where: families_bool_exp!
  ): families_mutation_response

  """
  delete single row from the table: "families"
  """
  delete_families_by_pk(family_id: uuid!, users_id: uuid!): families

  """
  delete data from the table: "federated_domains"
  """
  delete_federated_domains(
    """filter the rows which have to be deleted"""
    where: federated_domains_bool_exp!
  ): federated_domains_mutation_response

  """
  delete data from the table: "form_fields"
  """
  delete_form_fields(
    """filter the rows which have to be deleted"""
    where: form_fields_bool_exp!
  ): form_fields_mutation_response

  """
  delete single row from the table: "form_fields"
  """
  delete_form_fields_by_pk(id: uuid!): form_fields

  """
  delete data from the table: "form_steps"
  """
  delete_form_steps(
    """filter the rows which have to be deleted"""
    where: form_steps_bool_exp!
  ): form_steps_mutation_response

  """
  delete single row from the table: "form_steps"
  """
  delete_form_steps_by_pk(form_fields_id: uuid!, forms_id: uuid!): form_steps

  """
  delete data from the table: "forms"
  """
  delete_forms(
    """filter the rows which have to be deleted"""
    where: forms_bool_exp!
  ): forms_mutation_response

  """
  delete single row from the table: "forms"
  """
  delete_forms_by_pk(id: uuid!): forms

  """
  delete data from the table: "gender_cat_analysis"
  """
  delete_gender_cat_analysis(
    """filter the rows which have to be deleted"""
    where: gender_cat_analysis_bool_exp!
  ): gender_cat_analysis_mutation_response

  """
  delete data from the table: "genuine_profiles"
  """
  delete_genuine_profiles(
    """filter the rows which have to be deleted"""
    where: genuine_profiles_bool_exp!
  ): genuine_profiles_mutation_response

  """
  delete data from the table: "global_daily_active_users"
  """
  delete_global_daily_active_users(
    """filter the rows which have to be deleted"""
    where: global_daily_active_users_bool_exp!
  ): global_daily_active_users_mutation_response

  """
  delete data from the table: "global_monthly_active_users"
  """
  delete_global_monthly_active_users(
    """filter the rows which have to be deleted"""
    where: global_monthly_active_users_bool_exp!
  ): global_monthly_active_users_mutation_response

  """
  delete data from the table: "global_registration_counts"
  """
  delete_global_registration_counts(
    """filter the rows which have to be deleted"""
    where: global_registration_counts_bool_exp!
  ): global_registration_counts_mutation_response

  """
  delete data from the table: "grade"
  """
  delete_grade(
    """filter the rows which have to be deleted"""
    where: grade_bool_exp!
  ): grade_mutation_response

  """
  delete data from the table: "grade_assessment"
  """
  delete_grade_assessment(
    """filter the rows which have to be deleted"""
    where: grade_assessment_bool_exp!
  ): grade_assessment_mutation_response

  """
  delete single row from the table: "grade_assessment"
  """
  delete_grade_assessment_by_pk(id: Int!): grade_assessment

  """
  delete single row from the table: "grade"
  """
  delete_grade_by_pk(id: Int!): grade

  """
  delete data from the table: "group_application_roles"
  """
  delete_group_application_roles(
    """filter the rows which have to be deleted"""
    where: group_application_roles_bool_exp!
  ): group_application_roles_mutation_response

  """
  delete data from the table: "group_members"
  """
  delete_group_members(
    """filter the rows which have to be deleted"""
    where: group_members_bool_exp!
  ): group_members_mutation_response

  """
  delete single row from the table: "group_members"
  """
  delete_group_members_by_pk(id: uuid!): group_members

  """
  delete data from the table: "groups"
  """
  delete_groups(
    """filter the rows which have to be deleted"""
    where: groups_bool_exp!
  ): groups_mutation_response

  """
  delete single row from the table: "groups"
  """
  delete_groups_by_pk(id: uuid!): groups

  """
  delete data from the table: "hourly_logins"
  """
  delete_hourly_logins(
    """filter the rows which have to be deleted"""
    where: hourly_logins_bool_exp!
  ): hourly_logins_mutation_response

  """
  delete data from the table: "idb_attendance_by_date_aggregate"
  """
  delete_idb_attendance_by_date_aggregate(
    """filter the rows which have to be deleted"""
    where: idb_attendance_by_date_aggregate_bool_exp!
  ): idb_attendance_by_date_aggregate_mutation_response

  """
  delete data from the table: "idb_attendance_district_enrolment_percentage"
  """
  delete_idb_attendance_district_enrolment_percentage(
    """filter the rows which have to be deleted"""
    where: idb_attendance_district_enrolment_percentage_bool_exp!
  ): idb_attendance_district_enrolment_percentage_mutation_response

  """
  delete data from the table: "idb_block_wise_student_enrolment"
  """
  delete_idb_block_wise_student_enrolment(
    """filter the rows which have to be deleted"""
    where: idb_block_wise_student_enrolment_bool_exp!
  ): idb_block_wise_student_enrolment_mutation_response

  """
  delete data from the table: "idb_daily_enrolment_aggregate"
  """
  delete_idb_daily_enrolment_aggregate(
    """filter the rows which have to be deleted"""
    where: idb_daily_enrolment_aggregate_bool_exp!
  ): idb_daily_enrolment_aggregate_mutation_response

  """
  delete data from the table: "idb_daily_total_attendance_percent_aggregate"
  """
  delete_idb_daily_total_attendance_percent_aggregate(
    """filter the rows which have to be deleted"""
    where: idb_daily_total_attendance_percent_aggregate_bool_exp!
  ): idb_daily_total_attendance_percent_aggregate_mutation_response

  """
  delete data from the table: "idb_daily_total_attendance_percentage"
  """
  delete_idb_daily_total_attendance_percentage(
    """filter the rows which have to be deleted"""
    where: idb_daily_total_attendance_percentage_bool_exp!
  ): idb_daily_total_attendance_percentage_mutation_response

  """
  delete data from the table: "idb_daily_total_attendance_percentage_mv"
  """
  delete_idb_daily_total_attendance_percentage_mv(
    """filter the rows which have to be deleted"""
    where: idb_daily_total_attendance_percentage_mv_bool_exp!
  ): idb_daily_total_attendance_percentage_mv_mutation_response

  """
  delete data from the table: "idb_district_school_type_percentage"
  """
  delete_idb_district_school_type_percentage(
    """filter the rows which have to be deleted"""
    where: idb_district_school_type_percentage_bool_exp!
  ): idb_district_school_type_percentage_mutation_response

  """
  delete data from the table: "idb_district_wise_schools"
  """
  delete_idb_district_wise_schools(
    """filter the rows which have to be deleted"""
    where: idb_district_wise_schools_bool_exp!
  ): idb_district_wise_schools_mutation_response

  """
  delete data from the table: "idb_district_wise_student_enrolment"
  """
  delete_idb_district_wise_student_enrolment(
    """filter the rows which have to be deleted"""
    where: idb_district_wise_student_enrolment_bool_exp!
  ): idb_district_wise_student_enrolment_mutation_response

  """
  delete data from the table: "idb_enrolment_grade_wise_state"
  """
  delete_idb_enrolment_grade_wise_state(
    """filter the rows which have to be deleted"""
    where: idb_enrolment_grade_wise_state_bool_exp!
  ): idb_enrolment_grade_wise_state_mutation_response

  """
  delete data from the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  delete_idb_student_attendance_attendance_final_by_date_grade(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_attendance_final_by_date_grade_bool_exp!
  ): idb_student_attendance_attendance_final_by_date_grade_mutation_response

  """
  delete data from the table: "idb_student_attendance_attendance_merged"
  """
  delete_idb_student_attendance_attendance_merged(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_attendance_merged_bool_exp!
  ): idb_student_attendance_attendance_merged_mutation_response

  """
  delete data from the table: "idb_student_attendance_attendance_present_aggregate"
  """
  delete_idb_student_attendance_attendance_present_aggregate(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_attendance_present_aggregate_bool_exp!
  ): idb_student_attendance_attendance_present_aggregate_mutation_response

  """
  delete data from the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  delete_idb_student_attendance_attendance_present_marked_by_date(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_attendance_present_marked_by_date_bool_exp!
  ): idb_student_attendance_attendance_present_marked_by_date_mutation_response

  """
  delete data from the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  delete_idb_student_attendance_attendance_total_marked_by_date(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_attendance_total_marked_by_date_bool_exp!
  ): idb_student_attendance_attendance_total_marked_by_date_mutation_response

  """
  delete data from the table: "idb_student_attendance_block_final"
  """
  delete_idb_student_attendance_block_final(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_block_final_bool_exp!
  ): idb_student_attendance_block_final_mutation_response

  """
  delete data from the table: "idb_student_attendance_block_final_enrolment"
  """
  delete_idb_student_attendance_block_final_enrolment(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_block_final_enrolment_bool_exp!
  ): idb_student_attendance_block_final_enrolment_mutation_response

  """
  delete data from the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  delete_idb_student_attendance_block_level_daily_present_marked(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_block_level_daily_present_marked_bool_exp!
  ): idb_student_attendance_block_level_daily_present_marked_mutation_response

  """
  delete data from the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  delete_idb_student_attendance_block_level_daily_total_marked(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_block_level_daily_total_marked_bool_exp!
  ): idb_student_attendance_block_level_daily_total_marked_mutation_response

  """
  delete data from the table: "idb_student_attendance_compliance_district_wise"
  """
  delete_idb_student_attendance_compliance_district_wise(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_compliance_district_wise_bool_exp!
  ): idb_student_attendance_compliance_district_wise_mutation_response

  """
  delete data from the table: "idb_student_attendance_compliance_district_wise_final"
  """
  delete_idb_student_attendance_compliance_district_wise_final(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_compliance_district_wise_final_bool_exp!
  ): idb_student_attendance_compliance_district_wise_final_mutation_response

  """
  delete data from the table: "idb_student_attendance_compliance_school_wise"
  """
  delete_idb_student_attendance_compliance_school_wise(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_compliance_school_wise_bool_exp!
  ): idb_student_attendance_compliance_school_wise_mutation_response

  """
  delete data from the table: "idb_student_attendance_district_final"
  """
  delete_idb_student_attendance_district_final(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_district_final_bool_exp!
  ): idb_student_attendance_district_final_mutation_response

  """
  delete data from the table: "idb_student_attendance_district_final_enrolment"
  """
  delete_idb_student_attendance_district_final_enrolment(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_district_final_enrolment_bool_exp!
  ): idb_student_attendance_district_final_enrolment_mutation_response

  """
  delete data from the table: "idb_student_attendance_district_present_marked_by_date"
  """
  delete_idb_student_attendance_district_present_marked_by_date(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_district_present_marked_by_date_bool_exp!
  ): idb_student_attendance_district_present_marked_by_date_mutation_response

  """
  delete data from the table: "idb_student_attendance_district_total_marked_by_date"
  """
  delete_idb_student_attendance_district_total_marked_by_date(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_district_total_marked_by_date_bool_exp!
  ): idb_student_attendance_district_total_marked_by_date_mutation_response

  """
  delete data from the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  delete_idb_student_attendance_final_grade_wise_with_enrolment(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp!
  ): idb_student_attendance_final_grade_wise_with_enrolment_mutation_response

  """
  delete data from the table: "idb_student_attendance_present_school_wise"
  """
  delete_idb_student_attendance_present_school_wise(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_present_school_wise_bool_exp!
  ): idb_student_attendance_present_school_wise_mutation_response

  """
  delete data from the table: "idb_student_attendance_school_wise_final"
  """
  delete_idb_student_attendance_school_wise_final(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_school_wise_final_bool_exp!
  ): idb_student_attendance_school_wise_final_mutation_response

  """
  delete data from the table: "idb_student_attendance_total_school_wise"
  """
  delete_idb_student_attendance_total_school_wise(
    """filter the rows which have to be deleted"""
    where: idb_student_attendance_total_school_wise_bool_exp!
  ): idb_student_attendance_total_school_wise_mutation_response

  """
  delete data from the table: "idb_total_state_student_enrolment"
  """
  delete_idb_total_state_student_enrolment(
    """filter the rows which have to be deleted"""
    where: idb_total_state_student_enrolment_bool_exp!
  ): idb_total_state_student_enrolment_mutation_response

  """
  delete data from the table: "identities"
  """
  delete_identities(
    """filter the rows which have to be deleted"""
    where: identities_bool_exp!
  ): identities_mutation_response

  """
  delete single row from the table: "identities"
  """
  delete_identities_by_pk(id: bigint!): identities

  """
  delete data from the table: "identity_providers"
  """
  delete_identity_providers(
    """filter the rows which have to be deleted"""
    where: identity_providers_bool_exp!
  ): identity_providers_mutation_response

  """
  delete data from the table: "identity_providers_applications"
  """
  delete_identity_providers_applications(
    """filter the rows which have to be deleted"""
    where: identity_providers_applications_bool_exp!
  ): identity_providers_applications_mutation_response

  """
  delete single row from the table: "identity_providers"
  """
  delete_identity_providers_by_pk(id: uuid!): identity_providers

  """
  delete data from the table: "instance"
  """
  delete_instance(
    """filter the rows which have to be deleted"""
    where: instance_bool_exp!
  ): instance_mutation_response

  """
  delete data from the table: "integrations"
  """
  delete_integrations(
    """filter the rows which have to be deleted"""
    where: integrations_bool_exp!
  ): integrations_mutation_response

  """
  delete data from the table: "jet_bookmark"
  """
  delete_jet_bookmark(
    """filter the rows which have to be deleted"""
    where: jet_bookmark_bool_exp!
  ): jet_bookmark_mutation_response

  """
  delete single row from the table: "jet_bookmark"
  """
  delete_jet_bookmark_by_pk(id: Int!): jet_bookmark

  """
  delete data from the table: "jet_pinnedapplication"
  """
  delete_jet_pinnedapplication(
    """filter the rows which have to be deleted"""
    where: jet_pinnedapplication_bool_exp!
  ): jet_pinnedapplication_mutation_response

  """
  delete single row from the table: "jet_pinnedapplication"
  """
  delete_jet_pinnedapplication_by_pk(id: Int!): jet_pinnedapplication

  """
  delete data from the table: "keys"
  """
  delete_keys(
    """filter the rows which have to be deleted"""
    where: keys_bool_exp!
  ): keys_mutation_response

  """
  delete single row from the table: "keys"
  """
  delete_keys_by_pk(id: uuid!): keys

  """
  delete data from the table: "lambdas"
  """
  delete_lambdas(
    """filter the rows which have to be deleted"""
    where: lambdas_bool_exp!
  ): lambdas_mutation_response

  """
  delete single row from the table: "lambdas"
  """
  delete_lambdas_by_pk(id: uuid!): lambdas

  """
  delete data from the table: "lo"
  """
  delete_lo(
    """filter the rows which have to be deleted"""
    where: lo_bool_exp!
  ): lo_mutation_response

  """
  delete data from the table: "lo_assessment"
  """
  delete_lo_assessment(
    """filter the rows which have to be deleted"""
    where: lo_assessment_bool_exp!
  ): lo_assessment_mutation_response

  """
  delete single row from the table: "lo_assessment"
  """
  delete_lo_assessment_by_pk(id: Int!): lo_assessment

  """
  delete data from the table: "lo_bundle"
  """
  delete_lo_bundle(
    """filter the rows which have to be deleted"""
    where: lo_bundle_bool_exp!
  ): lo_bundle_mutation_response

  """
  delete single row from the table: "lo_bundle"
  """
  delete_lo_bundle_by_pk(id: Int!): lo_bundle

  """
  delete data from the table: "lo_bundle_los"
  """
  delete_lo_bundle_los(
    """filter the rows which have to be deleted"""
    where: lo_bundle_los_bool_exp!
  ): lo_bundle_los_mutation_response

  """
  delete single row from the table: "lo_bundle_los"
  """
  delete_lo_bundle_los_by_pk(id: Int!): lo_bundle_los

  """
  delete single row from the table: "lo"
  """
  delete_lo_by_pk(id: Int!): lo

  """
  delete data from the table: "lo_submission"
  """
  delete_lo_submission(
    """filter the rows which have to be deleted"""
    where: lo_submission_bool_exp!
  ): lo_submission_mutation_response

  """
  delete single row from the table: "lo_submission"
  """
  delete_lo_submission_by_pk(id: Int!): lo_submission

  """
  delete data from the table: "lo_table"
  """
  delete_lo_table(
    """filter the rows which have to be deleted"""
    where: lo_table_bool_exp!
  ): lo_table_mutation_response

  """
  delete data from the table: "lo_table2"
  """
  delete_lo_table2(
    """filter the rows which have to be deleted"""
    where: lo_table2_bool_exp!
  ): lo_table2_mutation_response

  """
  delete data from the table: "lo_v2"
  """
  delete_lo_v2(
    """filter the rows which have to be deleted"""
    where: lo_v2_bool_exp!
  ): lo_v2_mutation_response

  """
  delete single row from the table: "lo_v2"
  """
  delete_lo_v2_by_pk(id: Int!): lo_v2

  """
  delete data from the table: "location"
  """
  delete_location(
    """filter the rows which have to be deleted"""
    where: location_bool_exp!
  ): location_mutation_response

  """
  delete single row from the table: "location"
  """
  delete_location_by_pk(id: Int!): location

  """
  delete data from the table: "locks"
  """
  delete_locks(
    """filter the rows which have to be deleted"""
    where: locks_bool_exp!
  ): locks_mutation_response

  """
  delete single row from the table: "locks"
  """
  delete_locks_by_pk(type: String!): locks

  """
  delete data from the table: "mapping"
  """
  delete_mapping(
    """filter the rows which have to be deleted"""
    where: mapping_bool_exp!
  ): mapping_mutation_response

  """
  delete single row from the table: "mapping"
  """
  delete_mapping_by_pk(id: Int!): mapping

  """
  delete data from the table: "mapping_details"
  """
  delete_mapping_details(
    """filter the rows which have to be deleted"""
    where: mapping_details_bool_exp!
  ): mapping_details_mutation_response

  """
  delete single row from the table: "mapping_details"
  """
  delete_mapping_details_by_pk(id: Int!): mapping_details

  """
  delete data from the table: "mapping_submission"
  """
  delete_mapping_submission(
    """filter the rows which have to be deleted"""
    where: mapping_submission_bool_exp!
  ): mapping_submission_mutation_response

  """
  delete single row from the table: "mapping_submission"
  """
  delete_mapping_submission_by_pk(id: Int!): mapping_submission

  """
  delete data from the table: "master_attendance"
  """
  delete_master_attendance(
    """filter the rows which have to be deleted"""
    where: master_attendance_bool_exp!
  ): master_attendance_mutation_response

  """
  delete data from the table: "master_presentstudents"
  """
  delete_master_presentstudents(
    """filter the rows which have to be deleted"""
    where: master_presentstudents_bool_exp!
  ): master_presentstudents_mutation_response

  """
  delete data from the table: "master_presentstudents1"
  """
  delete_master_presentstudents1(
    """filter the rows which have to be deleted"""
    where: master_presentstudents1_bool_exp!
  ): master_presentstudents1_mutation_response

  """
  delete data from the table: "master_record"
  """
  delete_master_record(
    """filter the rows which have to be deleted"""
    where: master_record_bool_exp!
  ): master_record_mutation_response

  """
  delete data from the table: "master_students"
  """
  delete_master_students(
    """filter the rows which have to be deleted"""
    where: master_students_bool_exp!
  ): master_students_mutation_response

  """
  delete data from the table: "master_table"
  """
  delete_master_table(
    """filter the rows which have to be deleted"""
    where: master_table_bool_exp!
  ): master_table_mutation_response

  """
  delete data from the table: "master_table_higher2"
  """
  delete_master_table_higher2(
    """filter the rows which have to be deleted"""
    where: master_table_higher2_bool_exp!
  ): master_table_higher2_mutation_response

  """
  delete data from the table: "masterstudents"
  """
  delete_masterstudents(
    """filter the rows which have to be deleted"""
    where: masterstudents_bool_exp!
  ): masterstudents_mutation_response

  """
  delete data from the table: "matchingteachernos"
  """
  delete_matchingteachernos(
    """filter the rows which have to be deleted"""
    where: matchingteachernos_bool_exp!
  ): matchingteachernos_mutation_response

  """
  delete data from the table: "migrations"
  """
  delete_migrations(
    """filter the rows which have to be deleted"""
    where: migrations_bool_exp!
  ): migrations_mutation_response

  """
  delete single row from the table: "migrations"
  """
  delete_migrations_by_pk(name: String!): migrations

  """
  delete data from the table: "mvintegrateddb_totalschools"
  """
  delete_mvintegrateddb_totalschools(
    """filter the rows which have to be deleted"""
    where: mvintegrateddb_totalschools_bool_exp!
  ): mvintegrateddb_totalschools_mutation_response

  """
  delete data from the table: "mystudent_testperformance"
  """
  delete_mystudent_testperformance(
    """filter the rows which have to be deleted"""
    where: mystudent_testperformance_bool_exp!
  ): mystudent_testperformance_mutation_response

  """
  delete single row from the table: "mystudent_testperformance"
  """
  delete_mystudent_testperformance_by_pk(p_key: Int!): mystudent_testperformance

  """
  delete data from the table: "no_of_profiles"
  """
  delete_no_of_profiles(
    """filter the rows which have to be deleted"""
    where: no_of_profiles_bool_exp!
  ): no_of_profiles_mutation_response

  """
  delete data from the table: "nodes"
  """
  delete_nodes(
    """filter the rows which have to be deleted"""
    where: nodes_bool_exp!
  ): nodes_mutation_response

  """
  delete single row from the table: "nodes"
  """
  delete_nodes_by_pk(id: uuid!): nodes

  """
  delete data from the table: "notification"
  """
  delete_notification(
    """filter the rows which have to be deleted"""
    where: notification_bool_exp!
  ): notification_mutation_response

  """
  delete single row from the table: "notification"
  """
  delete_notification_by_pk(id: Int!): notification

  """
  delete data from the table: "number_of_highschools"
  """
  delete_number_of_highschools(
    """filter the rows which have to be deleted"""
    where: number_of_highschools_bool_exp!
  ): number_of_highschools_mutation_response

  """
  delete data from the table: "number_of_middleschools"
  """
  delete_number_of_middleschools(
    """filter the rows which have to be deleted"""
    where: number_of_middleschools_bool_exp!
  ): number_of_middleschools_mutation_response

  """
  delete data from the table: "number_of_primaryschools"
  """
  delete_number_of_primaryschools(
    """filter the rows which have to be deleted"""
    where: number_of_primaryschools_bool_exp!
  ): number_of_primaryschools_mutation_response

  """
  delete data from the table: "number_of_secondaryschools"
  """
  delete_number_of_secondaryschools(
    """filter the rows which have to be deleted"""
    where: number_of_secondaryschools_bool_exp!
  ): number_of_secondaryschools_mutation_response

  """
  delete data from the table: "number_of_totalschools"
  """
  delete_number_of_totalschools(
    """filter the rows which have to be deleted"""
    where: number_of_totalschools_bool_exp!
  ): number_of_totalschools_mutation_response

  """
  delete data from the table: "odk_submission"
  """
  delete_odk_submission(
    """filter the rows which have to be deleted"""
    where: odk_submission_bool_exp!
  ): odk_submission_mutation_response

  """
  delete single row from the table: "odk_submission"
  """
  delete_odk_submission_by_pk(id: Int!): odk_submission

  """
  delete data from the table: "old_assessment"
  """
  delete_old_assessment(
    """filter the rows which have to be deleted"""
    where: old_assessment_bool_exp!
  ): old_assessment_mutation_response

  """
  delete single row from the table: "old_assessment"
  """
  delete_old_assessment_by_pk(id: Int!): old_assessment

  """
  delete data from the table: "old_lo_master"
  """
  delete_old_lo_master(
    """filter the rows which have to be deleted"""
    where: old_lo_master_bool_exp!
  ): old_lo_master_mutation_response

  """
  delete single row from the table: "old_lo_master"
  """
  delete_old_lo_master_by_pk(id: Int!): old_lo_master

  """
  delete data from the table: "old_lo_submissions"
  """
  delete_old_lo_submissions(
    """filter the rows which have to be deleted"""
    where: old_lo_submissions_bool_exp!
  ): old_lo_submissions_mutation_response

  """
  delete single row from the table: "old_lo_submissions"
  """
  delete_old_lo_submissions_by_pk(id: Int!): old_lo_submissions

  """
  delete data from the table: "old_schools"
  """
  delete_old_schools(
    """filter the rows which have to be deleted"""
    where: old_schools_bool_exp!
  ): old_schools_mutation_response

  """
  delete single row from the table: "old_schools"
  """
  delete_old_schools_by_pk(id: Int!): old_schools

  """
  delete data from the table: "pgbench_accounts"
  """
  delete_pgbench_accounts(
    """filter the rows which have to be deleted"""
    where: pgbench_accounts_bool_exp!
  ): pgbench_accounts_mutation_response

  """
  delete single row from the table: "pgbench_accounts"
  """
  delete_pgbench_accounts_by_pk(aid: Int!): pgbench_accounts

  """
  delete data from the table: "pgbench_branches"
  """
  delete_pgbench_branches(
    """filter the rows which have to be deleted"""
    where: pgbench_branches_bool_exp!
  ): pgbench_branches_mutation_response

  """
  delete single row from the table: "pgbench_branches"
  """
  delete_pgbench_branches_by_pk(bid: Int!): pgbench_branches

  """
  delete data from the table: "pgbench_history"
  """
  delete_pgbench_history(
    """filter the rows which have to be deleted"""
    where: pgbench_history_bool_exp!
  ): pgbench_history_mutation_response

  """
  delete data from the table: "pgbench_tellers"
  """
  delete_pgbench_tellers(
    """filter the rows which have to be deleted"""
    where: pgbench_tellers_bool_exp!
  ): pgbench_tellers_mutation_response

  """
  delete single row from the table: "pgbench_tellers"
  """
  delete_pgbench_tellers_by_pk(tid: Int!): pgbench_tellers

  """
  delete data from the table: "preboard_results_2021"
  """
  delete_preboard_results_2021(
    """filter the rows which have to be deleted"""
    where: preboard_results_2021_bool_exp!
  ): preboard_results_2021_mutation_response

  """
  delete data from the table: "preboard_student_table2021"
  """
  delete_preboard_student_table2021(
    """filter the rows which have to be deleted"""
    where: preboard_student_table2021_bool_exp!
  ): preboard_student_table2021_mutation_response

  """
  delete data from the table: "previous_passwords"
  """
  delete_previous_passwords(
    """filter the rows which have to be deleted"""
    where: previous_passwords_bool_exp!
  ): previous_passwords_mutation_response

  """
  delete data from the table: "question"
  """
  delete_question(
    """filter the rows which have to be deleted"""
    where: question_bool_exp!
  ): question_mutation_response

  """
  delete data from the table: "question_assessment"
  """
  delete_question_assessment(
    """filter the rows which have to be deleted"""
    where: question_assessment_bool_exp!
  ): question_assessment_mutation_response

  """
  delete single row from the table: "question_assessment"
  """
  delete_question_assessment_by_pk(id: Int!): question_assessment

  """
  delete data from the table: "question_bundle"
  """
  delete_question_bundle(
    """filter the rows which have to be deleted"""
    where: question_bundle_bool_exp!
  ): question_bundle_mutation_response

  """
  delete single row from the table: "question_bundle"
  """
  delete_question_bundle_by_pk(id: Int!): question_bundle

  """
  delete data from the table: "question_bundle_questions"
  """
  delete_question_bundle_questions(
    """filter the rows which have to be deleted"""
    where: question_bundle_questions_bool_exp!
  ): question_bundle_questions_mutation_response

  """
  delete single row from the table: "question_bundle_questions"
  """
  delete_question_bundle_questions_by_pk(id: Int!): question_bundle_questions

  """
  delete single row from the table: "question"
  """
  delete_question_by_pk(id: Int!): question

  """
  delete data from the table: "question_submission"
  """
  delete_question_submission(
    """filter the rows which have to be deleted"""
    where: question_submission_bool_exp!
  ): question_submission_mutation_response

  """
  delete single row from the table: "question_submission"
  """
  delete_question_submission_by_pk(id: Int!): question_submission

  """
  delete data from the table: "question_v2"
  """
  delete_question_v2(
    """filter the rows which have to be deleted"""
    where: question_v2_bool_exp!
  ): question_v2_mutation_response

  """
  delete single row from the table: "question_v2"
  """
  delete_question_v2_by_pk(id: Int!): question_v2

  """
  delete data from the table: "questions_submission_expanded"
  """
  delete_questions_submission_expanded(
    """filter the rows which have to be deleted"""
    where: questions_submission_expanded_bool_exp!
  ): questions_submission_expanded_mutation_response

  """
  delete single row from the table: "questions_submission_expanded"
  """
  delete_questions_submission_expanded_by_pk(id: Int!): questions_submission_expanded

  """
  delete data from the table: "raw_application_daily_active_users"
  """
  delete_raw_application_daily_active_users(
    """filter the rows which have to be deleted"""
    where: raw_application_daily_active_users_bool_exp!
  ): raw_application_daily_active_users_mutation_response

  """
  delete data from the table: "raw_application_monthly_active_users"
  """
  delete_raw_application_monthly_active_users(
    """filter the rows which have to be deleted"""
    where: raw_application_monthly_active_users_bool_exp!
  ): raw_application_monthly_active_users_mutation_response

  """
  delete data from the table: "raw_global_daily_active_users"
  """
  delete_raw_global_daily_active_users(
    """filter the rows which have to be deleted"""
    where: raw_global_daily_active_users_bool_exp!
  ): raw_global_daily_active_users_mutation_response

  """
  delete data from the table: "raw_global_monthly_active_users"
  """
  delete_raw_global_monthly_active_users(
    """filter the rows which have to be deleted"""
    where: raw_global_monthly_active_users_bool_exp!
  ): raw_global_monthly_active_users_mutation_response

  """
  delete data from the table: "raw_logins"
  """
  delete_raw_logins(
    """filter the rows which have to be deleted"""
    where: raw_logins_bool_exp!
  ): raw_logins_mutation_response

  """
  delete data from the table: "refresh_tokens"
  """
  delete_refresh_tokens(
    """filter the rows which have to be deleted"""
    where: refresh_tokens_bool_exp!
  ): refresh_tokens_mutation_response

  """
  delete single row from the table: "refresh_tokens"
  """
  delete_refresh_tokens_by_pk(id: uuid!): refresh_tokens

  """
  delete data from the table: "sample_test"
  """
  delete_sample_test(
    """filter the rows which have to be deleted"""
    where: sample_test_bool_exp!
  ): sample_test_mutation_response

  """
  delete single row from the table: "sample_test"
  """
  delete_sample_test_by_pk(id: Int!): sample_test

  """
  delete data from the table: "school"
  """
  delete_school(
    """filter the rows which have to be deleted"""
    where: school_bool_exp!
  ): school_mutation_response

  """
  delete single row from the table: "school"
  """
  delete_school_by_pk(id: Int!): school

  """
  delete data from the table: "school_cache"
  """
  delete_school_cache(
    """filter the rows which have to be deleted"""
    where: school_cache_bool_exp!
  ): school_cache_mutation_response

  """
  delete single row from the table: "school_cache"
  """
  delete_school_cache_by_pk(id: Int!): school_cache

  """
  delete data from the table: "school_class_mismatch"
  """
  delete_school_class_mismatch(
    """filter the rows which have to be deleted"""
    where: school_class_mismatch_bool_exp!
  ): school_class_mismatch_mutation_response

  """
  delete data from the table: "school_grade"
  """
  delete_school_grade(
    """filter the rows which have to be deleted"""
    where: school_grade_bool_exp!
  ): school_grade_mutation_response

  """
  delete single row from the table: "school_grade"
  """
  delete_school_grade_by_pk(id: Int!): school_grade

  """
  delete data from the table: "school_location_mapping"
  """
  delete_school_location_mapping(
    """filter the rows which have to be deleted"""
    where: school_location_mapping_bool_exp!
  ): school_location_mapping_mutation_response

  """
  delete single row from the table: "school_location_mapping"
  """
  delete_school_location_mapping_by_pk(id: Int!): school_location_mapping

  """
  delete data from the table: "school_type_enrolment"
  """
  delete_school_type_enrolment(
    """filter the rows which have to be deleted"""
    where: school_type_enrolment_bool_exp!
  ): school_type_enrolment_mutation_response

  """
  delete data from the table: "school_type_udise_enrolment"
  """
  delete_school_type_udise_enrolment(
    """filter the rows which have to be deleted"""
    where: school_type_udise_enrolment_bool_exp!
  ): school_type_udise_enrolment_mutation_response

  """
  delete data from the table: "school_wise_daily_enrolment"
  """
  delete_school_wise_daily_enrolment(
    """filter the rows which have to be deleted"""
    where: school_wise_daily_enrolment_bool_exp!
  ): school_wise_daily_enrolment_mutation_response

  """
  delete single row from the table: "school_wise_daily_enrolment"
  """
  delete_school_wise_daily_enrolment_by_pk(id: bigint!): school_wise_daily_enrolment

  """
  delete data from the table: "schoolwise_student_enrolment"
  """
  delete_schoolwise_student_enrolment(
    """filter the rows which have to be deleted"""
    where: schoolwise_student_enrolment_bool_exp!
  ): schoolwise_student_enrolment_mutation_response

  """
  delete data from the table: "server_logroup"
  """
  delete_server_logroup(
    """filter the rows which have to be deleted"""
    where: server_logroup_bool_exp!
  ): server_logroup_mutation_response

  """
  delete single row from the table: "server_logroup"
  """
  delete_server_logroup_by_pk(id: Int!): server_logroup

  """
  delete data from the table: "server_logroup_lo"
  """
  delete_server_logroup_lo(
    """filter the rows which have to be deleted"""
    where: server_logroup_lo_bool_exp!
  ): server_logroup_lo_mutation_response

  """
  delete single row from the table: "server_logroup_lo"
  """
  delete_server_logroup_lo_by_pk(id: Int!): server_logroup_lo

  """
  delete data from the table: "server_marksrange"
  """
  delete_server_marksrange(
    """filter the rows which have to be deleted"""
    where: server_marksrange_bool_exp!
  ): server_marksrange_mutation_response

  """
  delete single row from the table: "server_marksrange"
  """
  delete_server_marksrange_by_pk(id: Int!): server_marksrange

  """
  delete data from the table: "server_questiongroup"
  """
  delete_server_questiongroup(
    """filter the rows which have to be deleted"""
    where: server_questiongroup_bool_exp!
  ): server_questiongroup_mutation_response

  """
  delete single row from the table: "server_questiongroup"
  """
  delete_server_questiongroup_by_pk(id: Int!): server_questiongroup

  """
  delete data from the table: "server_questiongroup_question"
  """
  delete_server_questiongroup_question(
    """filter the rows which have to be deleted"""
    where: server_questiongroup_question_bool_exp!
  ): server_questiongroup_question_mutation_response

  """
  delete single row from the table: "server_questiongroup_question"
  """
  delete_server_questiongroup_question_by_pk(id: Int!): server_questiongroup_question

  """
  delete data from the table: "silk_profile"
  """
  delete_silk_profile(
    """filter the rows which have to be deleted"""
    where: silk_profile_bool_exp!
  ): silk_profile_mutation_response

  """
  delete single row from the table: "silk_profile"
  """
  delete_silk_profile_by_pk(id: Int!): silk_profile

  """
  delete data from the table: "silk_profile_queries"
  """
  delete_silk_profile_queries(
    """filter the rows which have to be deleted"""
    where: silk_profile_queries_bool_exp!
  ): silk_profile_queries_mutation_response

  """
  delete single row from the table: "silk_profile_queries"
  """
  delete_silk_profile_queries_by_pk(id: Int!): silk_profile_queries

  """
  delete data from the table: "silk_request"
  """
  delete_silk_request(
    """filter the rows which have to be deleted"""
    where: silk_request_bool_exp!
  ): silk_request_mutation_response

  """
  delete single row from the table: "silk_request"
  """
  delete_silk_request_by_pk(id: String!): silk_request

  """
  delete data from the table: "silk_response"
  """
  delete_silk_response(
    """filter the rows which have to be deleted"""
    where: silk_response_bool_exp!
  ): silk_response_mutation_response

  """
  delete single row from the table: "silk_response"
  """
  delete_silk_response_by_pk(id: String!): silk_response

  """
  delete data from the table: "silk_sqlquery"
  """
  delete_silk_sqlquery(
    """filter the rows which have to be deleted"""
    where: silk_sqlquery_bool_exp!
  ): silk_sqlquery_mutation_response

  """
  delete single row from the table: "silk_sqlquery"
  """
  delete_silk_sqlquery_by_pk(id: Int!): silk_sqlquery

  """
  delete data from the table: "sms"
  """
  delete_sms(
    """filter the rows which have to be deleted"""
    where: sms_bool_exp!
  ): sms_mutation_response

  """
  delete single row from the table: "sms"
  """
  delete_sms_by_pk(id: Int!): sms

  """
  delete data from the table: "sms_dag_reports"
  """
  delete_sms_dag_reports(
    """filter the rows which have to be deleted"""
    where: sms_dag_reports_bool_exp!
  ): sms_dag_reports_mutation_response

  """
  delete single row from the table: "sms_dag_reports"
  """
  delete_sms_dag_reports_by_pk(id: Int!): sms_dag_reports

  """
  delete data from the table: "sms_student_attendance_mv"
  """
  delete_sms_student_attendance_mv(
    """filter the rows which have to be deleted"""
    where: sms_student_attendance_mv_bool_exp!
  ): sms_student_attendance_mv_mutation_response

  """
  delete data from the table: "ss_school_allocation_data"
  """
  delete_ss_school_allocation_data(
    """filter the rows which have to be deleted"""
    where: ss_school_allocation_data_bool_exp!
  ): ss_school_allocation_data_mutation_response

  """
  delete single row from the table: "ss_school_allocation_data"
  """
  delete_ss_school_allocation_data_by_pk(id: Int!): ss_school_allocation_data

  """
  delete data from the table: "ss_school_allocation_quarter"
  """
  delete_ss_school_allocation_quarter(
    """filter the rows which have to be deleted"""
    where: ss_school_allocation_quarter_bool_exp!
  ): ss_school_allocation_quarter_mutation_response

  """
  delete single row from the table: "ss_school_allocation_quarter"
  """
  delete_ss_school_allocation_quarter_by_pk(id: Int!): ss_school_allocation_quarter

  """
  delete data from the table: "state_edu_enrolment"
  """
  delete_state_edu_enrolment(
    """filter the rows which have to be deleted"""
    where: state_edu_enrolment_bool_exp!
  ): state_edu_enrolment_mutation_response

  """
  delete data from the table: "state_lo_list"
  """
  delete_state_lo_list(
    """filter the rows which have to be deleted"""
    where: state_lo_list_bool_exp!
  ): state_lo_list_mutation_response

  """
  delete data from the table: "static"
  """
  delete_static(
    """filter the rows which have to be deleted"""
    where: static_bool_exp!
  ): static_mutation_response

  """
  delete single row from the table: "static"
  """
  delete_static_by_pk(id: Int!): static

  """
  delete data from the table: "stream"
  """
  delete_stream(
    """filter the rows which have to be deleted"""
    where: stream_bool_exp!
  ): stream_mutation_response

  """
  delete single row from the table: "stream"
  """
  delete_stream_by_pk(id: Int!): stream

  """
  delete data from the table: "stream_common_subject"
  """
  delete_stream_common_subject(
    """filter the rows which have to be deleted"""
    where: stream_common_subject_bool_exp!
  ): stream_common_subject_mutation_response

  """
  delete single row from the table: "stream_common_subject"
  """
  delete_stream_common_subject_by_pk(id: Int!): stream_common_subject

  """
  delete data from the table: "stream_optional_subjects_1"
  """
  delete_stream_optional_subjects_1(
    """filter the rows which have to be deleted"""
    where: stream_optional_subjects_1_bool_exp!
  ): stream_optional_subjects_1_mutation_response

  """
  delete single row from the table: "stream_optional_subjects_1"
  """
  delete_stream_optional_subjects_1_by_pk(id: Int!): stream_optional_subjects_1

  """
  delete data from the table: "stream_optional_subjects_2"
  """
  delete_stream_optional_subjects_2(
    """filter the rows which have to be deleted"""
    where: stream_optional_subjects_2_bool_exp!
  ): stream_optional_subjects_2_mutation_response

  """
  delete single row from the table: "stream_optional_subjects_2"
  """
  delete_stream_optional_subjects_2_by_pk(id: Int!): stream_optional_subjects_2

  """
  delete data from the table: "stream_optional_subjects_3"
  """
  delete_stream_optional_subjects_3(
    """filter the rows which have to be deleted"""
    where: stream_optional_subjects_3_bool_exp!
  ): stream_optional_subjects_3_mutation_response

  """
  delete single row from the table: "stream_optional_subjects_3"
  """
  delete_stream_optional_subjects_3_by_pk(id: Int!): stream_optional_subjects_3

  """
  delete data from the table: "stream_optional_subjects_4"
  """
  delete_stream_optional_subjects_4(
    """filter the rows which have to be deleted"""
    where: stream_optional_subjects_4_bool_exp!
  ): stream_optional_subjects_4_mutation_response

  """
  delete single row from the table: "stream_optional_subjects_4"
  """
  delete_stream_optional_subjects_4_by_pk(id: Int!): stream_optional_subjects_4

  """
  delete data from the table: "student"
  """
  delete_student(
    """filter the rows which have to be deleted"""
    where: student_bool_exp!
  ): student_mutation_response

  """
  delete single row from the table: "student"
  """
  delete_student_by_pk(id: Int!): student

  """
  delete data from the table: "student_content_share"
  """
  delete_student_content_share(
    """filter the rows which have to be deleted"""
    where: student_content_share_bool_exp!
  ): student_content_share_mutation_response

  """
  delete single row from the table: "student_content_share"
  """
  delete_student_content_share_by_pk(id: Int!): student_content_share

  """
  delete data from the table: "student_subject"
  """
  delete_student_subject(
    """filter the rows which have to be deleted"""
    where: student_subject_bool_exp!
  ): student_subject_mutation_response

  """
  delete single row from the table: "student_subject"
  """
  delete_student_subject_by_pk(id: Int!): student_subject

  """
  delete data from the table: "student_submission"
  """
  delete_student_submission(
    """filter the rows which have to be deleted"""
    where: student_submission_bool_exp!
  ): student_submission_mutation_response

  """
  delete single row from the table: "student_submission"
  """
  delete_student_submission_by_pk(id: Int!): student_submission

  """
  delete data from the table: "student_submission_v2"
  """
  delete_student_submission_v2(
    """filter the rows which have to be deleted"""
    where: student_submission_v2_bool_exp!
  ): student_submission_v2_mutation_response

  """
  delete single row from the table: "student_submission_v2"
  """
  delete_student_submission_v2_by_pk(id: Int!): student_submission_v2

  """
  delete data from the table: "student_submission_v2_marks_submissions"
  """
  delete_student_submission_v2_marks_submissions(
    """filter the rows which have to be deleted"""
    where: student_submission_v2_marks_submissions_bool_exp!
  ): student_submission_v2_marks_submissions_mutation_response

  """
  delete single row from the table: "student_submission_v2_marks_submissions"
  """
  delete_student_submission_v2_marks_submissions_by_pk(id: Int!): student_submission_v2_marks_submissions

  """
  delete data from the table: "student_table_higher"
  """
  delete_student_table_higher(
    """filter the rows which have to be deleted"""
    where: student_table_higher_bool_exp!
  ): student_table_higher_mutation_response

  """
  delete data from the table: "student_table_higher_2"
  """
  delete_student_table_higher_2(
    """filter the rows which have to be deleted"""
    where: student_table_higher_2_bool_exp!
  ): student_table_higher_2_mutation_response

  """
  delete data from the table: "studentprofiles_cg"
  """
  delete_studentprofiles_cg(
    """filter the rows which have to be deleted"""
    where: studentprofiles_cg_bool_exp!
  ): studentprofiles_cg_mutation_response

  """
  delete data from the table: "studentprofiles_cg_2"
  """
  delete_studentprofiles_cg_2(
    """filter the rows which have to be deleted"""
    where: studentprofiles_cg_2_bool_exp!
  ): studentprofiles_cg_2_mutation_response

  """
  delete data from the table: "students_present"
  """
  delete_students_present(
    """filter the rows which have to be deleted"""
    where: students_present_bool_exp!
  ): students_present_mutation_response

  """
  delete data from the table: "subject"
  """
  delete_subject(
    """filter the rows which have to be deleted"""
    where: subject_bool_exp!
  ): subject_mutation_response

  """
  delete single row from the table: "subject"
  """
  delete_subject_by_pk(id: Int!): subject

  """
  delete data from the table: "subject_submission"
  """
  delete_subject_submission(
    """filter the rows which have to be deleted"""
    where: subject_submission_bool_exp!
  ): subject_submission_mutation_response

  """
  delete single row from the table: "subject_submission"
  """
  delete_subject_submission_by_pk(id: Int!): subject_submission

  """
  delete data from the table: "subject_submission_selected_lo"
  """
  delete_subject_submission_selected_lo(
    """filter the rows which have to be deleted"""
    where: subject_submission_selected_lo_bool_exp!
  ): subject_submission_selected_lo_mutation_response

  """
  delete single row from the table: "subject_submission_selected_lo"
  """
  delete_subject_submission_selected_lo_by_pk(id: Int!): subject_submission_selected_lo

  """
  delete data from the table: "submission_summary"
  """
  delete_submission_summary(
    """filter the rows which have to be deleted"""
    where: submission_summary_bool_exp!
  ): submission_summary_mutation_response

  """
  delete single row from the table: "submission_summary"
  """
  delete_submission_summary_by_pk(id: Int!): submission_summary

  """
  delete data from the table: "submission_type"
  """
  delete_submission_type(
    """filter the rows which have to be deleted"""
    where: submission_type_bool_exp!
  ): submission_type_mutation_response

  """
  delete single row from the table: "submission_type"
  """
  delete_submission_type_by_pk(id: Int!): submission_type

  """
  delete data from the table: "system_configuration"
  """
  delete_system_configuration(
    """filter the rows which have to be deleted"""
    where: system_configuration_bool_exp!
  ): system_configuration_mutation_response

  """
  delete data from the table: "teacher"
  """
  delete_teacher(
    """filter the rows which have to be deleted"""
    where: teacher_bool_exp!
  ): teacher_mutation_response

  """
  delete data from the table: "teacher_attendance_status"
  """
  delete_teacher_attendance_status(
    """filter the rows which have to be deleted"""
    where: teacher_attendance_status_bool_exp!
  ): teacher_attendance_status_mutation_response

  """
  delete single row from the table: "teacher_attendance_status"
  """
  delete_teacher_attendance_status_by_pk(value: String!): teacher_attendance_status

  """
  delete single row from the table: "teacher"
  """
  delete_teacher_by_pk(id: Int!): teacher

  """
  delete data from the table: "teacher_registration_compliance"
  """
  delete_teacher_registration_compliance(
    """filter the rows which have to be deleted"""
    where: teacher_registration_compliance_bool_exp!
  ): teacher_registration_compliance_mutation_response

  """
  delete single row from the table: "teacher_registration_compliance"
  """
  delete_teacher_registration_compliance_by_pk(id: Int!, udise: Int!): teacher_registration_compliance

  """
  delete data from the table: "teacher_subjects"
  """
  delete_teacher_subjects(
    """filter the rows which have to be deleted"""
    where: teacher_subjects_bool_exp!
  ): teacher_subjects_mutation_response

  """
  delete single row from the table: "teacher_subjects"
  """
  delete_teacher_subjects_by_pk(id: Int!): teacher_subjects

  """
  delete data from the table: "tenants"
  """
  delete_tenants(
    """filter the rows which have to be deleted"""
    where: tenants_bool_exp!
  ): tenants_mutation_response

  """
  delete single row from the table: "tenants"
  """
  delete_tenants_by_pk(id: uuid!): tenants

  """
  delete data from the table: "term1results2021"
  """
  delete_term1results2021(
    """filter the rows which have to be deleted"""
    where: term1results2021_bool_exp!
  ): term1results2021_mutation_response

  """
  delete data from the table: "term1results2021stream"
  """
  delete_term1results2021stream(
    """filter the rows which have to be deleted"""
    where: term1results2021stream_bool_exp!
  ): term1results2021stream_mutation_response

  """
  delete data from the table: "test_ku"
  """
  delete_test_ku(
    """filter the rows which have to be deleted"""
    where: test_ku_bool_exp!
  ): test_ku_mutation_response

  """
  delete single row from the table: "test_ku"
  """
  delete_test_ku_by_pk(sss: Int!): test_ku

  """
  delete data from the table: "test_telemetry"
  """
  delete_test_telemetry(
    """filter the rows which have to be deleted"""
    where: test_telemetry_bool_exp!
  ): test_telemetry_mutation_response

  """
  delete single row from the table: "test_telemetry"
  """
  delete_test_telemetry_by_pk(id: Int!): test_telemetry

  """
  delete data from the table: "themes"
  """
  delete_themes(
    """filter the rows which have to be deleted"""
    where: themes_bool_exp!
  ): themes_mutation_response

  """
  delete single row from the table: "themes"
  """
  delete_themes_by_pk(id: uuid!): themes

  """
  delete data from the table: "tracking_elem"
  """
  delete_tracking_elem(
    """filter the rows which have to be deleted"""
    where: tracking_elem_bool_exp!
  ): tracking_elem_mutation_response

  """
  delete data from the table: "tracking_higher"
  """
  delete_tracking_higher(
    """filter the rows which have to be deleted"""
    where: tracking_higher_bool_exp!
  ): tracking_higher_mutation_response

  """
  delete data from the table: "unit_bundle"
  """
  delete_unit_bundle(
    """filter the rows which have to be deleted"""
    where: unit_bundle_bool_exp!
  ): unit_bundle_mutation_response

  """
  delete single row from the table: "unit_bundle"
  """
  delete_unit_bundle_by_pk(id: Int!): unit_bundle

  """
  delete data from the table: "unit_bundle_units"
  """
  delete_unit_bundle_units(
    """filter the rows which have to be deleted"""
    where: unit_bundle_units_bool_exp!
  ): unit_bundle_units_mutation_response

  """
  delete single row from the table: "unit_bundle_units"
  """
  delete_unit_bundle_units_by_pk(id: Int!): unit_bundle_units

  """
  delete data from the table: "unit_submission"
  """
  delete_unit_submission(
    """filter the rows which have to be deleted"""
    where: unit_submission_bool_exp!
  ): unit_submission_mutation_response

  """
  delete data from the table: "unit_v2"
  """
  delete_unit_v2(
    """filter the rows which have to be deleted"""
    where: unit_v2_bool_exp!
  ): unit_v2_mutation_response

  """
  delete single row from the table: "unit_v2"
  """
  delete_unit_v2_by_pk(id: Int!): unit_v2

  """
  delete data from the table: "user_action_logs"
  """
  delete_user_action_logs(
    """filter the rows which have to be deleted"""
    where: user_action_logs_bool_exp!
  ): user_action_logs_mutation_response

  """
  delete data from the table: "user_action_logs_applications"
  """
  delete_user_action_logs_applications(
    """filter the rows which have to be deleted"""
    where: user_action_logs_applications_bool_exp!
  ): user_action_logs_applications_mutation_response

  """
  delete single row from the table: "user_action_logs"
  """
  delete_user_action_logs_by_pk(id: uuid!): user_action_logs

  """
  delete data from the table: "user_action_reasons"
  """
  delete_user_action_reasons(
    """filter the rows which have to be deleted"""
    where: user_action_reasons_bool_exp!
  ): user_action_reasons_mutation_response

  """
  delete single row from the table: "user_action_reasons"
  """
  delete_user_action_reasons_by_pk(id: uuid!): user_action_reasons

  """
  delete data from the table: "user_actions"
  """
  delete_user_actions(
    """filter the rows which have to be deleted"""
    where: user_actions_bool_exp!
  ): user_actions_mutation_response

  """
  delete single row from the table: "user_actions"
  """
  delete_user_actions_by_pk(id: uuid!): user_actions

  """
  delete data from the table: "user_comments"
  """
  delete_user_comments(
    """filter the rows which have to be deleted"""
    where: user_comments_bool_exp!
  ): user_comments_mutation_response

  """
  delete single row from the table: "user_comments"
  """
  delete_user_comments_by_pk(id: uuid!): user_comments

  """
  delete data from the table: "user_consents"
  """
  delete_user_consents(
    """filter the rows which have to be deleted"""
    where: user_consents_bool_exp!
  ): user_consents_mutation_response

  """
  delete single row from the table: "user_consents"
  """
  delete_user_consents_by_pk(id: uuid!): user_consents

  """
  delete data from the table: "user_consents_email_plus"
  """
  delete_user_consents_email_plus(
    """filter the rows which have to be deleted"""
    where: user_consents_email_plus_bool_exp!
  ): user_consents_email_plus_mutation_response

  """
  delete single row from the table: "user_consents_email_plus"
  """
  delete_user_consents_email_plus_by_pk(id: bigint!): user_consents_email_plus

  """
  delete data from the table: "user_registrations"
  """
  delete_user_registrations(
    """filter the rows which have to be deleted"""
    where: user_registrations_bool_exp!
  ): user_registrations_mutation_response

  """
  delete data from the table: "user_registrations_application_roles"
  """
  delete_user_registrations_application_roles(
    """filter the rows which have to be deleted"""
    where: user_registrations_application_roles_bool_exp!
  ): user_registrations_application_roles_mutation_response

  """
  delete single row from the table: "user_registrations"
  """
  delete_user_registrations_by_pk(id: uuid!): user_registrations

  """
  delete data from the table: "users"
  """
  delete_users(
    """filter the rows which have to be deleted"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  delete single row from the table: "users"
  """
  delete_users_by_pk(id: uuid!): users

  """
  delete data from the table: "version"
  """
  delete_version(
    """filter the rows which have to be deleted"""
    where: version_bool_exp!
  ): version_mutation_response

  """
  delete data from the table: "webhooks"
  """
  delete_webhooks(
    """filter the rows which have to be deleted"""
    where: webhooks_bool_exp!
  ): webhooks_mutation_response

  """
  delete data from the table: "webhooks_applications"
  """
  delete_webhooks_applications(
    """filter the rows which have to be deleted"""
    where: webhooks_applications_bool_exp!
  ): webhooks_applications_mutation_response

  """
  delete single row from the table: "webhooks_applications"
  """
  delete_webhooks_applications_by_pk(applications_id: uuid!, webhooks_id: uuid!): webhooks_applications

  """
  delete single row from the table: "webhooks"
  """
  delete_webhooks_by_pk(id: uuid!): webhooks

  """
  delete data from the table: "Week 17-24"
  """
  delete_week_17_24(
    """filter the rows which have to be deleted"""
    where: week_17_24_bool_exp!
  ): week_17_24_mutation_response

  """
  delete data from the table: "Week 1-8"
  """
  delete_week_1_8(
    """filter the rows which have to be deleted"""
    where: week_1_8_bool_exp!
  ): week_1_8_mutation_response

  """
  delete data from the table: "Week 9-16"
  """
  delete_week_9_16(
    """filter the rows which have to be deleted"""
    where: week_9_16_bool_exp!
  ): week_9_16_mutation_response

  """
  insert data into the table: "Quiz_beforeWeek21"
  """
  insert_Quiz_beforeWeek21(
    """the rows to be inserted"""
    objects: [Quiz_beforeWeek21_insert_input!]!
  ): Quiz_beforeWeek21_mutation_response

  """
  insert data into the table: "Quiz_beforeWeek21_2"
  """
  insert_Quiz_beforeWeek21_2(
    """the rows to be inserted"""
    objects: [Quiz_beforeWeek21_2_insert_input!]!
  ): Quiz_beforeWeek21_2_mutation_response

  """
  insert a single row into the table: "Quiz_beforeWeek21_2"
  """
  insert_Quiz_beforeWeek21_2_one(
    """the row to be inserted"""
    object: Quiz_beforeWeek21_2_insert_input!
  ): Quiz_beforeWeek21_2

  """
  insert a single row into the table: "Quiz_beforeWeek21"
  """
  insert_Quiz_beforeWeek21_one(
    """the row to be inserted"""
    object: Quiz_beforeWeek21_insert_input!
  ): Quiz_beforeWeek21

  """
  insert data into the table: "activeusers2"
  """
  insert_activeusers2(
    """the rows to be inserted"""
    objects: [activeusers2_insert_input!]!
  ): activeusers2_mutation_response

  """
  insert a single row into the table: "activeusers2"
  """
  insert_activeusers2_one(
    """the row to be inserted"""
    object: activeusers2_insert_input!
  ): activeusers2

  """
  insert data into the table: "application_daily_active_users"
  """
  insert_application_daily_active_users(
    """the rows to be inserted"""
    objects: [application_daily_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: application_daily_active_users_on_conflict
  ): application_daily_active_users_mutation_response

  """
  insert a single row into the table: "application_daily_active_users"
  """
  insert_application_daily_active_users_one(
    """the row to be inserted"""
    object: application_daily_active_users_insert_input!

    """on conflict condition"""
    on_conflict: application_daily_active_users_on_conflict
  ): application_daily_active_users

  """
  insert data into the table: "application_monthly_active_users"
  """
  insert_application_monthly_active_users(
    """the rows to be inserted"""
    objects: [application_monthly_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: application_monthly_active_users_on_conflict
  ): application_monthly_active_users_mutation_response

  """
  insert a single row into the table: "application_monthly_active_users"
  """
  insert_application_monthly_active_users_one(
    """the row to be inserted"""
    object: application_monthly_active_users_insert_input!

    """on conflict condition"""
    on_conflict: application_monthly_active_users_on_conflict
  ): application_monthly_active_users

  """
  insert data into the table: "application_registration_counts"
  """
  insert_application_registration_counts(
    """the rows to be inserted"""
    objects: [application_registration_counts_insert_input!]!

    """on conflict condition"""
    on_conflict: application_registration_counts_on_conflict
  ): application_registration_counts_mutation_response

  """
  insert a single row into the table: "application_registration_counts"
  """
  insert_application_registration_counts_one(
    """the row to be inserted"""
    object: application_registration_counts_insert_input!

    """on conflict condition"""
    on_conflict: application_registration_counts_on_conflict
  ): application_registration_counts

  """
  insert data into the table: "application_roles"
  """
  insert_application_roles(
    """the rows to be inserted"""
    objects: [application_roles_insert_input!]!

    """on conflict condition"""
    on_conflict: application_roles_on_conflict
  ): application_roles_mutation_response

  """
  insert a single row into the table: "application_roles"
  """
  insert_application_roles_one(
    """the row to be inserted"""
    object: application_roles_insert_input!

    """on conflict condition"""
    on_conflict: application_roles_on_conflict
  ): application_roles

  """
  insert data into the table: "applications"
  """
  insert_applications(
    """the rows to be inserted"""
    objects: [applications_insert_input!]!

    """on conflict condition"""
    on_conflict: applications_on_conflict
  ): applications_mutation_response

  """
  insert a single row into the table: "applications"
  """
  insert_applications_one(
    """the row to be inserted"""
    object: applications_insert_input!

    """on conflict condition"""
    on_conflict: applications_on_conflict
  ): applications

  """
  insert data into the table: "assessment"
  """
  insert_assessment(
    """the rows to be inserted"""
    objects: [assessment_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_on_conflict
  ): assessment_mutation_response

  """
  insert data into the table: "assessment_au_lo_aggregate"
  """
  insert_assessment_au_lo_aggregate(
    """the rows to be inserted"""
    objects: [assessment_au_lo_aggregate_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_au_lo_aggregate_on_conflict
  ): assessment_au_lo_aggregate_mutation_response

  """
  insert a single row into the table: "assessment_au_lo_aggregate"
  """
  insert_assessment_au_lo_aggregate_one(
    """the row to be inserted"""
    object: assessment_au_lo_aggregate_insert_input!

    """on conflict condition"""
    on_conflict: assessment_au_lo_aggregate_on_conflict
  ): assessment_au_lo_aggregate

  """
  insert data into the table: "assessment_au_lo_aggregate_submission"
  """
  insert_assessment_au_lo_aggregate_submission(
    """the rows to be inserted"""
    objects: [assessment_au_lo_aggregate_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_au_lo_aggregate_submission_on_conflict
  ): assessment_au_lo_aggregate_submission_mutation_response

  """
  insert a single row into the table: "assessment_au_lo_aggregate_submission"
  """
  insert_assessment_au_lo_aggregate_submission_one(
    """the row to be inserted"""
    object: assessment_au_lo_aggregate_submission_insert_input!

    """on conflict condition"""
    on_conflict: assessment_au_lo_aggregate_submission_on_conflict
  ): assessment_au_lo_aggregate_submission

  """
  insert data into the table: "assessment_au_question_aggregate"
  """
  insert_assessment_au_question_aggregate(
    """the rows to be inserted"""
    objects: [assessment_au_question_aggregate_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_au_question_aggregate_on_conflict
  ): assessment_au_question_aggregate_mutation_response

  """
  insert a single row into the table: "assessment_au_question_aggregate"
  """
  insert_assessment_au_question_aggregate_one(
    """the row to be inserted"""
    object: assessment_au_question_aggregate_insert_input!

    """on conflict condition"""
    on_conflict: assessment_au_question_aggregate_on_conflict
  ): assessment_au_question_aggregate

  """
  insert data into the table: "assessment_au_question_aggregate_submission"
  """
  insert_assessment_au_question_aggregate_submission(
    """the rows to be inserted"""
    objects: [assessment_au_question_aggregate_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_au_question_aggregate_submission_on_conflict
  ): assessment_au_question_aggregate_submission_mutation_response

  """
  insert a single row into the table: "assessment_au_question_aggregate_submission"
  """
  insert_assessment_au_question_aggregate_submission_one(
    """the row to be inserted"""
    object: assessment_au_question_aggregate_submission_insert_input!

    """on conflict condition"""
    on_conflict: assessment_au_question_aggregate_submission_on_conflict
  ): assessment_au_question_aggregate_submission

  """
  insert data into the table: "assessment_builder"
  """
  insert_assessment_builder(
    """the rows to be inserted"""
    objects: [assessment_builder_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_builder_on_conflict
  ): assessment_builder_mutation_response

  """
  insert a single row into the table: "assessment_builder"
  """
  insert_assessment_builder_one(
    """the row to be inserted"""
    object: assessment_builder_insert_input!

    """on conflict condition"""
    on_conflict: assessment_builder_on_conflict
  ): assessment_builder

  """
  insert data into the table: "assessment_cache"
  """
  insert_assessment_cache(
    """the rows to be inserted"""
    objects: [assessment_cache_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_cache_on_conflict
  ): assessment_cache_mutation_response

  """
  insert a single row into the table: "assessment_cache"
  """
  insert_assessment_cache_one(
    """the row to be inserted"""
    object: assessment_cache_insert_input!

    """on conflict condition"""
    on_conflict: assessment_cache_on_conflict
  ): assessment_cache

  """
  insert data into the table: "assessment_cache_v5"
  """
  insert_assessment_cache_v5(
    """the rows to be inserted"""
    objects: [assessment_cache_v5_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_cache_v5_on_conflict
  ): assessment_cache_v5_mutation_response

  """
  insert a single row into the table: "assessment_cache_v5"
  """
  insert_assessment_cache_v5_one(
    """the row to be inserted"""
    object: assessment_cache_v5_insert_input!

    """on conflict condition"""
    on_conflict: assessment_cache_v5_on_conflict
  ): assessment_cache_v5

  """
  insert data into the table: "assessment_category"
  """
  insert_assessment_category(
    """the rows to be inserted"""
    objects: [assessment_category_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_category_on_conflict
  ): assessment_category_mutation_response

  """
  insert a single row into the table: "assessment_category"
  """
  insert_assessment_category_one(
    """the row to be inserted"""
    object: assessment_category_insert_input!

    """on conflict condition"""
    on_conflict: assessment_category_on_conflict
  ): assessment_category

  """
  insert data into the table: "assessment_compliance_grade_aggregation"
  """
  insert_assessment_compliance_grade_aggregation(
    """the rows to be inserted"""
    objects: [assessment_compliance_grade_aggregation_insert_input!]!
  ): assessment_compliance_grade_aggregation_mutation_response

  """
  insert a single row into the table: "assessment_compliance_grade_aggregation"
  """
  insert_assessment_compliance_grade_aggregation_one(
    """the row to be inserted"""
    object: assessment_compliance_grade_aggregation_insert_input!
  ): assessment_compliance_grade_aggregation

  """
  insert data into the table: "assessment_components"
  """
  insert_assessment_components(
    """the rows to be inserted"""
    objects: [assessment_components_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_components_on_conflict
  ): assessment_components_mutation_response

  """
  insert a single row into the table: "assessment_components"
  """
  insert_assessment_components_one(
    """the row to be inserted"""
    object: assessment_components_insert_input!

    """on conflict condition"""
    on_conflict: assessment_components_on_conflict
  ): assessment_components

  """
  insert data into the table: "assessment_ep_grade"
  """
  insert_assessment_ep_grade(
    """the rows to be inserted"""
    objects: [assessment_ep_grade_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_ep_grade_on_conflict
  ): assessment_ep_grade_mutation_response

  """
  insert a single row into the table: "assessment_ep_grade"
  """
  insert_assessment_ep_grade_one(
    """the row to be inserted"""
    object: assessment_ep_grade_insert_input!

    """on conflict condition"""
    on_conflict: assessment_ep_grade_on_conflict
  ): assessment_ep_grade

  """
  insert data into the table: "assessment_ep_grade_submission"
  """
  insert_assessment_ep_grade_submission(
    """the rows to be inserted"""
    objects: [assessment_ep_grade_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_ep_grade_submission_on_conflict
  ): assessment_ep_grade_submission_mutation_response

  """
  insert a single row into the table: "assessment_ep_grade_submission"
  """
  insert_assessment_ep_grade_submission_one(
    """the row to be inserted"""
    object: assessment_ep_grade_submission_insert_input!

    """on conflict condition"""
    on_conflict: assessment_ep_grade_submission_on_conflict
  ): assessment_ep_grade_submission

  """
  insert data into the table: "assessment_ep_marks"
  """
  insert_assessment_ep_marks(
    """the rows to be inserted"""
    objects: [assessment_ep_marks_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_ep_marks_on_conflict
  ): assessment_ep_marks_mutation_response

  """
  insert a single row into the table: "assessment_ep_marks"
  """
  insert_assessment_ep_marks_one(
    """the row to be inserted"""
    object: assessment_ep_marks_insert_input!

    """on conflict condition"""
    on_conflict: assessment_ep_marks_on_conflict
  ): assessment_ep_marks

  """
  insert data into the table: "assessment_ep_marks_submission"
  """
  insert_assessment_ep_marks_submission(
    """the rows to be inserted"""
    objects: [assessment_ep_marks_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_ep_marks_submission_on_conflict
  ): assessment_ep_marks_submission_mutation_response

  """
  insert a single row into the table: "assessment_ep_marks_submission"
  """
  insert_assessment_ep_marks_submission_one(
    """the row to be inserted"""
    object: assessment_ep_marks_submission_insert_input!

    """on conflict condition"""
    on_conflict: assessment_ep_marks_submission_on_conflict
  ): assessment_ep_marks_submission

  """
  insert data into the table: "assessment_grade"
  """
  insert_assessment_grade(
    """the rows to be inserted"""
    objects: [assessment_grade_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_grade_on_conflict
  ): assessment_grade_mutation_response

  """
  insert data into the table: "assessment_grade_mapping"
  """
  insert_assessment_grade_mapping(
    """the rows to be inserted"""
    objects: [assessment_grade_mapping_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_grade_mapping_on_conflict
  ): assessment_grade_mapping_mutation_response

  """
  insert a single row into the table: "assessment_grade_mapping"
  """
  insert_assessment_grade_mapping_one(
    """the row to be inserted"""
    object: assessment_grade_mapping_insert_input!

    """on conflict condition"""
    on_conflict: assessment_grade_mapping_on_conflict
  ): assessment_grade_mapping

  """
  insert a single row into the table: "assessment_grade"
  """
  insert_assessment_grade_one(
    """the row to be inserted"""
    object: assessment_grade_insert_input!

    """on conflict condition"""
    on_conflict: assessment_grade_on_conflict
  ): assessment_grade

  """
  insert data into the table: "assessment_lo_bundles"
  """
  insert_assessment_lo_bundles(
    """the rows to be inserted"""
    objects: [assessment_lo_bundles_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_lo_bundles_on_conflict
  ): assessment_lo_bundles_mutation_response

  """
  insert a single row into the table: "assessment_lo_bundles"
  """
  insert_assessment_lo_bundles_one(
    """the row to be inserted"""
    object: assessment_lo_bundles_insert_input!

    """on conflict condition"""
    on_conflict: assessment_lo_bundles_on_conflict
  ): assessment_lo_bundles

  """
  insert a single row into the table: "assessment"
  """
  insert_assessment_one(
    """the row to be inserted"""
    object: assessment_insert_input!

    """on conflict condition"""
    on_conflict: assessment_on_conflict
  ): assessment

  """
  insert data into the table: "assessment_question_bundles"
  """
  insert_assessment_question_bundles(
    """the rows to be inserted"""
    objects: [assessment_question_bundles_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_question_bundles_on_conflict
  ): assessment_question_bundles_mutation_response

  """
  insert a single row into the table: "assessment_question_bundles"
  """
  insert_assessment_question_bundles_one(
    """the row to be inserted"""
    object: assessment_question_bundles_insert_input!

    """on conflict condition"""
    on_conflict: assessment_question_bundles_on_conflict
  ): assessment_question_bundles

  """
  insert data into the table: "assessment_result"
  """
  insert_assessment_result(
    """the rows to be inserted"""
    objects: [assessment_result_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_result_on_conflict
  ): assessment_result_mutation_response

  """
  insert a single row into the table: "assessment_result"
  """
  insert_assessment_result_one(
    """the row to be inserted"""
    object: assessment_result_insert_input!

    """on conflict condition"""
    on_conflict: assessment_result_on_conflict
  ): assessment_result

  """
  insert data into the table: "assessment_stream"
  """
  insert_assessment_stream(
    """the rows to be inserted"""
    objects: [assessment_stream_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_stream_on_conflict
  ): assessment_stream_mutation_response

  """
  insert a single row into the table: "assessment_stream"
  """
  insert_assessment_stream_one(
    """the row to be inserted"""
    object: assessment_stream_insert_input!

    """on conflict condition"""
    on_conflict: assessment_stream_on_conflict
  ): assessment_stream

  """
  insert data into the table: "assessment_subjects"
  """
  insert_assessment_subjects(
    """the rows to be inserted"""
    objects: [assessment_subjects_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_subjects_on_conflict
  ): assessment_subjects_mutation_response

  """
  insert a single row into the table: "assessment_subjects"
  """
  insert_assessment_subjects_one(
    """the row to be inserted"""
    object: assessment_subjects_insert_input!

    """on conflict condition"""
    on_conflict: assessment_subjects_on_conflict
  ): assessment_subjects

  """
  insert data into the table: "assessment_type"
  """
  insert_assessment_type(
    """the rows to be inserted"""
    objects: [assessment_type_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_type_on_conflict
  ): assessment_type_mutation_response

  """
  insert a single row into the table: "assessment_type"
  """
  insert_assessment_type_one(
    """the row to be inserted"""
    object: assessment_type_insert_input!

    """on conflict condition"""
    on_conflict: assessment_type_on_conflict
  ): assessment_type

  """
  insert data into the table: "assessment_unit"
  """
  insert_assessment_unit(
    """the rows to be inserted"""
    objects: [assessment_unit_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_unit_on_conflict
  ): assessment_unit_mutation_response

  """
  insert data into the table: "assessment_unit_bundles"
  """
  insert_assessment_unit_bundles(
    """the rows to be inserted"""
    objects: [assessment_unit_bundles_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_unit_bundles_on_conflict
  ): assessment_unit_bundles_mutation_response

  """
  insert a single row into the table: "assessment_unit_bundles"
  """
  insert_assessment_unit_bundles_one(
    """the row to be inserted"""
    object: assessment_unit_bundles_insert_input!

    """on conflict condition"""
    on_conflict: assessment_unit_bundles_on_conflict
  ): assessment_unit_bundles

  """
  insert a single row into the table: "assessment_unit"
  """
  insert_assessment_unit_one(
    """the row to be inserted"""
    object: assessment_unit_insert_input!

    """on conflict condition"""
    on_conflict: assessment_unit_on_conflict
  ): assessment_unit

  """
  insert data into the table: "assessment_unit_selected_lo"
  """
  insert_assessment_unit_selected_lo(
    """the rows to be inserted"""
    objects: [assessment_unit_selected_lo_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_unit_selected_lo_on_conflict
  ): assessment_unit_selected_lo_mutation_response

  """
  insert a single row into the table: "assessment_unit_selected_lo"
  """
  insert_assessment_unit_selected_lo_one(
    """the row to be inserted"""
    object: assessment_unit_selected_lo_insert_input!

    """on conflict condition"""
    on_conflict: assessment_unit_selected_lo_on_conflict
  ): assessment_unit_selected_lo

  """
  insert data into the table: "assessment_unit_selected_question"
  """
  insert_assessment_unit_selected_question(
    """the rows to be inserted"""
    objects: [assessment_unit_selected_question_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_unit_selected_question_on_conflict
  ): assessment_unit_selected_question_mutation_response

  """
  insert a single row into the table: "assessment_unit_selected_question"
  """
  insert_assessment_unit_selected_question_one(
    """the row to be inserted"""
    object: assessment_unit_selected_question_insert_input!

    """on conflict condition"""
    on_conflict: assessment_unit_selected_question_on_conflict
  ): assessment_unit_selected_question

  """
  insert data into the table: "assessment_unit_selected_unit"
  """
  insert_assessment_unit_selected_unit(
    """the rows to be inserted"""
    objects: [assessment_unit_selected_unit_insert_input!]!

    """on conflict condition"""
    on_conflict: assessment_unit_selected_unit_on_conflict
  ): assessment_unit_selected_unit_mutation_response

  """
  insert a single row into the table: "assessment_unit_selected_unit"
  """
  insert_assessment_unit_selected_unit_one(
    """the row to be inserted"""
    object: assessment_unit_selected_unit_insert_input!

    """on conflict condition"""
    on_conflict: assessment_unit_selected_unit_on_conflict
  ): assessment_unit_selected_unit

  """
  insert data into the table: "attendance"
  """
  insert_attendance(
    """the rows to be inserted"""
    objects: [attendance_insert_input!]!

    """on conflict condition"""
    on_conflict: attendance_on_conflict
  ): attendance_mutation_response

  """
  insert a single row into the table: "attendance"
  """
  insert_attendance_one(
    """the row to be inserted"""
    object: attendance_insert_input!

    """on conflict condition"""
    on_conflict: attendance_on_conflict
  ): attendance

  """
  insert data into the table: "attendance_sms_logs"
  """
  insert_attendance_sms_logs(
    """the rows to be inserted"""
    objects: [attendance_sms_logs_insert_input!]!

    """on conflict condition"""
    on_conflict: attendance_sms_logs_on_conflict
  ): attendance_sms_logs_mutation_response

  """
  insert a single row into the table: "attendance_sms_logs"
  """
  insert_attendance_sms_logs_one(
    """the row to be inserted"""
    object: attendance_sms_logs_insert_input!

    """on conflict condition"""
    on_conflict: attendance_sms_logs_on_conflict
  ): attendance_sms_logs

  """
  insert data into the table: "attendance_teacher"
  """
  insert_attendance_teacher(
    """the rows to be inserted"""
    objects: [attendance_teacher_insert_input!]!

    """on conflict condition"""
    on_conflict: attendance_teacher_on_conflict
  ): attendance_teacher_mutation_response

  """
  insert a single row into the table: "attendance_teacher"
  """
  insert_attendance_teacher_one(
    """the row to be inserted"""
    object: attendance_teacher_insert_input!

    """on conflict condition"""
    on_conflict: attendance_teacher_on_conflict
  ): attendance_teacher

  """
  insert data into the table: "audit_logs"
  """
  insert_audit_logs(
    """the rows to be inserted"""
    objects: [audit_logs_insert_input!]!

    """on conflict condition"""
    on_conflict: audit_logs_on_conflict
  ): audit_logs_mutation_response

  """
  insert a single row into the table: "audit_logs"
  """
  insert_audit_logs_one(
    """the row to be inserted"""
    object: audit_logs_insert_input!

    """on conflict condition"""
    on_conflict: audit_logs_on_conflict
  ): audit_logs

  """
  insert data into the table: "auth_group"
  """
  insert_auth_group(
    """the rows to be inserted"""
    objects: [auth_group_insert_input!]!

    """on conflict condition"""
    on_conflict: auth_group_on_conflict
  ): auth_group_mutation_response

  """
  insert a single row into the table: "auth_group"
  """
  insert_auth_group_one(
    """the row to be inserted"""
    object: auth_group_insert_input!

    """on conflict condition"""
    on_conflict: auth_group_on_conflict
  ): auth_group

  """
  insert data into the table: "auth_group_permissions"
  """
  insert_auth_group_permissions(
    """the rows to be inserted"""
    objects: [auth_group_permissions_insert_input!]!

    """on conflict condition"""
    on_conflict: auth_group_permissions_on_conflict
  ): auth_group_permissions_mutation_response

  """
  insert a single row into the table: "auth_group_permissions"
  """
  insert_auth_group_permissions_one(
    """the row to be inserted"""
    object: auth_group_permissions_insert_input!

    """on conflict condition"""
    on_conflict: auth_group_permissions_on_conflict
  ): auth_group_permissions

  """
  insert data into the table: "auth_permission"
  """
  insert_auth_permission(
    """the rows to be inserted"""
    objects: [auth_permission_insert_input!]!

    """on conflict condition"""
    on_conflict: auth_permission_on_conflict
  ): auth_permission_mutation_response

  """
  insert a single row into the table: "auth_permission"
  """
  insert_auth_permission_one(
    """the row to be inserted"""
    object: auth_permission_insert_input!

    """on conflict condition"""
    on_conflict: auth_permission_on_conflict
  ): auth_permission

  """
  insert data into the table: "auth_user"
  """
  insert_auth_user(
    """the rows to be inserted"""
    objects: [auth_user_insert_input!]!

    """on conflict condition"""
    on_conflict: auth_user_on_conflict
  ): auth_user_mutation_response

  """
  insert data into the table: "auth_user_groups"
  """
  insert_auth_user_groups(
    """the rows to be inserted"""
    objects: [auth_user_groups_insert_input!]!

    """on conflict condition"""
    on_conflict: auth_user_groups_on_conflict
  ): auth_user_groups_mutation_response

  """
  insert a single row into the table: "auth_user_groups"
  """
  insert_auth_user_groups_one(
    """the row to be inserted"""
    object: auth_user_groups_insert_input!

    """on conflict condition"""
    on_conflict: auth_user_groups_on_conflict
  ): auth_user_groups

  """
  insert a single row into the table: "auth_user"
  """
  insert_auth_user_one(
    """the row to be inserted"""
    object: auth_user_insert_input!

    """on conflict condition"""
    on_conflict: auth_user_on_conflict
  ): auth_user

  """
  insert data into the table: "auth_user_user_permissions"
  """
  insert_auth_user_user_permissions(
    """the rows to be inserted"""
    objects: [auth_user_user_permissions_insert_input!]!

    """on conflict condition"""
    on_conflict: auth_user_user_permissions_on_conflict
  ): auth_user_user_permissions_mutation_response

  """
  insert a single row into the table: "auth_user_user_permissions"
  """
  insert_auth_user_user_permissions_one(
    """the row to be inserted"""
    object: auth_user_user_permissions_insert_input!

    """on conflict condition"""
    on_conflict: auth_user_user_permissions_on_conflict
  ): auth_user_user_permissions

  """
  insert data into the table: "authentication_keys"
  """
  insert_authentication_keys(
    """the rows to be inserted"""
    objects: [authentication_keys_insert_input!]!

    """on conflict condition"""
    on_conflict: authentication_keys_on_conflict
  ): authentication_keys_mutation_response

  """
  insert a single row into the table: "authentication_keys"
  """
  insert_authentication_keys_one(
    """the row to be inserted"""
    object: authentication_keys_insert_input!

    """on conflict condition"""
    on_conflict: authentication_keys_on_conflict
  ): authentication_keys

  """
  insert data into the table: "breached_password_metrics"
  """
  insert_breached_password_metrics(
    """the rows to be inserted"""
    objects: [breached_password_metrics_insert_input!]!

    """on conflict condition"""
    on_conflict: breached_password_metrics_on_conflict
  ): breached_password_metrics_mutation_response

  """
  insert a single row into the table: "breached_password_metrics"
  """
  insert_breached_password_metrics_one(
    """the row to be inserted"""
    object: breached_password_metrics_insert_input!

    """on conflict condition"""
    on_conflict: breached_password_metrics_on_conflict
  ): breached_password_metrics

  """
  insert data into the table: "bucketwiseenrolment"
  """
  insert_bucketwiseenrolment(
    """the rows to be inserted"""
    objects: [bucketwiseenrolment_insert_input!]!
  ): bucketwiseenrolment_mutation_response

  """
  insert a single row into the table: "bucketwiseenrolment"
  """
  insert_bucketwiseenrolment_one(
    """the row to be inserted"""
    object: bucketwiseenrolment_insert_input!
  ): bucketwiseenrolment

  """
  insert data into the table: "cdac_sms_input"
  """
  insert_cdac_sms_input(
    """the rows to be inserted"""
    objects: [cdac_sms_input_insert_input!]!

    """on conflict condition"""
    on_conflict: cdac_sms_input_on_conflict
  ): cdac_sms_input_mutation_response

  """
  insert a single row into the table: "cdac_sms_input"
  """
  insert_cdac_sms_input_one(
    """the row to be inserted"""
    object: cdac_sms_input_insert_input!

    """on conflict condition"""
    on_conflict: cdac_sms_input_on_conflict
  ): cdac_sms_input

  """
  insert data into the table: "celery_duplicate_remove"
  """
  insert_celery_duplicate_remove(
    """the rows to be inserted"""
    objects: [celery_duplicate_remove_insert_input!]!

    """on conflict condition"""
    on_conflict: celery_duplicate_remove_on_conflict
  ): celery_duplicate_remove_mutation_response

  """
  insert a single row into the table: "celery_duplicate_remove"
  """
  insert_celery_duplicate_remove_one(
    """the row to be inserted"""
    object: celery_duplicate_remove_insert_input!

    """on conflict condition"""
    on_conflict: celery_duplicate_remove_on_conflict
  ): celery_duplicate_remove

  """
  insert data into the table: "cg_hp_teacher_data"
  """
  insert_cg_hp_teacher_data(
    """the rows to be inserted"""
    objects: [cg_hp_teacher_data_insert_input!]!
  ): cg_hp_teacher_data_mutation_response

  """
  insert a single row into the table: "cg_hp_teacher_data"
  """
  insert_cg_hp_teacher_data_one(
    """the row to be inserted"""
    object: cg_hp_teacher_data_insert_input!
  ): cg_hp_teacher_data

  """
  insert data into the table: "cg_to_state_list"
  """
  insert_cg_to_state_list(
    """the rows to be inserted"""
    objects: [cg_to_state_list_insert_input!]!
  ): cg_to_state_list_mutation_response

  """
  insert a single row into the table: "cg_to_state_list"
  """
  insert_cg_to_state_list_one(
    """the row to be inserted"""
    object: cg_to_state_list_insert_input!
  ): cg_to_state_list

  """
  insert data into the table: "class_level_component_submission"
  """
  insert_class_level_component_submission(
    """the rows to be inserted"""
    objects: [class_level_component_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: class_level_component_submission_on_conflict
  ): class_level_component_submission_mutation_response

  """
  insert a single row into the table: "class_level_component_submission"
  """
  insert_class_level_component_submission_one(
    """the row to be inserted"""
    object: class_level_component_submission_insert_input!

    """on conflict condition"""
    on_conflict: class_level_component_submission_on_conflict
  ): class_level_component_submission

  """
  insert data into the table: "class_submission"
  """
  insert_class_submission(
    """the rows to be inserted"""
    objects: [class_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: class_submission_on_conflict
  ): class_submission_mutation_response

  """
  insert a single row into the table: "class_submission"
  """
  insert_class_submission_one(
    """the row to be inserted"""
    object: class_submission_insert_input!

    """on conflict condition"""
    on_conflict: class_submission_on_conflict
  ): class_submission

  """
  insert data into the table: "clean_speak_applications"
  """
  insert_clean_speak_applications(
    """the rows to be inserted"""
    objects: [clean_speak_applications_insert_input!]!

    """on conflict condition"""
    on_conflict: clean_speak_applications_on_conflict
  ): clean_speak_applications_mutation_response

  """
  insert a single row into the table: "clean_speak_applications"
  """
  insert_clean_speak_applications_one(
    """the row to be inserted"""
    object: clean_speak_applications_insert_input!

    """on conflict condition"""
    on_conflict: clean_speak_applications_on_conflict
  ): clean_speak_applications

  """
  insert data into the table: "common_breached_passwords"
  """
  insert_common_breached_passwords(
    """the rows to be inserted"""
    objects: [common_breached_passwords_insert_input!]!

    """on conflict condition"""
    on_conflict: common_breached_passwords_on_conflict
  ): common_breached_passwords_mutation_response

  """
  insert a single row into the table: "common_breached_passwords"
  """
  insert_common_breached_passwords_one(
    """the row to be inserted"""
    object: common_breached_passwords_insert_input!

    """on conflict condition"""
    on_conflict: common_breached_passwords_on_conflict
  ): common_breached_passwords

  """
  insert data into the table: "component"
  """
  insert_component(
    """the rows to be inserted"""
    objects: [component_insert_input!]!

    """on conflict condition"""
    on_conflict: component_on_conflict
  ): component_mutation_response

  """
  insert a single row into the table: "component"
  """
  insert_component_one(
    """the row to be inserted"""
    object: component_insert_input!

    """on conflict condition"""
    on_conflict: component_on_conflict
  ): component

  """
  insert data into the table: "component_subjects"
  """
  insert_component_subjects(
    """the rows to be inserted"""
    objects: [component_subjects_insert_input!]!

    """on conflict condition"""
    on_conflict: component_subjects_on_conflict
  ): component_subjects_mutation_response

  """
  insert a single row into the table: "component_subjects"
  """
  insert_component_subjects_one(
    """the row to be inserted"""
    object: component_subjects_insert_input!

    """on conflict condition"""
    on_conflict: component_subjects_on_conflict
  ): component_subjects

  """
  insert data into the table: "component_submission"
  """
  insert_component_submission(
    """the rows to be inserted"""
    objects: [component_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: component_submission_on_conflict
  ): component_submission_mutation_response

  """
  insert a single row into the table: "component_submission"
  """
  insert_component_submission_one(
    """the row to be inserted"""
    object: component_submission_insert_input!

    """on conflict condition"""
    on_conflict: component_submission_on_conflict
  ): component_submission

  """
  insert data into the table: "component_type"
  """
  insert_component_type(
    """the rows to be inserted"""
    objects: [component_type_insert_input!]!

    """on conflict condition"""
    on_conflict: component_type_on_conflict
  ): component_type_mutation_response

  """
  insert a single row into the table: "component_type"
  """
  insert_component_type_one(
    """the row to be inserted"""
    object: component_type_insert_input!

    """on conflict condition"""
    on_conflict: component_type_on_conflict
  ): component_type

  """
  insert data into the table: "connectors"
  """
  insert_connectors(
    """the rows to be inserted"""
    objects: [connectors_insert_input!]!

    """on conflict condition"""
    on_conflict: connectors_on_conflict
  ): connectors_mutation_response

  """
  insert a single row into the table: "connectors"
  """
  insert_connectors_one(
    """the row to be inserted"""
    object: connectors_insert_input!

    """on conflict condition"""
    on_conflict: connectors_on_conflict
  ): connectors

  """
  insert data into the table: "connectors_tenants"
  """
  insert_connectors_tenants(
    """the rows to be inserted"""
    objects: [connectors_tenants_insert_input!]!

    """on conflict condition"""
    on_conflict: connectors_tenants_on_conflict
  ): connectors_tenants_mutation_response

  """
  insert a single row into the table: "connectors_tenants"
  """
  insert_connectors_tenants_one(
    """the row to be inserted"""
    object: connectors_tenants_insert_input!

    """on conflict condition"""
    on_conflict: connectors_tenants_on_conflict
  ): connectors_tenants

  """
  insert data into the table: "consents"
  """
  insert_consents(
    """the rows to be inserted"""
    objects: [consents_insert_input!]!

    """on conflict condition"""
    on_conflict: consents_on_conflict
  ): consents_mutation_response

  """
  insert a single row into the table: "consents"
  """
  insert_consents_one(
    """the row to be inserted"""
    object: consents_insert_input!

    """on conflict condition"""
    on_conflict: consents_on_conflict
  ): consents

  """
  insert data into the table: "corporate_donor_devices"
  """
  insert_corporate_donor_devices(
    """the rows to be inserted"""
    objects: [corporate_donor_devices_insert_input!]!

    """on conflict condition"""
    on_conflict: corporate_donor_devices_on_conflict
  ): corporate_donor_devices_mutation_response

  """
  insert a single row into the table: "corporate_donor_devices"
  """
  insert_corporate_donor_devices_one(
    """the row to be inserted"""
    object: corporate_donor_devices_insert_input!

    """on conflict condition"""
    on_conflict: corporate_donor_devices_on_conflict
  ): corporate_donor_devices

  """
  insert data into the table: "dashboard_role_access_config"
  """
  insert_dashboard_role_access_config(
    """the rows to be inserted"""
    objects: [dashboard_role_access_config_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_role_access_config_on_conflict
  ): dashboard_role_access_config_mutation_response

  """
  insert a single row into the table: "dashboard_role_access_config"
  """
  insert_dashboard_role_access_config_one(
    """the row to be inserted"""
    object: dashboard_role_access_config_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_role_access_config_on_conflict
  ): dashboard_role_access_config

  """
  insert data into the table: "dashboard_userdashboardmodule"
  """
  insert_dashboard_userdashboardmodule(
    """the rows to be inserted"""
    objects: [dashboard_userdashboardmodule_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_userdashboardmodule_on_conflict
  ): dashboard_userdashboardmodule_mutation_response

  """
  insert a single row into the table: "dashboard_userdashboardmodule"
  """
  insert_dashboard_userdashboardmodule_one(
    """the row to be inserted"""
    object: dashboard_userdashboardmodule_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_userdashboardmodule_on_conflict
  ): dashboard_userdashboardmodule

  """
  insert data into the table: "data_sets"
  """
  insert_data_sets(
    """the rows to be inserted"""
    objects: [data_sets_insert_input!]!

    """on conflict condition"""
    on_conflict: data_sets_on_conflict
  ): data_sets_mutation_response

  """
  insert a single row into the table: "data_sets"
  """
  insert_data_sets_one(
    """the row to be inserted"""
    object: data_sets_insert_input!

    """on conflict condition"""
    on_conflict: data_sets_on_conflict
  ): data_sets

  """
  insert data into the table: "deadline"
  """
  insert_deadline(
    """the rows to be inserted"""
    objects: [deadline_insert_input!]!

    """on conflict condition"""
    on_conflict: deadline_on_conflict
  ): deadline_mutation_response

  """
  insert a single row into the table: "deadline"
  """
  insert_deadline_one(
    """the row to be inserted"""
    object: deadline_insert_input!

    """on conflict condition"""
    on_conflict: deadline_on_conflict
  ): deadline

  """
  insert data into the table: "designation_scope_mapping"
  """
  insert_designation_scope_mapping(
    """the rows to be inserted"""
    objects: [designation_scope_mapping_insert_input!]!

    """on conflict condition"""
    on_conflict: designation_scope_mapping_on_conflict
  ): designation_scope_mapping_mutation_response

  """
  insert a single row into the table: "designation_scope_mapping"
  """
  insert_designation_scope_mapping_one(
    """the row to be inserted"""
    object: designation_scope_mapping_insert_input!

    """on conflict condition"""
    on_conflict: designation_scope_mapping_on_conflict
  ): designation_scope_mapping

  """
  insert data into the table: "device_demand_response"
  """
  insert_device_demand_response(
    """the rows to be inserted"""
    objects: [device_demand_response_insert_input!]!

    """on conflict condition"""
    on_conflict: device_demand_response_on_conflict
  ): device_demand_response_mutation_response

  """
  insert a single row into the table: "device_demand_response"
  """
  insert_device_demand_response_one(
    """the row to be inserted"""
    object: device_demand_response_insert_input!

    """on conflict condition"""
    on_conflict: device_demand_response_on_conflict
  ): device_demand_response

  """
  insert data into the table: "device_donation_corporates"
  """
  insert_device_donation_corporates(
    """the rows to be inserted"""
    objects: [device_donation_corporates_insert_input!]!

    """on conflict condition"""
    on_conflict: device_donation_corporates_on_conflict
  ): device_donation_corporates_mutation_response

  """
  insert a single row into the table: "device_donation_corporates"
  """
  insert_device_donation_corporates_one(
    """the row to be inserted"""
    object: device_donation_corporates_insert_input!

    """on conflict condition"""
    on_conflict: device_donation_corporates_on_conflict
  ): device_donation_corporates

  """
  insert data into the table: "device_donation_donor"
  """
  insert_device_donation_donor(
    """the rows to be inserted"""
    objects: [device_donation_donor_insert_input!]!

    """on conflict condition"""
    on_conflict: device_donation_donor_on_conflict
  ): device_donation_donor_mutation_response

  """
  insert a single row into the table: "device_donation_donor"
  """
  insert_device_donation_donor_one(
    """the row to be inserted"""
    object: device_donation_donor_insert_input!

    """on conflict condition"""
    on_conflict: device_donation_donor_on_conflict
  ): device_donation_donor

  """
  insert data into the table: "device_verification_records"
  """
  insert_device_verification_records(
    """the rows to be inserted"""
    objects: [device_verification_records_insert_input!]!

    """on conflict condition"""
    on_conflict: device_verification_records_on_conflict
  ): device_verification_records_mutation_response

  """
  insert a single row into the table: "device_verification_records"
  """
  insert_device_verification_records_one(
    """the row to be inserted"""
    object: device_verification_records_insert_input!

    """on conflict condition"""
    on_conflict: device_verification_records_on_conflict
  ): device_verification_records

  """
  insert data into the table: "django_admin_log"
  """
  insert_django_admin_log(
    """the rows to be inserted"""
    objects: [django_admin_log_insert_input!]!

    """on conflict condition"""
    on_conflict: django_admin_log_on_conflict
  ): django_admin_log_mutation_response

  """
  insert a single row into the table: "django_admin_log"
  """
  insert_django_admin_log_one(
    """the row to be inserted"""
    object: django_admin_log_insert_input!

    """on conflict condition"""
    on_conflict: django_admin_log_on_conflict
  ): django_admin_log

  """
  insert data into the table: "django_celery_results_chordcounter"
  """
  insert_django_celery_results_chordcounter(
    """the rows to be inserted"""
    objects: [django_celery_results_chordcounter_insert_input!]!

    """on conflict condition"""
    on_conflict: django_celery_results_chordcounter_on_conflict
  ): django_celery_results_chordcounter_mutation_response

  """
  insert a single row into the table: "django_celery_results_chordcounter"
  """
  insert_django_celery_results_chordcounter_one(
    """the row to be inserted"""
    object: django_celery_results_chordcounter_insert_input!

    """on conflict condition"""
    on_conflict: django_celery_results_chordcounter_on_conflict
  ): django_celery_results_chordcounter

  """
  insert data into the table: "django_celery_results_groupresult"
  """
  insert_django_celery_results_groupresult(
    """the rows to be inserted"""
    objects: [django_celery_results_groupresult_insert_input!]!

    """on conflict condition"""
    on_conflict: django_celery_results_groupresult_on_conflict
  ): django_celery_results_groupresult_mutation_response

  """
  insert a single row into the table: "django_celery_results_groupresult"
  """
  insert_django_celery_results_groupresult_one(
    """the row to be inserted"""
    object: django_celery_results_groupresult_insert_input!

    """on conflict condition"""
    on_conflict: django_celery_results_groupresult_on_conflict
  ): django_celery_results_groupresult

  """
  insert data into the table: "django_celery_results_taskresult"
  """
  insert_django_celery_results_taskresult(
    """the rows to be inserted"""
    objects: [django_celery_results_taskresult_insert_input!]!

    """on conflict condition"""
    on_conflict: django_celery_results_taskresult_on_conflict
  ): django_celery_results_taskresult_mutation_response

  """
  insert a single row into the table: "django_celery_results_taskresult"
  """
  insert_django_celery_results_taskresult_one(
    """the row to be inserted"""
    object: django_celery_results_taskresult_insert_input!

    """on conflict condition"""
    on_conflict: django_celery_results_taskresult_on_conflict
  ): django_celery_results_taskresult

  """
  insert data into the table: "django_content_type"
  """
  insert_django_content_type(
    """the rows to be inserted"""
    objects: [django_content_type_insert_input!]!

    """on conflict condition"""
    on_conflict: django_content_type_on_conflict
  ): django_content_type_mutation_response

  """
  insert a single row into the table: "django_content_type"
  """
  insert_django_content_type_one(
    """the row to be inserted"""
    object: django_content_type_insert_input!

    """on conflict condition"""
    on_conflict: django_content_type_on_conflict
  ): django_content_type

  """
  insert data into the table: "django_migrations"
  """
  insert_django_migrations(
    """the rows to be inserted"""
    objects: [django_migrations_insert_input!]!

    """on conflict condition"""
    on_conflict: django_migrations_on_conflict
  ): django_migrations_mutation_response

  """
  insert a single row into the table: "django_migrations"
  """
  insert_django_migrations_one(
    """the row to be inserted"""
    object: django_migrations_insert_input!

    """on conflict condition"""
    on_conflict: django_migrations_on_conflict
  ): django_migrations

  """
  insert data into the table: "django_session"
  """
  insert_django_session(
    """the rows to be inserted"""
    objects: [django_session_insert_input!]!

    """on conflict condition"""
    on_conflict: django_session_on_conflict
  ): django_session_mutation_response

  """
  insert a single row into the table: "django_session"
  """
  insert_django_session_one(
    """the row to be inserted"""
    object: django_session_insert_input!

    """on conflict condition"""
    on_conflict: django_session_on_conflict
  ): django_session

  """
  insert data into the table: "duplicates"
  """
  insert_duplicates(
    """the rows to be inserted"""
    objects: [duplicates_insert_input!]!
  ): duplicates_mutation_response

  """
  insert a single row into the table: "duplicates"
  """
  insert_duplicates_one(
    """the row to be inserted"""
    object: duplicates_insert_input!
  ): duplicates

  """
  insert data into the table: "email_templates"
  """
  insert_email_templates(
    """the rows to be inserted"""
    objects: [email_templates_insert_input!]!

    """on conflict condition"""
    on_conflict: email_templates_on_conflict
  ): email_templates_mutation_response

  """
  insert a single row into the table: "email_templates"
  """
  insert_email_templates_one(
    """the row to be inserted"""
    object: email_templates_insert_input!

    """on conflict condition"""
    on_conflict: email_templates_on_conflict
  ): email_templates

  """
  insert data into the table: "enroll_group"
  """
  insert_enroll_group(
    """the rows to be inserted"""
    objects: [enroll_group_insert_input!]!
  ): enroll_group_mutation_response

  """
  insert a single row into the table: "enroll_group"
  """
  insert_enroll_group_one(
    """the row to be inserted"""
    object: enroll_group_insert_input!
  ): enroll_group

  """
  insert data into the table: "enrollment"
  """
  insert_enrollment(
    """the rows to be inserted"""
    objects: [enrollment_insert_input!]!

    """on conflict condition"""
    on_conflict: enrollment_on_conflict
  ): enrollment_mutation_response

  """
  insert a single row into the table: "enrollment"
  """
  insert_enrollment_one(
    """the row to be inserted"""
    object: enrollment_insert_input!

    """on conflict condition"""
    on_conflict: enrollment_on_conflict
  ): enrollment

  """
  insert data into the table: "esamwadmatching"
  """
  insert_esamwadmatching(
    """the rows to be inserted"""
    objects: [esamwadmatching_insert_input!]!
  ): esamwadmatching_mutation_response

  """
  insert a single row into the table: "esamwadmatching"
  """
  insert_esamwadmatching_one(
    """the row to be inserted"""
    object: esamwadmatching_insert_input!
  ): esamwadmatching

  """
  insert data into the table: "evaluation_param"
  """
  insert_evaluation_param(
    """the rows to be inserted"""
    objects: [evaluation_param_insert_input!]!

    """on conflict condition"""
    on_conflict: evaluation_param_on_conflict
  ): evaluation_param_mutation_response

  """
  insert a single row into the table: "evaluation_param"
  """
  insert_evaluation_param_one(
    """the row to be inserted"""
    object: evaluation_param_insert_input!

    """on conflict condition"""
    on_conflict: evaluation_param_on_conflict
  ): evaluation_param

  """
  insert data into the table: "event_logs"
  """
  insert_event_logs(
    """the rows to be inserted"""
    objects: [event_logs_insert_input!]!

    """on conflict condition"""
    on_conflict: event_logs_on_conflict
  ): event_logs_mutation_response

  """
  insert a single row into the table: "event_logs"
  """
  insert_event_logs_one(
    """the row to be inserted"""
    object: event_logs_insert_input!

    """on conflict condition"""
    on_conflict: event_logs_on_conflict
  ): event_logs

  """
  insert data into the table: "external_identifiers"
  """
  insert_external_identifiers(
    """the rows to be inserted"""
    objects: [external_identifiers_insert_input!]!

    """on conflict condition"""
    on_conflict: external_identifiers_on_conflict
  ): external_identifiers_mutation_response

  """
  insert a single row into the table: "external_identifiers"
  """
  insert_external_identifiers_one(
    """the row to be inserted"""
    object: external_identifiers_insert_input!

    """on conflict condition"""
    on_conflict: external_identifiers_on_conflict
  ): external_identifiers

  """
  insert data into the table: "failed_logins"
  """
  insert_failed_logins(
    """the rows to be inserted"""
    objects: [failed_logins_insert_input!]!

    """on conflict condition"""
    on_conflict: failed_logins_on_conflict
  ): failed_logins_mutation_response

  """
  insert a single row into the table: "failed_logins"
  """
  insert_failed_logins_one(
    """the row to be inserted"""
    object: failed_logins_insert_input!

    """on conflict condition"""
    on_conflict: failed_logins_on_conflict
  ): failed_logins

  """
  insert data into the table: "families"
  """
  insert_families(
    """the rows to be inserted"""
    objects: [families_insert_input!]!

    """on conflict condition"""
    on_conflict: families_on_conflict
  ): families_mutation_response

  """
  insert a single row into the table: "families"
  """
  insert_families_one(
    """the row to be inserted"""
    object: families_insert_input!

    """on conflict condition"""
    on_conflict: families_on_conflict
  ): families

  """
  insert data into the table: "federated_domains"
  """
  insert_federated_domains(
    """the rows to be inserted"""
    objects: [federated_domains_insert_input!]!

    """on conflict condition"""
    on_conflict: federated_domains_on_conflict
  ): federated_domains_mutation_response

  """
  insert a single row into the table: "federated_domains"
  """
  insert_federated_domains_one(
    """the row to be inserted"""
    object: federated_domains_insert_input!

    """on conflict condition"""
    on_conflict: federated_domains_on_conflict
  ): federated_domains

  """
  insert data into the table: "form_fields"
  """
  insert_form_fields(
    """the rows to be inserted"""
    objects: [form_fields_insert_input!]!

    """on conflict condition"""
    on_conflict: form_fields_on_conflict
  ): form_fields_mutation_response

  """
  insert a single row into the table: "form_fields"
  """
  insert_form_fields_one(
    """the row to be inserted"""
    object: form_fields_insert_input!

    """on conflict condition"""
    on_conflict: form_fields_on_conflict
  ): form_fields

  """
  insert data into the table: "form_steps"
  """
  insert_form_steps(
    """the rows to be inserted"""
    objects: [form_steps_insert_input!]!

    """on conflict condition"""
    on_conflict: form_steps_on_conflict
  ): form_steps_mutation_response

  """
  insert a single row into the table: "form_steps"
  """
  insert_form_steps_one(
    """the row to be inserted"""
    object: form_steps_insert_input!

    """on conflict condition"""
    on_conflict: form_steps_on_conflict
  ): form_steps

  """
  insert data into the table: "forms"
  """
  insert_forms(
    """the rows to be inserted"""
    objects: [forms_insert_input!]!

    """on conflict condition"""
    on_conflict: forms_on_conflict
  ): forms_mutation_response

  """
  insert a single row into the table: "forms"
  """
  insert_forms_one(
    """the row to be inserted"""
    object: forms_insert_input!

    """on conflict condition"""
    on_conflict: forms_on_conflict
  ): forms

  """
  insert data into the table: "gender_cat_analysis"
  """
  insert_gender_cat_analysis(
    """the rows to be inserted"""
    objects: [gender_cat_analysis_insert_input!]!
  ): gender_cat_analysis_mutation_response

  """
  insert a single row into the table: "gender_cat_analysis"
  """
  insert_gender_cat_analysis_one(
    """the row to be inserted"""
    object: gender_cat_analysis_insert_input!
  ): gender_cat_analysis

  """
  insert data into the table: "genuine_profiles"
  """
  insert_genuine_profiles(
    """the rows to be inserted"""
    objects: [genuine_profiles_insert_input!]!
  ): genuine_profiles_mutation_response

  """
  insert a single row into the table: "genuine_profiles"
  """
  insert_genuine_profiles_one(
    """the row to be inserted"""
    object: genuine_profiles_insert_input!
  ): genuine_profiles

  """
  insert data into the table: "global_daily_active_users"
  """
  insert_global_daily_active_users(
    """the rows to be inserted"""
    objects: [global_daily_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: global_daily_active_users_on_conflict
  ): global_daily_active_users_mutation_response

  """
  insert a single row into the table: "global_daily_active_users"
  """
  insert_global_daily_active_users_one(
    """the row to be inserted"""
    object: global_daily_active_users_insert_input!

    """on conflict condition"""
    on_conflict: global_daily_active_users_on_conflict
  ): global_daily_active_users

  """
  insert data into the table: "global_monthly_active_users"
  """
  insert_global_monthly_active_users(
    """the rows to be inserted"""
    objects: [global_monthly_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: global_monthly_active_users_on_conflict
  ): global_monthly_active_users_mutation_response

  """
  insert a single row into the table: "global_monthly_active_users"
  """
  insert_global_monthly_active_users_one(
    """the row to be inserted"""
    object: global_monthly_active_users_insert_input!

    """on conflict condition"""
    on_conflict: global_monthly_active_users_on_conflict
  ): global_monthly_active_users

  """
  insert data into the table: "global_registration_counts"
  """
  insert_global_registration_counts(
    """the rows to be inserted"""
    objects: [global_registration_counts_insert_input!]!

    """on conflict condition"""
    on_conflict: global_registration_counts_on_conflict
  ): global_registration_counts_mutation_response

  """
  insert a single row into the table: "global_registration_counts"
  """
  insert_global_registration_counts_one(
    """the row to be inserted"""
    object: global_registration_counts_insert_input!

    """on conflict condition"""
    on_conflict: global_registration_counts_on_conflict
  ): global_registration_counts

  """
  insert data into the table: "grade"
  """
  insert_grade(
    """the rows to be inserted"""
    objects: [grade_insert_input!]!

    """on conflict condition"""
    on_conflict: grade_on_conflict
  ): grade_mutation_response

  """
  insert data into the table: "grade_assessment"
  """
  insert_grade_assessment(
    """the rows to be inserted"""
    objects: [grade_assessment_insert_input!]!

    """on conflict condition"""
    on_conflict: grade_assessment_on_conflict
  ): grade_assessment_mutation_response

  """
  insert a single row into the table: "grade_assessment"
  """
  insert_grade_assessment_one(
    """the row to be inserted"""
    object: grade_assessment_insert_input!

    """on conflict condition"""
    on_conflict: grade_assessment_on_conflict
  ): grade_assessment

  """
  insert a single row into the table: "grade"
  """
  insert_grade_one(
    """the row to be inserted"""
    object: grade_insert_input!

    """on conflict condition"""
    on_conflict: grade_on_conflict
  ): grade

  """
  insert data into the table: "group_application_roles"
  """
  insert_group_application_roles(
    """the rows to be inserted"""
    objects: [group_application_roles_insert_input!]!

    """on conflict condition"""
    on_conflict: group_application_roles_on_conflict
  ): group_application_roles_mutation_response

  """
  insert a single row into the table: "group_application_roles"
  """
  insert_group_application_roles_one(
    """the row to be inserted"""
    object: group_application_roles_insert_input!

    """on conflict condition"""
    on_conflict: group_application_roles_on_conflict
  ): group_application_roles

  """
  insert data into the table: "group_members"
  """
  insert_group_members(
    """the rows to be inserted"""
    objects: [group_members_insert_input!]!

    """on conflict condition"""
    on_conflict: group_members_on_conflict
  ): group_members_mutation_response

  """
  insert a single row into the table: "group_members"
  """
  insert_group_members_one(
    """the row to be inserted"""
    object: group_members_insert_input!

    """on conflict condition"""
    on_conflict: group_members_on_conflict
  ): group_members

  """
  insert data into the table: "groups"
  """
  insert_groups(
    """the rows to be inserted"""
    objects: [groups_insert_input!]!

    """on conflict condition"""
    on_conflict: groups_on_conflict
  ): groups_mutation_response

  """
  insert a single row into the table: "groups"
  """
  insert_groups_one(
    """the row to be inserted"""
    object: groups_insert_input!

    """on conflict condition"""
    on_conflict: groups_on_conflict
  ): groups

  """
  insert data into the table: "hourly_logins"
  """
  insert_hourly_logins(
    """the rows to be inserted"""
    objects: [hourly_logins_insert_input!]!

    """on conflict condition"""
    on_conflict: hourly_logins_on_conflict
  ): hourly_logins_mutation_response

  """
  insert a single row into the table: "hourly_logins"
  """
  insert_hourly_logins_one(
    """the row to be inserted"""
    object: hourly_logins_insert_input!

    """on conflict condition"""
    on_conflict: hourly_logins_on_conflict
  ): hourly_logins

  """
  insert data into the table: "idb_attendance_by_date_aggregate"
  """
  insert_idb_attendance_by_date_aggregate(
    """the rows to be inserted"""
    objects: [idb_attendance_by_date_aggregate_insert_input!]!
  ): idb_attendance_by_date_aggregate_mutation_response

  """
  insert a single row into the table: "idb_attendance_by_date_aggregate"
  """
  insert_idb_attendance_by_date_aggregate_one(
    """the row to be inserted"""
    object: idb_attendance_by_date_aggregate_insert_input!
  ): idb_attendance_by_date_aggregate

  """
  insert data into the table: "idb_attendance_district_enrolment_percentage"
  """
  insert_idb_attendance_district_enrolment_percentage(
    """the rows to be inserted"""
    objects: [idb_attendance_district_enrolment_percentage_insert_input!]!
  ): idb_attendance_district_enrolment_percentage_mutation_response

  """
  insert a single row into the table: "idb_attendance_district_enrolment_percentage"
  """
  insert_idb_attendance_district_enrolment_percentage_one(
    """the row to be inserted"""
    object: idb_attendance_district_enrolment_percentage_insert_input!
  ): idb_attendance_district_enrolment_percentage

  """
  insert data into the table: "idb_block_wise_student_enrolment"
  """
  insert_idb_block_wise_student_enrolment(
    """the rows to be inserted"""
    objects: [idb_block_wise_student_enrolment_insert_input!]!
  ): idb_block_wise_student_enrolment_mutation_response

  """
  insert a single row into the table: "idb_block_wise_student_enrolment"
  """
  insert_idb_block_wise_student_enrolment_one(
    """the row to be inserted"""
    object: idb_block_wise_student_enrolment_insert_input!
  ): idb_block_wise_student_enrolment

  """
  insert data into the table: "idb_daily_enrolment_aggregate"
  """
  insert_idb_daily_enrolment_aggregate(
    """the rows to be inserted"""
    objects: [idb_daily_enrolment_aggregate_insert_input!]!
  ): idb_daily_enrolment_aggregate_mutation_response

  """
  insert a single row into the table: "idb_daily_enrolment_aggregate"
  """
  insert_idb_daily_enrolment_aggregate_one(
    """the row to be inserted"""
    object: idb_daily_enrolment_aggregate_insert_input!
  ): idb_daily_enrolment_aggregate

  """
  insert data into the table: "idb_daily_total_attendance_percent_aggregate"
  """
  insert_idb_daily_total_attendance_percent_aggregate(
    """the rows to be inserted"""
    objects: [idb_daily_total_attendance_percent_aggregate_insert_input!]!
  ): idb_daily_total_attendance_percent_aggregate_mutation_response

  """
  insert a single row into the table: "idb_daily_total_attendance_percent_aggregate"
  """
  insert_idb_daily_total_attendance_percent_aggregate_one(
    """the row to be inserted"""
    object: idb_daily_total_attendance_percent_aggregate_insert_input!
  ): idb_daily_total_attendance_percent_aggregate

  """
  insert data into the table: "idb_daily_total_attendance_percentage"
  """
  insert_idb_daily_total_attendance_percentage(
    """the rows to be inserted"""
    objects: [idb_daily_total_attendance_percentage_insert_input!]!
  ): idb_daily_total_attendance_percentage_mutation_response

  """
  insert data into the table: "idb_daily_total_attendance_percentage_mv"
  """
  insert_idb_daily_total_attendance_percentage_mv(
    """the rows to be inserted"""
    objects: [idb_daily_total_attendance_percentage_mv_insert_input!]!
  ): idb_daily_total_attendance_percentage_mv_mutation_response

  """
  insert a single row into the table: "idb_daily_total_attendance_percentage_mv"
  """
  insert_idb_daily_total_attendance_percentage_mv_one(
    """the row to be inserted"""
    object: idb_daily_total_attendance_percentage_mv_insert_input!
  ): idb_daily_total_attendance_percentage_mv

  """
  insert a single row into the table: "idb_daily_total_attendance_percentage"
  """
  insert_idb_daily_total_attendance_percentage_one(
    """the row to be inserted"""
    object: idb_daily_total_attendance_percentage_insert_input!
  ): idb_daily_total_attendance_percentage

  """
  insert data into the table: "idb_district_school_type_percentage"
  """
  insert_idb_district_school_type_percentage(
    """the rows to be inserted"""
    objects: [idb_district_school_type_percentage_insert_input!]!
  ): idb_district_school_type_percentage_mutation_response

  """
  insert a single row into the table: "idb_district_school_type_percentage"
  """
  insert_idb_district_school_type_percentage_one(
    """the row to be inserted"""
    object: idb_district_school_type_percentage_insert_input!
  ): idb_district_school_type_percentage

  """
  insert data into the table: "idb_district_wise_schools"
  """
  insert_idb_district_wise_schools(
    """the rows to be inserted"""
    objects: [idb_district_wise_schools_insert_input!]!
  ): idb_district_wise_schools_mutation_response

  """
  insert a single row into the table: "idb_district_wise_schools"
  """
  insert_idb_district_wise_schools_one(
    """the row to be inserted"""
    object: idb_district_wise_schools_insert_input!
  ): idb_district_wise_schools

  """
  insert data into the table: "idb_district_wise_student_enrolment"
  """
  insert_idb_district_wise_student_enrolment(
    """the rows to be inserted"""
    objects: [idb_district_wise_student_enrolment_insert_input!]!
  ): idb_district_wise_student_enrolment_mutation_response

  """
  insert a single row into the table: "idb_district_wise_student_enrolment"
  """
  insert_idb_district_wise_student_enrolment_one(
    """the row to be inserted"""
    object: idb_district_wise_student_enrolment_insert_input!
  ): idb_district_wise_student_enrolment

  """
  insert data into the table: "idb_enrolment_grade_wise_state"
  """
  insert_idb_enrolment_grade_wise_state(
    """the rows to be inserted"""
    objects: [idb_enrolment_grade_wise_state_insert_input!]!
  ): idb_enrolment_grade_wise_state_mutation_response

  """
  insert a single row into the table: "idb_enrolment_grade_wise_state"
  """
  insert_idb_enrolment_grade_wise_state_one(
    """the row to be inserted"""
    object: idb_enrolment_grade_wise_state_insert_input!
  ): idb_enrolment_grade_wise_state

  """
  insert data into the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  insert_idb_student_attendance_attendance_final_by_date_grade(
    """the rows to be inserted"""
    objects: [idb_student_attendance_attendance_final_by_date_grade_insert_input!]!
  ): idb_student_attendance_attendance_final_by_date_grade_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  insert_idb_student_attendance_attendance_final_by_date_grade_one(
    """the row to be inserted"""
    object: idb_student_attendance_attendance_final_by_date_grade_insert_input!
  ): idb_student_attendance_attendance_final_by_date_grade

  """
  insert data into the table: "idb_student_attendance_attendance_merged"
  """
  insert_idb_student_attendance_attendance_merged(
    """the rows to be inserted"""
    objects: [idb_student_attendance_attendance_merged_insert_input!]!
  ): idb_student_attendance_attendance_merged_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_attendance_merged"
  """
  insert_idb_student_attendance_attendance_merged_one(
    """the row to be inserted"""
    object: idb_student_attendance_attendance_merged_insert_input!
  ): idb_student_attendance_attendance_merged

  """
  insert data into the table: "idb_student_attendance_attendance_present_aggregate"
  """
  insert_idb_student_attendance_attendance_present_aggregate(
    """the rows to be inserted"""
    objects: [idb_student_attendance_attendance_present_aggregate_insert_input!]!
  ): idb_student_attendance_attendance_present_aggregate_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_attendance_present_aggregate"
  """
  insert_idb_student_attendance_attendance_present_aggregate_one(
    """the row to be inserted"""
    object: idb_student_attendance_attendance_present_aggregate_insert_input!
  ): idb_student_attendance_attendance_present_aggregate

  """
  insert data into the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  insert_idb_student_attendance_attendance_present_marked_by_date(
    """the rows to be inserted"""
    objects: [idb_student_attendance_attendance_present_marked_by_date_insert_input!]!
  ): idb_student_attendance_attendance_present_marked_by_date_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  insert_idb_student_attendance_attendance_present_marked_by_date_one(
    """the row to be inserted"""
    object: idb_student_attendance_attendance_present_marked_by_date_insert_input!
  ): idb_student_attendance_attendance_present_marked_by_date

  """
  insert data into the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  insert_idb_student_attendance_attendance_total_marked_by_date(
    """the rows to be inserted"""
    objects: [idb_student_attendance_attendance_total_marked_by_date_insert_input!]!
  ): idb_student_attendance_attendance_total_marked_by_date_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  insert_idb_student_attendance_attendance_total_marked_by_date_one(
    """the row to be inserted"""
    object: idb_student_attendance_attendance_total_marked_by_date_insert_input!
  ): idb_student_attendance_attendance_total_marked_by_date

  """
  insert data into the table: "idb_student_attendance_block_final"
  """
  insert_idb_student_attendance_block_final(
    """the rows to be inserted"""
    objects: [idb_student_attendance_block_final_insert_input!]!
  ): idb_student_attendance_block_final_mutation_response

  """
  insert data into the table: "idb_student_attendance_block_final_enrolment"
  """
  insert_idb_student_attendance_block_final_enrolment(
    """the rows to be inserted"""
    objects: [idb_student_attendance_block_final_enrolment_insert_input!]!
  ): idb_student_attendance_block_final_enrolment_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_block_final_enrolment"
  """
  insert_idb_student_attendance_block_final_enrolment_one(
    """the row to be inserted"""
    object: idb_student_attendance_block_final_enrolment_insert_input!
  ): idb_student_attendance_block_final_enrolment

  """
  insert a single row into the table: "idb_student_attendance_block_final"
  """
  insert_idb_student_attendance_block_final_one(
    """the row to be inserted"""
    object: idb_student_attendance_block_final_insert_input!
  ): idb_student_attendance_block_final

  """
  insert data into the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  insert_idb_student_attendance_block_level_daily_present_marked(
    """the rows to be inserted"""
    objects: [idb_student_attendance_block_level_daily_present_marked_insert_input!]!
  ): idb_student_attendance_block_level_daily_present_marked_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  insert_idb_student_attendance_block_level_daily_present_marked_one(
    """the row to be inserted"""
    object: idb_student_attendance_block_level_daily_present_marked_insert_input!
  ): idb_student_attendance_block_level_daily_present_marked

  """
  insert data into the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  insert_idb_student_attendance_block_level_daily_total_marked(
    """the rows to be inserted"""
    objects: [idb_student_attendance_block_level_daily_total_marked_insert_input!]!
  ): idb_student_attendance_block_level_daily_total_marked_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  insert_idb_student_attendance_block_level_daily_total_marked_one(
    """the row to be inserted"""
    object: idb_student_attendance_block_level_daily_total_marked_insert_input!
  ): idb_student_attendance_block_level_daily_total_marked

  """
  insert data into the table: "idb_student_attendance_compliance_district_wise"
  """
  insert_idb_student_attendance_compliance_district_wise(
    """the rows to be inserted"""
    objects: [idb_student_attendance_compliance_district_wise_insert_input!]!
  ): idb_student_attendance_compliance_district_wise_mutation_response

  """
  insert data into the table: "idb_student_attendance_compliance_district_wise_final"
  """
  insert_idb_student_attendance_compliance_district_wise_final(
    """the rows to be inserted"""
    objects: [idb_student_attendance_compliance_district_wise_final_insert_input!]!
  ): idb_student_attendance_compliance_district_wise_final_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_compliance_district_wise_final"
  """
  insert_idb_student_attendance_compliance_district_wise_final_one(
    """the row to be inserted"""
    object: idb_student_attendance_compliance_district_wise_final_insert_input!
  ): idb_student_attendance_compliance_district_wise_final

  """
  insert a single row into the table: "idb_student_attendance_compliance_district_wise"
  """
  insert_idb_student_attendance_compliance_district_wise_one(
    """the row to be inserted"""
    object: idb_student_attendance_compliance_district_wise_insert_input!
  ): idb_student_attendance_compliance_district_wise

  """
  insert data into the table: "idb_student_attendance_compliance_school_wise"
  """
  insert_idb_student_attendance_compliance_school_wise(
    """the rows to be inserted"""
    objects: [idb_student_attendance_compliance_school_wise_insert_input!]!
  ): idb_student_attendance_compliance_school_wise_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_compliance_school_wise"
  """
  insert_idb_student_attendance_compliance_school_wise_one(
    """the row to be inserted"""
    object: idb_student_attendance_compliance_school_wise_insert_input!
  ): idb_student_attendance_compliance_school_wise

  """
  insert data into the table: "idb_student_attendance_district_final"
  """
  insert_idb_student_attendance_district_final(
    """the rows to be inserted"""
    objects: [idb_student_attendance_district_final_insert_input!]!
  ): idb_student_attendance_district_final_mutation_response

  """
  insert data into the table: "idb_student_attendance_district_final_enrolment"
  """
  insert_idb_student_attendance_district_final_enrolment(
    """the rows to be inserted"""
    objects: [idb_student_attendance_district_final_enrolment_insert_input!]!
  ): idb_student_attendance_district_final_enrolment_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_district_final_enrolment"
  """
  insert_idb_student_attendance_district_final_enrolment_one(
    """the row to be inserted"""
    object: idb_student_attendance_district_final_enrolment_insert_input!
  ): idb_student_attendance_district_final_enrolment

  """
  insert a single row into the table: "idb_student_attendance_district_final"
  """
  insert_idb_student_attendance_district_final_one(
    """the row to be inserted"""
    object: idb_student_attendance_district_final_insert_input!
  ): idb_student_attendance_district_final

  """
  insert data into the table: "idb_student_attendance_district_present_marked_by_date"
  """
  insert_idb_student_attendance_district_present_marked_by_date(
    """the rows to be inserted"""
    objects: [idb_student_attendance_district_present_marked_by_date_insert_input!]!
  ): idb_student_attendance_district_present_marked_by_date_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_district_present_marked_by_date"
  """
  insert_idb_student_attendance_district_present_marked_by_date_one(
    """the row to be inserted"""
    object: idb_student_attendance_district_present_marked_by_date_insert_input!
  ): idb_student_attendance_district_present_marked_by_date

  """
  insert data into the table: "idb_student_attendance_district_total_marked_by_date"
  """
  insert_idb_student_attendance_district_total_marked_by_date(
    """the rows to be inserted"""
    objects: [idb_student_attendance_district_total_marked_by_date_insert_input!]!
  ): idb_student_attendance_district_total_marked_by_date_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_district_total_marked_by_date"
  """
  insert_idb_student_attendance_district_total_marked_by_date_one(
    """the row to be inserted"""
    object: idb_student_attendance_district_total_marked_by_date_insert_input!
  ): idb_student_attendance_district_total_marked_by_date

  """
  insert data into the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  insert_idb_student_attendance_final_grade_wise_with_enrolment(
    """the rows to be inserted"""
    objects: [idb_student_attendance_final_grade_wise_with_enrolment_insert_input!]!
  ): idb_student_attendance_final_grade_wise_with_enrolment_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  insert_idb_student_attendance_final_grade_wise_with_enrolment_one(
    """the row to be inserted"""
    object: idb_student_attendance_final_grade_wise_with_enrolment_insert_input!
  ): idb_student_attendance_final_grade_wise_with_enrolment

  """
  insert data into the table: "idb_student_attendance_present_school_wise"
  """
  insert_idb_student_attendance_present_school_wise(
    """the rows to be inserted"""
    objects: [idb_student_attendance_present_school_wise_insert_input!]!
  ): idb_student_attendance_present_school_wise_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_present_school_wise"
  """
  insert_idb_student_attendance_present_school_wise_one(
    """the row to be inserted"""
    object: idb_student_attendance_present_school_wise_insert_input!
  ): idb_student_attendance_present_school_wise

  """
  insert data into the table: "idb_student_attendance_school_wise_final"
  """
  insert_idb_student_attendance_school_wise_final(
    """the rows to be inserted"""
    objects: [idb_student_attendance_school_wise_final_insert_input!]!
  ): idb_student_attendance_school_wise_final_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_school_wise_final"
  """
  insert_idb_student_attendance_school_wise_final_one(
    """the row to be inserted"""
    object: idb_student_attendance_school_wise_final_insert_input!
  ): idb_student_attendance_school_wise_final

  """
  insert data into the table: "idb_student_attendance_total_school_wise"
  """
  insert_idb_student_attendance_total_school_wise(
    """the rows to be inserted"""
    objects: [idb_student_attendance_total_school_wise_insert_input!]!
  ): idb_student_attendance_total_school_wise_mutation_response

  """
  insert a single row into the table: "idb_student_attendance_total_school_wise"
  """
  insert_idb_student_attendance_total_school_wise_one(
    """the row to be inserted"""
    object: idb_student_attendance_total_school_wise_insert_input!
  ): idb_student_attendance_total_school_wise

  """
  insert data into the table: "idb_total_state_student_enrolment"
  """
  insert_idb_total_state_student_enrolment(
    """the rows to be inserted"""
    objects: [idb_total_state_student_enrolment_insert_input!]!
  ): idb_total_state_student_enrolment_mutation_response

  """
  insert a single row into the table: "idb_total_state_student_enrolment"
  """
  insert_idb_total_state_student_enrolment_one(
    """the row to be inserted"""
    object: idb_total_state_student_enrolment_insert_input!
  ): idb_total_state_student_enrolment

  """
  insert data into the table: "identities"
  """
  insert_identities(
    """the rows to be inserted"""
    objects: [identities_insert_input!]!

    """on conflict condition"""
    on_conflict: identities_on_conflict
  ): identities_mutation_response

  """
  insert a single row into the table: "identities"
  """
  insert_identities_one(
    """the row to be inserted"""
    object: identities_insert_input!

    """on conflict condition"""
    on_conflict: identities_on_conflict
  ): identities

  """
  insert data into the table: "identity_providers"
  """
  insert_identity_providers(
    """the rows to be inserted"""
    objects: [identity_providers_insert_input!]!

    """on conflict condition"""
    on_conflict: identity_providers_on_conflict
  ): identity_providers_mutation_response

  """
  insert data into the table: "identity_providers_applications"
  """
  insert_identity_providers_applications(
    """the rows to be inserted"""
    objects: [identity_providers_applications_insert_input!]!
  ): identity_providers_applications_mutation_response

  """
  insert a single row into the table: "identity_providers_applications"
  """
  insert_identity_providers_applications_one(
    """the row to be inserted"""
    object: identity_providers_applications_insert_input!
  ): identity_providers_applications

  """
  insert a single row into the table: "identity_providers"
  """
  insert_identity_providers_one(
    """the row to be inserted"""
    object: identity_providers_insert_input!

    """on conflict condition"""
    on_conflict: identity_providers_on_conflict
  ): identity_providers

  """
  insert data into the table: "instance"
  """
  insert_instance(
    """the rows to be inserted"""
    objects: [instance_insert_input!]!
  ): instance_mutation_response

  """
  insert a single row into the table: "instance"
  """
  insert_instance_one(
    """the row to be inserted"""
    object: instance_insert_input!
  ): instance

  """
  insert data into the table: "integrations"
  """
  insert_integrations(
    """the rows to be inserted"""
    objects: [integrations_insert_input!]!
  ): integrations_mutation_response

  """
  insert a single row into the table: "integrations"
  """
  insert_integrations_one(
    """the row to be inserted"""
    object: integrations_insert_input!
  ): integrations

  """
  insert data into the table: "jet_bookmark"
  """
  insert_jet_bookmark(
    """the rows to be inserted"""
    objects: [jet_bookmark_insert_input!]!

    """on conflict condition"""
    on_conflict: jet_bookmark_on_conflict
  ): jet_bookmark_mutation_response

  """
  insert a single row into the table: "jet_bookmark"
  """
  insert_jet_bookmark_one(
    """the row to be inserted"""
    object: jet_bookmark_insert_input!

    """on conflict condition"""
    on_conflict: jet_bookmark_on_conflict
  ): jet_bookmark

  """
  insert data into the table: "jet_pinnedapplication"
  """
  insert_jet_pinnedapplication(
    """the rows to be inserted"""
    objects: [jet_pinnedapplication_insert_input!]!

    """on conflict condition"""
    on_conflict: jet_pinnedapplication_on_conflict
  ): jet_pinnedapplication_mutation_response

  """
  insert a single row into the table: "jet_pinnedapplication"
  """
  insert_jet_pinnedapplication_one(
    """the row to be inserted"""
    object: jet_pinnedapplication_insert_input!

    """on conflict condition"""
    on_conflict: jet_pinnedapplication_on_conflict
  ): jet_pinnedapplication

  """
  insert data into the table: "keys"
  """
  insert_keys(
    """the rows to be inserted"""
    objects: [keys_insert_input!]!

    """on conflict condition"""
    on_conflict: keys_on_conflict
  ): keys_mutation_response

  """
  insert a single row into the table: "keys"
  """
  insert_keys_one(
    """the row to be inserted"""
    object: keys_insert_input!

    """on conflict condition"""
    on_conflict: keys_on_conflict
  ): keys

  """
  insert data into the table: "lambdas"
  """
  insert_lambdas(
    """the rows to be inserted"""
    objects: [lambdas_insert_input!]!

    """on conflict condition"""
    on_conflict: lambdas_on_conflict
  ): lambdas_mutation_response

  """
  insert a single row into the table: "lambdas"
  """
  insert_lambdas_one(
    """the row to be inserted"""
    object: lambdas_insert_input!

    """on conflict condition"""
    on_conflict: lambdas_on_conflict
  ): lambdas

  """
  insert data into the table: "lo"
  """
  insert_lo(
    """the rows to be inserted"""
    objects: [lo_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_on_conflict
  ): lo_mutation_response

  """
  insert data into the table: "lo_assessment"
  """
  insert_lo_assessment(
    """the rows to be inserted"""
    objects: [lo_assessment_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_assessment_on_conflict
  ): lo_assessment_mutation_response

  """
  insert a single row into the table: "lo_assessment"
  """
  insert_lo_assessment_one(
    """the row to be inserted"""
    object: lo_assessment_insert_input!

    """on conflict condition"""
    on_conflict: lo_assessment_on_conflict
  ): lo_assessment

  """
  insert data into the table: "lo_bundle"
  """
  insert_lo_bundle(
    """the rows to be inserted"""
    objects: [lo_bundle_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_bundle_on_conflict
  ): lo_bundle_mutation_response

  """
  insert data into the table: "lo_bundle_los"
  """
  insert_lo_bundle_los(
    """the rows to be inserted"""
    objects: [lo_bundle_los_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_bundle_los_on_conflict
  ): lo_bundle_los_mutation_response

  """
  insert a single row into the table: "lo_bundle_los"
  """
  insert_lo_bundle_los_one(
    """the row to be inserted"""
    object: lo_bundle_los_insert_input!

    """on conflict condition"""
    on_conflict: lo_bundle_los_on_conflict
  ): lo_bundle_los

  """
  insert a single row into the table: "lo_bundle"
  """
  insert_lo_bundle_one(
    """the row to be inserted"""
    object: lo_bundle_insert_input!

    """on conflict condition"""
    on_conflict: lo_bundle_on_conflict
  ): lo_bundle

  """
  insert a single row into the table: "lo"
  """
  insert_lo_one(
    """the row to be inserted"""
    object: lo_insert_input!

    """on conflict condition"""
    on_conflict: lo_on_conflict
  ): lo

  """
  insert data into the table: "lo_submission"
  """
  insert_lo_submission(
    """the rows to be inserted"""
    objects: [lo_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_submission_on_conflict
  ): lo_submission_mutation_response

  """
  insert a single row into the table: "lo_submission"
  """
  insert_lo_submission_one(
    """the row to be inserted"""
    object: lo_submission_insert_input!

    """on conflict condition"""
    on_conflict: lo_submission_on_conflict
  ): lo_submission

  """
  insert data into the table: "lo_table"
  """
  insert_lo_table(
    """the rows to be inserted"""
    objects: [lo_table_insert_input!]!
  ): lo_table_mutation_response

  """
  insert data into the table: "lo_table2"
  """
  insert_lo_table2(
    """the rows to be inserted"""
    objects: [lo_table2_insert_input!]!
  ): lo_table2_mutation_response

  """
  insert a single row into the table: "lo_table2"
  """
  insert_lo_table2_one(
    """the row to be inserted"""
    object: lo_table2_insert_input!
  ): lo_table2

  """
  insert a single row into the table: "lo_table"
  """
  insert_lo_table_one(
    """the row to be inserted"""
    object: lo_table_insert_input!
  ): lo_table

  """
  insert data into the table: "lo_v2"
  """
  insert_lo_v2(
    """the rows to be inserted"""
    objects: [lo_v2_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_v2_on_conflict
  ): lo_v2_mutation_response

  """
  insert a single row into the table: "lo_v2"
  """
  insert_lo_v2_one(
    """the row to be inserted"""
    object: lo_v2_insert_input!

    """on conflict condition"""
    on_conflict: lo_v2_on_conflict
  ): lo_v2

  """
  insert data into the table: "location"
  """
  insert_location(
    """the rows to be inserted"""
    objects: [location_insert_input!]!

    """on conflict condition"""
    on_conflict: location_on_conflict
  ): location_mutation_response

  """
  insert a single row into the table: "location"
  """
  insert_location_one(
    """the row to be inserted"""
    object: location_insert_input!

    """on conflict condition"""
    on_conflict: location_on_conflict
  ): location

  """
  insert data into the table: "locks"
  """
  insert_locks(
    """the rows to be inserted"""
    objects: [locks_insert_input!]!

    """on conflict condition"""
    on_conflict: locks_on_conflict
  ): locks_mutation_response

  """
  insert a single row into the table: "locks"
  """
  insert_locks_one(
    """the row to be inserted"""
    object: locks_insert_input!

    """on conflict condition"""
    on_conflict: locks_on_conflict
  ): locks

  """
  insert data into the table: "mapping"
  """
  insert_mapping(
    """the rows to be inserted"""
    objects: [mapping_insert_input!]!

    """on conflict condition"""
    on_conflict: mapping_on_conflict
  ): mapping_mutation_response

  """
  insert data into the table: "mapping_details"
  """
  insert_mapping_details(
    """the rows to be inserted"""
    objects: [mapping_details_insert_input!]!

    """on conflict condition"""
    on_conflict: mapping_details_on_conflict
  ): mapping_details_mutation_response

  """
  insert a single row into the table: "mapping_details"
  """
  insert_mapping_details_one(
    """the row to be inserted"""
    object: mapping_details_insert_input!

    """on conflict condition"""
    on_conflict: mapping_details_on_conflict
  ): mapping_details

  """
  insert a single row into the table: "mapping"
  """
  insert_mapping_one(
    """the row to be inserted"""
    object: mapping_insert_input!

    """on conflict condition"""
    on_conflict: mapping_on_conflict
  ): mapping

  """
  insert data into the table: "mapping_submission"
  """
  insert_mapping_submission(
    """the rows to be inserted"""
    objects: [mapping_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: mapping_submission_on_conflict
  ): mapping_submission_mutation_response

  """
  insert a single row into the table: "mapping_submission"
  """
  insert_mapping_submission_one(
    """the row to be inserted"""
    object: mapping_submission_insert_input!

    """on conflict condition"""
    on_conflict: mapping_submission_on_conflict
  ): mapping_submission

  """
  insert data into the table: "master_attendance"
  """
  insert_master_attendance(
    """the rows to be inserted"""
    objects: [master_attendance_insert_input!]!
  ): master_attendance_mutation_response

  """
  insert a single row into the table: "master_attendance"
  """
  insert_master_attendance_one(
    """the row to be inserted"""
    object: master_attendance_insert_input!
  ): master_attendance

  """
  insert data into the table: "master_presentstudents"
  """
  insert_master_presentstudents(
    """the rows to be inserted"""
    objects: [master_presentstudents_insert_input!]!
  ): master_presentstudents_mutation_response

  """
  insert data into the table: "master_presentstudents1"
  """
  insert_master_presentstudents1(
    """the rows to be inserted"""
    objects: [master_presentstudents1_insert_input!]!
  ): master_presentstudents1_mutation_response

  """
  insert a single row into the table: "master_presentstudents1"
  """
  insert_master_presentstudents1_one(
    """the row to be inserted"""
    object: master_presentstudents1_insert_input!
  ): master_presentstudents1

  """
  insert a single row into the table: "master_presentstudents"
  """
  insert_master_presentstudents_one(
    """the row to be inserted"""
    object: master_presentstudents_insert_input!
  ): master_presentstudents

  """
  insert data into the table: "master_record"
  """
  insert_master_record(
    """the rows to be inserted"""
    objects: [master_record_insert_input!]!
  ): master_record_mutation_response

  """
  insert a single row into the table: "master_record"
  """
  insert_master_record_one(
    """the row to be inserted"""
    object: master_record_insert_input!
  ): master_record

  """
  insert data into the table: "master_students"
  """
  insert_master_students(
    """the rows to be inserted"""
    objects: [master_students_insert_input!]!
  ): master_students_mutation_response

  """
  insert a single row into the table: "master_students"
  """
  insert_master_students_one(
    """the row to be inserted"""
    object: master_students_insert_input!
  ): master_students

  """
  insert data into the table: "master_table"
  """
  insert_master_table(
    """the rows to be inserted"""
    objects: [master_table_insert_input!]!
  ): master_table_mutation_response

  """
  insert data into the table: "master_table_higher2"
  """
  insert_master_table_higher2(
    """the rows to be inserted"""
    objects: [master_table_higher2_insert_input!]!
  ): master_table_higher2_mutation_response

  """
  insert a single row into the table: "master_table_higher2"
  """
  insert_master_table_higher2_one(
    """the row to be inserted"""
    object: master_table_higher2_insert_input!
  ): master_table_higher2

  """
  insert a single row into the table: "master_table"
  """
  insert_master_table_one(
    """the row to be inserted"""
    object: master_table_insert_input!
  ): master_table

  """
  insert data into the table: "masterstudents"
  """
  insert_masterstudents(
    """the rows to be inserted"""
    objects: [masterstudents_insert_input!]!
  ): masterstudents_mutation_response

  """
  insert a single row into the table: "masterstudents"
  """
  insert_masterstudents_one(
    """the row to be inserted"""
    object: masterstudents_insert_input!
  ): masterstudents

  """
  insert data into the table: "matchingteachernos"
  """
  insert_matchingteachernos(
    """the rows to be inserted"""
    objects: [matchingteachernos_insert_input!]!
  ): matchingteachernos_mutation_response

  """
  insert a single row into the table: "matchingteachernos"
  """
  insert_matchingteachernos_one(
    """the row to be inserted"""
    object: matchingteachernos_insert_input!
  ): matchingteachernos

  """
  insert data into the table: "migrations"
  """
  insert_migrations(
    """the rows to be inserted"""
    objects: [migrations_insert_input!]!

    """on conflict condition"""
    on_conflict: migrations_on_conflict
  ): migrations_mutation_response

  """
  insert a single row into the table: "migrations"
  """
  insert_migrations_one(
    """the row to be inserted"""
    object: migrations_insert_input!

    """on conflict condition"""
    on_conflict: migrations_on_conflict
  ): migrations

  """
  insert data into the table: "mvintegrateddb_totalschools"
  """
  insert_mvintegrateddb_totalschools(
    """the rows to be inserted"""
    objects: [mvintegrateddb_totalschools_insert_input!]!
  ): mvintegrateddb_totalschools_mutation_response

  """
  insert a single row into the table: "mvintegrateddb_totalschools"
  """
  insert_mvintegrateddb_totalschools_one(
    """the row to be inserted"""
    object: mvintegrateddb_totalschools_insert_input!
  ): mvintegrateddb_totalschools

  """
  insert data into the table: "mystudent_testperformance"
  """
  insert_mystudent_testperformance(
    """the rows to be inserted"""
    objects: [mystudent_testperformance_insert_input!]!

    """on conflict condition"""
    on_conflict: mystudent_testperformance_on_conflict
  ): mystudent_testperformance_mutation_response

  """
  insert a single row into the table: "mystudent_testperformance"
  """
  insert_mystudent_testperformance_one(
    """the row to be inserted"""
    object: mystudent_testperformance_insert_input!

    """on conflict condition"""
    on_conflict: mystudent_testperformance_on_conflict
  ): mystudent_testperformance

  """
  insert data into the table: "no_of_profiles"
  """
  insert_no_of_profiles(
    """the rows to be inserted"""
    objects: [no_of_profiles_insert_input!]!
  ): no_of_profiles_mutation_response

  """
  insert a single row into the table: "no_of_profiles"
  """
  insert_no_of_profiles_one(
    """the row to be inserted"""
    object: no_of_profiles_insert_input!
  ): no_of_profiles

  """
  insert data into the table: "nodes"
  """
  insert_nodes(
    """the rows to be inserted"""
    objects: [nodes_insert_input!]!

    """on conflict condition"""
    on_conflict: nodes_on_conflict
  ): nodes_mutation_response

  """
  insert a single row into the table: "nodes"
  """
  insert_nodes_one(
    """the row to be inserted"""
    object: nodes_insert_input!

    """on conflict condition"""
    on_conflict: nodes_on_conflict
  ): nodes

  """
  insert data into the table: "notification"
  """
  insert_notification(
    """the rows to be inserted"""
    objects: [notification_insert_input!]!

    """on conflict condition"""
    on_conflict: notification_on_conflict
  ): notification_mutation_response

  """
  insert a single row into the table: "notification"
  """
  insert_notification_one(
    """the row to be inserted"""
    object: notification_insert_input!

    """on conflict condition"""
    on_conflict: notification_on_conflict
  ): notification

  """
  insert data into the table: "number_of_highschools"
  """
  insert_number_of_highschools(
    """the rows to be inserted"""
    objects: [number_of_highschools_insert_input!]!
  ): number_of_highschools_mutation_response

  """
  insert a single row into the table: "number_of_highschools"
  """
  insert_number_of_highschools_one(
    """the row to be inserted"""
    object: number_of_highschools_insert_input!
  ): number_of_highschools

  """
  insert data into the table: "number_of_middleschools"
  """
  insert_number_of_middleschools(
    """the rows to be inserted"""
    objects: [number_of_middleschools_insert_input!]!
  ): number_of_middleschools_mutation_response

  """
  insert a single row into the table: "number_of_middleschools"
  """
  insert_number_of_middleschools_one(
    """the row to be inserted"""
    object: number_of_middleschools_insert_input!
  ): number_of_middleschools

  """
  insert data into the table: "number_of_primaryschools"
  """
  insert_number_of_primaryschools(
    """the rows to be inserted"""
    objects: [number_of_primaryschools_insert_input!]!
  ): number_of_primaryschools_mutation_response

  """
  insert a single row into the table: "number_of_primaryschools"
  """
  insert_number_of_primaryschools_one(
    """the row to be inserted"""
    object: number_of_primaryschools_insert_input!
  ): number_of_primaryschools

  """
  insert data into the table: "number_of_secondaryschools"
  """
  insert_number_of_secondaryschools(
    """the rows to be inserted"""
    objects: [number_of_secondaryschools_insert_input!]!
  ): number_of_secondaryschools_mutation_response

  """
  insert a single row into the table: "number_of_secondaryschools"
  """
  insert_number_of_secondaryschools_one(
    """the row to be inserted"""
    object: number_of_secondaryschools_insert_input!
  ): number_of_secondaryschools

  """
  insert data into the table: "number_of_totalschools"
  """
  insert_number_of_totalschools(
    """the rows to be inserted"""
    objects: [number_of_totalschools_insert_input!]!
  ): number_of_totalschools_mutation_response

  """
  insert a single row into the table: "number_of_totalschools"
  """
  insert_number_of_totalschools_one(
    """the row to be inserted"""
    object: number_of_totalschools_insert_input!
  ): number_of_totalschools

  """
  insert data into the table: "odk_submission"
  """
  insert_odk_submission(
    """the rows to be inserted"""
    objects: [odk_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: odk_submission_on_conflict
  ): odk_submission_mutation_response

  """
  insert a single row into the table: "odk_submission"
  """
  insert_odk_submission_one(
    """the row to be inserted"""
    object: odk_submission_insert_input!

    """on conflict condition"""
    on_conflict: odk_submission_on_conflict
  ): odk_submission

  """
  insert data into the table: "old_assessment"
  """
  insert_old_assessment(
    """the rows to be inserted"""
    objects: [old_assessment_insert_input!]!

    """on conflict condition"""
    on_conflict: old_assessment_on_conflict
  ): old_assessment_mutation_response

  """
  insert a single row into the table: "old_assessment"
  """
  insert_old_assessment_one(
    """the row to be inserted"""
    object: old_assessment_insert_input!

    """on conflict condition"""
    on_conflict: old_assessment_on_conflict
  ): old_assessment

  """
  insert data into the table: "old_lo_master"
  """
  insert_old_lo_master(
    """the rows to be inserted"""
    objects: [old_lo_master_insert_input!]!

    """on conflict condition"""
    on_conflict: old_lo_master_on_conflict
  ): old_lo_master_mutation_response

  """
  insert a single row into the table: "old_lo_master"
  """
  insert_old_lo_master_one(
    """the row to be inserted"""
    object: old_lo_master_insert_input!

    """on conflict condition"""
    on_conflict: old_lo_master_on_conflict
  ): old_lo_master

  """
  insert data into the table: "old_lo_submissions"
  """
  insert_old_lo_submissions(
    """the rows to be inserted"""
    objects: [old_lo_submissions_insert_input!]!

    """on conflict condition"""
    on_conflict: old_lo_submissions_on_conflict
  ): old_lo_submissions_mutation_response

  """
  insert a single row into the table: "old_lo_submissions"
  """
  insert_old_lo_submissions_one(
    """the row to be inserted"""
    object: old_lo_submissions_insert_input!

    """on conflict condition"""
    on_conflict: old_lo_submissions_on_conflict
  ): old_lo_submissions

  """
  insert data into the table: "old_schools"
  """
  insert_old_schools(
    """the rows to be inserted"""
    objects: [old_schools_insert_input!]!

    """on conflict condition"""
    on_conflict: old_schools_on_conflict
  ): old_schools_mutation_response

  """
  insert a single row into the table: "old_schools"
  """
  insert_old_schools_one(
    """the row to be inserted"""
    object: old_schools_insert_input!

    """on conflict condition"""
    on_conflict: old_schools_on_conflict
  ): old_schools

  """
  insert data into the table: "pgbench_accounts"
  """
  insert_pgbench_accounts(
    """the rows to be inserted"""
    objects: [pgbench_accounts_insert_input!]!

    """on conflict condition"""
    on_conflict: pgbench_accounts_on_conflict
  ): pgbench_accounts_mutation_response

  """
  insert a single row into the table: "pgbench_accounts"
  """
  insert_pgbench_accounts_one(
    """the row to be inserted"""
    object: pgbench_accounts_insert_input!

    """on conflict condition"""
    on_conflict: pgbench_accounts_on_conflict
  ): pgbench_accounts

  """
  insert data into the table: "pgbench_branches"
  """
  insert_pgbench_branches(
    """the rows to be inserted"""
    objects: [pgbench_branches_insert_input!]!

    """on conflict condition"""
    on_conflict: pgbench_branches_on_conflict
  ): pgbench_branches_mutation_response

  """
  insert a single row into the table: "pgbench_branches"
  """
  insert_pgbench_branches_one(
    """the row to be inserted"""
    object: pgbench_branches_insert_input!

    """on conflict condition"""
    on_conflict: pgbench_branches_on_conflict
  ): pgbench_branches

  """
  insert data into the table: "pgbench_history"
  """
  insert_pgbench_history(
    """the rows to be inserted"""
    objects: [pgbench_history_insert_input!]!
  ): pgbench_history_mutation_response

  """
  insert a single row into the table: "pgbench_history"
  """
  insert_pgbench_history_one(
    """the row to be inserted"""
    object: pgbench_history_insert_input!
  ): pgbench_history

  """
  insert data into the table: "pgbench_tellers"
  """
  insert_pgbench_tellers(
    """the rows to be inserted"""
    objects: [pgbench_tellers_insert_input!]!

    """on conflict condition"""
    on_conflict: pgbench_tellers_on_conflict
  ): pgbench_tellers_mutation_response

  """
  insert a single row into the table: "pgbench_tellers"
  """
  insert_pgbench_tellers_one(
    """the row to be inserted"""
    object: pgbench_tellers_insert_input!

    """on conflict condition"""
    on_conflict: pgbench_tellers_on_conflict
  ): pgbench_tellers

  """
  insert data into the table: "preboard_results_2021"
  """
  insert_preboard_results_2021(
    """the rows to be inserted"""
    objects: [preboard_results_2021_insert_input!]!
  ): preboard_results_2021_mutation_response

  """
  insert a single row into the table: "preboard_results_2021"
  """
  insert_preboard_results_2021_one(
    """the row to be inserted"""
    object: preboard_results_2021_insert_input!
  ): preboard_results_2021

  """
  insert data into the table: "preboard_student_table2021"
  """
  insert_preboard_student_table2021(
    """the rows to be inserted"""
    objects: [preboard_student_table2021_insert_input!]!
  ): preboard_student_table2021_mutation_response

  """
  insert a single row into the table: "preboard_student_table2021"
  """
  insert_preboard_student_table2021_one(
    """the row to be inserted"""
    object: preboard_student_table2021_insert_input!
  ): preboard_student_table2021

  """
  insert data into the table: "previous_passwords"
  """
  insert_previous_passwords(
    """the rows to be inserted"""
    objects: [previous_passwords_insert_input!]!

    """on conflict condition"""
    on_conflict: previous_passwords_on_conflict
  ): previous_passwords_mutation_response

  """
  insert a single row into the table: "previous_passwords"
  """
  insert_previous_passwords_one(
    """the row to be inserted"""
    object: previous_passwords_insert_input!

    """on conflict condition"""
    on_conflict: previous_passwords_on_conflict
  ): previous_passwords

  """
  insert data into the table: "question"
  """
  insert_question(
    """the rows to be inserted"""
    objects: [question_insert_input!]!

    """on conflict condition"""
    on_conflict: question_on_conflict
  ): question_mutation_response

  """
  insert data into the table: "question_assessment"
  """
  insert_question_assessment(
    """the rows to be inserted"""
    objects: [question_assessment_insert_input!]!

    """on conflict condition"""
    on_conflict: question_assessment_on_conflict
  ): question_assessment_mutation_response

  """
  insert a single row into the table: "question_assessment"
  """
  insert_question_assessment_one(
    """the row to be inserted"""
    object: question_assessment_insert_input!

    """on conflict condition"""
    on_conflict: question_assessment_on_conflict
  ): question_assessment

  """
  insert data into the table: "question_bundle"
  """
  insert_question_bundle(
    """the rows to be inserted"""
    objects: [question_bundle_insert_input!]!

    """on conflict condition"""
    on_conflict: question_bundle_on_conflict
  ): question_bundle_mutation_response

  """
  insert a single row into the table: "question_bundle"
  """
  insert_question_bundle_one(
    """the row to be inserted"""
    object: question_bundle_insert_input!

    """on conflict condition"""
    on_conflict: question_bundle_on_conflict
  ): question_bundle

  """
  insert data into the table: "question_bundle_questions"
  """
  insert_question_bundle_questions(
    """the rows to be inserted"""
    objects: [question_bundle_questions_insert_input!]!

    """on conflict condition"""
    on_conflict: question_bundle_questions_on_conflict
  ): question_bundle_questions_mutation_response

  """
  insert a single row into the table: "question_bundle_questions"
  """
  insert_question_bundle_questions_one(
    """the row to be inserted"""
    object: question_bundle_questions_insert_input!

    """on conflict condition"""
    on_conflict: question_bundle_questions_on_conflict
  ): question_bundle_questions

  """
  insert a single row into the table: "question"
  """
  insert_question_one(
    """the row to be inserted"""
    object: question_insert_input!

    """on conflict condition"""
    on_conflict: question_on_conflict
  ): question

  """
  insert data into the table: "question_submission"
  """
  insert_question_submission(
    """the rows to be inserted"""
    objects: [question_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: question_submission_on_conflict
  ): question_submission_mutation_response

  """
  insert a single row into the table: "question_submission"
  """
  insert_question_submission_one(
    """the row to be inserted"""
    object: question_submission_insert_input!

    """on conflict condition"""
    on_conflict: question_submission_on_conflict
  ): question_submission

  """
  insert data into the table: "question_v2"
  """
  insert_question_v2(
    """the rows to be inserted"""
    objects: [question_v2_insert_input!]!

    """on conflict condition"""
    on_conflict: question_v2_on_conflict
  ): question_v2_mutation_response

  """
  insert a single row into the table: "question_v2"
  """
  insert_question_v2_one(
    """the row to be inserted"""
    object: question_v2_insert_input!

    """on conflict condition"""
    on_conflict: question_v2_on_conflict
  ): question_v2

  """
  insert data into the table: "questions_submission_expanded"
  """
  insert_questions_submission_expanded(
    """the rows to be inserted"""
    objects: [questions_submission_expanded_insert_input!]!

    """on conflict condition"""
    on_conflict: questions_submission_expanded_on_conflict
  ): questions_submission_expanded_mutation_response

  """
  insert a single row into the table: "questions_submission_expanded"
  """
  insert_questions_submission_expanded_one(
    """the row to be inserted"""
    object: questions_submission_expanded_insert_input!

    """on conflict condition"""
    on_conflict: questions_submission_expanded_on_conflict
  ): questions_submission_expanded

  """
  insert data into the table: "raw_application_daily_active_users"
  """
  insert_raw_application_daily_active_users(
    """the rows to be inserted"""
    objects: [raw_application_daily_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: raw_application_daily_active_users_on_conflict
  ): raw_application_daily_active_users_mutation_response

  """
  insert a single row into the table: "raw_application_daily_active_users"
  """
  insert_raw_application_daily_active_users_one(
    """the row to be inserted"""
    object: raw_application_daily_active_users_insert_input!

    """on conflict condition"""
    on_conflict: raw_application_daily_active_users_on_conflict
  ): raw_application_daily_active_users

  """
  insert data into the table: "raw_application_monthly_active_users"
  """
  insert_raw_application_monthly_active_users(
    """the rows to be inserted"""
    objects: [raw_application_monthly_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: raw_application_monthly_active_users_on_conflict
  ): raw_application_monthly_active_users_mutation_response

  """
  insert a single row into the table: "raw_application_monthly_active_users"
  """
  insert_raw_application_monthly_active_users_one(
    """the row to be inserted"""
    object: raw_application_monthly_active_users_insert_input!

    """on conflict condition"""
    on_conflict: raw_application_monthly_active_users_on_conflict
  ): raw_application_monthly_active_users

  """
  insert data into the table: "raw_global_daily_active_users"
  """
  insert_raw_global_daily_active_users(
    """the rows to be inserted"""
    objects: [raw_global_daily_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: raw_global_daily_active_users_on_conflict
  ): raw_global_daily_active_users_mutation_response

  """
  insert a single row into the table: "raw_global_daily_active_users"
  """
  insert_raw_global_daily_active_users_one(
    """the row to be inserted"""
    object: raw_global_daily_active_users_insert_input!

    """on conflict condition"""
    on_conflict: raw_global_daily_active_users_on_conflict
  ): raw_global_daily_active_users

  """
  insert data into the table: "raw_global_monthly_active_users"
  """
  insert_raw_global_monthly_active_users(
    """the rows to be inserted"""
    objects: [raw_global_monthly_active_users_insert_input!]!

    """on conflict condition"""
    on_conflict: raw_global_monthly_active_users_on_conflict
  ): raw_global_monthly_active_users_mutation_response

  """
  insert a single row into the table: "raw_global_monthly_active_users"
  """
  insert_raw_global_monthly_active_users_one(
    """the row to be inserted"""
    object: raw_global_monthly_active_users_insert_input!

    """on conflict condition"""
    on_conflict: raw_global_monthly_active_users_on_conflict
  ): raw_global_monthly_active_users

  """
  insert data into the table: "raw_logins"
  """
  insert_raw_logins(
    """the rows to be inserted"""
    objects: [raw_logins_insert_input!]!
  ): raw_logins_mutation_response

  """
  insert a single row into the table: "raw_logins"
  """
  insert_raw_logins_one(
    """the row to be inserted"""
    object: raw_logins_insert_input!
  ): raw_logins

  """
  insert data into the table: "refresh_tokens"
  """
  insert_refresh_tokens(
    """the rows to be inserted"""
    objects: [refresh_tokens_insert_input!]!

    """on conflict condition"""
    on_conflict: refresh_tokens_on_conflict
  ): refresh_tokens_mutation_response

  """
  insert a single row into the table: "refresh_tokens"
  """
  insert_refresh_tokens_one(
    """the row to be inserted"""
    object: refresh_tokens_insert_input!

    """on conflict condition"""
    on_conflict: refresh_tokens_on_conflict
  ): refresh_tokens

  """
  insert data into the table: "sample_test"
  """
  insert_sample_test(
    """the rows to be inserted"""
    objects: [sample_test_insert_input!]!

    """on conflict condition"""
    on_conflict: sample_test_on_conflict
  ): sample_test_mutation_response

  """
  insert a single row into the table: "sample_test"
  """
  insert_sample_test_one(
    """the row to be inserted"""
    object: sample_test_insert_input!

    """on conflict condition"""
    on_conflict: sample_test_on_conflict
  ): sample_test

  """
  insert data into the table: "school"
  """
  insert_school(
    """the rows to be inserted"""
    objects: [school_insert_input!]!

    """on conflict condition"""
    on_conflict: school_on_conflict
  ): school_mutation_response

  """
  insert data into the table: "school_cache"
  """
  insert_school_cache(
    """the rows to be inserted"""
    objects: [school_cache_insert_input!]!

    """on conflict condition"""
    on_conflict: school_cache_on_conflict
  ): school_cache_mutation_response

  """
  insert a single row into the table: "school_cache"
  """
  insert_school_cache_one(
    """the row to be inserted"""
    object: school_cache_insert_input!

    """on conflict condition"""
    on_conflict: school_cache_on_conflict
  ): school_cache

  """
  insert data into the table: "school_class_mismatch"
  """
  insert_school_class_mismatch(
    """the rows to be inserted"""
    objects: [school_class_mismatch_insert_input!]!
  ): school_class_mismatch_mutation_response

  """
  insert a single row into the table: "school_class_mismatch"
  """
  insert_school_class_mismatch_one(
    """the row to be inserted"""
    object: school_class_mismatch_insert_input!
  ): school_class_mismatch

  """
  insert data into the table: "school_grade"
  """
  insert_school_grade(
    """the rows to be inserted"""
    objects: [school_grade_insert_input!]!

    """on conflict condition"""
    on_conflict: school_grade_on_conflict
  ): school_grade_mutation_response

  """
  insert a single row into the table: "school_grade"
  """
  insert_school_grade_one(
    """the row to be inserted"""
    object: school_grade_insert_input!

    """on conflict condition"""
    on_conflict: school_grade_on_conflict
  ): school_grade

  """
  insert data into the table: "school_location_mapping"
  """
  insert_school_location_mapping(
    """the rows to be inserted"""
    objects: [school_location_mapping_insert_input!]!

    """on conflict condition"""
    on_conflict: school_location_mapping_on_conflict
  ): school_location_mapping_mutation_response

  """
  insert a single row into the table: "school_location_mapping"
  """
  insert_school_location_mapping_one(
    """the row to be inserted"""
    object: school_location_mapping_insert_input!

    """on conflict condition"""
    on_conflict: school_location_mapping_on_conflict
  ): school_location_mapping

  """
  insert a single row into the table: "school"
  """
  insert_school_one(
    """the row to be inserted"""
    object: school_insert_input!

    """on conflict condition"""
    on_conflict: school_on_conflict
  ): school

  """
  insert data into the table: "school_type_enrolment"
  """
  insert_school_type_enrolment(
    """the rows to be inserted"""
    objects: [school_type_enrolment_insert_input!]!
  ): school_type_enrolment_mutation_response

  """
  insert a single row into the table: "school_type_enrolment"
  """
  insert_school_type_enrolment_one(
    """the row to be inserted"""
    object: school_type_enrolment_insert_input!
  ): school_type_enrolment

  """
  insert data into the table: "school_type_udise_enrolment"
  """
  insert_school_type_udise_enrolment(
    """the rows to be inserted"""
    objects: [school_type_udise_enrolment_insert_input!]!
  ): school_type_udise_enrolment_mutation_response

  """
  insert a single row into the table: "school_type_udise_enrolment"
  """
  insert_school_type_udise_enrolment_one(
    """the row to be inserted"""
    object: school_type_udise_enrolment_insert_input!
  ): school_type_udise_enrolment

  """
  insert data into the table: "school_wise_daily_enrolment"
  """
  insert_school_wise_daily_enrolment(
    """the rows to be inserted"""
    objects: [school_wise_daily_enrolment_insert_input!]!

    """on conflict condition"""
    on_conflict: school_wise_daily_enrolment_on_conflict
  ): school_wise_daily_enrolment_mutation_response

  """
  insert a single row into the table: "school_wise_daily_enrolment"
  """
  insert_school_wise_daily_enrolment_one(
    """the row to be inserted"""
    object: school_wise_daily_enrolment_insert_input!

    """on conflict condition"""
    on_conflict: school_wise_daily_enrolment_on_conflict
  ): school_wise_daily_enrolment

  """
  insert data into the table: "schoolwise_student_enrolment"
  """
  insert_schoolwise_student_enrolment(
    """the rows to be inserted"""
    objects: [schoolwise_student_enrolment_insert_input!]!
  ): schoolwise_student_enrolment_mutation_response

  """
  insert a single row into the table: "schoolwise_student_enrolment"
  """
  insert_schoolwise_student_enrolment_one(
    """the row to be inserted"""
    object: schoolwise_student_enrolment_insert_input!
  ): schoolwise_student_enrolment

  """
  insert data into the table: "server_logroup"
  """
  insert_server_logroup(
    """the rows to be inserted"""
    objects: [server_logroup_insert_input!]!

    """on conflict condition"""
    on_conflict: server_logroup_on_conflict
  ): server_logroup_mutation_response

  """
  insert data into the table: "server_logroup_lo"
  """
  insert_server_logroup_lo(
    """the rows to be inserted"""
    objects: [server_logroup_lo_insert_input!]!

    """on conflict condition"""
    on_conflict: server_logroup_lo_on_conflict
  ): server_logroup_lo_mutation_response

  """
  insert a single row into the table: "server_logroup_lo"
  """
  insert_server_logroup_lo_one(
    """the row to be inserted"""
    object: server_logroup_lo_insert_input!

    """on conflict condition"""
    on_conflict: server_logroup_lo_on_conflict
  ): server_logroup_lo

  """
  insert a single row into the table: "server_logroup"
  """
  insert_server_logroup_one(
    """the row to be inserted"""
    object: server_logroup_insert_input!

    """on conflict condition"""
    on_conflict: server_logroup_on_conflict
  ): server_logroup

  """
  insert data into the table: "server_marksrange"
  """
  insert_server_marksrange(
    """the rows to be inserted"""
    objects: [server_marksrange_insert_input!]!

    """on conflict condition"""
    on_conflict: server_marksrange_on_conflict
  ): server_marksrange_mutation_response

  """
  insert a single row into the table: "server_marksrange"
  """
  insert_server_marksrange_one(
    """the row to be inserted"""
    object: server_marksrange_insert_input!

    """on conflict condition"""
    on_conflict: server_marksrange_on_conflict
  ): server_marksrange

  """
  insert data into the table: "server_questiongroup"
  """
  insert_server_questiongroup(
    """the rows to be inserted"""
    objects: [server_questiongroup_insert_input!]!

    """on conflict condition"""
    on_conflict: server_questiongroup_on_conflict
  ): server_questiongroup_mutation_response

  """
  insert a single row into the table: "server_questiongroup"
  """
  insert_server_questiongroup_one(
    """the row to be inserted"""
    object: server_questiongroup_insert_input!

    """on conflict condition"""
    on_conflict: server_questiongroup_on_conflict
  ): server_questiongroup

  """
  insert data into the table: "server_questiongroup_question"
  """
  insert_server_questiongroup_question(
    """the rows to be inserted"""
    objects: [server_questiongroup_question_insert_input!]!

    """on conflict condition"""
    on_conflict: server_questiongroup_question_on_conflict
  ): server_questiongroup_question_mutation_response

  """
  insert a single row into the table: "server_questiongroup_question"
  """
  insert_server_questiongroup_question_one(
    """the row to be inserted"""
    object: server_questiongroup_question_insert_input!

    """on conflict condition"""
    on_conflict: server_questiongroup_question_on_conflict
  ): server_questiongroup_question

  """
  insert data into the table: "silk_profile"
  """
  insert_silk_profile(
    """the rows to be inserted"""
    objects: [silk_profile_insert_input!]!

    """on conflict condition"""
    on_conflict: silk_profile_on_conflict
  ): silk_profile_mutation_response

  """
  insert a single row into the table: "silk_profile"
  """
  insert_silk_profile_one(
    """the row to be inserted"""
    object: silk_profile_insert_input!

    """on conflict condition"""
    on_conflict: silk_profile_on_conflict
  ): silk_profile

  """
  insert data into the table: "silk_profile_queries"
  """
  insert_silk_profile_queries(
    """the rows to be inserted"""
    objects: [silk_profile_queries_insert_input!]!

    """on conflict condition"""
    on_conflict: silk_profile_queries_on_conflict
  ): silk_profile_queries_mutation_response

  """
  insert a single row into the table: "silk_profile_queries"
  """
  insert_silk_profile_queries_one(
    """the row to be inserted"""
    object: silk_profile_queries_insert_input!

    """on conflict condition"""
    on_conflict: silk_profile_queries_on_conflict
  ): silk_profile_queries

  """
  insert data into the table: "silk_request"
  """
  insert_silk_request(
    """the rows to be inserted"""
    objects: [silk_request_insert_input!]!

    """on conflict condition"""
    on_conflict: silk_request_on_conflict
  ): silk_request_mutation_response

  """
  insert a single row into the table: "silk_request"
  """
  insert_silk_request_one(
    """the row to be inserted"""
    object: silk_request_insert_input!

    """on conflict condition"""
    on_conflict: silk_request_on_conflict
  ): silk_request

  """
  insert data into the table: "silk_response"
  """
  insert_silk_response(
    """the rows to be inserted"""
    objects: [silk_response_insert_input!]!

    """on conflict condition"""
    on_conflict: silk_response_on_conflict
  ): silk_response_mutation_response

  """
  insert a single row into the table: "silk_response"
  """
  insert_silk_response_one(
    """the row to be inserted"""
    object: silk_response_insert_input!

    """on conflict condition"""
    on_conflict: silk_response_on_conflict
  ): silk_response

  """
  insert data into the table: "silk_sqlquery"
  """
  insert_silk_sqlquery(
    """the rows to be inserted"""
    objects: [silk_sqlquery_insert_input!]!

    """on conflict condition"""
    on_conflict: silk_sqlquery_on_conflict
  ): silk_sqlquery_mutation_response

  """
  insert a single row into the table: "silk_sqlquery"
  """
  insert_silk_sqlquery_one(
    """the row to be inserted"""
    object: silk_sqlquery_insert_input!

    """on conflict condition"""
    on_conflict: silk_sqlquery_on_conflict
  ): silk_sqlquery

  """
  insert data into the table: "sms"
  """
  insert_sms(
    """the rows to be inserted"""
    objects: [sms_insert_input!]!

    """on conflict condition"""
    on_conflict: sms_on_conflict
  ): sms_mutation_response

  """
  insert data into the table: "sms_dag_reports"
  """
  insert_sms_dag_reports(
    """the rows to be inserted"""
    objects: [sms_dag_reports_insert_input!]!

    """on conflict condition"""
    on_conflict: sms_dag_reports_on_conflict
  ): sms_dag_reports_mutation_response

  """
  insert a single row into the table: "sms_dag_reports"
  """
  insert_sms_dag_reports_one(
    """the row to be inserted"""
    object: sms_dag_reports_insert_input!

    """on conflict condition"""
    on_conflict: sms_dag_reports_on_conflict
  ): sms_dag_reports

  """
  insert a single row into the table: "sms"
  """
  insert_sms_one(
    """the row to be inserted"""
    object: sms_insert_input!

    """on conflict condition"""
    on_conflict: sms_on_conflict
  ): sms

  """
  insert data into the table: "sms_student_attendance_mv"
  """
  insert_sms_student_attendance_mv(
    """the rows to be inserted"""
    objects: [sms_student_attendance_mv_insert_input!]!
  ): sms_student_attendance_mv_mutation_response

  """
  insert a single row into the table: "sms_student_attendance_mv"
  """
  insert_sms_student_attendance_mv_one(
    """the row to be inserted"""
    object: sms_student_attendance_mv_insert_input!
  ): sms_student_attendance_mv

  """
  insert data into the table: "ss_school_allocation_data"
  """
  insert_ss_school_allocation_data(
    """the rows to be inserted"""
    objects: [ss_school_allocation_data_insert_input!]!

    """on conflict condition"""
    on_conflict: ss_school_allocation_data_on_conflict
  ): ss_school_allocation_data_mutation_response

  """
  insert a single row into the table: "ss_school_allocation_data"
  """
  insert_ss_school_allocation_data_one(
    """the row to be inserted"""
    object: ss_school_allocation_data_insert_input!

    """on conflict condition"""
    on_conflict: ss_school_allocation_data_on_conflict
  ): ss_school_allocation_data

  """
  insert data into the table: "ss_school_allocation_quarter"
  """
  insert_ss_school_allocation_quarter(
    """the rows to be inserted"""
    objects: [ss_school_allocation_quarter_insert_input!]!

    """on conflict condition"""
    on_conflict: ss_school_allocation_quarter_on_conflict
  ): ss_school_allocation_quarter_mutation_response

  """
  insert a single row into the table: "ss_school_allocation_quarter"
  """
  insert_ss_school_allocation_quarter_one(
    """the row to be inserted"""
    object: ss_school_allocation_quarter_insert_input!

    """on conflict condition"""
    on_conflict: ss_school_allocation_quarter_on_conflict
  ): ss_school_allocation_quarter

  """
  insert data into the table: "state_edu_enrolment"
  """
  insert_state_edu_enrolment(
    """the rows to be inserted"""
    objects: [state_edu_enrolment_insert_input!]!
  ): state_edu_enrolment_mutation_response

  """
  insert a single row into the table: "state_edu_enrolment"
  """
  insert_state_edu_enrolment_one(
    """the row to be inserted"""
    object: state_edu_enrolment_insert_input!
  ): state_edu_enrolment

  """
  insert data into the table: "state_lo_list"
  """
  insert_state_lo_list(
    """the rows to be inserted"""
    objects: [state_lo_list_insert_input!]!
  ): state_lo_list_mutation_response

  """
  insert a single row into the table: "state_lo_list"
  """
  insert_state_lo_list_one(
    """the row to be inserted"""
    object: state_lo_list_insert_input!
  ): state_lo_list

  """
  insert data into the table: "static"
  """
  insert_static(
    """the rows to be inserted"""
    objects: [static_insert_input!]!

    """on conflict condition"""
    on_conflict: static_on_conflict
  ): static_mutation_response

  """
  insert a single row into the table: "static"
  """
  insert_static_one(
    """the row to be inserted"""
    object: static_insert_input!

    """on conflict condition"""
    on_conflict: static_on_conflict
  ): static

  """
  insert data into the table: "stream"
  """
  insert_stream(
    """the rows to be inserted"""
    objects: [stream_insert_input!]!

    """on conflict condition"""
    on_conflict: stream_on_conflict
  ): stream_mutation_response

  """
  insert data into the table: "stream_common_subject"
  """
  insert_stream_common_subject(
    """the rows to be inserted"""
    objects: [stream_common_subject_insert_input!]!

    """on conflict condition"""
    on_conflict: stream_common_subject_on_conflict
  ): stream_common_subject_mutation_response

  """
  insert a single row into the table: "stream_common_subject"
  """
  insert_stream_common_subject_one(
    """the row to be inserted"""
    object: stream_common_subject_insert_input!

    """on conflict condition"""
    on_conflict: stream_common_subject_on_conflict
  ): stream_common_subject

  """
  insert a single row into the table: "stream"
  """
  insert_stream_one(
    """the row to be inserted"""
    object: stream_insert_input!

    """on conflict condition"""
    on_conflict: stream_on_conflict
  ): stream

  """
  insert data into the table: "stream_optional_subjects_1"
  """
  insert_stream_optional_subjects_1(
    """the rows to be inserted"""
    objects: [stream_optional_subjects_1_insert_input!]!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_1_on_conflict
  ): stream_optional_subjects_1_mutation_response

  """
  insert a single row into the table: "stream_optional_subjects_1"
  """
  insert_stream_optional_subjects_1_one(
    """the row to be inserted"""
    object: stream_optional_subjects_1_insert_input!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_1_on_conflict
  ): stream_optional_subjects_1

  """
  insert data into the table: "stream_optional_subjects_2"
  """
  insert_stream_optional_subjects_2(
    """the rows to be inserted"""
    objects: [stream_optional_subjects_2_insert_input!]!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_2_on_conflict
  ): stream_optional_subjects_2_mutation_response

  """
  insert a single row into the table: "stream_optional_subjects_2"
  """
  insert_stream_optional_subjects_2_one(
    """the row to be inserted"""
    object: stream_optional_subjects_2_insert_input!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_2_on_conflict
  ): stream_optional_subjects_2

  """
  insert data into the table: "stream_optional_subjects_3"
  """
  insert_stream_optional_subjects_3(
    """the rows to be inserted"""
    objects: [stream_optional_subjects_3_insert_input!]!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_3_on_conflict
  ): stream_optional_subjects_3_mutation_response

  """
  insert a single row into the table: "stream_optional_subjects_3"
  """
  insert_stream_optional_subjects_3_one(
    """the row to be inserted"""
    object: stream_optional_subjects_3_insert_input!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_3_on_conflict
  ): stream_optional_subjects_3

  """
  insert data into the table: "stream_optional_subjects_4"
  """
  insert_stream_optional_subjects_4(
    """the rows to be inserted"""
    objects: [stream_optional_subjects_4_insert_input!]!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_4_on_conflict
  ): stream_optional_subjects_4_mutation_response

  """
  insert a single row into the table: "stream_optional_subjects_4"
  """
  insert_stream_optional_subjects_4_one(
    """the row to be inserted"""
    object: stream_optional_subjects_4_insert_input!

    """on conflict condition"""
    on_conflict: stream_optional_subjects_4_on_conflict
  ): stream_optional_subjects_4

  """
  insert data into the table: "student"
  """
  insert_student(
    """the rows to be inserted"""
    objects: [student_insert_input!]!

    """on conflict condition"""
    on_conflict: student_on_conflict
  ): student_mutation_response

  """
  insert data into the table: "student_content_share"
  """
  insert_student_content_share(
    """the rows to be inserted"""
    objects: [student_content_share_insert_input!]!

    """on conflict condition"""
    on_conflict: student_content_share_on_conflict
  ): student_content_share_mutation_response

  """
  insert a single row into the table: "student_content_share"
  """
  insert_student_content_share_one(
    """the row to be inserted"""
    object: student_content_share_insert_input!

    """on conflict condition"""
    on_conflict: student_content_share_on_conflict
  ): student_content_share

  """
  insert a single row into the table: "student"
  """
  insert_student_one(
    """the row to be inserted"""
    object: student_insert_input!

    """on conflict condition"""
    on_conflict: student_on_conflict
  ): student

  """
  insert data into the table: "student_subject"
  """
  insert_student_subject(
    """the rows to be inserted"""
    objects: [student_subject_insert_input!]!

    """on conflict condition"""
    on_conflict: student_subject_on_conflict
  ): student_subject_mutation_response

  """
  insert a single row into the table: "student_subject"
  """
  insert_student_subject_one(
    """the row to be inserted"""
    object: student_subject_insert_input!

    """on conflict condition"""
    on_conflict: student_subject_on_conflict
  ): student_subject

  """
  insert data into the table: "student_submission"
  """
  insert_student_submission(
    """the rows to be inserted"""
    objects: [student_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: student_submission_on_conflict
  ): student_submission_mutation_response

  """
  insert a single row into the table: "student_submission"
  """
  insert_student_submission_one(
    """the row to be inserted"""
    object: student_submission_insert_input!

    """on conflict condition"""
    on_conflict: student_submission_on_conflict
  ): student_submission

  """
  insert data into the table: "student_submission_v2"
  """
  insert_student_submission_v2(
    """the rows to be inserted"""
    objects: [student_submission_v2_insert_input!]!

    """on conflict condition"""
    on_conflict: student_submission_v2_on_conflict
  ): student_submission_v2_mutation_response

  """
  insert data into the table: "student_submission_v2_marks_submissions"
  """
  insert_student_submission_v2_marks_submissions(
    """the rows to be inserted"""
    objects: [student_submission_v2_marks_submissions_insert_input!]!

    """on conflict condition"""
    on_conflict: student_submission_v2_marks_submissions_on_conflict
  ): student_submission_v2_marks_submissions_mutation_response

  """
  insert a single row into the table: "student_submission_v2_marks_submissions"
  """
  insert_student_submission_v2_marks_submissions_one(
    """the row to be inserted"""
    object: student_submission_v2_marks_submissions_insert_input!

    """on conflict condition"""
    on_conflict: student_submission_v2_marks_submissions_on_conflict
  ): student_submission_v2_marks_submissions

  """
  insert a single row into the table: "student_submission_v2"
  """
  insert_student_submission_v2_one(
    """the row to be inserted"""
    object: student_submission_v2_insert_input!

    """on conflict condition"""
    on_conflict: student_submission_v2_on_conflict
  ): student_submission_v2

  """
  insert data into the table: "student_table_higher"
  """
  insert_student_table_higher(
    """the rows to be inserted"""
    objects: [student_table_higher_insert_input!]!
  ): student_table_higher_mutation_response

  """
  insert data into the table: "student_table_higher_2"
  """
  insert_student_table_higher_2(
    """the rows to be inserted"""
    objects: [student_table_higher_2_insert_input!]!
  ): student_table_higher_2_mutation_response

  """
  insert a single row into the table: "student_table_higher_2"
  """
  insert_student_table_higher_2_one(
    """the row to be inserted"""
    object: student_table_higher_2_insert_input!
  ): student_table_higher_2

  """
  insert a single row into the table: "student_table_higher"
  """
  insert_student_table_higher_one(
    """the row to be inserted"""
    object: student_table_higher_insert_input!
  ): student_table_higher

  """
  insert data into the table: "studentprofiles_cg"
  """
  insert_studentprofiles_cg(
    """the rows to be inserted"""
    objects: [studentprofiles_cg_insert_input!]!
  ): studentprofiles_cg_mutation_response

  """
  insert data into the table: "studentprofiles_cg_2"
  """
  insert_studentprofiles_cg_2(
    """the rows to be inserted"""
    objects: [studentprofiles_cg_2_insert_input!]!
  ): studentprofiles_cg_2_mutation_response

  """
  insert a single row into the table: "studentprofiles_cg_2"
  """
  insert_studentprofiles_cg_2_one(
    """the row to be inserted"""
    object: studentprofiles_cg_2_insert_input!
  ): studentprofiles_cg_2

  """
  insert a single row into the table: "studentprofiles_cg"
  """
  insert_studentprofiles_cg_one(
    """the row to be inserted"""
    object: studentprofiles_cg_insert_input!
  ): studentprofiles_cg

  """
  insert data into the table: "students_present"
  """
  insert_students_present(
    """the rows to be inserted"""
    objects: [students_present_insert_input!]!
  ): students_present_mutation_response

  """
  insert a single row into the table: "students_present"
  """
  insert_students_present_one(
    """the row to be inserted"""
    object: students_present_insert_input!
  ): students_present

  """
  insert data into the table: "subject"
  """
  insert_subject(
    """the rows to be inserted"""
    objects: [subject_insert_input!]!

    """on conflict condition"""
    on_conflict: subject_on_conflict
  ): subject_mutation_response

  """
  insert a single row into the table: "subject"
  """
  insert_subject_one(
    """the row to be inserted"""
    object: subject_insert_input!

    """on conflict condition"""
    on_conflict: subject_on_conflict
  ): subject

  """
  insert data into the table: "subject_submission"
  """
  insert_subject_submission(
    """the rows to be inserted"""
    objects: [subject_submission_insert_input!]!

    """on conflict condition"""
    on_conflict: subject_submission_on_conflict
  ): subject_submission_mutation_response

  """
  insert a single row into the table: "subject_submission"
  """
  insert_subject_submission_one(
    """the row to be inserted"""
    object: subject_submission_insert_input!

    """on conflict condition"""
    on_conflict: subject_submission_on_conflict
  ): subject_submission

  """
  insert data into the table: "subject_submission_selected_lo"
  """
  insert_subject_submission_selected_lo(
    """the rows to be inserted"""
    objects: [subject_submission_selected_lo_insert_input!]!

    """on conflict condition"""
    on_conflict: subject_submission_selected_lo_on_conflict
  ): subject_submission_selected_lo_mutation_response

  """
  insert a single row into the table: "subject_submission_selected_lo"
  """
  insert_subject_submission_selected_lo_one(
    """the row to be inserted"""
    object: subject_submission_selected_lo_insert_input!

    """on conflict condition"""
    on_conflict: subject_submission_selected_lo_on_conflict
  ): subject_submission_selected_lo

  """
  insert data into the table: "submission_summary"
  """
  insert_submission_summary(
    """the rows to be inserted"""
    objects: [submission_summary_insert_input!]!

    """on conflict condition"""
    on_conflict: submission_summary_on_conflict
  ): submission_summary_mutation_response

  """
  insert a single row into the table: "submission_summary"
  """
  insert_submission_summary_one(
    """the row to be inserted"""
    object: submission_summary_insert_input!

    """on conflict condition"""
    on_conflict: submission_summary_on_conflict
  ): submission_summary

  """
  insert data into the table: "submission_type"
  """
  insert_submission_type(
    """the rows to be inserted"""
    objects: [submission_type_insert_input!]!

    """on conflict condition"""
    on_conflict: submission_type_on_conflict
  ): submission_type_mutation_response

  """
  insert a single row into the table: "submission_type"
  """
  insert_submission_type_one(
    """the row to be inserted"""
    object: submission_type_insert_input!

    """on conflict condition"""
    on_conflict: submission_type_on_conflict
  ): submission_type

  """
  insert data into the table: "system_configuration"
  """
  insert_system_configuration(
    """the rows to be inserted"""
    objects: [system_configuration_insert_input!]!
  ): system_configuration_mutation_response

  """
  insert a single row into the table: "system_configuration"
  """
  insert_system_configuration_one(
    """the row to be inserted"""
    object: system_configuration_insert_input!
  ): system_configuration

  """
  insert data into the table: "teacher"
  """
  insert_teacher(
    """the rows to be inserted"""
    objects: [teacher_insert_input!]!

    """on conflict condition"""
    on_conflict: teacher_on_conflict
  ): teacher_mutation_response

  """
  insert data into the table: "teacher_attendance_status"
  """
  insert_teacher_attendance_status(
    """the rows to be inserted"""
    objects: [teacher_attendance_status_insert_input!]!

    """on conflict condition"""
    on_conflict: teacher_attendance_status_on_conflict
  ): teacher_attendance_status_mutation_response

  """
  insert a single row into the table: "teacher_attendance_status"
  """
  insert_teacher_attendance_status_one(
    """the row to be inserted"""
    object: teacher_attendance_status_insert_input!

    """on conflict condition"""
    on_conflict: teacher_attendance_status_on_conflict
  ): teacher_attendance_status

  """
  insert a single row into the table: "teacher"
  """
  insert_teacher_one(
    """the row to be inserted"""
    object: teacher_insert_input!

    """on conflict condition"""
    on_conflict: teacher_on_conflict
  ): teacher

  """
  insert data into the table: "teacher_registration_compliance"
  """
  insert_teacher_registration_compliance(
    """the rows to be inserted"""
    objects: [teacher_registration_compliance_insert_input!]!

    """on conflict condition"""
    on_conflict: teacher_registration_compliance_on_conflict
  ): teacher_registration_compliance_mutation_response

  """
  insert a single row into the table: "teacher_registration_compliance"
  """
  insert_teacher_registration_compliance_one(
    """the row to be inserted"""
    object: teacher_registration_compliance_insert_input!

    """on conflict condition"""
    on_conflict: teacher_registration_compliance_on_conflict
  ): teacher_registration_compliance

  """
  insert data into the table: "teacher_subjects"
  """
  insert_teacher_subjects(
    """the rows to be inserted"""
    objects: [teacher_subjects_insert_input!]!

    """on conflict condition"""
    on_conflict: teacher_subjects_on_conflict
  ): teacher_subjects_mutation_response

  """
  insert a single row into the table: "teacher_subjects"
  """
  insert_teacher_subjects_one(
    """the row to be inserted"""
    object: teacher_subjects_insert_input!

    """on conflict condition"""
    on_conflict: teacher_subjects_on_conflict
  ): teacher_subjects

  """
  insert data into the table: "tenants"
  """
  insert_tenants(
    """the rows to be inserted"""
    objects: [tenants_insert_input!]!

    """on conflict condition"""
    on_conflict: tenants_on_conflict
  ): tenants_mutation_response

  """
  insert a single row into the table: "tenants"
  """
  insert_tenants_one(
    """the row to be inserted"""
    object: tenants_insert_input!

    """on conflict condition"""
    on_conflict: tenants_on_conflict
  ): tenants

  """
  insert data into the table: "term1results2021"
  """
  insert_term1results2021(
    """the rows to be inserted"""
    objects: [term1results2021_insert_input!]!
  ): term1results2021_mutation_response

  """
  insert a single row into the table: "term1results2021"
  """
  insert_term1results2021_one(
    """the row to be inserted"""
    object: term1results2021_insert_input!
  ): term1results2021

  """
  insert data into the table: "term1results2021stream"
  """
  insert_term1results2021stream(
    """the rows to be inserted"""
    objects: [term1results2021stream_insert_input!]!
  ): term1results2021stream_mutation_response

  """
  insert a single row into the table: "term1results2021stream"
  """
  insert_term1results2021stream_one(
    """the row to be inserted"""
    object: term1results2021stream_insert_input!
  ): term1results2021stream

  """
  insert data into the table: "test_ku"
  """
  insert_test_ku(
    """the rows to be inserted"""
    objects: [test_ku_insert_input!]!

    """on conflict condition"""
    on_conflict: test_ku_on_conflict
  ): test_ku_mutation_response

  """
  insert a single row into the table: "test_ku"
  """
  insert_test_ku_one(
    """the row to be inserted"""
    object: test_ku_insert_input!

    """on conflict condition"""
    on_conflict: test_ku_on_conflict
  ): test_ku

  """
  insert data into the table: "test_telemetry"
  """
  insert_test_telemetry(
    """the rows to be inserted"""
    objects: [test_telemetry_insert_input!]!

    """on conflict condition"""
    on_conflict: test_telemetry_on_conflict
  ): test_telemetry_mutation_response

  """
  insert a single row into the table: "test_telemetry"
  """
  insert_test_telemetry_one(
    """the row to be inserted"""
    object: test_telemetry_insert_input!

    """on conflict condition"""
    on_conflict: test_telemetry_on_conflict
  ): test_telemetry

  """
  insert data into the table: "themes"
  """
  insert_themes(
    """the rows to be inserted"""
    objects: [themes_insert_input!]!

    """on conflict condition"""
    on_conflict: themes_on_conflict
  ): themes_mutation_response

  """
  insert a single row into the table: "themes"
  """
  insert_themes_one(
    """the row to be inserted"""
    object: themes_insert_input!

    """on conflict condition"""
    on_conflict: themes_on_conflict
  ): themes

  """
  insert data into the table: "tracking_elem"
  """
  insert_tracking_elem(
    """the rows to be inserted"""
    objects: [tracking_elem_insert_input!]!
  ): tracking_elem_mutation_response

  """
  insert a single row into the table: "tracking_elem"
  """
  insert_tracking_elem_one(
    """the row to be inserted"""
    object: tracking_elem_insert_input!
  ): tracking_elem

  """
  insert data into the table: "tracking_higher"
  """
  insert_tracking_higher(
    """the rows to be inserted"""
    objects: [tracking_higher_insert_input!]!
  ): tracking_higher_mutation_response

  """
  insert a single row into the table: "tracking_higher"
  """
  insert_tracking_higher_one(
    """the row to be inserted"""
    object: tracking_higher_insert_input!
  ): tracking_higher

  """
  insert data into the table: "unit_bundle"
  """
  insert_unit_bundle(
    """the rows to be inserted"""
    objects: [unit_bundle_insert_input!]!

    """on conflict condition"""
    on_conflict: unit_bundle_on_conflict
  ): unit_bundle_mutation_response

  """
  insert a single row into the table: "unit_bundle"
  """
  insert_unit_bundle_one(
    """the row to be inserted"""
    object: unit_bundle_insert_input!

    """on conflict condition"""
    on_conflict: unit_bundle_on_conflict
  ): unit_bundle

  """
  insert data into the table: "unit_bundle_units"
  """
  insert_unit_bundle_units(
    """the rows to be inserted"""
    objects: [unit_bundle_units_insert_input!]!

    """on conflict condition"""
    on_conflict: unit_bundle_units_on_conflict
  ): unit_bundle_units_mutation_response

  """
  insert a single row into the table: "unit_bundle_units"
  """
  insert_unit_bundle_units_one(
    """the row to be inserted"""
    object: unit_bundle_units_insert_input!

    """on conflict condition"""
    on_conflict: unit_bundle_units_on_conflict
  ): unit_bundle_units

  """
  insert data into the table: "unit_submission"
  """
  insert_unit_submission(
    """the rows to be inserted"""
    objects: [unit_submission_insert_input!]!
  ): unit_submission_mutation_response

  """
  insert a single row into the table: "unit_submission"
  """
  insert_unit_submission_one(
    """the row to be inserted"""
    object: unit_submission_insert_input!
  ): unit_submission

  """
  insert data into the table: "unit_v2"
  """
  insert_unit_v2(
    """the rows to be inserted"""
    objects: [unit_v2_insert_input!]!

    """on conflict condition"""
    on_conflict: unit_v2_on_conflict
  ): unit_v2_mutation_response

  """
  insert a single row into the table: "unit_v2"
  """
  insert_unit_v2_one(
    """the row to be inserted"""
    object: unit_v2_insert_input!

    """on conflict condition"""
    on_conflict: unit_v2_on_conflict
  ): unit_v2

  """
  insert data into the table: "user_action_logs"
  """
  insert_user_action_logs(
    """the rows to be inserted"""
    objects: [user_action_logs_insert_input!]!

    """on conflict condition"""
    on_conflict: user_action_logs_on_conflict
  ): user_action_logs_mutation_response

  """
  insert data into the table: "user_action_logs_applications"
  """
  insert_user_action_logs_applications(
    """the rows to be inserted"""
    objects: [user_action_logs_applications_insert_input!]!
  ): user_action_logs_applications_mutation_response

  """
  insert a single row into the table: "user_action_logs_applications"
  """
  insert_user_action_logs_applications_one(
    """the row to be inserted"""
    object: user_action_logs_applications_insert_input!
  ): user_action_logs_applications

  """
  insert a single row into the table: "user_action_logs"
  """
  insert_user_action_logs_one(
    """the row to be inserted"""
    object: user_action_logs_insert_input!

    """on conflict condition"""
    on_conflict: user_action_logs_on_conflict
  ): user_action_logs

  """
  insert data into the table: "user_action_reasons"
  """
  insert_user_action_reasons(
    """the rows to be inserted"""
    objects: [user_action_reasons_insert_input!]!

    """on conflict condition"""
    on_conflict: user_action_reasons_on_conflict
  ): user_action_reasons_mutation_response

  """
  insert a single row into the table: "user_action_reasons"
  """
  insert_user_action_reasons_one(
    """the row to be inserted"""
    object: user_action_reasons_insert_input!

    """on conflict condition"""
    on_conflict: user_action_reasons_on_conflict
  ): user_action_reasons

  """
  insert data into the table: "user_actions"
  """
  insert_user_actions(
    """the rows to be inserted"""
    objects: [user_actions_insert_input!]!

    """on conflict condition"""
    on_conflict: user_actions_on_conflict
  ): user_actions_mutation_response

  """
  insert a single row into the table: "user_actions"
  """
  insert_user_actions_one(
    """the row to be inserted"""
    object: user_actions_insert_input!

    """on conflict condition"""
    on_conflict: user_actions_on_conflict
  ): user_actions

  """
  insert data into the table: "user_comments"
  """
  insert_user_comments(
    """the rows to be inserted"""
    objects: [user_comments_insert_input!]!

    """on conflict condition"""
    on_conflict: user_comments_on_conflict
  ): user_comments_mutation_response

  """
  insert a single row into the table: "user_comments"
  """
  insert_user_comments_one(
    """the row to be inserted"""
    object: user_comments_insert_input!

    """on conflict condition"""
    on_conflict: user_comments_on_conflict
  ): user_comments

  """
  insert data into the table: "user_consents"
  """
  insert_user_consents(
    """the rows to be inserted"""
    objects: [user_consents_insert_input!]!

    """on conflict condition"""
    on_conflict: user_consents_on_conflict
  ): user_consents_mutation_response

  """
  insert data into the table: "user_consents_email_plus"
  """
  insert_user_consents_email_plus(
    """the rows to be inserted"""
    objects: [user_consents_email_plus_insert_input!]!

    """on conflict condition"""
    on_conflict: user_consents_email_plus_on_conflict
  ): user_consents_email_plus_mutation_response

  """
  insert a single row into the table: "user_consents_email_plus"
  """
  insert_user_consents_email_plus_one(
    """the row to be inserted"""
    object: user_consents_email_plus_insert_input!

    """on conflict condition"""
    on_conflict: user_consents_email_plus_on_conflict
  ): user_consents_email_plus

  """
  insert a single row into the table: "user_consents"
  """
  insert_user_consents_one(
    """the row to be inserted"""
    object: user_consents_insert_input!

    """on conflict condition"""
    on_conflict: user_consents_on_conflict
  ): user_consents

  """
  insert data into the table: "user_registrations"
  """
  insert_user_registrations(
    """the rows to be inserted"""
    objects: [user_registrations_insert_input!]!

    """on conflict condition"""
    on_conflict: user_registrations_on_conflict
  ): user_registrations_mutation_response

  """
  insert data into the table: "user_registrations_application_roles"
  """
  insert_user_registrations_application_roles(
    """the rows to be inserted"""
    objects: [user_registrations_application_roles_insert_input!]!

    """on conflict condition"""
    on_conflict: user_registrations_application_roles_on_conflict
  ): user_registrations_application_roles_mutation_response

  """
  insert a single row into the table: "user_registrations_application_roles"
  """
  insert_user_registrations_application_roles_one(
    """the row to be inserted"""
    object: user_registrations_application_roles_insert_input!

    """on conflict condition"""
    on_conflict: user_registrations_application_roles_on_conflict
  ): user_registrations_application_roles

  """
  insert a single row into the table: "user_registrations"
  """
  insert_user_registrations_one(
    """the row to be inserted"""
    object: user_registrations_insert_input!

    """on conflict condition"""
    on_conflict: user_registrations_on_conflict
  ): user_registrations

  """
  insert data into the table: "users"
  """
  insert_users(
    """the rows to be inserted"""
    objects: [users_insert_input!]!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users_mutation_response

  """
  insert a single row into the table: "users"
  """
  insert_users_one(
    """the row to be inserted"""
    object: users_insert_input!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users

  """
  insert data into the table: "version"
  """
  insert_version(
    """the rows to be inserted"""
    objects: [version_insert_input!]!
  ): version_mutation_response

  """
  insert a single row into the table: "version"
  """
  insert_version_one(
    """the row to be inserted"""
    object: version_insert_input!
  ): version

  """
  insert data into the table: "webhooks"
  """
  insert_webhooks(
    """the rows to be inserted"""
    objects: [webhooks_insert_input!]!

    """on conflict condition"""
    on_conflict: webhooks_on_conflict
  ): webhooks_mutation_response

  """
  insert data into the table: "webhooks_applications"
  """
  insert_webhooks_applications(
    """the rows to be inserted"""
    objects: [webhooks_applications_insert_input!]!

    """on conflict condition"""
    on_conflict: webhooks_applications_on_conflict
  ): webhooks_applications_mutation_response

  """
  insert a single row into the table: "webhooks_applications"
  """
  insert_webhooks_applications_one(
    """the row to be inserted"""
    object: webhooks_applications_insert_input!

    """on conflict condition"""
    on_conflict: webhooks_applications_on_conflict
  ): webhooks_applications

  """
  insert a single row into the table: "webhooks"
  """
  insert_webhooks_one(
    """the row to be inserted"""
    object: webhooks_insert_input!

    """on conflict condition"""
    on_conflict: webhooks_on_conflict
  ): webhooks

  """
  insert data into the table: "Week 17-24"
  """
  insert_week_17_24(
    """the rows to be inserted"""
    objects: [week_17_24_insert_input!]!
  ): week_17_24_mutation_response

  """
  insert a single row into the table: "Week 17-24"
  """
  insert_week_17_24_one(
    """the row to be inserted"""
    object: week_17_24_insert_input!
  ): week_17_24

  """
  insert data into the table: "Week 1-8"
  """
  insert_week_1_8(
    """the rows to be inserted"""
    objects: [week_1_8_insert_input!]!
  ): week_1_8_mutation_response

  """
  insert a single row into the table: "Week 1-8"
  """
  insert_week_1_8_one(
    """the row to be inserted"""
    object: week_1_8_insert_input!
  ): week_1_8

  """
  insert data into the table: "Week 9-16"
  """
  insert_week_9_16(
    """the rows to be inserted"""
    objects: [week_9_16_insert_input!]!
  ): week_9_16_mutation_response

  """
  insert a single row into the table: "Week 9-16"
  """
  insert_week_9_16_one(
    """the row to be inserted"""
    object: week_9_16_insert_input!
  ): week_9_16

  """
  update data of the table: "Quiz_beforeWeek21"
  """
  update_Quiz_beforeWeek21(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Quiz_beforeWeek21_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Quiz_beforeWeek21_set_input

    """filter the rows which have to be updated"""
    where: Quiz_beforeWeek21_bool_exp!
  ): Quiz_beforeWeek21_mutation_response

  """
  update data of the table: "Quiz_beforeWeek21_2"
  """
  update_Quiz_beforeWeek21_2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Quiz_beforeWeek21_2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Quiz_beforeWeek21_2_set_input

    """filter the rows which have to be updated"""
    where: Quiz_beforeWeek21_2_bool_exp!
  ): Quiz_beforeWeek21_2_mutation_response

  """
  update data of the table: "activeusers2"
  """
  update_activeusers2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: activeusers2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: activeusers2_set_input

    """filter the rows which have to be updated"""
    where: activeusers2_bool_exp!
  ): activeusers2_mutation_response

  """
  update data of the table: "application_daily_active_users"
  """
  update_application_daily_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: application_daily_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: application_daily_active_users_set_input

    """filter the rows which have to be updated"""
    where: application_daily_active_users_bool_exp!
  ): application_daily_active_users_mutation_response

  """
  update data of the table: "application_monthly_active_users"
  """
  update_application_monthly_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: application_monthly_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: application_monthly_active_users_set_input

    """filter the rows which have to be updated"""
    where: application_monthly_active_users_bool_exp!
  ): application_monthly_active_users_mutation_response

  """
  update data of the table: "application_registration_counts"
  """
  update_application_registration_counts(
    """increments the numeric columns with given value of the filtered values"""
    _inc: application_registration_counts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: application_registration_counts_set_input

    """filter the rows which have to be updated"""
    where: application_registration_counts_bool_exp!
  ): application_registration_counts_mutation_response

  """
  update data of the table: "application_roles"
  """
  update_application_roles(
    """increments the numeric columns with given value of the filtered values"""
    _inc: application_roles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: application_roles_set_input

    """filter the rows which have to be updated"""
    where: application_roles_bool_exp!
  ): application_roles_mutation_response

  """
  update single row of the table: "application_roles"
  """
  update_application_roles_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: application_roles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: application_roles_set_input

    """"""
    pk_columns: application_roles_pk_columns_input!
  ): application_roles

  """
  update data of the table: "applications"
  """
  update_applications(
    """increments the numeric columns with given value of the filtered values"""
    _inc: applications_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: applications_set_input

    """filter the rows which have to be updated"""
    where: applications_bool_exp!
  ): applications_mutation_response

  """
  update single row of the table: "applications"
  """
  update_applications_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: applications_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: applications_set_input

    """"""
    pk_columns: applications_pk_columns_input!
  ): applications

  """
  update data of the table: "assessment"
  """
  update_assessment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_set_input

    """filter the rows which have to be updated"""
    where: assessment_bool_exp!
  ): assessment_mutation_response

  """
  update data of the table: "assessment_au_lo_aggregate"
  """
  update_assessment_au_lo_aggregate(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_lo_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_lo_aggregate_set_input

    """filter the rows which have to be updated"""
    where: assessment_au_lo_aggregate_bool_exp!
  ): assessment_au_lo_aggregate_mutation_response

  """
  update single row of the table: "assessment_au_lo_aggregate"
  """
  update_assessment_au_lo_aggregate_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_lo_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_lo_aggregate_set_input
    pk_columns: assessment_au_lo_aggregate_pk_columns_input!
  ): assessment_au_lo_aggregate

  """
  update data of the table: "assessment_au_lo_aggregate_submission"
  """
  update_assessment_au_lo_aggregate_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_lo_aggregate_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_lo_aggregate_submission_set_input

    """filter the rows which have to be updated"""
    where: assessment_au_lo_aggregate_submission_bool_exp!
  ): assessment_au_lo_aggregate_submission_mutation_response

  """
  update single row of the table: "assessment_au_lo_aggregate_submission"
  """
  update_assessment_au_lo_aggregate_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_lo_aggregate_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_lo_aggregate_submission_set_input
    pk_columns: assessment_au_lo_aggregate_submission_pk_columns_input!
  ): assessment_au_lo_aggregate_submission

  """
  update data of the table: "assessment_au_question_aggregate"
  """
  update_assessment_au_question_aggregate(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_question_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_question_aggregate_set_input

    """filter the rows which have to be updated"""
    where: assessment_au_question_aggregate_bool_exp!
  ): assessment_au_question_aggregate_mutation_response

  """
  update single row of the table: "assessment_au_question_aggregate"
  """
  update_assessment_au_question_aggregate_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_question_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_question_aggregate_set_input
    pk_columns: assessment_au_question_aggregate_pk_columns_input!
  ): assessment_au_question_aggregate

  """
  update data of the table: "assessment_au_question_aggregate_submission"
  """
  update_assessment_au_question_aggregate_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_question_aggregate_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_question_aggregate_submission_set_input

    """filter the rows which have to be updated"""
    where: assessment_au_question_aggregate_submission_bool_exp!
  ): assessment_au_question_aggregate_submission_mutation_response

  """
  update single row of the table: "assessment_au_question_aggregate_submission"
  """
  update_assessment_au_question_aggregate_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_au_question_aggregate_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_au_question_aggregate_submission_set_input
    pk_columns: assessment_au_question_aggregate_submission_pk_columns_input!
  ): assessment_au_question_aggregate_submission

  """
  update data of the table: "assessment_builder"
  """
  update_assessment_builder(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_builder_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_builder_set_input

    """filter the rows which have to be updated"""
    where: assessment_builder_bool_exp!
  ): assessment_builder_mutation_response

  """
  update single row of the table: "assessment_builder"
  """
  update_assessment_builder_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_builder_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_builder_set_input
    pk_columns: assessment_builder_pk_columns_input!
  ): assessment_builder

  """
  update single row of the table: "assessment"
  """
  update_assessment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_set_input
    pk_columns: assessment_pk_columns_input!
  ): assessment

  """
  update data of the table: "assessment_cache"
  """
  update_assessment_cache(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assessment_cache_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assessment_cache_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assessment_cache_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assessment_cache_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_cache_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assessment_cache_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_cache_set_input

    """filter the rows which have to be updated"""
    where: assessment_cache_bool_exp!
  ): assessment_cache_mutation_response

  """
  update single row of the table: "assessment_cache"
  """
  update_assessment_cache_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assessment_cache_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assessment_cache_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assessment_cache_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assessment_cache_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_cache_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assessment_cache_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_cache_set_input
    pk_columns: assessment_cache_pk_columns_input!
  ): assessment_cache

  """
  update data of the table: "assessment_cache_v5"
  """
  update_assessment_cache_v5(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assessment_cache_v5_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assessment_cache_v5_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assessment_cache_v5_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assessment_cache_v5_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_cache_v5_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assessment_cache_v5_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_cache_v5_set_input

    """filter the rows which have to be updated"""
    where: assessment_cache_v5_bool_exp!
  ): assessment_cache_v5_mutation_response

  """
  update single row of the table: "assessment_cache_v5"
  """
  update_assessment_cache_v5_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assessment_cache_v5_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assessment_cache_v5_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assessment_cache_v5_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assessment_cache_v5_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_cache_v5_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assessment_cache_v5_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_cache_v5_set_input
    pk_columns: assessment_cache_v5_pk_columns_input!
  ): assessment_cache_v5

  """
  update data of the table: "assessment_category"
  """
  update_assessment_category(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_category_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_category_set_input

    """filter the rows which have to be updated"""
    where: assessment_category_bool_exp!
  ): assessment_category_mutation_response

  """
  update single row of the table: "assessment_category"
  """
  update_assessment_category_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_category_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_category_set_input
    pk_columns: assessment_category_pk_columns_input!
  ): assessment_category

  """
  update data of the table: "assessment_compliance_grade_aggregation"
  """
  update_assessment_compliance_grade_aggregation(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_compliance_grade_aggregation_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_compliance_grade_aggregation_set_input

    """filter the rows which have to be updated"""
    where: assessment_compliance_grade_aggregation_bool_exp!
  ): assessment_compliance_grade_aggregation_mutation_response

  """
  update data of the table: "assessment_components"
  """
  update_assessment_components(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_components_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_components_set_input

    """filter the rows which have to be updated"""
    where: assessment_components_bool_exp!
  ): assessment_components_mutation_response

  """
  update single row of the table: "assessment_components"
  """
  update_assessment_components_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_components_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_components_set_input
    pk_columns: assessment_components_pk_columns_input!
  ): assessment_components

  """
  update data of the table: "assessment_ep_grade"
  """
  update_assessment_ep_grade(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_grade_set_input

    """filter the rows which have to be updated"""
    where: assessment_ep_grade_bool_exp!
  ): assessment_ep_grade_mutation_response

  """
  update single row of the table: "assessment_ep_grade"
  """
  update_assessment_ep_grade_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_grade_set_input
    pk_columns: assessment_ep_grade_pk_columns_input!
  ): assessment_ep_grade

  """
  update data of the table: "assessment_ep_grade_submission"
  """
  update_assessment_ep_grade_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_grade_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_grade_submission_set_input

    """filter the rows which have to be updated"""
    where: assessment_ep_grade_submission_bool_exp!
  ): assessment_ep_grade_submission_mutation_response

  """
  update single row of the table: "assessment_ep_grade_submission"
  """
  update_assessment_ep_grade_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_grade_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_grade_submission_set_input
    pk_columns: assessment_ep_grade_submission_pk_columns_input!
  ): assessment_ep_grade_submission

  """
  update data of the table: "assessment_ep_marks"
  """
  update_assessment_ep_marks(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_marks_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_marks_set_input

    """filter the rows which have to be updated"""
    where: assessment_ep_marks_bool_exp!
  ): assessment_ep_marks_mutation_response

  """
  update single row of the table: "assessment_ep_marks"
  """
  update_assessment_ep_marks_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_marks_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_marks_set_input
    pk_columns: assessment_ep_marks_pk_columns_input!
  ): assessment_ep_marks

  """
  update data of the table: "assessment_ep_marks_submission"
  """
  update_assessment_ep_marks_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_marks_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_marks_submission_set_input

    """filter the rows which have to be updated"""
    where: assessment_ep_marks_submission_bool_exp!
  ): assessment_ep_marks_submission_mutation_response

  """
  update single row of the table: "assessment_ep_marks_submission"
  """
  update_assessment_ep_marks_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_ep_marks_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_ep_marks_submission_set_input
    pk_columns: assessment_ep_marks_submission_pk_columns_input!
  ): assessment_ep_marks_submission

  """
  update data of the table: "assessment_grade"
  """
  update_assessment_grade(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_grade_set_input

    """filter the rows which have to be updated"""
    where: assessment_grade_bool_exp!
  ): assessment_grade_mutation_response

  """
  update single row of the table: "assessment_grade"
  """
  update_assessment_grade_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_grade_set_input
    pk_columns: assessment_grade_pk_columns_input!
  ): assessment_grade

  """
  update data of the table: "assessment_grade_mapping"
  """
  update_assessment_grade_mapping(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assessment_grade_mapping_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assessment_grade_mapping_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assessment_grade_mapping_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assessment_grade_mapping_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_grade_mapping_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assessment_grade_mapping_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_grade_mapping_set_input

    """filter the rows which have to be updated"""
    where: assessment_grade_mapping_bool_exp!
  ): assessment_grade_mapping_mutation_response

  """
  update single row of the table: "assessment_grade_mapping"
  """
  update_assessment_grade_mapping_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assessment_grade_mapping_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assessment_grade_mapping_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assessment_grade_mapping_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assessment_grade_mapping_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_grade_mapping_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assessment_grade_mapping_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_grade_mapping_set_input
    pk_columns: assessment_grade_mapping_pk_columns_input!
  ): assessment_grade_mapping

  """
  update data of the table: "assessment_lo_bundles"
  """
  update_assessment_lo_bundles(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_lo_bundles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_lo_bundles_set_input

    """filter the rows which have to be updated"""
    where: assessment_lo_bundles_bool_exp!
  ): assessment_lo_bundles_mutation_response

  """
  update single row of the table: "assessment_lo_bundles"
  """
  update_assessment_lo_bundles_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_lo_bundles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_lo_bundles_set_input
    pk_columns: assessment_lo_bundles_pk_columns_input!
  ): assessment_lo_bundles

  """
  update data of the table: "assessment_question_bundles"
  """
  update_assessment_question_bundles(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_question_bundles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_question_bundles_set_input

    """filter the rows which have to be updated"""
    where: assessment_question_bundles_bool_exp!
  ): assessment_question_bundles_mutation_response

  """
  update single row of the table: "assessment_question_bundles"
  """
  update_assessment_question_bundles_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_question_bundles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_question_bundles_set_input
    pk_columns: assessment_question_bundles_pk_columns_input!
  ): assessment_question_bundles

  """
  update data of the table: "assessment_result"
  """
  update_assessment_result(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_result_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_result_set_input

    """filter the rows which have to be updated"""
    where: assessment_result_bool_exp!
  ): assessment_result_mutation_response

  """
  update single row of the table: "assessment_result"
  """
  update_assessment_result_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_result_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_result_set_input
    pk_columns: assessment_result_pk_columns_input!
  ): assessment_result

  """
  update data of the table: "assessment_stream"
  """
  update_assessment_stream(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_stream_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_stream_set_input

    """filter the rows which have to be updated"""
    where: assessment_stream_bool_exp!
  ): assessment_stream_mutation_response

  """
  update single row of the table: "assessment_stream"
  """
  update_assessment_stream_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_stream_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_stream_set_input
    pk_columns: assessment_stream_pk_columns_input!
  ): assessment_stream

  """
  update data of the table: "assessment_subjects"
  """
  update_assessment_subjects(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_subjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_subjects_set_input

    """filter the rows which have to be updated"""
    where: assessment_subjects_bool_exp!
  ): assessment_subjects_mutation_response

  """
  update single row of the table: "assessment_subjects"
  """
  update_assessment_subjects_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_subjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_subjects_set_input
    pk_columns: assessment_subjects_pk_columns_input!
  ): assessment_subjects

  """
  update data of the table: "assessment_type"
  """
  update_assessment_type(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_type_set_input

    """filter the rows which have to be updated"""
    where: assessment_type_bool_exp!
  ): assessment_type_mutation_response

  """
  update single row of the table: "assessment_type"
  """
  update_assessment_type_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_type_set_input
    pk_columns: assessment_type_pk_columns_input!
  ): assessment_type

  """
  update data of the table: "assessment_unit"
  """
  update_assessment_unit(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_set_input

    """filter the rows which have to be updated"""
    where: assessment_unit_bool_exp!
  ): assessment_unit_mutation_response

  """
  update data of the table: "assessment_unit_bundles"
  """
  update_assessment_unit_bundles(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_bundles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_bundles_set_input

    """filter the rows which have to be updated"""
    where: assessment_unit_bundles_bool_exp!
  ): assessment_unit_bundles_mutation_response

  """
  update single row of the table: "assessment_unit_bundles"
  """
  update_assessment_unit_bundles_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_bundles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_bundles_set_input
    pk_columns: assessment_unit_bundles_pk_columns_input!
  ): assessment_unit_bundles

  """
  update single row of the table: "assessment_unit"
  """
  update_assessment_unit_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_set_input
    pk_columns: assessment_unit_pk_columns_input!
  ): assessment_unit

  """
  update data of the table: "assessment_unit_selected_lo"
  """
  update_assessment_unit_selected_lo(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_selected_lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_selected_lo_set_input

    """filter the rows which have to be updated"""
    where: assessment_unit_selected_lo_bool_exp!
  ): assessment_unit_selected_lo_mutation_response

  """
  update single row of the table: "assessment_unit_selected_lo"
  """
  update_assessment_unit_selected_lo_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_selected_lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_selected_lo_set_input
    pk_columns: assessment_unit_selected_lo_pk_columns_input!
  ): assessment_unit_selected_lo

  """
  update data of the table: "assessment_unit_selected_question"
  """
  update_assessment_unit_selected_question(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_selected_question_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_selected_question_set_input

    """filter the rows which have to be updated"""
    where: assessment_unit_selected_question_bool_exp!
  ): assessment_unit_selected_question_mutation_response

  """
  update single row of the table: "assessment_unit_selected_question"
  """
  update_assessment_unit_selected_question_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_selected_question_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_selected_question_set_input
    pk_columns: assessment_unit_selected_question_pk_columns_input!
  ): assessment_unit_selected_question

  """
  update data of the table: "assessment_unit_selected_unit"
  """
  update_assessment_unit_selected_unit(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_selected_unit_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_selected_unit_set_input

    """filter the rows which have to be updated"""
    where: assessment_unit_selected_unit_bool_exp!
  ): assessment_unit_selected_unit_mutation_response

  """
  update single row of the table: "assessment_unit_selected_unit"
  """
  update_assessment_unit_selected_unit_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: assessment_unit_selected_unit_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assessment_unit_selected_unit_set_input
    pk_columns: assessment_unit_selected_unit_pk_columns_input!
  ): assessment_unit_selected_unit

  """
  update data of the table: "attendance"
  """
  update_attendance(
    """increments the numeric columns with given value of the filtered values"""
    _inc: attendance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attendance_set_input

    """filter the rows which have to be updated"""
    where: attendance_bool_exp!
  ): attendance_mutation_response

  """
  update single row of the table: "attendance"
  """
  update_attendance_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: attendance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attendance_set_input
    pk_columns: attendance_pk_columns_input!
  ): attendance

  """
  update data of the table: "attendance_sms_logs"
  """
  update_attendance_sms_logs(
    """increments the numeric columns with given value of the filtered values"""
    _inc: attendance_sms_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attendance_sms_logs_set_input

    """filter the rows which have to be updated"""
    where: attendance_sms_logs_bool_exp!
  ): attendance_sms_logs_mutation_response

  """
  update single row of the table: "attendance_sms_logs"
  """
  update_attendance_sms_logs_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: attendance_sms_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attendance_sms_logs_set_input
    pk_columns: attendance_sms_logs_pk_columns_input!
  ): attendance_sms_logs

  """
  update data of the table: "attendance_teacher"
  """
  update_attendance_teacher(
    """increments the numeric columns with given value of the filtered values"""
    _inc: attendance_teacher_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attendance_teacher_set_input

    """filter the rows which have to be updated"""
    where: attendance_teacher_bool_exp!
  ): attendance_teacher_mutation_response

  """
  update single row of the table: "attendance_teacher"
  """
  update_attendance_teacher_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: attendance_teacher_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attendance_teacher_set_input
    pk_columns: attendance_teacher_pk_columns_input!
  ): attendance_teacher

  """
  update data of the table: "audit_logs"
  """
  update_audit_logs(
    """increments the numeric columns with given value of the filtered values"""
    _inc: audit_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: audit_logs_set_input

    """filter the rows which have to be updated"""
    where: audit_logs_bool_exp!
  ): audit_logs_mutation_response

  """
  update single row of the table: "audit_logs"
  """
  update_audit_logs_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: audit_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: audit_logs_set_input

    """"""
    pk_columns: audit_logs_pk_columns_input!
  ): audit_logs

  """
  update data of the table: "auth_group"
  """
  update_auth_group(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_group_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_group_set_input

    """filter the rows which have to be updated"""
    where: auth_group_bool_exp!
  ): auth_group_mutation_response

  """
  update single row of the table: "auth_group"
  """
  update_auth_group_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_group_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_group_set_input
    pk_columns: auth_group_pk_columns_input!
  ): auth_group

  """
  update data of the table: "auth_group_permissions"
  """
  update_auth_group_permissions(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_group_permissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_group_permissions_set_input

    """filter the rows which have to be updated"""
    where: auth_group_permissions_bool_exp!
  ): auth_group_permissions_mutation_response

  """
  update single row of the table: "auth_group_permissions"
  """
  update_auth_group_permissions_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_group_permissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_group_permissions_set_input
    pk_columns: auth_group_permissions_pk_columns_input!
  ): auth_group_permissions

  """
  update data of the table: "auth_permission"
  """
  update_auth_permission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_permission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_permission_set_input

    """filter the rows which have to be updated"""
    where: auth_permission_bool_exp!
  ): auth_permission_mutation_response

  """
  update single row of the table: "auth_permission"
  """
  update_auth_permission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_permission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_permission_set_input
    pk_columns: auth_permission_pk_columns_input!
  ): auth_permission

  """
  update data of the table: "auth_user"
  """
  update_auth_user(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_user_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_user_set_input

    """filter the rows which have to be updated"""
    where: auth_user_bool_exp!
  ): auth_user_mutation_response

  """
  update single row of the table: "auth_user"
  """
  update_auth_user_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_user_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_user_set_input
    pk_columns: auth_user_pk_columns_input!
  ): auth_user

  """
  update data of the table: "auth_user_groups"
  """
  update_auth_user_groups(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_user_groups_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_user_groups_set_input

    """filter the rows which have to be updated"""
    where: auth_user_groups_bool_exp!
  ): auth_user_groups_mutation_response

  """
  update single row of the table: "auth_user_groups"
  """
  update_auth_user_groups_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_user_groups_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_user_groups_set_input
    pk_columns: auth_user_groups_pk_columns_input!
  ): auth_user_groups

  """
  update data of the table: "auth_user_user_permissions"
  """
  update_auth_user_user_permissions(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_user_user_permissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_user_user_permissions_set_input

    """filter the rows which have to be updated"""
    where: auth_user_user_permissions_bool_exp!
  ): auth_user_user_permissions_mutation_response

  """
  update single row of the table: "auth_user_user_permissions"
  """
  update_auth_user_user_permissions_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auth_user_user_permissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auth_user_user_permissions_set_input
    pk_columns: auth_user_user_permissions_pk_columns_input!
  ): auth_user_user_permissions

  """
  update data of the table: "authentication_keys"
  """
  update_authentication_keys(
    """increments the numeric columns with given value of the filtered values"""
    _inc: authentication_keys_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: authentication_keys_set_input

    """filter the rows which have to be updated"""
    where: authentication_keys_bool_exp!
  ): authentication_keys_mutation_response

  """
  update single row of the table: "authentication_keys"
  """
  update_authentication_keys_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: authentication_keys_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: authentication_keys_set_input

    """"""
    pk_columns: authentication_keys_pk_columns_input!
  ): authentication_keys

  """
  update data of the table: "breached_password_metrics"
  """
  update_breached_password_metrics(
    """increments the numeric columns with given value of the filtered values"""
    _inc: breached_password_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: breached_password_metrics_set_input

    """filter the rows which have to be updated"""
    where: breached_password_metrics_bool_exp!
  ): breached_password_metrics_mutation_response

  """
  update single row of the table: "breached_password_metrics"
  """
  update_breached_password_metrics_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: breached_password_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: breached_password_metrics_set_input

    """"""
    pk_columns: breached_password_metrics_pk_columns_input!
  ): breached_password_metrics

  """
  update data of the table: "bucketwiseenrolment"
  """
  update_bucketwiseenrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: bucketwiseenrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: bucketwiseenrolment_set_input

    """filter the rows which have to be updated"""
    where: bucketwiseenrolment_bool_exp!
  ): bucketwiseenrolment_mutation_response

  """
  update data of the table: "cdac_sms_input"
  """
  update_cdac_sms_input(
    """increments the numeric columns with given value of the filtered values"""
    _inc: cdac_sms_input_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cdac_sms_input_set_input

    """filter the rows which have to be updated"""
    where: cdac_sms_input_bool_exp!
  ): cdac_sms_input_mutation_response

  """
  update single row of the table: "cdac_sms_input"
  """
  update_cdac_sms_input_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: cdac_sms_input_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cdac_sms_input_set_input
    pk_columns: cdac_sms_input_pk_columns_input!
  ): cdac_sms_input

  """
  update data of the table: "celery_duplicate_remove"
  """
  update_celery_duplicate_remove(
    """increments the numeric columns with given value of the filtered values"""
    _inc: celery_duplicate_remove_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: celery_duplicate_remove_set_input

    """filter the rows which have to be updated"""
    where: celery_duplicate_remove_bool_exp!
  ): celery_duplicate_remove_mutation_response

  """
  update single row of the table: "celery_duplicate_remove"
  """
  update_celery_duplicate_remove_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: celery_duplicate_remove_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: celery_duplicate_remove_set_input
    pk_columns: celery_duplicate_remove_pk_columns_input!
  ): celery_duplicate_remove

  """
  update data of the table: "cg_hp_teacher_data"
  """
  update_cg_hp_teacher_data(
    """increments the numeric columns with given value of the filtered values"""
    _inc: cg_hp_teacher_data_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cg_hp_teacher_data_set_input

    """filter the rows which have to be updated"""
    where: cg_hp_teacher_data_bool_exp!
  ): cg_hp_teacher_data_mutation_response

  """
  update data of the table: "cg_to_state_list"
  """
  update_cg_to_state_list(
    """increments the numeric columns with given value of the filtered values"""
    _inc: cg_to_state_list_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cg_to_state_list_set_input

    """filter the rows which have to be updated"""
    where: cg_to_state_list_bool_exp!
  ): cg_to_state_list_mutation_response

  """
  update data of the table: "class_level_component_submission"
  """
  update_class_level_component_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: class_level_component_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_level_component_submission_set_input

    """filter the rows which have to be updated"""
    where: class_level_component_submission_bool_exp!
  ): class_level_component_submission_mutation_response

  """
  update single row of the table: "class_level_component_submission"
  """
  update_class_level_component_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: class_level_component_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_level_component_submission_set_input
    pk_columns: class_level_component_submission_pk_columns_input!
  ): class_level_component_submission

  """
  update data of the table: "class_submission"
  """
  update_class_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: class_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_submission_set_input

    """filter the rows which have to be updated"""
    where: class_submission_bool_exp!
  ): class_submission_mutation_response

  """
  update single row of the table: "class_submission"
  """
  update_class_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: class_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_submission_set_input
    pk_columns: class_submission_pk_columns_input!
  ): class_submission

  """
  update data of the table: "clean_speak_applications"
  """
  update_clean_speak_applications(
    """sets the columns of the filtered rows to the given values"""
    _set: clean_speak_applications_set_input

    """filter the rows which have to be updated"""
    where: clean_speak_applications_bool_exp!
  ): clean_speak_applications_mutation_response

  """
  update data of the table: "common_breached_passwords"
  """
  update_common_breached_passwords(
    """sets the columns of the filtered rows to the given values"""
    _set: common_breached_passwords_set_input

    """filter the rows which have to be updated"""
    where: common_breached_passwords_bool_exp!
  ): common_breached_passwords_mutation_response

  """
  update single row of the table: "common_breached_passwords"
  """
  update_common_breached_passwords_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: common_breached_passwords_set_input

    """"""
    pk_columns: common_breached_passwords_pk_columns_input!
  ): common_breached_passwords

  """
  update data of the table: "component"
  """
  update_component(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_set_input

    """filter the rows which have to be updated"""
    where: component_bool_exp!
  ): component_mutation_response

  """
  update single row of the table: "component"
  """
  update_component_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_set_input
    pk_columns: component_pk_columns_input!
  ): component

  """
  update data of the table: "component_subjects"
  """
  update_component_subjects(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_subjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_subjects_set_input

    """filter the rows which have to be updated"""
    where: component_subjects_bool_exp!
  ): component_subjects_mutation_response

  """
  update single row of the table: "component_subjects"
  """
  update_component_subjects_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_subjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_subjects_set_input
    pk_columns: component_subjects_pk_columns_input!
  ): component_subjects

  """
  update data of the table: "component_submission"
  """
  update_component_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_submission_set_input

    """filter the rows which have to be updated"""
    where: component_submission_bool_exp!
  ): component_submission_mutation_response

  """
  update single row of the table: "component_submission"
  """
  update_component_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_submission_set_input
    pk_columns: component_submission_pk_columns_input!
  ): component_submission

  """
  update data of the table: "component_type"
  """
  update_component_type(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_type_set_input

    """filter the rows which have to be updated"""
    where: component_type_bool_exp!
  ): component_type_mutation_response

  """
  update single row of the table: "component_type"
  """
  update_component_type_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: component_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: component_type_set_input
    pk_columns: component_type_pk_columns_input!
  ): component_type

  """
  update data of the table: "connectors"
  """
  update_connectors(
    """increments the numeric columns with given value of the filtered values"""
    _inc: connectors_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: connectors_set_input

    """filter the rows which have to be updated"""
    where: connectors_bool_exp!
  ): connectors_mutation_response

  """
  update single row of the table: "connectors"
  """
  update_connectors_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: connectors_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: connectors_set_input

    """"""
    pk_columns: connectors_pk_columns_input!
  ): connectors

  """
  update data of the table: "connectors_tenants"
  """
  update_connectors_tenants(
    """increments the numeric columns with given value of the filtered values"""
    _inc: connectors_tenants_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: connectors_tenants_set_input

    """filter the rows which have to be updated"""
    where: connectors_tenants_bool_exp!
  ): connectors_tenants_mutation_response

  """
  update single row of the table: "connectors_tenants"
  """
  update_connectors_tenants_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: connectors_tenants_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: connectors_tenants_set_input

    """"""
    pk_columns: connectors_tenants_pk_columns_input!
  ): connectors_tenants

  """
  update data of the table: "consents"
  """
  update_consents(
    """increments the numeric columns with given value of the filtered values"""
    _inc: consents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: consents_set_input

    """filter the rows which have to be updated"""
    where: consents_bool_exp!
  ): consents_mutation_response

  """
  update single row of the table: "consents"
  """
  update_consents_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: consents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: consents_set_input

    """"""
    pk_columns: consents_pk_columns_input!
  ): consents

  """
  update data of the table: "corporate_donor_devices"
  """
  update_corporate_donor_devices(
    """increments the numeric columns with given value of the filtered values"""
    _inc: corporate_donor_devices_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: corporate_donor_devices_set_input

    """filter the rows which have to be updated"""
    where: corporate_donor_devices_bool_exp!
  ): corporate_donor_devices_mutation_response

  """
  update single row of the table: "corporate_donor_devices"
  """
  update_corporate_donor_devices_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: corporate_donor_devices_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: corporate_donor_devices_set_input
    pk_columns: corporate_donor_devices_pk_columns_input!
  ): corporate_donor_devices

  """
  update data of the table: "dashboard_role_access_config"
  """
  update_dashboard_role_access_config(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_role_access_config_set_input

    """filter the rows which have to be updated"""
    where: dashboard_role_access_config_bool_exp!
  ): dashboard_role_access_config_mutation_response

  """
  update single row of the table: "dashboard_role_access_config"
  """
  update_dashboard_role_access_config_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_role_access_config_set_input
    pk_columns: dashboard_role_access_config_pk_columns_input!
  ): dashboard_role_access_config

  """
  update data of the table: "dashboard_userdashboardmodule"
  """
  update_dashboard_userdashboardmodule(
    """increments the numeric columns with given value of the filtered values"""
    _inc: dashboard_userdashboardmodule_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_userdashboardmodule_set_input

    """filter the rows which have to be updated"""
    where: dashboard_userdashboardmodule_bool_exp!
  ): dashboard_userdashboardmodule_mutation_response

  """
  update single row of the table: "dashboard_userdashboardmodule"
  """
  update_dashboard_userdashboardmodule_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: dashboard_userdashboardmodule_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_userdashboardmodule_set_input
    pk_columns: dashboard_userdashboardmodule_pk_columns_input!
  ): dashboard_userdashboardmodule

  """
  update data of the table: "data_sets"
  """
  update_data_sets(
    """increments the numeric columns with given value of the filtered values"""
    _inc: data_sets_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: data_sets_set_input

    """filter the rows which have to be updated"""
    where: data_sets_bool_exp!
  ): data_sets_mutation_response

  """
  update single row of the table: "data_sets"
  """
  update_data_sets_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: data_sets_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: data_sets_set_input

    """"""
    pk_columns: data_sets_pk_columns_input!
  ): data_sets

  """
  update data of the table: "deadline"
  """
  update_deadline(
    """increments the numeric columns with given value of the filtered values"""
    _inc: deadline_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: deadline_set_input

    """filter the rows which have to be updated"""
    where: deadline_bool_exp!
  ): deadline_mutation_response

  """
  update single row of the table: "deadline"
  """
  update_deadline_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: deadline_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: deadline_set_input
    pk_columns: deadline_pk_columns_input!
  ): deadline

  """
  update data of the table: "designation_scope_mapping"
  """
  update_designation_scope_mapping(
    """sets the columns of the filtered rows to the given values"""
    _set: designation_scope_mapping_set_input

    """filter the rows which have to be updated"""
    where: designation_scope_mapping_bool_exp!
  ): designation_scope_mapping_mutation_response

  """
  update single row of the table: "designation_scope_mapping"
  """
  update_designation_scope_mapping_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: designation_scope_mapping_set_input
    pk_columns: designation_scope_mapping_pk_columns_input!
  ): designation_scope_mapping

  """
  update data of the table: "device_demand_response"
  """
  update_device_demand_response(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_demand_response_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_demand_response_set_input

    """filter the rows which have to be updated"""
    where: device_demand_response_bool_exp!
  ): device_demand_response_mutation_response

  """
  update single row of the table: "device_demand_response"
  """
  update_device_demand_response_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_demand_response_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_demand_response_set_input
    pk_columns: device_demand_response_pk_columns_input!
  ): device_demand_response

  """
  update data of the table: "device_donation_corporates"
  """
  update_device_donation_corporates(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_donation_corporates_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_donation_corporates_set_input

    """filter the rows which have to be updated"""
    where: device_donation_corporates_bool_exp!
  ): device_donation_corporates_mutation_response

  """
  update single row of the table: "device_donation_corporates"
  """
  update_device_donation_corporates_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_donation_corporates_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_donation_corporates_set_input
    pk_columns: device_donation_corporates_pk_columns_input!
  ): device_donation_corporates

  """
  update data of the table: "device_donation_donor"
  """
  update_device_donation_donor(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_donation_donor_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_donation_donor_set_input

    """filter the rows which have to be updated"""
    where: device_donation_donor_bool_exp!
  ): device_donation_donor_mutation_response

  """
  update single row of the table: "device_donation_donor"
  """
  update_device_donation_donor_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_donation_donor_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_donation_donor_set_input
    pk_columns: device_donation_donor_pk_columns_input!
  ): device_donation_donor

  """
  update data of the table: "device_verification_records"
  """
  update_device_verification_records(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_verification_records_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_verification_records_set_input

    """filter the rows which have to be updated"""
    where: device_verification_records_bool_exp!
  ): device_verification_records_mutation_response

  """
  update single row of the table: "device_verification_records"
  """
  update_device_verification_records_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: device_verification_records_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: device_verification_records_set_input
    pk_columns: device_verification_records_pk_columns_input!
  ): device_verification_records

  """
  update data of the table: "django_admin_log"
  """
  update_django_admin_log(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_admin_log_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_admin_log_set_input

    """filter the rows which have to be updated"""
    where: django_admin_log_bool_exp!
  ): django_admin_log_mutation_response

  """
  update single row of the table: "django_admin_log"
  """
  update_django_admin_log_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_admin_log_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_admin_log_set_input
    pk_columns: django_admin_log_pk_columns_input!
  ): django_admin_log

  """
  update data of the table: "django_celery_results_chordcounter"
  """
  update_django_celery_results_chordcounter(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_celery_results_chordcounter_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_celery_results_chordcounter_set_input

    """filter the rows which have to be updated"""
    where: django_celery_results_chordcounter_bool_exp!
  ): django_celery_results_chordcounter_mutation_response

  """
  update single row of the table: "django_celery_results_chordcounter"
  """
  update_django_celery_results_chordcounter_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_celery_results_chordcounter_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_celery_results_chordcounter_set_input
    pk_columns: django_celery_results_chordcounter_pk_columns_input!
  ): django_celery_results_chordcounter

  """
  update data of the table: "django_celery_results_groupresult"
  """
  update_django_celery_results_groupresult(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_celery_results_groupresult_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_celery_results_groupresult_set_input

    """filter the rows which have to be updated"""
    where: django_celery_results_groupresult_bool_exp!
  ): django_celery_results_groupresult_mutation_response

  """
  update single row of the table: "django_celery_results_groupresult"
  """
  update_django_celery_results_groupresult_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_celery_results_groupresult_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_celery_results_groupresult_set_input
    pk_columns: django_celery_results_groupresult_pk_columns_input!
  ): django_celery_results_groupresult

  """
  update data of the table: "django_celery_results_taskresult"
  """
  update_django_celery_results_taskresult(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_celery_results_taskresult_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_celery_results_taskresult_set_input

    """filter the rows which have to be updated"""
    where: django_celery_results_taskresult_bool_exp!
  ): django_celery_results_taskresult_mutation_response

  """
  update single row of the table: "django_celery_results_taskresult"
  """
  update_django_celery_results_taskresult_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_celery_results_taskresult_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_celery_results_taskresult_set_input
    pk_columns: django_celery_results_taskresult_pk_columns_input!
  ): django_celery_results_taskresult

  """
  update data of the table: "django_content_type"
  """
  update_django_content_type(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_content_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_content_type_set_input

    """filter the rows which have to be updated"""
    where: django_content_type_bool_exp!
  ): django_content_type_mutation_response

  """
  update single row of the table: "django_content_type"
  """
  update_django_content_type_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_content_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_content_type_set_input
    pk_columns: django_content_type_pk_columns_input!
  ): django_content_type

  """
  update data of the table: "django_migrations"
  """
  update_django_migrations(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_migrations_set_input

    """filter the rows which have to be updated"""
    where: django_migrations_bool_exp!
  ): django_migrations_mutation_response

  """
  update single row of the table: "django_migrations"
  """
  update_django_migrations_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: django_migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: django_migrations_set_input
    pk_columns: django_migrations_pk_columns_input!
  ): django_migrations

  """
  update data of the table: "django_session"
  """
  update_django_session(
    """sets the columns of the filtered rows to the given values"""
    _set: django_session_set_input

    """filter the rows which have to be updated"""
    where: django_session_bool_exp!
  ): django_session_mutation_response

  """
  update single row of the table: "django_session"
  """
  update_django_session_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: django_session_set_input
    pk_columns: django_session_pk_columns_input!
  ): django_session

  """
  update data of the table: "duplicates"
  """
  update_duplicates(
    """increments the numeric columns with given value of the filtered values"""
    _inc: duplicates_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: duplicates_set_input

    """filter the rows which have to be updated"""
    where: duplicates_bool_exp!
  ): duplicates_mutation_response

  """
  update data of the table: "email_templates"
  """
  update_email_templates(
    """increments the numeric columns with given value of the filtered values"""
    _inc: email_templates_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: email_templates_set_input

    """filter the rows which have to be updated"""
    where: email_templates_bool_exp!
  ): email_templates_mutation_response

  """
  update single row of the table: "email_templates"
  """
  update_email_templates_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: email_templates_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: email_templates_set_input

    """"""
    pk_columns: email_templates_pk_columns_input!
  ): email_templates

  """
  update data of the table: "enroll_group"
  """
  update_enroll_group(
    """increments the numeric columns with given value of the filtered values"""
    _inc: enroll_group_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: enroll_group_set_input

    """filter the rows which have to be updated"""
    where: enroll_group_bool_exp!
  ): enroll_group_mutation_response

  """
  update data of the table: "enrollment"
  """
  update_enrollment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: enrollment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: enrollment_set_input

    """filter the rows which have to be updated"""
    where: enrollment_bool_exp!
  ): enrollment_mutation_response

  """
  update single row of the table: "enrollment"
  """
  update_enrollment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: enrollment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: enrollment_set_input
    pk_columns: enrollment_pk_columns_input!
  ): enrollment

  """
  update data of the table: "esamwadmatching"
  """
  update_esamwadmatching(
    """increments the numeric columns with given value of the filtered values"""
    _inc: esamwadmatching_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: esamwadmatching_set_input

    """filter the rows which have to be updated"""
    where: esamwadmatching_bool_exp!
  ): esamwadmatching_mutation_response

  """
  update data of the table: "evaluation_param"
  """
  update_evaluation_param(
    """increments the numeric columns with given value of the filtered values"""
    _inc: evaluation_param_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: evaluation_param_set_input

    """filter the rows which have to be updated"""
    where: evaluation_param_bool_exp!
  ): evaluation_param_mutation_response

  """
  update single row of the table: "evaluation_param"
  """
  update_evaluation_param_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: evaluation_param_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: evaluation_param_set_input
    pk_columns: evaluation_param_pk_columns_input!
  ): evaluation_param

  """
  update data of the table: "event_logs"
  """
  update_event_logs(
    """increments the numeric columns with given value of the filtered values"""
    _inc: event_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: event_logs_set_input

    """filter the rows which have to be updated"""
    where: event_logs_bool_exp!
  ): event_logs_mutation_response

  """
  update single row of the table: "event_logs"
  """
  update_event_logs_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: event_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: event_logs_set_input

    """"""
    pk_columns: event_logs_pk_columns_input!
  ): event_logs

  """
  update data of the table: "external_identifiers"
  """
  update_external_identifiers(
    """increments the numeric columns with given value of the filtered values"""
    _inc: external_identifiers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: external_identifiers_set_input

    """filter the rows which have to be updated"""
    where: external_identifiers_bool_exp!
  ): external_identifiers_mutation_response

  """
  update single row of the table: "external_identifiers"
  """
  update_external_identifiers_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: external_identifiers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: external_identifiers_set_input

    """"""
    pk_columns: external_identifiers_pk_columns_input!
  ): external_identifiers

  """
  update data of the table: "failed_logins"
  """
  update_failed_logins(
    """increments the numeric columns with given value of the filtered values"""
    _inc: failed_logins_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: failed_logins_set_input

    """filter the rows which have to be updated"""
    where: failed_logins_bool_exp!
  ): failed_logins_mutation_response

  """
  update data of the table: "families"
  """
  update_families(
    """increments the numeric columns with given value of the filtered values"""
    _inc: families_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: families_set_input

    """filter the rows which have to be updated"""
    where: families_bool_exp!
  ): families_mutation_response

  """
  update single row of the table: "families"
  """
  update_families_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: families_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: families_set_input

    """"""
    pk_columns: families_pk_columns_input!
  ): families

  """
  update data of the table: "federated_domains"
  """
  update_federated_domains(
    """sets the columns of the filtered rows to the given values"""
    _set: federated_domains_set_input

    """filter the rows which have to be updated"""
    where: federated_domains_bool_exp!
  ): federated_domains_mutation_response

  """
  update data of the table: "form_fields"
  """
  update_form_fields(
    """increments the numeric columns with given value of the filtered values"""
    _inc: form_fields_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: form_fields_set_input

    """filter the rows which have to be updated"""
    where: form_fields_bool_exp!
  ): form_fields_mutation_response

  """
  update single row of the table: "form_fields"
  """
  update_form_fields_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: form_fields_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: form_fields_set_input

    """"""
    pk_columns: form_fields_pk_columns_input!
  ): form_fields

  """
  update data of the table: "form_steps"
  """
  update_form_steps(
    """increments the numeric columns with given value of the filtered values"""
    _inc: form_steps_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: form_steps_set_input

    """filter the rows which have to be updated"""
    where: form_steps_bool_exp!
  ): form_steps_mutation_response

  """
  update single row of the table: "form_steps"
  """
  update_form_steps_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: form_steps_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: form_steps_set_input

    """"""
    pk_columns: form_steps_pk_columns_input!
  ): form_steps

  """
  update data of the table: "forms"
  """
  update_forms(
    """increments the numeric columns with given value of the filtered values"""
    _inc: forms_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: forms_set_input

    """filter the rows which have to be updated"""
    where: forms_bool_exp!
  ): forms_mutation_response

  """
  update single row of the table: "forms"
  """
  update_forms_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: forms_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: forms_set_input

    """"""
    pk_columns: forms_pk_columns_input!
  ): forms

  """
  update data of the table: "gender_cat_analysis"
  """
  update_gender_cat_analysis(
    """increments the numeric columns with given value of the filtered values"""
    _inc: gender_cat_analysis_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: gender_cat_analysis_set_input

    """filter the rows which have to be updated"""
    where: gender_cat_analysis_bool_exp!
  ): gender_cat_analysis_mutation_response

  """
  update data of the table: "genuine_profiles"
  """
  update_genuine_profiles(
    """increments the numeric columns with given value of the filtered values"""
    _inc: genuine_profiles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: genuine_profiles_set_input

    """filter the rows which have to be updated"""
    where: genuine_profiles_bool_exp!
  ): genuine_profiles_mutation_response

  """
  update data of the table: "global_daily_active_users"
  """
  update_global_daily_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: global_daily_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: global_daily_active_users_set_input

    """filter the rows which have to be updated"""
    where: global_daily_active_users_bool_exp!
  ): global_daily_active_users_mutation_response

  """
  update data of the table: "global_monthly_active_users"
  """
  update_global_monthly_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: global_monthly_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: global_monthly_active_users_set_input

    """filter the rows which have to be updated"""
    where: global_monthly_active_users_bool_exp!
  ): global_monthly_active_users_mutation_response

  """
  update data of the table: "global_registration_counts"
  """
  update_global_registration_counts(
    """increments the numeric columns with given value of the filtered values"""
    _inc: global_registration_counts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: global_registration_counts_set_input

    """filter the rows which have to be updated"""
    where: global_registration_counts_bool_exp!
  ): global_registration_counts_mutation_response

  """
  update data of the table: "grade"
  """
  update_grade(
    """increments the numeric columns with given value of the filtered values"""
    _inc: grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: grade_set_input

    """filter the rows which have to be updated"""
    where: grade_bool_exp!
  ): grade_mutation_response

  """
  update data of the table: "grade_assessment"
  """
  update_grade_assessment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: grade_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: grade_assessment_set_input

    """filter the rows which have to be updated"""
    where: grade_assessment_bool_exp!
  ): grade_assessment_mutation_response

  """
  update single row of the table: "grade_assessment"
  """
  update_grade_assessment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: grade_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: grade_assessment_set_input
    pk_columns: grade_assessment_pk_columns_input!
  ): grade_assessment

  """
  update single row of the table: "grade"
  """
  update_grade_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: grade_set_input
    pk_columns: grade_pk_columns_input!
  ): grade

  """
  update data of the table: "group_application_roles"
  """
  update_group_application_roles(
    """sets the columns of the filtered rows to the given values"""
    _set: group_application_roles_set_input

    """filter the rows which have to be updated"""
    where: group_application_roles_bool_exp!
  ): group_application_roles_mutation_response

  """
  update data of the table: "group_members"
  """
  update_group_members(
    """increments the numeric columns with given value of the filtered values"""
    _inc: group_members_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: group_members_set_input

    """filter the rows which have to be updated"""
    where: group_members_bool_exp!
  ): group_members_mutation_response

  """
  update single row of the table: "group_members"
  """
  update_group_members_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: group_members_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: group_members_set_input

    """"""
    pk_columns: group_members_pk_columns_input!
  ): group_members

  """
  update data of the table: "groups"
  """
  update_groups(
    """increments the numeric columns with given value of the filtered values"""
    _inc: groups_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: groups_set_input

    """filter the rows which have to be updated"""
    where: groups_bool_exp!
  ): groups_mutation_response

  """
  update single row of the table: "groups"
  """
  update_groups_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: groups_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: groups_set_input

    """"""
    pk_columns: groups_pk_columns_input!
  ): groups

  """
  update data of the table: "hourly_logins"
  """
  update_hourly_logins(
    """increments the numeric columns with given value of the filtered values"""
    _inc: hourly_logins_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: hourly_logins_set_input

    """filter the rows which have to be updated"""
    where: hourly_logins_bool_exp!
  ): hourly_logins_mutation_response

  """
  update data of the table: "idb_attendance_by_date_aggregate"
  """
  update_idb_attendance_by_date_aggregate(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_attendance_by_date_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_attendance_by_date_aggregate_set_input

    """filter the rows which have to be updated"""
    where: idb_attendance_by_date_aggregate_bool_exp!
  ): idb_attendance_by_date_aggregate_mutation_response

  """
  update data of the table: "idb_attendance_district_enrolment_percentage"
  """
  update_idb_attendance_district_enrolment_percentage(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_attendance_district_enrolment_percentage_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_attendance_district_enrolment_percentage_set_input

    """filter the rows which have to be updated"""
    where: idb_attendance_district_enrolment_percentage_bool_exp!
  ): idb_attendance_district_enrolment_percentage_mutation_response

  """
  update data of the table: "idb_block_wise_student_enrolment"
  """
  update_idb_block_wise_student_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_block_wise_student_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_block_wise_student_enrolment_set_input

    """filter the rows which have to be updated"""
    where: idb_block_wise_student_enrolment_bool_exp!
  ): idb_block_wise_student_enrolment_mutation_response

  """
  update data of the table: "idb_daily_enrolment_aggregate"
  """
  update_idb_daily_enrolment_aggregate(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_daily_enrolment_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_daily_enrolment_aggregate_set_input

    """filter the rows which have to be updated"""
    where: idb_daily_enrolment_aggregate_bool_exp!
  ): idb_daily_enrolment_aggregate_mutation_response

  """
  update data of the table: "idb_daily_total_attendance_percent_aggregate"
  """
  update_idb_daily_total_attendance_percent_aggregate(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_daily_total_attendance_percent_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_daily_total_attendance_percent_aggregate_set_input

    """filter the rows which have to be updated"""
    where: idb_daily_total_attendance_percent_aggregate_bool_exp!
  ): idb_daily_total_attendance_percent_aggregate_mutation_response

  """
  update data of the table: "idb_daily_total_attendance_percentage"
  """
  update_idb_daily_total_attendance_percentage(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_daily_total_attendance_percentage_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_daily_total_attendance_percentage_set_input

    """filter the rows which have to be updated"""
    where: idb_daily_total_attendance_percentage_bool_exp!
  ): idb_daily_total_attendance_percentage_mutation_response

  """
  update data of the table: "idb_daily_total_attendance_percentage_mv"
  """
  update_idb_daily_total_attendance_percentage_mv(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_daily_total_attendance_percentage_mv_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_daily_total_attendance_percentage_mv_set_input

    """filter the rows which have to be updated"""
    where: idb_daily_total_attendance_percentage_mv_bool_exp!
  ): idb_daily_total_attendance_percentage_mv_mutation_response

  """
  update data of the table: "idb_district_school_type_percentage"
  """
  update_idb_district_school_type_percentage(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_district_school_type_percentage_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_district_school_type_percentage_set_input

    """filter the rows which have to be updated"""
    where: idb_district_school_type_percentage_bool_exp!
  ): idb_district_school_type_percentage_mutation_response

  """
  update data of the table: "idb_district_wise_schools"
  """
  update_idb_district_wise_schools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_district_wise_schools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_district_wise_schools_set_input

    """filter the rows which have to be updated"""
    where: idb_district_wise_schools_bool_exp!
  ): idb_district_wise_schools_mutation_response

  """
  update data of the table: "idb_district_wise_student_enrolment"
  """
  update_idb_district_wise_student_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_district_wise_student_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_district_wise_student_enrolment_set_input

    """filter the rows which have to be updated"""
    where: idb_district_wise_student_enrolment_bool_exp!
  ): idb_district_wise_student_enrolment_mutation_response

  """
  update data of the table: "idb_enrolment_grade_wise_state"
  """
  update_idb_enrolment_grade_wise_state(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_enrolment_grade_wise_state_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_enrolment_grade_wise_state_set_input

    """filter the rows which have to be updated"""
    where: idb_enrolment_grade_wise_state_bool_exp!
  ): idb_enrolment_grade_wise_state_mutation_response

  """
  update data of the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  update_idb_student_attendance_attendance_final_by_date_grade(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_attendance_final_by_date_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_attendance_final_by_date_grade_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_attendance_final_by_date_grade_bool_exp!
  ): idb_student_attendance_attendance_final_by_date_grade_mutation_response

  """
  update data of the table: "idb_student_attendance_attendance_merged"
  """
  update_idb_student_attendance_attendance_merged(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_attendance_merged_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_attendance_merged_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_attendance_merged_bool_exp!
  ): idb_student_attendance_attendance_merged_mutation_response

  """
  update data of the table: "idb_student_attendance_attendance_present_aggregate"
  """
  update_idb_student_attendance_attendance_present_aggregate(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_attendance_present_aggregate_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_attendance_present_aggregate_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_attendance_present_aggregate_bool_exp!
  ): idb_student_attendance_attendance_present_aggregate_mutation_response

  """
  update data of the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  update_idb_student_attendance_attendance_present_marked_by_date(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_attendance_present_marked_by_date_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_attendance_present_marked_by_date_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_attendance_present_marked_by_date_bool_exp!
  ): idb_student_attendance_attendance_present_marked_by_date_mutation_response

  """
  update data of the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  update_idb_student_attendance_attendance_total_marked_by_date(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_attendance_total_marked_by_date_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_attendance_total_marked_by_date_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_attendance_total_marked_by_date_bool_exp!
  ): idb_student_attendance_attendance_total_marked_by_date_mutation_response

  """
  update data of the table: "idb_student_attendance_block_final"
  """
  update_idb_student_attendance_block_final(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_block_final_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_block_final_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_block_final_bool_exp!
  ): idb_student_attendance_block_final_mutation_response

  """
  update data of the table: "idb_student_attendance_block_final_enrolment"
  """
  update_idb_student_attendance_block_final_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_block_final_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_block_final_enrolment_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_block_final_enrolment_bool_exp!
  ): idb_student_attendance_block_final_enrolment_mutation_response

  """
  update data of the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  update_idb_student_attendance_block_level_daily_present_marked(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_block_level_daily_present_marked_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_block_level_daily_present_marked_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_block_level_daily_present_marked_bool_exp!
  ): idb_student_attendance_block_level_daily_present_marked_mutation_response

  """
  update data of the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  update_idb_student_attendance_block_level_daily_total_marked(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_block_level_daily_total_marked_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_block_level_daily_total_marked_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_block_level_daily_total_marked_bool_exp!
  ): idb_student_attendance_block_level_daily_total_marked_mutation_response

  """
  update data of the table: "idb_student_attendance_compliance_district_wise"
  """
  update_idb_student_attendance_compliance_district_wise(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_compliance_district_wise_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_compliance_district_wise_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_compliance_district_wise_bool_exp!
  ): idb_student_attendance_compliance_district_wise_mutation_response

  """
  update data of the table: "idb_student_attendance_compliance_district_wise_final"
  """
  update_idb_student_attendance_compliance_district_wise_final(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_compliance_district_wise_final_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_compliance_district_wise_final_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_compliance_district_wise_final_bool_exp!
  ): idb_student_attendance_compliance_district_wise_final_mutation_response

  """
  update data of the table: "idb_student_attendance_compliance_school_wise"
  """
  update_idb_student_attendance_compliance_school_wise(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_compliance_school_wise_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_compliance_school_wise_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_compliance_school_wise_bool_exp!
  ): idb_student_attendance_compliance_school_wise_mutation_response

  """
  update data of the table: "idb_student_attendance_district_final"
  """
  update_idb_student_attendance_district_final(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_district_final_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_district_final_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_district_final_bool_exp!
  ): idb_student_attendance_district_final_mutation_response

  """
  update data of the table: "idb_student_attendance_district_final_enrolment"
  """
  update_idb_student_attendance_district_final_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_district_final_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_district_final_enrolment_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_district_final_enrolment_bool_exp!
  ): idb_student_attendance_district_final_enrolment_mutation_response

  """
  update data of the table: "idb_student_attendance_district_present_marked_by_date"
  """
  update_idb_student_attendance_district_present_marked_by_date(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_district_present_marked_by_date_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_district_present_marked_by_date_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_district_present_marked_by_date_bool_exp!
  ): idb_student_attendance_district_present_marked_by_date_mutation_response

  """
  update data of the table: "idb_student_attendance_district_total_marked_by_date"
  """
  update_idb_student_attendance_district_total_marked_by_date(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_district_total_marked_by_date_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_district_total_marked_by_date_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_district_total_marked_by_date_bool_exp!
  ): idb_student_attendance_district_total_marked_by_date_mutation_response

  """
  update data of the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  update_idb_student_attendance_final_grade_wise_with_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_final_grade_wise_with_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_final_grade_wise_with_enrolment_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp!
  ): idb_student_attendance_final_grade_wise_with_enrolment_mutation_response

  """
  update data of the table: "idb_student_attendance_present_school_wise"
  """
  update_idb_student_attendance_present_school_wise(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_present_school_wise_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_present_school_wise_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_present_school_wise_bool_exp!
  ): idb_student_attendance_present_school_wise_mutation_response

  """
  update data of the table: "idb_student_attendance_school_wise_final"
  """
  update_idb_student_attendance_school_wise_final(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_school_wise_final_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_school_wise_final_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_school_wise_final_bool_exp!
  ): idb_student_attendance_school_wise_final_mutation_response

  """
  update data of the table: "idb_student_attendance_total_school_wise"
  """
  update_idb_student_attendance_total_school_wise(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_student_attendance_total_school_wise_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_student_attendance_total_school_wise_set_input

    """filter the rows which have to be updated"""
    where: idb_student_attendance_total_school_wise_bool_exp!
  ): idb_student_attendance_total_school_wise_mutation_response

  """
  update data of the table: "idb_total_state_student_enrolment"
  """
  update_idb_total_state_student_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: idb_total_state_student_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: idb_total_state_student_enrolment_set_input

    """filter the rows which have to be updated"""
    where: idb_total_state_student_enrolment_bool_exp!
  ): idb_total_state_student_enrolment_mutation_response

  """
  update data of the table: "identities"
  """
  update_identities(
    """increments the numeric columns with given value of the filtered values"""
    _inc: identities_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: identities_set_input

    """filter the rows which have to be updated"""
    where: identities_bool_exp!
  ): identities_mutation_response

  """
  update single row of the table: "identities"
  """
  update_identities_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: identities_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: identities_set_input

    """"""
    pk_columns: identities_pk_columns_input!
  ): identities

  """
  update data of the table: "identity_providers"
  """
  update_identity_providers(
    """increments the numeric columns with given value of the filtered values"""
    _inc: identity_providers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: identity_providers_set_input

    """filter the rows which have to be updated"""
    where: identity_providers_bool_exp!
  ): identity_providers_mutation_response

  """
  update data of the table: "identity_providers_applications"
  """
  update_identity_providers_applications(
    """sets the columns of the filtered rows to the given values"""
    _set: identity_providers_applications_set_input

    """filter the rows which have to be updated"""
    where: identity_providers_applications_bool_exp!
  ): identity_providers_applications_mutation_response

  """
  update single row of the table: "identity_providers"
  """
  update_identity_providers_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: identity_providers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: identity_providers_set_input

    """"""
    pk_columns: identity_providers_pk_columns_input!
  ): identity_providers

  """
  update data of the table: "instance"
  """
  update_instance(
    """sets the columns of the filtered rows to the given values"""
    _set: instance_set_input

    """filter the rows which have to be updated"""
    where: instance_bool_exp!
  ): instance_mutation_response

  """
  update data of the table: "integrations"
  """
  update_integrations(
    """sets the columns of the filtered rows to the given values"""
    _set: integrations_set_input

    """filter the rows which have to be updated"""
    where: integrations_bool_exp!
  ): integrations_mutation_response

  """
  update data of the table: "jet_bookmark"
  """
  update_jet_bookmark(
    """increments the numeric columns with given value of the filtered values"""
    _inc: jet_bookmark_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: jet_bookmark_set_input

    """filter the rows which have to be updated"""
    where: jet_bookmark_bool_exp!
  ): jet_bookmark_mutation_response

  """
  update single row of the table: "jet_bookmark"
  """
  update_jet_bookmark_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: jet_bookmark_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: jet_bookmark_set_input
    pk_columns: jet_bookmark_pk_columns_input!
  ): jet_bookmark

  """
  update data of the table: "jet_pinnedapplication"
  """
  update_jet_pinnedapplication(
    """increments the numeric columns with given value of the filtered values"""
    _inc: jet_pinnedapplication_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: jet_pinnedapplication_set_input

    """filter the rows which have to be updated"""
    where: jet_pinnedapplication_bool_exp!
  ): jet_pinnedapplication_mutation_response

  """
  update single row of the table: "jet_pinnedapplication"
  """
  update_jet_pinnedapplication_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: jet_pinnedapplication_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: jet_pinnedapplication_set_input
    pk_columns: jet_pinnedapplication_pk_columns_input!
  ): jet_pinnedapplication

  """
  update data of the table: "keys"
  """
  update_keys(
    """increments the numeric columns with given value of the filtered values"""
    _inc: keys_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: keys_set_input

    """filter the rows which have to be updated"""
    where: keys_bool_exp!
  ): keys_mutation_response

  """
  update single row of the table: "keys"
  """
  update_keys_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: keys_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: keys_set_input

    """"""
    pk_columns: keys_pk_columns_input!
  ): keys

  """
  update data of the table: "lambdas"
  """
  update_lambdas(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lambdas_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lambdas_set_input

    """filter the rows which have to be updated"""
    where: lambdas_bool_exp!
  ): lambdas_mutation_response

  """
  update single row of the table: "lambdas"
  """
  update_lambdas_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lambdas_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lambdas_set_input

    """"""
    pk_columns: lambdas_pk_columns_input!
  ): lambdas

  """
  update data of the table: "lo"
  """
  update_lo(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_set_input

    """filter the rows which have to be updated"""
    where: lo_bool_exp!
  ): lo_mutation_response

  """
  update data of the table: "lo_assessment"
  """
  update_lo_assessment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_assessment_set_input

    """filter the rows which have to be updated"""
    where: lo_assessment_bool_exp!
  ): lo_assessment_mutation_response

  """
  update single row of the table: "lo_assessment"
  """
  update_lo_assessment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_assessment_set_input
    pk_columns: lo_assessment_pk_columns_input!
  ): lo_assessment

  """
  update data of the table: "lo_bundle"
  """
  update_lo_bundle(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: lo_bundle_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: lo_bundle_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: lo_bundle_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: lo_bundle_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_bundle_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: lo_bundle_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_bundle_set_input

    """filter the rows which have to be updated"""
    where: lo_bundle_bool_exp!
  ): lo_bundle_mutation_response

  """
  update single row of the table: "lo_bundle"
  """
  update_lo_bundle_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: lo_bundle_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: lo_bundle_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: lo_bundle_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: lo_bundle_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_bundle_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: lo_bundle_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_bundle_set_input
    pk_columns: lo_bundle_pk_columns_input!
  ): lo_bundle

  """
  update data of the table: "lo_bundle_los"
  """
  update_lo_bundle_los(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_bundle_los_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_bundle_los_set_input

    """filter the rows which have to be updated"""
    where: lo_bundle_los_bool_exp!
  ): lo_bundle_los_mutation_response

  """
  update single row of the table: "lo_bundle_los"
  """
  update_lo_bundle_los_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_bundle_los_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_bundle_los_set_input
    pk_columns: lo_bundle_los_pk_columns_input!
  ): lo_bundle_los

  """
  update single row of the table: "lo"
  """
  update_lo_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_set_input
    pk_columns: lo_pk_columns_input!
  ): lo

  """
  update data of the table: "lo_submission"
  """
  update_lo_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_submission_set_input

    """filter the rows which have to be updated"""
    where: lo_submission_bool_exp!
  ): lo_submission_mutation_response

  """
  update single row of the table: "lo_submission"
  """
  update_lo_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_submission_set_input
    pk_columns: lo_submission_pk_columns_input!
  ): lo_submission

  """
  update data of the table: "lo_table"
  """
  update_lo_table(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_table_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_table_set_input

    """filter the rows which have to be updated"""
    where: lo_table_bool_exp!
  ): lo_table_mutation_response

  """
  update data of the table: "lo_table2"
  """
  update_lo_table2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_table2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_table2_set_input

    """filter the rows which have to be updated"""
    where: lo_table2_bool_exp!
  ): lo_table2_mutation_response

  """
  update data of the table: "lo_v2"
  """
  update_lo_v2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_v2_set_input

    """filter the rows which have to be updated"""
    where: lo_v2_bool_exp!
  ): lo_v2_mutation_response

  """
  update single row of the table: "lo_v2"
  """
  update_lo_v2_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: lo_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: lo_v2_set_input
    pk_columns: lo_v2_pk_columns_input!
  ): lo_v2

  """
  update data of the table: "location"
  """
  update_location(
    """increments the numeric columns with given value of the filtered values"""
    _inc: location_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: location_set_input

    """filter the rows which have to be updated"""
    where: location_bool_exp!
  ): location_mutation_response

  """
  update single row of the table: "location"
  """
  update_location_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: location_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: location_set_input
    pk_columns: location_pk_columns_input!
  ): location

  """
  update data of the table: "locks"
  """
  update_locks(
    """increments the numeric columns with given value of the filtered values"""
    _inc: locks_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: locks_set_input

    """filter the rows which have to be updated"""
    where: locks_bool_exp!
  ): locks_mutation_response

  """
  update single row of the table: "locks"
  """
  update_locks_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: locks_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: locks_set_input

    """"""
    pk_columns: locks_pk_columns_input!
  ): locks

  """
  update data of the table: "mapping"
  """
  update_mapping(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mapping_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mapping_set_input

    """filter the rows which have to be updated"""
    where: mapping_bool_exp!
  ): mapping_mutation_response

  """
  update single row of the table: "mapping"
  """
  update_mapping_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mapping_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mapping_set_input
    pk_columns: mapping_pk_columns_input!
  ): mapping

  """
  update data of the table: "mapping_details"
  """
  update_mapping_details(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: mapping_details_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: mapping_details_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: mapping_details_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: mapping_details_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: mapping_details_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: mapping_details_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: mapping_details_set_input

    """filter the rows which have to be updated"""
    where: mapping_details_bool_exp!
  ): mapping_details_mutation_response

  """
  update single row of the table: "mapping_details"
  """
  update_mapping_details_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: mapping_details_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: mapping_details_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: mapping_details_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: mapping_details_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: mapping_details_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: mapping_details_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: mapping_details_set_input
    pk_columns: mapping_details_pk_columns_input!
  ): mapping_details

  """
  update data of the table: "mapping_submission"
  """
  update_mapping_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mapping_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mapping_submission_set_input

    """filter the rows which have to be updated"""
    where: mapping_submission_bool_exp!
  ): mapping_submission_mutation_response

  """
  update single row of the table: "mapping_submission"
  """
  update_mapping_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mapping_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mapping_submission_set_input
    pk_columns: mapping_submission_pk_columns_input!
  ): mapping_submission

  """
  update data of the table: "master_attendance"
  """
  update_master_attendance(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_attendance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_attendance_set_input

    """filter the rows which have to be updated"""
    where: master_attendance_bool_exp!
  ): master_attendance_mutation_response

  """
  update data of the table: "master_presentstudents"
  """
  update_master_presentstudents(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_presentstudents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_presentstudents_set_input

    """filter the rows which have to be updated"""
    where: master_presentstudents_bool_exp!
  ): master_presentstudents_mutation_response

  """
  update data of the table: "master_presentstudents1"
  """
  update_master_presentstudents1(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_presentstudents1_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_presentstudents1_set_input

    """filter the rows which have to be updated"""
    where: master_presentstudents1_bool_exp!
  ): master_presentstudents1_mutation_response

  """
  update data of the table: "master_record"
  """
  update_master_record(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_record_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_record_set_input

    """filter the rows which have to be updated"""
    where: master_record_bool_exp!
  ): master_record_mutation_response

  """
  update data of the table: "master_students"
  """
  update_master_students(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_students_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_students_set_input

    """filter the rows which have to be updated"""
    where: master_students_bool_exp!
  ): master_students_mutation_response

  """
  update data of the table: "master_table"
  """
  update_master_table(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_table_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_table_set_input

    """filter the rows which have to be updated"""
    where: master_table_bool_exp!
  ): master_table_mutation_response

  """
  update data of the table: "master_table_higher2"
  """
  update_master_table_higher2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: master_table_higher2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: master_table_higher2_set_input

    """filter the rows which have to be updated"""
    where: master_table_higher2_bool_exp!
  ): master_table_higher2_mutation_response

  """
  update data of the table: "masterstudents"
  """
  update_masterstudents(
    """increments the numeric columns with given value of the filtered values"""
    _inc: masterstudents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: masterstudents_set_input

    """filter the rows which have to be updated"""
    where: masterstudents_bool_exp!
  ): masterstudents_mutation_response

  """
  update data of the table: "matchingteachernos"
  """
  update_matchingteachernos(
    """increments the numeric columns with given value of the filtered values"""
    _inc: matchingteachernos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: matchingteachernos_set_input

    """filter the rows which have to be updated"""
    where: matchingteachernos_bool_exp!
  ): matchingteachernos_mutation_response

  """
  update data of the table: "migrations"
  """
  update_migrations(
    """increments the numeric columns with given value of the filtered values"""
    _inc: migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: migrations_set_input

    """filter the rows which have to be updated"""
    where: migrations_bool_exp!
  ): migrations_mutation_response

  """
  update single row of the table: "migrations"
  """
  update_migrations_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: migrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: migrations_set_input

    """"""
    pk_columns: migrations_pk_columns_input!
  ): migrations

  """
  update data of the table: "mvintegrateddb_totalschools"
  """
  update_mvintegrateddb_totalschools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mvintegrateddb_totalschools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mvintegrateddb_totalschools_set_input

    """filter the rows which have to be updated"""
    where: mvintegrateddb_totalschools_bool_exp!
  ): mvintegrateddb_totalschools_mutation_response

  """
  update data of the table: "mystudent_testperformance"
  """
  update_mystudent_testperformance(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mystudent_testperformance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mystudent_testperformance_set_input

    """filter the rows which have to be updated"""
    where: mystudent_testperformance_bool_exp!
  ): mystudent_testperformance_mutation_response

  """
  update single row of the table: "mystudent_testperformance"
  """
  update_mystudent_testperformance_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mystudent_testperformance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mystudent_testperformance_set_input
    pk_columns: mystudent_testperformance_pk_columns_input!
  ): mystudent_testperformance

  """
  update data of the table: "no_of_profiles"
  """
  update_no_of_profiles(
    """increments the numeric columns with given value of the filtered values"""
    _inc: no_of_profiles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: no_of_profiles_set_input

    """filter the rows which have to be updated"""
    where: no_of_profiles_bool_exp!
  ): no_of_profiles_mutation_response

  """
  update data of the table: "nodes"
  """
  update_nodes(
    """increments the numeric columns with given value of the filtered values"""
    _inc: nodes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: nodes_set_input

    """filter the rows which have to be updated"""
    where: nodes_bool_exp!
  ): nodes_mutation_response

  """
  update single row of the table: "nodes"
  """
  update_nodes_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: nodes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: nodes_set_input

    """"""
    pk_columns: nodes_pk_columns_input!
  ): nodes

  """
  update data of the table: "notification"
  """
  update_notification(
    """increments the numeric columns with given value of the filtered values"""
    _inc: notification_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: notification_set_input

    """filter the rows which have to be updated"""
    where: notification_bool_exp!
  ): notification_mutation_response

  """
  update single row of the table: "notification"
  """
  update_notification_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: notification_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: notification_set_input
    pk_columns: notification_pk_columns_input!
  ): notification

  """
  update data of the table: "number_of_highschools"
  """
  update_number_of_highschools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: number_of_highschools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: number_of_highschools_set_input

    """filter the rows which have to be updated"""
    where: number_of_highschools_bool_exp!
  ): number_of_highschools_mutation_response

  """
  update data of the table: "number_of_middleschools"
  """
  update_number_of_middleschools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: number_of_middleschools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: number_of_middleschools_set_input

    """filter the rows which have to be updated"""
    where: number_of_middleschools_bool_exp!
  ): number_of_middleschools_mutation_response

  """
  update data of the table: "number_of_primaryschools"
  """
  update_number_of_primaryschools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: number_of_primaryschools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: number_of_primaryschools_set_input

    """filter the rows which have to be updated"""
    where: number_of_primaryschools_bool_exp!
  ): number_of_primaryschools_mutation_response

  """
  update data of the table: "number_of_secondaryschools"
  """
  update_number_of_secondaryschools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: number_of_secondaryschools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: number_of_secondaryschools_set_input

    """filter the rows which have to be updated"""
    where: number_of_secondaryschools_bool_exp!
  ): number_of_secondaryschools_mutation_response

  """
  update data of the table: "number_of_totalschools"
  """
  update_number_of_totalschools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: number_of_totalschools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: number_of_totalschools_set_input

    """filter the rows which have to be updated"""
    where: number_of_totalschools_bool_exp!
  ): number_of_totalschools_mutation_response

  """
  update data of the table: "odk_submission"
  """
  update_odk_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: odk_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: odk_submission_set_input

    """filter the rows which have to be updated"""
    where: odk_submission_bool_exp!
  ): odk_submission_mutation_response

  """
  update single row of the table: "odk_submission"
  """
  update_odk_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: odk_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: odk_submission_set_input
    pk_columns: odk_submission_pk_columns_input!
  ): odk_submission

  """
  update data of the table: "old_assessment"
  """
  update_old_assessment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_assessment_set_input

    """filter the rows which have to be updated"""
    where: old_assessment_bool_exp!
  ): old_assessment_mutation_response

  """
  update single row of the table: "old_assessment"
  """
  update_old_assessment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_assessment_set_input
    pk_columns: old_assessment_pk_columns_input!
  ): old_assessment

  """
  update data of the table: "old_lo_master"
  """
  update_old_lo_master(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_lo_master_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_lo_master_set_input

    """filter the rows which have to be updated"""
    where: old_lo_master_bool_exp!
  ): old_lo_master_mutation_response

  """
  update single row of the table: "old_lo_master"
  """
  update_old_lo_master_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_lo_master_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_lo_master_set_input
    pk_columns: old_lo_master_pk_columns_input!
  ): old_lo_master

  """
  update data of the table: "old_lo_submissions"
  """
  update_old_lo_submissions(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_lo_submissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_lo_submissions_set_input

    """filter the rows which have to be updated"""
    where: old_lo_submissions_bool_exp!
  ): old_lo_submissions_mutation_response

  """
  update single row of the table: "old_lo_submissions"
  """
  update_old_lo_submissions_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_lo_submissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_lo_submissions_set_input
    pk_columns: old_lo_submissions_pk_columns_input!
  ): old_lo_submissions

  """
  update data of the table: "old_schools"
  """
  update_old_schools(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_schools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_schools_set_input

    """filter the rows which have to be updated"""
    where: old_schools_bool_exp!
  ): old_schools_mutation_response

  """
  update single row of the table: "old_schools"
  """
  update_old_schools_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: old_schools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: old_schools_set_input
    pk_columns: old_schools_pk_columns_input!
  ): old_schools

  """
  update data of the table: "pgbench_accounts"
  """
  update_pgbench_accounts(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_accounts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_accounts_set_input

    """filter the rows which have to be updated"""
    where: pgbench_accounts_bool_exp!
  ): pgbench_accounts_mutation_response

  """
  update single row of the table: "pgbench_accounts"
  """
  update_pgbench_accounts_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_accounts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_accounts_set_input
    pk_columns: pgbench_accounts_pk_columns_input!
  ): pgbench_accounts

  """
  update data of the table: "pgbench_branches"
  """
  update_pgbench_branches(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_branches_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_branches_set_input

    """filter the rows which have to be updated"""
    where: pgbench_branches_bool_exp!
  ): pgbench_branches_mutation_response

  """
  update single row of the table: "pgbench_branches"
  """
  update_pgbench_branches_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_branches_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_branches_set_input
    pk_columns: pgbench_branches_pk_columns_input!
  ): pgbench_branches

  """
  update data of the table: "pgbench_history"
  """
  update_pgbench_history(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_history_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_history_set_input

    """filter the rows which have to be updated"""
    where: pgbench_history_bool_exp!
  ): pgbench_history_mutation_response

  """
  update data of the table: "pgbench_tellers"
  """
  update_pgbench_tellers(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_tellers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_tellers_set_input

    """filter the rows which have to be updated"""
    where: pgbench_tellers_bool_exp!
  ): pgbench_tellers_mutation_response

  """
  update single row of the table: "pgbench_tellers"
  """
  update_pgbench_tellers_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pgbench_tellers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pgbench_tellers_set_input
    pk_columns: pgbench_tellers_pk_columns_input!
  ): pgbench_tellers

  """
  update data of the table: "preboard_results_2021"
  """
  update_preboard_results_2021(
    """increments the numeric columns with given value of the filtered values"""
    _inc: preboard_results_2021_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preboard_results_2021_set_input

    """filter the rows which have to be updated"""
    where: preboard_results_2021_bool_exp!
  ): preboard_results_2021_mutation_response

  """
  update data of the table: "preboard_student_table2021"
  """
  update_preboard_student_table2021(
    """increments the numeric columns with given value of the filtered values"""
    _inc: preboard_student_table2021_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preboard_student_table2021_set_input

    """filter the rows which have to be updated"""
    where: preboard_student_table2021_bool_exp!
  ): preboard_student_table2021_mutation_response

  """
  update data of the table: "previous_passwords"
  """
  update_previous_passwords(
    """increments the numeric columns with given value of the filtered values"""
    _inc: previous_passwords_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: previous_passwords_set_input

    """filter the rows which have to be updated"""
    where: previous_passwords_bool_exp!
  ): previous_passwords_mutation_response

  """
  update data of the table: "question"
  """
  update_question(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_set_input

    """filter the rows which have to be updated"""
    where: question_bool_exp!
  ): question_mutation_response

  """
  update data of the table: "question_assessment"
  """
  update_question_assessment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_assessment_set_input

    """filter the rows which have to be updated"""
    where: question_assessment_bool_exp!
  ): question_assessment_mutation_response

  """
  update single row of the table: "question_assessment"
  """
  update_question_assessment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_assessment_set_input
    pk_columns: question_assessment_pk_columns_input!
  ): question_assessment

  """
  update data of the table: "question_bundle"
  """
  update_question_bundle(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: question_bundle_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: question_bundle_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: question_bundle_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: question_bundle_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: question_bundle_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: question_bundle_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_bundle_set_input

    """filter the rows which have to be updated"""
    where: question_bundle_bool_exp!
  ): question_bundle_mutation_response

  """
  update single row of the table: "question_bundle"
  """
  update_question_bundle_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: question_bundle_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: question_bundle_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: question_bundle_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: question_bundle_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: question_bundle_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: question_bundle_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_bundle_set_input
    pk_columns: question_bundle_pk_columns_input!
  ): question_bundle

  """
  update data of the table: "question_bundle_questions"
  """
  update_question_bundle_questions(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_bundle_questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_bundle_questions_set_input

    """filter the rows which have to be updated"""
    where: question_bundle_questions_bool_exp!
  ): question_bundle_questions_mutation_response

  """
  update single row of the table: "question_bundle_questions"
  """
  update_question_bundle_questions_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_bundle_questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_bundle_questions_set_input
    pk_columns: question_bundle_questions_pk_columns_input!
  ): question_bundle_questions

  """
  update single row of the table: "question"
  """
  update_question_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_set_input
    pk_columns: question_pk_columns_input!
  ): question

  """
  update data of the table: "question_submission"
  """
  update_question_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_submission_set_input

    """filter the rows which have to be updated"""
    where: question_submission_bool_exp!
  ): question_submission_mutation_response

  """
  update single row of the table: "question_submission"
  """
  update_question_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_submission_set_input
    pk_columns: question_submission_pk_columns_input!
  ): question_submission

  """
  update data of the table: "question_v2"
  """
  update_question_v2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_v2_set_input

    """filter the rows which have to be updated"""
    where: question_v2_bool_exp!
  ): question_v2_mutation_response

  """
  update single row of the table: "question_v2"
  """
  update_question_v2_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: question_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_v2_set_input
    pk_columns: question_v2_pk_columns_input!
  ): question_v2

  """
  update data of the table: "questions_submission_expanded"
  """
  update_questions_submission_expanded(
    """increments the numeric columns with given value of the filtered values"""
    _inc: questions_submission_expanded_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questions_submission_expanded_set_input

    """filter the rows which have to be updated"""
    where: questions_submission_expanded_bool_exp!
  ): questions_submission_expanded_mutation_response

  """
  update single row of the table: "questions_submission_expanded"
  """
  update_questions_submission_expanded_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: questions_submission_expanded_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questions_submission_expanded_set_input
    pk_columns: questions_submission_expanded_pk_columns_input!
  ): questions_submission_expanded

  """
  update data of the table: "raw_application_daily_active_users"
  """
  update_raw_application_daily_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: raw_application_daily_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: raw_application_daily_active_users_set_input

    """filter the rows which have to be updated"""
    where: raw_application_daily_active_users_bool_exp!
  ): raw_application_daily_active_users_mutation_response

  """
  update data of the table: "raw_application_monthly_active_users"
  """
  update_raw_application_monthly_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: raw_application_monthly_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: raw_application_monthly_active_users_set_input

    """filter the rows which have to be updated"""
    where: raw_application_monthly_active_users_bool_exp!
  ): raw_application_monthly_active_users_mutation_response

  """
  update data of the table: "raw_global_daily_active_users"
  """
  update_raw_global_daily_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: raw_global_daily_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: raw_global_daily_active_users_set_input

    """filter the rows which have to be updated"""
    where: raw_global_daily_active_users_bool_exp!
  ): raw_global_daily_active_users_mutation_response

  """
  update data of the table: "raw_global_monthly_active_users"
  """
  update_raw_global_monthly_active_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: raw_global_monthly_active_users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: raw_global_monthly_active_users_set_input

    """filter the rows which have to be updated"""
    where: raw_global_monthly_active_users_bool_exp!
  ): raw_global_monthly_active_users_mutation_response

  """
  update data of the table: "raw_logins"
  """
  update_raw_logins(
    """increments the numeric columns with given value of the filtered values"""
    _inc: raw_logins_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: raw_logins_set_input

    """filter the rows which have to be updated"""
    where: raw_logins_bool_exp!
  ): raw_logins_mutation_response

  """
  update data of the table: "refresh_tokens"
  """
  update_refresh_tokens(
    """increments the numeric columns with given value of the filtered values"""
    _inc: refresh_tokens_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: refresh_tokens_set_input

    """filter the rows which have to be updated"""
    where: refresh_tokens_bool_exp!
  ): refresh_tokens_mutation_response

  """
  update single row of the table: "refresh_tokens"
  """
  update_refresh_tokens_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: refresh_tokens_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: refresh_tokens_set_input

    """"""
    pk_columns: refresh_tokens_pk_columns_input!
  ): refresh_tokens

  """
  update data of the table: "sample_test"
  """
  update_sample_test(
    """increments the numeric columns with given value of the filtered values"""
    _inc: sample_test_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sample_test_set_input

    """filter the rows which have to be updated"""
    where: sample_test_bool_exp!
  ): sample_test_mutation_response

  """
  update single row of the table: "sample_test"
  """
  update_sample_test_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: sample_test_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sample_test_set_input
    pk_columns: sample_test_pk_columns_input!
  ): sample_test

  """
  update data of the table: "school"
  """
  update_school(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_set_input

    """filter the rows which have to be updated"""
    where: school_bool_exp!
  ): school_mutation_response

  """
  update single row of the table: "school"
  """
  update_school_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_set_input
    pk_columns: school_pk_columns_input!
  ): school

  """
  update data of the table: "school_cache"
  """
  update_school_cache(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: school_cache_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: school_cache_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: school_cache_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: school_cache_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: school_cache_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: school_cache_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_cache_set_input

    """filter the rows which have to be updated"""
    where: school_cache_bool_exp!
  ): school_cache_mutation_response

  """
  update single row of the table: "school_cache"
  """
  update_school_cache_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: school_cache_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: school_cache_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: school_cache_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: school_cache_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: school_cache_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: school_cache_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_cache_set_input
    pk_columns: school_cache_pk_columns_input!
  ): school_cache

  """
  update data of the table: "school_class_mismatch"
  """
  update_school_class_mismatch(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_class_mismatch_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_class_mismatch_set_input

    """filter the rows which have to be updated"""
    where: school_class_mismatch_bool_exp!
  ): school_class_mismatch_mutation_response

  """
  update data of the table: "school_grade"
  """
  update_school_grade(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_grade_set_input

    """filter the rows which have to be updated"""
    where: school_grade_bool_exp!
  ): school_grade_mutation_response

  """
  update single row of the table: "school_grade"
  """
  update_school_grade_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_grade_set_input
    pk_columns: school_grade_pk_columns_input!
  ): school_grade

  """
  update data of the table: "school_location_mapping"
  """
  update_school_location_mapping(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_location_mapping_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_location_mapping_set_input

    """filter the rows which have to be updated"""
    where: school_location_mapping_bool_exp!
  ): school_location_mapping_mutation_response

  """
  update single row of the table: "school_location_mapping"
  """
  update_school_location_mapping_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_location_mapping_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_location_mapping_set_input
    pk_columns: school_location_mapping_pk_columns_input!
  ): school_location_mapping

  """
  update data of the table: "school_type_enrolment"
  """
  update_school_type_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_type_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_type_enrolment_set_input

    """filter the rows which have to be updated"""
    where: school_type_enrolment_bool_exp!
  ): school_type_enrolment_mutation_response

  """
  update data of the table: "school_type_udise_enrolment"
  """
  update_school_type_udise_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_type_udise_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_type_udise_enrolment_set_input

    """filter the rows which have to be updated"""
    where: school_type_udise_enrolment_bool_exp!
  ): school_type_udise_enrolment_mutation_response

  """
  update data of the table: "school_wise_daily_enrolment"
  """
  update_school_wise_daily_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_wise_daily_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_wise_daily_enrolment_set_input

    """filter the rows which have to be updated"""
    where: school_wise_daily_enrolment_bool_exp!
  ): school_wise_daily_enrolment_mutation_response

  """
  update single row of the table: "school_wise_daily_enrolment"
  """
  update_school_wise_daily_enrolment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: school_wise_daily_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_wise_daily_enrolment_set_input
    pk_columns: school_wise_daily_enrolment_pk_columns_input!
  ): school_wise_daily_enrolment

  """
  update data of the table: "schoolwise_student_enrolment"
  """
  update_schoolwise_student_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: schoolwise_student_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: schoolwise_student_enrolment_set_input

    """filter the rows which have to be updated"""
    where: schoolwise_student_enrolment_bool_exp!
  ): schoolwise_student_enrolment_mutation_response

  """
  update data of the table: "server_logroup"
  """
  update_server_logroup(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_logroup_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_logroup_set_input

    """filter the rows which have to be updated"""
    where: server_logroup_bool_exp!
  ): server_logroup_mutation_response

  """
  update single row of the table: "server_logroup"
  """
  update_server_logroup_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_logroup_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_logroup_set_input
    pk_columns: server_logroup_pk_columns_input!
  ): server_logroup

  """
  update data of the table: "server_logroup_lo"
  """
  update_server_logroup_lo(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_logroup_lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_logroup_lo_set_input

    """filter the rows which have to be updated"""
    where: server_logroup_lo_bool_exp!
  ): server_logroup_lo_mutation_response

  """
  update single row of the table: "server_logroup_lo"
  """
  update_server_logroup_lo_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_logroup_lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_logroup_lo_set_input
    pk_columns: server_logroup_lo_pk_columns_input!
  ): server_logroup_lo

  """
  update data of the table: "server_marksrange"
  """
  update_server_marksrange(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_marksrange_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_marksrange_set_input

    """filter the rows which have to be updated"""
    where: server_marksrange_bool_exp!
  ): server_marksrange_mutation_response

  """
  update single row of the table: "server_marksrange"
  """
  update_server_marksrange_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_marksrange_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_marksrange_set_input
    pk_columns: server_marksrange_pk_columns_input!
  ): server_marksrange

  """
  update data of the table: "server_questiongroup"
  """
  update_server_questiongroup(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_questiongroup_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_questiongroup_set_input

    """filter the rows which have to be updated"""
    where: server_questiongroup_bool_exp!
  ): server_questiongroup_mutation_response

  """
  update single row of the table: "server_questiongroup"
  """
  update_server_questiongroup_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_questiongroup_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_questiongroup_set_input
    pk_columns: server_questiongroup_pk_columns_input!
  ): server_questiongroup

  """
  update data of the table: "server_questiongroup_question"
  """
  update_server_questiongroup_question(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_questiongroup_question_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_questiongroup_question_set_input

    """filter the rows which have to be updated"""
    where: server_questiongroup_question_bool_exp!
  ): server_questiongroup_question_mutation_response

  """
  update single row of the table: "server_questiongroup_question"
  """
  update_server_questiongroup_question_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: server_questiongroup_question_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: server_questiongroup_question_set_input
    pk_columns: server_questiongroup_question_pk_columns_input!
  ): server_questiongroup_question

  """
  update data of the table: "silk_profile"
  """
  update_silk_profile(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_profile_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_profile_set_input

    """filter the rows which have to be updated"""
    where: silk_profile_bool_exp!
  ): silk_profile_mutation_response

  """
  update single row of the table: "silk_profile"
  """
  update_silk_profile_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_profile_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_profile_set_input
    pk_columns: silk_profile_pk_columns_input!
  ): silk_profile

  """
  update data of the table: "silk_profile_queries"
  """
  update_silk_profile_queries(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_profile_queries_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_profile_queries_set_input

    """filter the rows which have to be updated"""
    where: silk_profile_queries_bool_exp!
  ): silk_profile_queries_mutation_response

  """
  update single row of the table: "silk_profile_queries"
  """
  update_silk_profile_queries_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_profile_queries_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_profile_queries_set_input
    pk_columns: silk_profile_queries_pk_columns_input!
  ): silk_profile_queries

  """
  update data of the table: "silk_request"
  """
  update_silk_request(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_request_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_request_set_input

    """filter the rows which have to be updated"""
    where: silk_request_bool_exp!
  ): silk_request_mutation_response

  """
  update single row of the table: "silk_request"
  """
  update_silk_request_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_request_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_request_set_input
    pk_columns: silk_request_pk_columns_input!
  ): silk_request

  """
  update data of the table: "silk_response"
  """
  update_silk_response(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_response_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_response_set_input

    """filter the rows which have to be updated"""
    where: silk_response_bool_exp!
  ): silk_response_mutation_response

  """
  update single row of the table: "silk_response"
  """
  update_silk_response_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_response_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_response_set_input
    pk_columns: silk_response_pk_columns_input!
  ): silk_response

  """
  update data of the table: "silk_sqlquery"
  """
  update_silk_sqlquery(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_sqlquery_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_sqlquery_set_input

    """filter the rows which have to be updated"""
    where: silk_sqlquery_bool_exp!
  ): silk_sqlquery_mutation_response

  """
  update single row of the table: "silk_sqlquery"
  """
  update_silk_sqlquery_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: silk_sqlquery_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: silk_sqlquery_set_input
    pk_columns: silk_sqlquery_pk_columns_input!
  ): silk_sqlquery

  """
  update data of the table: "sms"
  """
  update_sms(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: sms_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: sms_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: sms_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: sms_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: sms_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: sms_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: sms_set_input

    """filter the rows which have to be updated"""
    where: sms_bool_exp!
  ): sms_mutation_response

  """
  update single row of the table: "sms"
  """
  update_sms_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: sms_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: sms_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: sms_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: sms_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: sms_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: sms_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: sms_set_input
    pk_columns: sms_pk_columns_input!
  ): sms

  """
  update data of the table: "sms_dag_reports"
  """
  update_sms_dag_reports(
    """increments the numeric columns with given value of the filtered values"""
    _inc: sms_dag_reports_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sms_dag_reports_set_input

    """filter the rows which have to be updated"""
    where: sms_dag_reports_bool_exp!
  ): sms_dag_reports_mutation_response

  """
  update single row of the table: "sms_dag_reports"
  """
  update_sms_dag_reports_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: sms_dag_reports_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sms_dag_reports_set_input
    pk_columns: sms_dag_reports_pk_columns_input!
  ): sms_dag_reports

  """
  update data of the table: "sms_student_attendance_mv"
  """
  update_sms_student_attendance_mv(
    """increments the numeric columns with given value of the filtered values"""
    _inc: sms_student_attendance_mv_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sms_student_attendance_mv_set_input

    """filter the rows which have to be updated"""
    where: sms_student_attendance_mv_bool_exp!
  ): sms_student_attendance_mv_mutation_response

  """
  update data of the table: "ss_school_allocation_data"
  """
  update_ss_school_allocation_data(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ss_school_allocation_data_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ss_school_allocation_data_set_input

    """filter the rows which have to be updated"""
    where: ss_school_allocation_data_bool_exp!
  ): ss_school_allocation_data_mutation_response

  """
  update single row of the table: "ss_school_allocation_data"
  """
  update_ss_school_allocation_data_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ss_school_allocation_data_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ss_school_allocation_data_set_input
    pk_columns: ss_school_allocation_data_pk_columns_input!
  ): ss_school_allocation_data

  """
  update data of the table: "ss_school_allocation_quarter"
  """
  update_ss_school_allocation_quarter(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ss_school_allocation_quarter_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ss_school_allocation_quarter_set_input

    """filter the rows which have to be updated"""
    where: ss_school_allocation_quarter_bool_exp!
  ): ss_school_allocation_quarter_mutation_response

  """
  update single row of the table: "ss_school_allocation_quarter"
  """
  update_ss_school_allocation_quarter_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ss_school_allocation_quarter_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ss_school_allocation_quarter_set_input
    pk_columns: ss_school_allocation_quarter_pk_columns_input!
  ): ss_school_allocation_quarter

  """
  update data of the table: "state_edu_enrolment"
  """
  update_state_edu_enrolment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: state_edu_enrolment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: state_edu_enrolment_set_input

    """filter the rows which have to be updated"""
    where: state_edu_enrolment_bool_exp!
  ): state_edu_enrolment_mutation_response

  """
  update data of the table: "state_lo_list"
  """
  update_state_lo_list(
    """increments the numeric columns with given value of the filtered values"""
    _inc: state_lo_list_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: state_lo_list_set_input

    """filter the rows which have to be updated"""
    where: state_lo_list_bool_exp!
  ): state_lo_list_mutation_response

  """
  update data of the table: "static"
  """
  update_static(
    """increments the numeric columns with given value of the filtered values"""
    _inc: static_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: static_set_input

    """filter the rows which have to be updated"""
    where: static_bool_exp!
  ): static_mutation_response

  """
  update single row of the table: "static"
  """
  update_static_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: static_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: static_set_input
    pk_columns: static_pk_columns_input!
  ): static

  """
  update data of the table: "stream"
  """
  update_stream(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_set_input

    """filter the rows which have to be updated"""
    where: stream_bool_exp!
  ): stream_mutation_response

  """
  update single row of the table: "stream"
  """
  update_stream_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_set_input
    pk_columns: stream_pk_columns_input!
  ): stream

  """
  update data of the table: "stream_common_subject"
  """
  update_stream_common_subject(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_common_subject_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_common_subject_set_input

    """filter the rows which have to be updated"""
    where: stream_common_subject_bool_exp!
  ): stream_common_subject_mutation_response

  """
  update single row of the table: "stream_common_subject"
  """
  update_stream_common_subject_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_common_subject_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_common_subject_set_input
    pk_columns: stream_common_subject_pk_columns_input!
  ): stream_common_subject

  """
  update data of the table: "stream_optional_subjects_1"
  """
  update_stream_optional_subjects_1(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_1_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_1_set_input

    """filter the rows which have to be updated"""
    where: stream_optional_subjects_1_bool_exp!
  ): stream_optional_subjects_1_mutation_response

  """
  update single row of the table: "stream_optional_subjects_1"
  """
  update_stream_optional_subjects_1_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_1_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_1_set_input
    pk_columns: stream_optional_subjects_1_pk_columns_input!
  ): stream_optional_subjects_1

  """
  update data of the table: "stream_optional_subjects_2"
  """
  update_stream_optional_subjects_2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_2_set_input

    """filter the rows which have to be updated"""
    where: stream_optional_subjects_2_bool_exp!
  ): stream_optional_subjects_2_mutation_response

  """
  update single row of the table: "stream_optional_subjects_2"
  """
  update_stream_optional_subjects_2_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_2_set_input
    pk_columns: stream_optional_subjects_2_pk_columns_input!
  ): stream_optional_subjects_2

  """
  update data of the table: "stream_optional_subjects_3"
  """
  update_stream_optional_subjects_3(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_3_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_3_set_input

    """filter the rows which have to be updated"""
    where: stream_optional_subjects_3_bool_exp!
  ): stream_optional_subjects_3_mutation_response

  """
  update single row of the table: "stream_optional_subjects_3"
  """
  update_stream_optional_subjects_3_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_3_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_3_set_input
    pk_columns: stream_optional_subjects_3_pk_columns_input!
  ): stream_optional_subjects_3

  """
  update data of the table: "stream_optional_subjects_4"
  """
  update_stream_optional_subjects_4(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_4_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_4_set_input

    """filter the rows which have to be updated"""
    where: stream_optional_subjects_4_bool_exp!
  ): stream_optional_subjects_4_mutation_response

  """
  update single row of the table: "stream_optional_subjects_4"
  """
  update_stream_optional_subjects_4_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: stream_optional_subjects_4_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: stream_optional_subjects_4_set_input
    pk_columns: stream_optional_subjects_4_pk_columns_input!
  ): stream_optional_subjects_4

  """
  update data of the table: "student"
  """
  update_student(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_set_input

    """filter the rows which have to be updated"""
    where: student_bool_exp!
  ): student_mutation_response

  """
  update single row of the table: "student"
  """
  update_student_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_set_input
    pk_columns: student_pk_columns_input!
  ): student

  """
  update data of the table: "student_content_share"
  """
  update_student_content_share(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_content_share_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_content_share_set_input

    """filter the rows which have to be updated"""
    where: student_content_share_bool_exp!
  ): student_content_share_mutation_response

  """
  update single row of the table: "student_content_share"
  """
  update_student_content_share_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_content_share_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_content_share_set_input
    pk_columns: student_content_share_pk_columns_input!
  ): student_content_share

  """
  update data of the table: "student_subject"
  """
  update_student_subject(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_subject_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_subject_set_input

    """filter the rows which have to be updated"""
    where: student_subject_bool_exp!
  ): student_subject_mutation_response

  """
  update single row of the table: "student_subject"
  """
  update_student_subject_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_subject_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_subject_set_input
    pk_columns: student_subject_pk_columns_input!
  ): student_subject

  """
  update data of the table: "student_submission"
  """
  update_student_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_submission_set_input

    """filter the rows which have to be updated"""
    where: student_submission_bool_exp!
  ): student_submission_mutation_response

  """
  update single row of the table: "student_submission"
  """
  update_student_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_submission_set_input
    pk_columns: student_submission_pk_columns_input!
  ): student_submission

  """
  update data of the table: "student_submission_v2"
  """
  update_student_submission_v2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_submission_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_submission_v2_set_input

    """filter the rows which have to be updated"""
    where: student_submission_v2_bool_exp!
  ): student_submission_v2_mutation_response

  """
  update single row of the table: "student_submission_v2"
  """
  update_student_submission_v2_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_submission_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_submission_v2_set_input
    pk_columns: student_submission_v2_pk_columns_input!
  ): student_submission_v2

  """
  update data of the table: "student_submission_v2_marks_submissions"
  """
  update_student_submission_v2_marks_submissions(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_submission_v2_marks_submissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_submission_v2_marks_submissions_set_input

    """filter the rows which have to be updated"""
    where: student_submission_v2_marks_submissions_bool_exp!
  ): student_submission_v2_marks_submissions_mutation_response

  """
  update single row of the table: "student_submission_v2_marks_submissions"
  """
  update_student_submission_v2_marks_submissions_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_submission_v2_marks_submissions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_submission_v2_marks_submissions_set_input
    pk_columns: student_submission_v2_marks_submissions_pk_columns_input!
  ): student_submission_v2_marks_submissions

  """
  update data of the table: "student_table_higher"
  """
  update_student_table_higher(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_table_higher_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_table_higher_set_input

    """filter the rows which have to be updated"""
    where: student_table_higher_bool_exp!
  ): student_table_higher_mutation_response

  """
  update data of the table: "student_table_higher_2"
  """
  update_student_table_higher_2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: student_table_higher_2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_table_higher_2_set_input

    """filter the rows which have to be updated"""
    where: student_table_higher_2_bool_exp!
  ): student_table_higher_2_mutation_response

  """
  update data of the table: "studentprofiles_cg"
  """
  update_studentprofiles_cg(
    """increments the numeric columns with given value of the filtered values"""
    _inc: studentprofiles_cg_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: studentprofiles_cg_set_input

    """filter the rows which have to be updated"""
    where: studentprofiles_cg_bool_exp!
  ): studentprofiles_cg_mutation_response

  """
  update data of the table: "studentprofiles_cg_2"
  """
  update_studentprofiles_cg_2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: studentprofiles_cg_2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: studentprofiles_cg_2_set_input

    """filter the rows which have to be updated"""
    where: studentprofiles_cg_2_bool_exp!
  ): studentprofiles_cg_2_mutation_response

  """
  update data of the table: "students_present"
  """
  update_students_present(
    """increments the numeric columns with given value of the filtered values"""
    _inc: students_present_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: students_present_set_input

    """filter the rows which have to be updated"""
    where: students_present_bool_exp!
  ): students_present_mutation_response

  """
  update data of the table: "subject"
  """
  update_subject(
    """increments the numeric columns with given value of the filtered values"""
    _inc: subject_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: subject_set_input

    """filter the rows which have to be updated"""
    where: subject_bool_exp!
  ): subject_mutation_response

  """
  update single row of the table: "subject"
  """
  update_subject_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: subject_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: subject_set_input
    pk_columns: subject_pk_columns_input!
  ): subject

  """
  update data of the table: "subject_submission"
  """
  update_subject_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: subject_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: subject_submission_set_input

    """filter the rows which have to be updated"""
    where: subject_submission_bool_exp!
  ): subject_submission_mutation_response

  """
  update single row of the table: "subject_submission"
  """
  update_subject_submission_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: subject_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: subject_submission_set_input
    pk_columns: subject_submission_pk_columns_input!
  ): subject_submission

  """
  update data of the table: "subject_submission_selected_lo"
  """
  update_subject_submission_selected_lo(
    """increments the numeric columns with given value of the filtered values"""
    _inc: subject_submission_selected_lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: subject_submission_selected_lo_set_input

    """filter the rows which have to be updated"""
    where: subject_submission_selected_lo_bool_exp!
  ): subject_submission_selected_lo_mutation_response

  """
  update single row of the table: "subject_submission_selected_lo"
  """
  update_subject_submission_selected_lo_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: subject_submission_selected_lo_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: subject_submission_selected_lo_set_input
    pk_columns: subject_submission_selected_lo_pk_columns_input!
  ): subject_submission_selected_lo

  """
  update data of the table: "submission_summary"
  """
  update_submission_summary(
    """increments the numeric columns with given value of the filtered values"""
    _inc: submission_summary_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: submission_summary_set_input

    """filter the rows which have to be updated"""
    where: submission_summary_bool_exp!
  ): submission_summary_mutation_response

  """
  update single row of the table: "submission_summary"
  """
  update_submission_summary_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: submission_summary_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: submission_summary_set_input
    pk_columns: submission_summary_pk_columns_input!
  ): submission_summary

  """
  update data of the table: "submission_type"
  """
  update_submission_type(
    """increments the numeric columns with given value of the filtered values"""
    _inc: submission_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: submission_type_set_input

    """filter the rows which have to be updated"""
    where: submission_type_bool_exp!
  ): submission_type_mutation_response

  """
  update single row of the table: "submission_type"
  """
  update_submission_type_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: submission_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: submission_type_set_input
    pk_columns: submission_type_pk_columns_input!
  ): submission_type

  """
  update data of the table: "system_configuration"
  """
  update_system_configuration(
    """increments the numeric columns with given value of the filtered values"""
    _inc: system_configuration_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: system_configuration_set_input

    """filter the rows which have to be updated"""
    where: system_configuration_bool_exp!
  ): system_configuration_mutation_response

  """
  update data of the table: "teacher"
  """
  update_teacher(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_set_input

    """filter the rows which have to be updated"""
    where: teacher_bool_exp!
  ): teacher_mutation_response

  """
  update data of the table: "teacher_attendance_status"
  """
  update_teacher_attendance_status(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_attendance_status_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_attendance_status_set_input

    """filter the rows which have to be updated"""
    where: teacher_attendance_status_bool_exp!
  ): teacher_attendance_status_mutation_response

  """
  update single row of the table: "teacher_attendance_status"
  """
  update_teacher_attendance_status_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_attendance_status_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_attendance_status_set_input
    pk_columns: teacher_attendance_status_pk_columns_input!
  ): teacher_attendance_status

  """
  update single row of the table: "teacher"
  """
  update_teacher_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_set_input
    pk_columns: teacher_pk_columns_input!
  ): teacher

  """
  update data of the table: "teacher_registration_compliance"
  """
  update_teacher_registration_compliance(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_registration_compliance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_registration_compliance_set_input

    """filter the rows which have to be updated"""
    where: teacher_registration_compliance_bool_exp!
  ): teacher_registration_compliance_mutation_response

  """
  update single row of the table: "teacher_registration_compliance"
  """
  update_teacher_registration_compliance_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_registration_compliance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_registration_compliance_set_input
    pk_columns: teacher_registration_compliance_pk_columns_input!
  ): teacher_registration_compliance

  """
  update data of the table: "teacher_subjects"
  """
  update_teacher_subjects(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_subjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_subjects_set_input

    """filter the rows which have to be updated"""
    where: teacher_subjects_bool_exp!
  ): teacher_subjects_mutation_response

  """
  update single row of the table: "teacher_subjects"
  """
  update_teacher_subjects_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: teacher_subjects_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teacher_subjects_set_input
    pk_columns: teacher_subjects_pk_columns_input!
  ): teacher_subjects

  """
  update data of the table: "tenants"
  """
  update_tenants(
    """increments the numeric columns with given value of the filtered values"""
    _inc: tenants_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tenants_set_input

    """filter the rows which have to be updated"""
    where: tenants_bool_exp!
  ): tenants_mutation_response

  """
  update single row of the table: "tenants"
  """
  update_tenants_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: tenants_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tenants_set_input

    """"""
    pk_columns: tenants_pk_columns_input!
  ): tenants

  """
  update data of the table: "term1results2021"
  """
  update_term1results2021(
    """increments the numeric columns with given value of the filtered values"""
    _inc: term1results2021_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: term1results2021_set_input

    """filter the rows which have to be updated"""
    where: term1results2021_bool_exp!
  ): term1results2021_mutation_response

  """
  update data of the table: "term1results2021stream"
  """
  update_term1results2021stream(
    """increments the numeric columns with given value of the filtered values"""
    _inc: term1results2021stream_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: term1results2021stream_set_input

    """filter the rows which have to be updated"""
    where: term1results2021stream_bool_exp!
  ): term1results2021stream_mutation_response

  """
  update data of the table: "test_ku"
  """
  update_test_ku(
    """increments the numeric columns with given value of the filtered values"""
    _inc: test_ku_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: test_ku_set_input

    """filter the rows which have to be updated"""
    where: test_ku_bool_exp!
  ): test_ku_mutation_response

  """
  update single row of the table: "test_ku"
  """
  update_test_ku_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: test_ku_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: test_ku_set_input
    pk_columns: test_ku_pk_columns_input!
  ): test_ku

  """
  update data of the table: "test_telemetry"
  """
  update_test_telemetry(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: test_telemetry_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: test_telemetry_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: test_telemetry_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: test_telemetry_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: test_telemetry_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: test_telemetry_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: test_telemetry_set_input

    """filter the rows which have to be updated"""
    where: test_telemetry_bool_exp!
  ): test_telemetry_mutation_response

  """
  update single row of the table: "test_telemetry"
  """
  update_test_telemetry_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: test_telemetry_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: test_telemetry_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: test_telemetry_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: test_telemetry_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: test_telemetry_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: test_telemetry_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: test_telemetry_set_input
    pk_columns: test_telemetry_pk_columns_input!
  ): test_telemetry

  """
  update data of the table: "themes"
  """
  update_themes(
    """increments the numeric columns with given value of the filtered values"""
    _inc: themes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: themes_set_input

    """filter the rows which have to be updated"""
    where: themes_bool_exp!
  ): themes_mutation_response

  """
  update single row of the table: "themes"
  """
  update_themes_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: themes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: themes_set_input

    """"""
    pk_columns: themes_pk_columns_input!
  ): themes

  """
  update data of the table: "tracking_elem"
  """
  update_tracking_elem(
    """increments the numeric columns with given value of the filtered values"""
    _inc: tracking_elem_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tracking_elem_set_input

    """filter the rows which have to be updated"""
    where: tracking_elem_bool_exp!
  ): tracking_elem_mutation_response

  """
  update data of the table: "tracking_higher"
  """
  update_tracking_higher(
    """increments the numeric columns with given value of the filtered values"""
    _inc: tracking_higher_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tracking_higher_set_input

    """filter the rows which have to be updated"""
    where: tracking_higher_bool_exp!
  ): tracking_higher_mutation_response

  """
  update data of the table: "unit_bundle"
  """
  update_unit_bundle(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: unit_bundle_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: unit_bundle_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: unit_bundle_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: unit_bundle_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_bundle_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: unit_bundle_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_bundle_set_input

    """filter the rows which have to be updated"""
    where: unit_bundle_bool_exp!
  ): unit_bundle_mutation_response

  """
  update single row of the table: "unit_bundle"
  """
  update_unit_bundle_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: unit_bundle_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: unit_bundle_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: unit_bundle_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: unit_bundle_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_bundle_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: unit_bundle_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_bundle_set_input
    pk_columns: unit_bundle_pk_columns_input!
  ): unit_bundle

  """
  update data of the table: "unit_bundle_units"
  """
  update_unit_bundle_units(
    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_bundle_units_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_bundle_units_set_input

    """filter the rows which have to be updated"""
    where: unit_bundle_units_bool_exp!
  ): unit_bundle_units_mutation_response

  """
  update single row of the table: "unit_bundle_units"
  """
  update_unit_bundle_units_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_bundle_units_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_bundle_units_set_input
    pk_columns: unit_bundle_units_pk_columns_input!
  ): unit_bundle_units

  """
  update data of the table: "unit_submission"
  """
  update_unit_submission(
    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_submission_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_submission_set_input

    """filter the rows which have to be updated"""
    where: unit_submission_bool_exp!
  ): unit_submission_mutation_response

  """
  update data of the table: "unit_v2"
  """
  update_unit_v2(
    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_v2_set_input

    """filter the rows which have to be updated"""
    where: unit_v2_bool_exp!
  ): unit_v2_mutation_response

  """
  update single row of the table: "unit_v2"
  """
  update_unit_v2_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: unit_v2_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unit_v2_set_input
    pk_columns: unit_v2_pk_columns_input!
  ): unit_v2

  """
  update data of the table: "user_action_logs"
  """
  update_user_action_logs(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_action_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_action_logs_set_input

    """filter the rows which have to be updated"""
    where: user_action_logs_bool_exp!
  ): user_action_logs_mutation_response

  """
  update data of the table: "user_action_logs_applications"
  """
  update_user_action_logs_applications(
    """sets the columns of the filtered rows to the given values"""
    _set: user_action_logs_applications_set_input

    """filter the rows which have to be updated"""
    where: user_action_logs_applications_bool_exp!
  ): user_action_logs_applications_mutation_response

  """
  update single row of the table: "user_action_logs"
  """
  update_user_action_logs_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_action_logs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_action_logs_set_input

    """"""
    pk_columns: user_action_logs_pk_columns_input!
  ): user_action_logs

  """
  update data of the table: "user_action_reasons"
  """
  update_user_action_reasons(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_action_reasons_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_action_reasons_set_input

    """filter the rows which have to be updated"""
    where: user_action_reasons_bool_exp!
  ): user_action_reasons_mutation_response

  """
  update single row of the table: "user_action_reasons"
  """
  update_user_action_reasons_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_action_reasons_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_action_reasons_set_input

    """"""
    pk_columns: user_action_reasons_pk_columns_input!
  ): user_action_reasons

  """
  update data of the table: "user_actions"
  """
  update_user_actions(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_actions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_actions_set_input

    """filter the rows which have to be updated"""
    where: user_actions_bool_exp!
  ): user_actions_mutation_response

  """
  update single row of the table: "user_actions"
  """
  update_user_actions_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_actions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_actions_set_input

    """"""
    pk_columns: user_actions_pk_columns_input!
  ): user_actions

  """
  update data of the table: "user_comments"
  """
  update_user_comments(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_comments_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_comments_set_input

    """filter the rows which have to be updated"""
    where: user_comments_bool_exp!
  ): user_comments_mutation_response

  """
  update single row of the table: "user_comments"
  """
  update_user_comments_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_comments_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_comments_set_input

    """"""
    pk_columns: user_comments_pk_columns_input!
  ): user_comments

  """
  update data of the table: "user_consents"
  """
  update_user_consents(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_consents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_consents_set_input

    """filter the rows which have to be updated"""
    where: user_consents_bool_exp!
  ): user_consents_mutation_response

  """
  update single row of the table: "user_consents"
  """
  update_user_consents_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_consents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_consents_set_input

    """"""
    pk_columns: user_consents_pk_columns_input!
  ): user_consents

  """
  update data of the table: "user_consents_email_plus"
  """
  update_user_consents_email_plus(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_consents_email_plus_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_consents_email_plus_set_input

    """filter the rows which have to be updated"""
    where: user_consents_email_plus_bool_exp!
  ): user_consents_email_plus_mutation_response

  """
  update single row of the table: "user_consents_email_plus"
  """
  update_user_consents_email_plus_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_consents_email_plus_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_consents_email_plus_set_input

    """"""
    pk_columns: user_consents_email_plus_pk_columns_input!
  ): user_consents_email_plus

  """
  update data of the table: "user_registrations"
  """
  update_user_registrations(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_registrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_registrations_set_input

    """filter the rows which have to be updated"""
    where: user_registrations_bool_exp!
  ): user_registrations_mutation_response

  """
  update data of the table: "user_registrations_application_roles"
  """
  update_user_registrations_application_roles(
    """sets the columns of the filtered rows to the given values"""
    _set: user_registrations_application_roles_set_input

    """filter the rows which have to be updated"""
    where: user_registrations_application_roles_bool_exp!
  ): user_registrations_application_roles_mutation_response

  """
  update single row of the table: "user_registrations"
  """
  update_user_registrations_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_registrations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_registrations_set_input

    """"""
    pk_columns: user_registrations_pk_columns_input!
  ): user_registrations

  """
  update data of the table: "users"
  """
  update_users(
    """increments the numeric columns with given value of the filtered values"""
    _inc: users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input

    """filter the rows which have to be updated"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  update single row of the table: "users"
  """
  update_users_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input

    """"""
    pk_columns: users_pk_columns_input!
  ): users

  """
  update data of the table: "version"
  """
  update_version(
    """sets the columns of the filtered rows to the given values"""
    _set: version_set_input

    """filter the rows which have to be updated"""
    where: version_bool_exp!
  ): version_mutation_response

  """
  update data of the table: "webhooks"
  """
  update_webhooks(
    """increments the numeric columns with given value of the filtered values"""
    _inc: webhooks_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: webhooks_set_input

    """filter the rows which have to be updated"""
    where: webhooks_bool_exp!
  ): webhooks_mutation_response

  """
  update data of the table: "webhooks_applications"
  """
  update_webhooks_applications(
    """sets the columns of the filtered rows to the given values"""
    _set: webhooks_applications_set_input

    """filter the rows which have to be updated"""
    where: webhooks_applications_bool_exp!
  ): webhooks_applications_mutation_response

  """
  update single row of the table: "webhooks_applications"
  """
  update_webhooks_applications_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: webhooks_applications_set_input

    """"""
    pk_columns: webhooks_applications_pk_columns_input!
  ): webhooks_applications

  """
  update single row of the table: "webhooks"
  """
  update_webhooks_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: webhooks_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: webhooks_set_input

    """"""
    pk_columns: webhooks_pk_columns_input!
  ): webhooks

  """
  update data of the table: "Week 17-24"
  """
  update_week_17_24(
    """increments the numeric columns with given value of the filtered values"""
    _inc: week_17_24_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: week_17_24_set_input

    """filter the rows which have to be updated"""
    where: week_17_24_bool_exp!
  ): week_17_24_mutation_response

  """
  update data of the table: "Week 1-8"
  """
  update_week_1_8(
    """increments the numeric columns with given value of the filtered values"""
    _inc: week_1_8_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: week_1_8_set_input

    """filter the rows which have to be updated"""
    where: week_1_8_bool_exp!
  ): week_1_8_mutation_response

  """
  update data of the table: "Week 9-16"
  """
  update_week_9_16(
    """increments the numeric columns with given value of the filtered values"""
    _inc: week_9_16_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: week_9_16_set_input

    """filter the rows which have to be updated"""
    where: week_9_16_bool_exp!
  ): week_9_16_mutation_response
}

"""
columns and relationships of "mvintegrateddb_totalschools"
"""
type mvintegrateddb_totalschools {
  count: bigint
}

"""
aggregated selection of "mvintegrateddb_totalschools"
"""
type mvintegrateddb_totalschools_aggregate {
  aggregate: mvintegrateddb_totalschools_aggregate_fields
  nodes: [mvintegrateddb_totalschools!]!
}

"""
aggregate fields of "mvintegrateddb_totalschools"
"""
type mvintegrateddb_totalschools_aggregate_fields {
  avg: mvintegrateddb_totalschools_avg_fields
  count(columns: [mvintegrateddb_totalschools_select_column!], distinct: Boolean): Int!
  max: mvintegrateddb_totalschools_max_fields
  min: mvintegrateddb_totalschools_min_fields
  stddev: mvintegrateddb_totalschools_stddev_fields
  stddev_pop: mvintegrateddb_totalschools_stddev_pop_fields
  stddev_samp: mvintegrateddb_totalschools_stddev_samp_fields
  sum: mvintegrateddb_totalschools_sum_fields
  var_pop: mvintegrateddb_totalschools_var_pop_fields
  var_samp: mvintegrateddb_totalschools_var_samp_fields
  variance: mvintegrateddb_totalschools_variance_fields
}

"""aggregate avg on columns"""
type mvintegrateddb_totalschools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "mvintegrateddb_totalschools". All fields are combined with a logical 'AND'.
"""
input mvintegrateddb_totalschools_bool_exp {
  _and: [mvintegrateddb_totalschools_bool_exp!]
  _not: mvintegrateddb_totalschools_bool_exp
  _or: [mvintegrateddb_totalschools_bool_exp!]
  count: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "mvintegrateddb_totalschools"
"""
input mvintegrateddb_totalschools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "mvintegrateddb_totalschools"
"""
input mvintegrateddb_totalschools_insert_input {
  count: bigint
}

"""aggregate max on columns"""
type mvintegrateddb_totalschools_max_fields {
  count: bigint
}

"""aggregate min on columns"""
type mvintegrateddb_totalschools_min_fields {
  count: bigint
}

"""
response of any mutation on the table "mvintegrateddb_totalschools"
"""
type mvintegrateddb_totalschools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mvintegrateddb_totalschools!]!
}

"""
Ordering options when selecting data from "mvintegrateddb_totalschools".
"""
input mvintegrateddb_totalschools_order_by {
  count: order_by
}

"""
select columns of table "mvintegrateddb_totalschools"
"""
enum mvintegrateddb_totalschools_select_column {
  """column name"""
  count
}

"""
input type for updating data in table "mvintegrateddb_totalschools"
"""
input mvintegrateddb_totalschools_set_input {
  count: bigint
}

"""aggregate stddev on columns"""
type mvintegrateddb_totalschools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type mvintegrateddb_totalschools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type mvintegrateddb_totalschools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type mvintegrateddb_totalschools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type mvintegrateddb_totalschools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type mvintegrateddb_totalschools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type mvintegrateddb_totalschools_variance_fields {
  count: Float
}

"""
columns and relationships of "mystudent_testperformance"
"""
type mystudent_testperformance {
  block: String
  completed: Int
  district: String
  grade: String
  id: Int
  mobile: String
  p_key: Int!
  school_name: String
  score: Int
  stream: String
  student_name: String
  subject: String
  udise: Int
  week: Int
}

"""
aggregated selection of "mystudent_testperformance"
"""
type mystudent_testperformance_aggregate {
  aggregate: mystudent_testperformance_aggregate_fields
  nodes: [mystudent_testperformance!]!
}

"""
aggregate fields of "mystudent_testperformance"
"""
type mystudent_testperformance_aggregate_fields {
  avg: mystudent_testperformance_avg_fields
  count(columns: [mystudent_testperformance_select_column!], distinct: Boolean): Int!
  max: mystudent_testperformance_max_fields
  min: mystudent_testperformance_min_fields
  stddev: mystudent_testperformance_stddev_fields
  stddev_pop: mystudent_testperformance_stddev_pop_fields
  stddev_samp: mystudent_testperformance_stddev_samp_fields
  sum: mystudent_testperformance_sum_fields
  var_pop: mystudent_testperformance_var_pop_fields
  var_samp: mystudent_testperformance_var_samp_fields
  variance: mystudent_testperformance_variance_fields
}

"""aggregate avg on columns"""
type mystudent_testperformance_avg_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

"""
Boolean expression to filter rows from the table "mystudent_testperformance". All fields are combined with a logical 'AND'.
"""
input mystudent_testperformance_bool_exp {
  _and: [mystudent_testperformance_bool_exp!]
  _not: mystudent_testperformance_bool_exp
  _or: [mystudent_testperformance_bool_exp!]
  block: String_comparison_exp
  completed: Int_comparison_exp
  district: String_comparison_exp
  grade: String_comparison_exp
  id: Int_comparison_exp
  mobile: String_comparison_exp
  p_key: Int_comparison_exp
  school_name: String_comparison_exp
  score: Int_comparison_exp
  stream: String_comparison_exp
  student_name: String_comparison_exp
  subject: String_comparison_exp
  udise: Int_comparison_exp
  week: Int_comparison_exp
}

"""
unique or primary key constraints on table "mystudent_testperformance"
"""
enum mystudent_testperformance_constraint {
  """unique or primary key constraint"""
  mystudent_testperformance_pkey
}

"""
input type for incrementing numeric columns in table "mystudent_testperformance"
"""
input mystudent_testperformance_inc_input {
  completed: Int
  id: Int
  p_key: Int
  score: Int
  udise: Int
  week: Int
}

"""
input type for inserting data into table "mystudent_testperformance"
"""
input mystudent_testperformance_insert_input {
  block: String
  completed: Int
  district: String
  grade: String
  id: Int
  mobile: String
  p_key: Int
  school_name: String
  score: Int
  stream: String
  student_name: String
  subject: String
  udise: Int
  week: Int
}

"""aggregate max on columns"""
type mystudent_testperformance_max_fields {
  block: String
  completed: Int
  district: String
  grade: String
  id: Int
  mobile: String
  p_key: Int
  school_name: String
  score: Int
  stream: String
  student_name: String
  subject: String
  udise: Int
  week: Int
}

"""aggregate min on columns"""
type mystudent_testperformance_min_fields {
  block: String
  completed: Int
  district: String
  grade: String
  id: Int
  mobile: String
  p_key: Int
  school_name: String
  score: Int
  stream: String
  student_name: String
  subject: String
  udise: Int
  week: Int
}

"""
response of any mutation on the table "mystudent_testperformance"
"""
type mystudent_testperformance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mystudent_testperformance!]!
}

"""
on conflict condition type for table "mystudent_testperformance"
"""
input mystudent_testperformance_on_conflict {
  constraint: mystudent_testperformance_constraint!
  update_columns: [mystudent_testperformance_update_column!]! = []
  where: mystudent_testperformance_bool_exp
}

"""Ordering options when selecting data from "mystudent_testperformance"."""
input mystudent_testperformance_order_by {
  block: order_by
  completed: order_by
  district: order_by
  grade: order_by
  id: order_by
  mobile: order_by
  p_key: order_by
  school_name: order_by
  score: order_by
  stream: order_by
  student_name: order_by
  subject: order_by
  udise: order_by
  week: order_by
}

"""primary key columns input for table: mystudent_testperformance"""
input mystudent_testperformance_pk_columns_input {
  p_key: Int!
}

"""
select columns of table "mystudent_testperformance"
"""
enum mystudent_testperformance_select_column {
  """column name"""
  block

  """column name"""
  completed

  """column name"""
  district

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  p_key

  """column name"""
  school_name

  """column name"""
  score

  """column name"""
  stream

  """column name"""
  student_name

  """column name"""
  subject

  """column name"""
  udise

  """column name"""
  week
}

"""
input type for updating data in table "mystudent_testperformance"
"""
input mystudent_testperformance_set_input {
  block: String
  completed: Int
  district: String
  grade: String
  id: Int
  mobile: String
  p_key: Int
  school_name: String
  score: Int
  stream: String
  student_name: String
  subject: String
  udise: Int
  week: Int
}

"""aggregate stddev on columns"""
type mystudent_testperformance_stddev_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate stddev_pop on columns"""
type mystudent_testperformance_stddev_pop_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate stddev_samp on columns"""
type mystudent_testperformance_stddev_samp_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate sum on columns"""
type mystudent_testperformance_sum_fields {
  completed: Int
  id: Int
  p_key: Int
  score: Int
  udise: Int
  week: Int
}

"""
update columns of table "mystudent_testperformance"
"""
enum mystudent_testperformance_update_column {
  """column name"""
  block

  """column name"""
  completed

  """column name"""
  district

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  p_key

  """column name"""
  school_name

  """column name"""
  score

  """column name"""
  stream

  """column name"""
  student_name

  """column name"""
  subject

  """column name"""
  udise

  """column name"""
  week
}

"""aggregate var_pop on columns"""
type mystudent_testperformance_var_pop_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate var_samp on columns"""
type mystudent_testperformance_var_samp_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

"""aggregate variance on columns"""
type mystudent_testperformance_variance_fields {
  completed: Float
  id: Float
  p_key: Float
  score: Float
  udise: Float
  week: Float
}

scalar name

"""
Boolean expression to compare columns of type "name". All fields are combined with logical 'AND'.
"""
input name_comparison_exp {
  _eq: name
  _gt: name
  _gte: name
  _in: [name!]
  _is_null: Boolean
  _lt: name
  _lte: name
  _neq: name
  _nin: [name!]
}

"""
columns and relationships of "no_of_profiles"
"""
type no_of_profiles {
  id: Int
  mobile: String
  no_of_profiles: bigint
}

"""
aggregated selection of "no_of_profiles"
"""
type no_of_profiles_aggregate {
  aggregate: no_of_profiles_aggregate_fields
  nodes: [no_of_profiles!]!
}

"""
aggregate fields of "no_of_profiles"
"""
type no_of_profiles_aggregate_fields {
  avg: no_of_profiles_avg_fields
  count(columns: [no_of_profiles_select_column!], distinct: Boolean): Int!
  max: no_of_profiles_max_fields
  min: no_of_profiles_min_fields
  stddev: no_of_profiles_stddev_fields
  stddev_pop: no_of_profiles_stddev_pop_fields
  stddev_samp: no_of_profiles_stddev_samp_fields
  sum: no_of_profiles_sum_fields
  var_pop: no_of_profiles_var_pop_fields
  var_samp: no_of_profiles_var_samp_fields
  variance: no_of_profiles_variance_fields
}

"""aggregate avg on columns"""
type no_of_profiles_avg_fields {
  id: Float
  no_of_profiles: Float
}

"""
Boolean expression to filter rows from the table "no_of_profiles". All fields are combined with a logical 'AND'.
"""
input no_of_profiles_bool_exp {
  _and: [no_of_profiles_bool_exp!]
  _not: no_of_profiles_bool_exp
  _or: [no_of_profiles_bool_exp!]
  id: Int_comparison_exp
  mobile: String_comparison_exp
  no_of_profiles: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "no_of_profiles"
"""
input no_of_profiles_inc_input {
  id: Int
  no_of_profiles: bigint
}

"""
input type for inserting data into table "no_of_profiles"
"""
input no_of_profiles_insert_input {
  id: Int
  mobile: String
  no_of_profiles: bigint
}

"""aggregate max on columns"""
type no_of_profiles_max_fields {
  id: Int
  mobile: String
  no_of_profiles: bigint
}

"""aggregate min on columns"""
type no_of_profiles_min_fields {
  id: Int
  mobile: String
  no_of_profiles: bigint
}

"""
response of any mutation on the table "no_of_profiles"
"""
type no_of_profiles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [no_of_profiles!]!
}

"""Ordering options when selecting data from "no_of_profiles"."""
input no_of_profiles_order_by {
  id: order_by
  mobile: order_by
  no_of_profiles: order_by
}

"""
select columns of table "no_of_profiles"
"""
enum no_of_profiles_select_column {
  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  no_of_profiles
}

"""
input type for updating data in table "no_of_profiles"
"""
input no_of_profiles_set_input {
  id: Int
  mobile: String
  no_of_profiles: bigint
}

"""aggregate stddev on columns"""
type no_of_profiles_stddev_fields {
  id: Float
  no_of_profiles: Float
}

"""aggregate stddev_pop on columns"""
type no_of_profiles_stddev_pop_fields {
  id: Float
  no_of_profiles: Float
}

"""aggregate stddev_samp on columns"""
type no_of_profiles_stddev_samp_fields {
  id: Float
  no_of_profiles: Float
}

"""aggregate sum on columns"""
type no_of_profiles_sum_fields {
  id: Int
  no_of_profiles: bigint
}

"""aggregate var_pop on columns"""
type no_of_profiles_var_pop_fields {
  id: Float
  no_of_profiles: Float
}

"""aggregate var_samp on columns"""
type no_of_profiles_var_samp_fields {
  id: Float
  no_of_profiles: Float
}

"""aggregate variance on columns"""
type no_of_profiles_variance_fields {
  id: Float
  no_of_profiles: Float
}

"""
columns and relationships of "nodes"
"""
type nodes {
  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_checkin_instant: bigint!

  """"""
  runtime_mode: String!

  """"""
  url: String!
}

"""
aggregated selection of "nodes"
"""
type nodes_aggregate {
  """"""
  aggregate: nodes_aggregate_fields

  """"""
  nodes: [nodes!]!
}

"""
aggregate fields of "nodes"
"""
type nodes_aggregate_fields {
  """"""
  avg: nodes_avg_fields

  """"""
  count(columns: [nodes_select_column!], distinct: Boolean): Int!

  """"""
  max: nodes_max_fields

  """"""
  min: nodes_min_fields

  """"""
  stddev: nodes_stddev_fields

  """"""
  stddev_pop: nodes_stddev_pop_fields

  """"""
  stddev_samp: nodes_stddev_samp_fields

  """"""
  sum: nodes_sum_fields

  """"""
  var_pop: nodes_var_pop_fields

  """"""
  var_samp: nodes_var_samp_fields

  """"""
  variance: nodes_variance_fields
}

"""aggregate avg on columns"""
type nodes_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""
Boolean expression to filter rows from the table "nodes". All fields are combined with a logical 'AND'.
"""
input nodes_bool_exp {
  """"""
  _and: [nodes_bool_exp!]

  """"""
  _not: nodes_bool_exp

  """"""
  _or: [nodes_bool_exp!]

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_checkin_instant: bigint_comparison_exp

  """"""
  runtime_mode: String_comparison_exp

  """"""
  url: String_comparison_exp
}

"""
unique or primary key constraints on table "nodes"
"""
enum nodes_constraint {
  """unique or primary key constraint"""
  nodes_pkey
}

"""
input type for incrementing numeric columns in table "nodes"
"""
input nodes_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_checkin_instant: bigint
}

"""
input type for inserting data into table "nodes"
"""
input nodes_insert_input {
  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_checkin_instant: bigint

  """"""
  runtime_mode: String

  """"""
  url: String
}

"""aggregate max on columns"""
type nodes_max_fields {
  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_checkin_instant: bigint

  """"""
  runtime_mode: String

  """"""
  url: String
}

"""aggregate min on columns"""
type nodes_min_fields {
  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_checkin_instant: bigint

  """"""
  runtime_mode: String

  """"""
  url: String
}

"""
response of any mutation on the table "nodes"
"""
type nodes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [nodes!]!
}

"""
on conflict condition type for table "nodes"
"""
input nodes_on_conflict {
  """"""
  constraint: nodes_constraint!

  """"""
  update_columns: [nodes_update_column!]!

  """"""
  where: nodes_bool_exp
}

"""Ordering options when selecting data from "nodes"."""
input nodes_order_by {
  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_checkin_instant: order_by

  """"""
  runtime_mode: order_by

  """"""
  url: order_by
}

"""primary key columns input for table: nodes"""
input nodes_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "nodes"
"""
enum nodes_select_column {
  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_checkin_instant

  """column name"""
  runtime_mode

  """column name"""
  url
}

"""
input type for updating data in table "nodes"
"""
input nodes_set_input {
  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_checkin_instant: bigint

  """"""
  runtime_mode: String

  """"""
  url: String
}

"""aggregate stddev on columns"""
type nodes_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""aggregate stddev_pop on columns"""
type nodes_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""aggregate stddev_samp on columns"""
type nodes_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""aggregate sum on columns"""
type nodes_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_checkin_instant: bigint
}

"""
update columns of table "nodes"
"""
enum nodes_update_column {
  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_checkin_instant

  """column name"""
  runtime_mode

  """column name"""
  url
}

"""aggregate var_pop on columns"""
type nodes_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""aggregate var_samp on columns"""
type nodes_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""aggregate variance on columns"""
type nodes_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_checkin_instant: Float
}

"""
columns and relationships of "notification"
"""
type notification {
  created: timestamptz
  id: Int!
  last_try: timestamptz!
  status: String!
  text: String!
  token: String!
  tries: Int!
  updated: timestamptz
  user: Int!
}

"""
aggregated selection of "notification"
"""
type notification_aggregate {
  aggregate: notification_aggregate_fields
  nodes: [notification!]!
}

"""
aggregate fields of "notification"
"""
type notification_aggregate_fields {
  avg: notification_avg_fields
  count(columns: [notification_select_column!], distinct: Boolean): Int!
  max: notification_max_fields
  min: notification_min_fields
  stddev: notification_stddev_fields
  stddev_pop: notification_stddev_pop_fields
  stddev_samp: notification_stddev_samp_fields
  sum: notification_sum_fields
  var_pop: notification_var_pop_fields
  var_samp: notification_var_samp_fields
  variance: notification_variance_fields
}

"""aggregate avg on columns"""
type notification_avg_fields {
  id: Float
  tries: Float
  user: Float
}

"""
Boolean expression to filter rows from the table "notification". All fields are combined with a logical 'AND'.
"""
input notification_bool_exp {
  _and: [notification_bool_exp!]
  _not: notification_bool_exp
  _or: [notification_bool_exp!]
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  last_try: timestamptz_comparison_exp
  status: String_comparison_exp
  text: String_comparison_exp
  token: String_comparison_exp
  tries: Int_comparison_exp
  updated: timestamptz_comparison_exp
  user: Int_comparison_exp
}

"""
unique or primary key constraints on table "notification"
"""
enum notification_constraint {
  """unique or primary key constraint"""
  notification_pkey
}

"""
input type for incrementing numeric columns in table "notification"
"""
input notification_inc_input {
  id: Int
  tries: Int
  user: Int
}

"""
input type for inserting data into table "notification"
"""
input notification_insert_input {
  created: timestamptz
  id: Int
  last_try: timestamptz
  status: String
  text: String
  token: String
  tries: Int
  updated: timestamptz
  user: Int
}

"""aggregate max on columns"""
type notification_max_fields {
  created: timestamptz
  id: Int
  last_try: timestamptz
  status: String
  text: String
  token: String
  tries: Int
  updated: timestamptz
  user: Int
}

"""aggregate min on columns"""
type notification_min_fields {
  created: timestamptz
  id: Int
  last_try: timestamptz
  status: String
  text: String
  token: String
  tries: Int
  updated: timestamptz
  user: Int
}

"""
response of any mutation on the table "notification"
"""
type notification_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [notification!]!
}

"""
on conflict condition type for table "notification"
"""
input notification_on_conflict {
  constraint: notification_constraint!
  update_columns: [notification_update_column!]! = []
  where: notification_bool_exp
}

"""Ordering options when selecting data from "notification"."""
input notification_order_by {
  created: order_by
  id: order_by
  last_try: order_by
  status: order_by
  text: order_by
  token: order_by
  tries: order_by
  updated: order_by
  user: order_by
}

"""primary key columns input for table: notification"""
input notification_pk_columns_input {
  id: Int!
}

"""
select columns of table "notification"
"""
enum notification_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  last_try

  """column name"""
  status

  """column name"""
  text

  """column name"""
  token

  """column name"""
  tries

  """column name"""
  updated

  """column name"""
  user
}

"""
input type for updating data in table "notification"
"""
input notification_set_input {
  created: timestamptz
  id: Int
  last_try: timestamptz
  status: String
  text: String
  token: String
  tries: Int
  updated: timestamptz
  user: Int
}

"""aggregate stddev on columns"""
type notification_stddev_fields {
  id: Float
  tries: Float
  user: Float
}

"""aggregate stddev_pop on columns"""
type notification_stddev_pop_fields {
  id: Float
  tries: Float
  user: Float
}

"""aggregate stddev_samp on columns"""
type notification_stddev_samp_fields {
  id: Float
  tries: Float
  user: Float
}

"""aggregate sum on columns"""
type notification_sum_fields {
  id: Int
  tries: Int
  user: Int
}

"""
update columns of table "notification"
"""
enum notification_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  last_try

  """column name"""
  status

  """column name"""
  text

  """column name"""
  token

  """column name"""
  tries

  """column name"""
  updated

  """column name"""
  user
}

"""aggregate var_pop on columns"""
type notification_var_pop_fields {
  id: Float
  tries: Float
  user: Float
}

"""aggregate var_samp on columns"""
type notification_var_samp_fields {
  id: Float
  tries: Float
  user: Float
}

"""aggregate variance on columns"""
type notification_variance_fields {
  id: Float
  tries: Float
  user: Float
}

"""
columns and relationships of "number_of_highschools"
"""
type number_of_highschools {
  block: String
  count: bigint
  district: String
}

"""
aggregated selection of "number_of_highschools"
"""
type number_of_highschools_aggregate {
  aggregate: number_of_highschools_aggregate_fields
  nodes: [number_of_highschools!]!
}

"""
aggregate fields of "number_of_highschools"
"""
type number_of_highschools_aggregate_fields {
  avg: number_of_highschools_avg_fields
  count(columns: [number_of_highschools_select_column!], distinct: Boolean): Int!
  max: number_of_highschools_max_fields
  min: number_of_highschools_min_fields
  stddev: number_of_highschools_stddev_fields
  stddev_pop: number_of_highschools_stddev_pop_fields
  stddev_samp: number_of_highschools_stddev_samp_fields
  sum: number_of_highschools_sum_fields
  var_pop: number_of_highschools_var_pop_fields
  var_samp: number_of_highschools_var_samp_fields
  variance: number_of_highschools_variance_fields
}

"""aggregate avg on columns"""
type number_of_highschools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "number_of_highschools". All fields are combined with a logical 'AND'.
"""
input number_of_highschools_bool_exp {
  _and: [number_of_highschools_bool_exp!]
  _not: number_of_highschools_bool_exp
  _or: [number_of_highschools_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "number_of_highschools"
"""
input number_of_highschools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "number_of_highschools"
"""
input number_of_highschools_insert_input {
  block: String
  count: bigint
  district: String
}

"""aggregate max on columns"""
type number_of_highschools_max_fields {
  block: String
  count: bigint
  district: String
}

"""aggregate min on columns"""
type number_of_highschools_min_fields {
  block: String
  count: bigint
  district: String
}

"""
response of any mutation on the table "number_of_highschools"
"""
type number_of_highschools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [number_of_highschools!]!
}

"""Ordering options when selecting data from "number_of_highschools"."""
input number_of_highschools_order_by {
  block: order_by
  count: order_by
  district: order_by
}

"""
select columns of table "number_of_highschools"
"""
enum number_of_highschools_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  district
}

"""
input type for updating data in table "number_of_highschools"
"""
input number_of_highschools_set_input {
  block: String
  count: bigint
  district: String
}

"""aggregate stddev on columns"""
type number_of_highschools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type number_of_highschools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type number_of_highschools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type number_of_highschools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type number_of_highschools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type number_of_highschools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type number_of_highschools_variance_fields {
  count: Float
}

"""
columns and relationships of "number_of_middleschools"
"""
type number_of_middleschools {
  block: String
  count: bigint
  district: String
}

"""
aggregated selection of "number_of_middleschools"
"""
type number_of_middleschools_aggregate {
  aggregate: number_of_middleschools_aggregate_fields
  nodes: [number_of_middleschools!]!
}

"""
aggregate fields of "number_of_middleschools"
"""
type number_of_middleschools_aggregate_fields {
  avg: number_of_middleschools_avg_fields
  count(columns: [number_of_middleschools_select_column!], distinct: Boolean): Int!
  max: number_of_middleschools_max_fields
  min: number_of_middleschools_min_fields
  stddev: number_of_middleschools_stddev_fields
  stddev_pop: number_of_middleschools_stddev_pop_fields
  stddev_samp: number_of_middleschools_stddev_samp_fields
  sum: number_of_middleschools_sum_fields
  var_pop: number_of_middleschools_var_pop_fields
  var_samp: number_of_middleschools_var_samp_fields
  variance: number_of_middleschools_variance_fields
}

"""aggregate avg on columns"""
type number_of_middleschools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "number_of_middleschools". All fields are combined with a logical 'AND'.
"""
input number_of_middleschools_bool_exp {
  _and: [number_of_middleschools_bool_exp!]
  _not: number_of_middleschools_bool_exp
  _or: [number_of_middleschools_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "number_of_middleschools"
"""
input number_of_middleschools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "number_of_middleschools"
"""
input number_of_middleschools_insert_input {
  block: String
  count: bigint
  district: String
}

"""aggregate max on columns"""
type number_of_middleschools_max_fields {
  block: String
  count: bigint
  district: String
}

"""aggregate min on columns"""
type number_of_middleschools_min_fields {
  block: String
  count: bigint
  district: String
}

"""
response of any mutation on the table "number_of_middleschools"
"""
type number_of_middleschools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [number_of_middleschools!]!
}

"""Ordering options when selecting data from "number_of_middleschools"."""
input number_of_middleschools_order_by {
  block: order_by
  count: order_by
  district: order_by
}

"""
select columns of table "number_of_middleschools"
"""
enum number_of_middleschools_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  district
}

"""
input type for updating data in table "number_of_middleschools"
"""
input number_of_middleschools_set_input {
  block: String
  count: bigint
  district: String
}

"""aggregate stddev on columns"""
type number_of_middleschools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type number_of_middleschools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type number_of_middleschools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type number_of_middleschools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type number_of_middleschools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type number_of_middleschools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type number_of_middleschools_variance_fields {
  count: Float
}

"""
columns and relationships of "number_of_primaryschools"
"""
type number_of_primaryschools {
  block: String
  count: bigint
  district: String
}

"""
aggregated selection of "number_of_primaryschools"
"""
type number_of_primaryschools_aggregate {
  aggregate: number_of_primaryschools_aggregate_fields
  nodes: [number_of_primaryschools!]!
}

"""
aggregate fields of "number_of_primaryschools"
"""
type number_of_primaryschools_aggregate_fields {
  avg: number_of_primaryschools_avg_fields
  count(columns: [number_of_primaryschools_select_column!], distinct: Boolean): Int!
  max: number_of_primaryschools_max_fields
  min: number_of_primaryschools_min_fields
  stddev: number_of_primaryschools_stddev_fields
  stddev_pop: number_of_primaryschools_stddev_pop_fields
  stddev_samp: number_of_primaryschools_stddev_samp_fields
  sum: number_of_primaryschools_sum_fields
  var_pop: number_of_primaryschools_var_pop_fields
  var_samp: number_of_primaryschools_var_samp_fields
  variance: number_of_primaryschools_variance_fields
}

"""aggregate avg on columns"""
type number_of_primaryschools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "number_of_primaryschools". All fields are combined with a logical 'AND'.
"""
input number_of_primaryschools_bool_exp {
  _and: [number_of_primaryschools_bool_exp!]
  _not: number_of_primaryschools_bool_exp
  _or: [number_of_primaryschools_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "number_of_primaryschools"
"""
input number_of_primaryschools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "number_of_primaryschools"
"""
input number_of_primaryschools_insert_input {
  block: String
  count: bigint
  district: String
}

"""aggregate max on columns"""
type number_of_primaryschools_max_fields {
  block: String
  count: bigint
  district: String
}

"""aggregate min on columns"""
type number_of_primaryschools_min_fields {
  block: String
  count: bigint
  district: String
}

"""
response of any mutation on the table "number_of_primaryschools"
"""
type number_of_primaryschools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [number_of_primaryschools!]!
}

"""Ordering options when selecting data from "number_of_primaryschools"."""
input number_of_primaryschools_order_by {
  block: order_by
  count: order_by
  district: order_by
}

"""
select columns of table "number_of_primaryschools"
"""
enum number_of_primaryschools_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  district
}

"""
input type for updating data in table "number_of_primaryschools"
"""
input number_of_primaryschools_set_input {
  block: String
  count: bigint
  district: String
}

"""aggregate stddev on columns"""
type number_of_primaryschools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type number_of_primaryschools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type number_of_primaryschools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type number_of_primaryschools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type number_of_primaryschools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type number_of_primaryschools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type number_of_primaryschools_variance_fields {
  count: Float
}

"""
columns and relationships of "number_of_secondaryschools"
"""
type number_of_secondaryschools {
  block: String
  count: bigint
  district: String
}

"""
aggregated selection of "number_of_secondaryschools"
"""
type number_of_secondaryschools_aggregate {
  aggregate: number_of_secondaryschools_aggregate_fields
  nodes: [number_of_secondaryschools!]!
}

"""
aggregate fields of "number_of_secondaryschools"
"""
type number_of_secondaryschools_aggregate_fields {
  avg: number_of_secondaryschools_avg_fields
  count(columns: [number_of_secondaryschools_select_column!], distinct: Boolean): Int!
  max: number_of_secondaryschools_max_fields
  min: number_of_secondaryschools_min_fields
  stddev: number_of_secondaryschools_stddev_fields
  stddev_pop: number_of_secondaryschools_stddev_pop_fields
  stddev_samp: number_of_secondaryschools_stddev_samp_fields
  sum: number_of_secondaryschools_sum_fields
  var_pop: number_of_secondaryschools_var_pop_fields
  var_samp: number_of_secondaryschools_var_samp_fields
  variance: number_of_secondaryschools_variance_fields
}

"""aggregate avg on columns"""
type number_of_secondaryschools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "number_of_secondaryschools". All fields are combined with a logical 'AND'.
"""
input number_of_secondaryschools_bool_exp {
  _and: [number_of_secondaryschools_bool_exp!]
  _not: number_of_secondaryschools_bool_exp
  _or: [number_of_secondaryschools_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "number_of_secondaryschools"
"""
input number_of_secondaryschools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "number_of_secondaryschools"
"""
input number_of_secondaryschools_insert_input {
  block: String
  count: bigint
  district: String
}

"""aggregate max on columns"""
type number_of_secondaryschools_max_fields {
  block: String
  count: bigint
  district: String
}

"""aggregate min on columns"""
type number_of_secondaryschools_min_fields {
  block: String
  count: bigint
  district: String
}

"""
response of any mutation on the table "number_of_secondaryschools"
"""
type number_of_secondaryschools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [number_of_secondaryschools!]!
}

"""
Ordering options when selecting data from "number_of_secondaryschools".
"""
input number_of_secondaryschools_order_by {
  block: order_by
  count: order_by
  district: order_by
}

"""
select columns of table "number_of_secondaryschools"
"""
enum number_of_secondaryschools_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  district
}

"""
input type for updating data in table "number_of_secondaryschools"
"""
input number_of_secondaryschools_set_input {
  block: String
  count: bigint
  district: String
}

"""aggregate stddev on columns"""
type number_of_secondaryschools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type number_of_secondaryschools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type number_of_secondaryschools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type number_of_secondaryschools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type number_of_secondaryschools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type number_of_secondaryschools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type number_of_secondaryschools_variance_fields {
  count: Float
}

"""
columns and relationships of "number_of_totalschools"
"""
type number_of_totalschools {
  block: String
  count: bigint
  district: String
}

"""
aggregated selection of "number_of_totalschools"
"""
type number_of_totalschools_aggregate {
  aggregate: number_of_totalschools_aggregate_fields
  nodes: [number_of_totalschools!]!
}

"""
aggregate fields of "number_of_totalschools"
"""
type number_of_totalschools_aggregate_fields {
  avg: number_of_totalschools_avg_fields
  count(columns: [number_of_totalschools_select_column!], distinct: Boolean): Int!
  max: number_of_totalschools_max_fields
  min: number_of_totalschools_min_fields
  stddev: number_of_totalschools_stddev_fields
  stddev_pop: number_of_totalschools_stddev_pop_fields
  stddev_samp: number_of_totalschools_stddev_samp_fields
  sum: number_of_totalschools_sum_fields
  var_pop: number_of_totalschools_var_pop_fields
  var_samp: number_of_totalschools_var_samp_fields
  variance: number_of_totalschools_variance_fields
}

"""aggregate avg on columns"""
type number_of_totalschools_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "number_of_totalschools". All fields are combined with a logical 'AND'.
"""
input number_of_totalschools_bool_exp {
  _and: [number_of_totalschools_bool_exp!]
  _not: number_of_totalschools_bool_exp
  _or: [number_of_totalschools_bool_exp!]
  block: String_comparison_exp
  count: bigint_comparison_exp
  district: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "number_of_totalschools"
"""
input number_of_totalschools_inc_input {
  count: bigint
}

"""
input type for inserting data into table "number_of_totalschools"
"""
input number_of_totalschools_insert_input {
  block: String
  count: bigint
  district: String
}

"""aggregate max on columns"""
type number_of_totalschools_max_fields {
  block: String
  count: bigint
  district: String
}

"""aggregate min on columns"""
type number_of_totalschools_min_fields {
  block: String
  count: bigint
  district: String
}

"""
response of any mutation on the table "number_of_totalschools"
"""
type number_of_totalschools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [number_of_totalschools!]!
}

"""Ordering options when selecting data from "number_of_totalschools"."""
input number_of_totalschools_order_by {
  block: order_by
  count: order_by
  district: order_by
}

"""
select columns of table "number_of_totalschools"
"""
enum number_of_totalschools_select_column {
  """column name"""
  block

  """column name"""
  count

  """column name"""
  district
}

"""
input type for updating data in table "number_of_totalschools"
"""
input number_of_totalschools_set_input {
  block: String
  count: bigint
  district: String
}

"""aggregate stddev on columns"""
type number_of_totalschools_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type number_of_totalschools_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type number_of_totalschools_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type number_of_totalschools_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type number_of_totalschools_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type number_of_totalschools_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type number_of_totalschools_variance_fields {
  count: Float
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""
columns and relationships of "odk_submission"
"""
type odk_submission {
  data: String
  form_id: String!
  form_name_id: Int
  id: Int!
  is_duplicate: Boolean!
  is_duplicate_notification_sent: Boolean!
  school_udise: Int!
  status: Int
  submission_date: timestamptz
  xml: String
}

"""
aggregated selection of "odk_submission"
"""
type odk_submission_aggregate {
  aggregate: odk_submission_aggregate_fields
  nodes: [odk_submission!]!
}

"""
aggregate fields of "odk_submission"
"""
type odk_submission_aggregate_fields {
  avg: odk_submission_avg_fields
  count(columns: [odk_submission_select_column!], distinct: Boolean): Int!
  max: odk_submission_max_fields
  min: odk_submission_min_fields
  stddev: odk_submission_stddev_fields
  stddev_pop: odk_submission_stddev_pop_fields
  stddev_samp: odk_submission_stddev_samp_fields
  sum: odk_submission_sum_fields
  var_pop: odk_submission_var_pop_fields
  var_samp: odk_submission_var_samp_fields
  variance: odk_submission_variance_fields
}

"""aggregate avg on columns"""
type odk_submission_avg_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

"""
Boolean expression to filter rows from the table "odk_submission". All fields are combined with a logical 'AND'.
"""
input odk_submission_bool_exp {
  _and: [odk_submission_bool_exp!]
  _not: odk_submission_bool_exp
  _or: [odk_submission_bool_exp!]
  data: String_comparison_exp
  form_id: String_comparison_exp
  form_name_id: Int_comparison_exp
  id: Int_comparison_exp
  is_duplicate: Boolean_comparison_exp
  is_duplicate_notification_sent: Boolean_comparison_exp
  school_udise: Int_comparison_exp
  status: Int_comparison_exp
  submission_date: timestamptz_comparison_exp
  xml: String_comparison_exp
}

"""
unique or primary key constraints on table "odk_submission"
"""
enum odk_submission_constraint {
  """unique or primary key constraint"""
  odk_submission_pkey
}

"""
input type for incrementing numeric columns in table "odk_submission"
"""
input odk_submission_inc_input {
  form_name_id: Int
  id: Int
  school_udise: Int
  status: Int
}

"""
input type for inserting data into table "odk_submission"
"""
input odk_submission_insert_input {
  data: String
  form_id: String
  form_name_id: Int
  id: Int
  is_duplicate: Boolean
  is_duplicate_notification_sent: Boolean
  school_udise: Int
  status: Int
  submission_date: timestamptz
  xml: String
}

"""aggregate max on columns"""
type odk_submission_max_fields {
  data: String
  form_id: String
  form_name_id: Int
  id: Int
  school_udise: Int
  status: Int
  submission_date: timestamptz
  xml: String
}

"""aggregate min on columns"""
type odk_submission_min_fields {
  data: String
  form_id: String
  form_name_id: Int
  id: Int
  school_udise: Int
  status: Int
  submission_date: timestamptz
  xml: String
}

"""
response of any mutation on the table "odk_submission"
"""
type odk_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [odk_submission!]!
}

"""
on conflict condition type for table "odk_submission"
"""
input odk_submission_on_conflict {
  constraint: odk_submission_constraint!
  update_columns: [odk_submission_update_column!]! = []
  where: odk_submission_bool_exp
}

"""Ordering options when selecting data from "odk_submission"."""
input odk_submission_order_by {
  data: order_by
  form_id: order_by
  form_name_id: order_by
  id: order_by
  is_duplicate: order_by
  is_duplicate_notification_sent: order_by
  school_udise: order_by
  status: order_by
  submission_date: order_by
  xml: order_by
}

"""primary key columns input for table: odk_submission"""
input odk_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "odk_submission"
"""
enum odk_submission_select_column {
  """column name"""
  data

  """column name"""
  form_id

  """column name"""
  form_name_id

  """column name"""
  id

  """column name"""
  is_duplicate

  """column name"""
  is_duplicate_notification_sent

  """column name"""
  school_udise

  """column name"""
  status

  """column name"""
  submission_date

  """column name"""
  xml
}

"""
input type for updating data in table "odk_submission"
"""
input odk_submission_set_input {
  data: String
  form_id: String
  form_name_id: Int
  id: Int
  is_duplicate: Boolean
  is_duplicate_notification_sent: Boolean
  school_udise: Int
  status: Int
  submission_date: timestamptz
  xml: String
}

"""aggregate stddev on columns"""
type odk_submission_stddev_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

"""aggregate stddev_pop on columns"""
type odk_submission_stddev_pop_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

"""aggregate stddev_samp on columns"""
type odk_submission_stddev_samp_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

"""aggregate sum on columns"""
type odk_submission_sum_fields {
  form_name_id: Int
  id: Int
  school_udise: Int
  status: Int
}

"""
update columns of table "odk_submission"
"""
enum odk_submission_update_column {
  """column name"""
  data

  """column name"""
  form_id

  """column name"""
  form_name_id

  """column name"""
  id

  """column name"""
  is_duplicate

  """column name"""
  is_duplicate_notification_sent

  """column name"""
  school_udise

  """column name"""
  status

  """column name"""
  submission_date

  """column name"""
  xml
}

"""aggregate var_pop on columns"""
type odk_submission_var_pop_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

"""aggregate var_samp on columns"""
type odk_submission_var_samp_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

"""aggregate variance on columns"""
type odk_submission_variance_fields {
  form_name_id: Float
  id: Float
  school_udise: Float
  status: Float
}

scalar oid

"""
Boolean expression to compare columns of type "oid". All fields are combined with logical 'AND'.
"""
input oid_comparison_exp {
  _eq: oid
  _gt: oid
  _gte: oid
  _in: [oid!]
  _is_null: Boolean
  _lt: oid
  _lte: oid
  _neq: oid
  _nin: [oid!]
}

"""
columns and relationships of "old_assessment"
"""
type old_assessment {
  block: String
  category: String
  clazz: String
  cluster: String
  created: timestamptz
  cwsn: String
  district: String!
  gender: String
  grade: String!
  grade_ab: float8!
  id: Int!
  percentage: float8!
  roll: String
  sa1: Int!
  sa2: Int!
  school_category: String
  school_name: String
  section: String
  student_id: String
  subject: String
  summer_winter: String
  total: float8!
  udise: String
  updated: timestamptz
  year: String
}

"""
aggregated selection of "old_assessment"
"""
type old_assessment_aggregate {
  aggregate: old_assessment_aggregate_fields
  nodes: [old_assessment!]!
}

"""
aggregate fields of "old_assessment"
"""
type old_assessment_aggregate_fields {
  avg: old_assessment_avg_fields
  count(columns: [old_assessment_select_column!], distinct: Boolean): Int!
  max: old_assessment_max_fields
  min: old_assessment_min_fields
  stddev: old_assessment_stddev_fields
  stddev_pop: old_assessment_stddev_pop_fields
  stddev_samp: old_assessment_stddev_samp_fields
  sum: old_assessment_sum_fields
  var_pop: old_assessment_var_pop_fields
  var_samp: old_assessment_var_samp_fields
  variance: old_assessment_variance_fields
}

"""aggregate avg on columns"""
type old_assessment_avg_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""
Boolean expression to filter rows from the table "old_assessment". All fields are combined with a logical 'AND'.
"""
input old_assessment_bool_exp {
  _and: [old_assessment_bool_exp!]
  _not: old_assessment_bool_exp
  _or: [old_assessment_bool_exp!]
  block: String_comparison_exp
  category: String_comparison_exp
  clazz: String_comparison_exp
  cluster: String_comparison_exp
  created: timestamptz_comparison_exp
  cwsn: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade: String_comparison_exp
  grade_ab: float8_comparison_exp
  id: Int_comparison_exp
  percentage: float8_comparison_exp
  roll: String_comparison_exp
  sa1: Int_comparison_exp
  sa2: Int_comparison_exp
  school_category: String_comparison_exp
  school_name: String_comparison_exp
  section: String_comparison_exp
  student_id: String_comparison_exp
  subject: String_comparison_exp
  summer_winter: String_comparison_exp
  total: float8_comparison_exp
  udise: String_comparison_exp
  updated: timestamptz_comparison_exp
  year: String_comparison_exp
}

"""
unique or primary key constraints on table "old_assessment"
"""
enum old_assessment_constraint {
  """unique or primary key constraint"""
  old_assessment_pkey
}

"""
input type for incrementing numeric columns in table "old_assessment"
"""
input old_assessment_inc_input {
  grade_ab: float8
  id: Int
  percentage: float8
  sa1: Int
  sa2: Int
  total: float8
}

"""
input type for inserting data into table "old_assessment"
"""
input old_assessment_insert_input {
  block: String
  category: String
  clazz: String
  cluster: String
  created: timestamptz
  cwsn: String
  district: String
  gender: String
  grade: String
  grade_ab: float8
  id: Int
  percentage: float8
  roll: String
  sa1: Int
  sa2: Int
  school_category: String
  school_name: String
  section: String
  student_id: String
  subject: String
  summer_winter: String
  total: float8
  udise: String
  updated: timestamptz
  year: String
}

"""aggregate max on columns"""
type old_assessment_max_fields {
  block: String
  category: String
  clazz: String
  cluster: String
  created: timestamptz
  cwsn: String
  district: String
  gender: String
  grade: String
  grade_ab: float8
  id: Int
  percentage: float8
  roll: String
  sa1: Int
  sa2: Int
  school_category: String
  school_name: String
  section: String
  student_id: String
  subject: String
  summer_winter: String
  total: float8
  udise: String
  updated: timestamptz
  year: String
}

"""aggregate min on columns"""
type old_assessment_min_fields {
  block: String
  category: String
  clazz: String
  cluster: String
  created: timestamptz
  cwsn: String
  district: String
  gender: String
  grade: String
  grade_ab: float8
  id: Int
  percentage: float8
  roll: String
  sa1: Int
  sa2: Int
  school_category: String
  school_name: String
  section: String
  student_id: String
  subject: String
  summer_winter: String
  total: float8
  udise: String
  updated: timestamptz
  year: String
}

"""
response of any mutation on the table "old_assessment"
"""
type old_assessment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [old_assessment!]!
}

"""
on conflict condition type for table "old_assessment"
"""
input old_assessment_on_conflict {
  constraint: old_assessment_constraint!
  update_columns: [old_assessment_update_column!]! = []
  where: old_assessment_bool_exp
}

"""Ordering options when selecting data from "old_assessment"."""
input old_assessment_order_by {
  block: order_by
  category: order_by
  clazz: order_by
  cluster: order_by
  created: order_by
  cwsn: order_by
  district: order_by
  gender: order_by
  grade: order_by
  grade_ab: order_by
  id: order_by
  percentage: order_by
  roll: order_by
  sa1: order_by
  sa2: order_by
  school_category: order_by
  school_name: order_by
  section: order_by
  student_id: order_by
  subject: order_by
  summer_winter: order_by
  total: order_by
  udise: order_by
  updated: order_by
  year: order_by
}

"""primary key columns input for table: old_assessment"""
input old_assessment_pk_columns_input {
  id: Int!
}

"""
select columns of table "old_assessment"
"""
enum old_assessment_select_column {
  """column name"""
  block

  """column name"""
  category

  """column name"""
  clazz

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  cwsn

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade

  """column name"""
  grade_ab

  """column name"""
  id

  """column name"""
  percentage

  """column name"""
  roll

  """column name"""
  sa1

  """column name"""
  sa2

  """column name"""
  school_category

  """column name"""
  school_name

  """column name"""
  section

  """column name"""
  student_id

  """column name"""
  subject

  """column name"""
  summer_winter

  """column name"""
  total

  """column name"""
  udise

  """column name"""
  updated

  """column name"""
  year
}

"""
input type for updating data in table "old_assessment"
"""
input old_assessment_set_input {
  block: String
  category: String
  clazz: String
  cluster: String
  created: timestamptz
  cwsn: String
  district: String
  gender: String
  grade: String
  grade_ab: float8
  id: Int
  percentage: float8
  roll: String
  sa1: Int
  sa2: Int
  school_category: String
  school_name: String
  section: String
  student_id: String
  subject: String
  summer_winter: String
  total: float8
  udise: String
  updated: timestamptz
  year: String
}

"""aggregate stddev on columns"""
type old_assessment_stddev_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""aggregate stddev_pop on columns"""
type old_assessment_stddev_pop_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""aggregate stddev_samp on columns"""
type old_assessment_stddev_samp_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""aggregate sum on columns"""
type old_assessment_sum_fields {
  grade_ab: float8
  id: Int
  percentage: float8
  sa1: Int
  sa2: Int
  total: float8
}

"""
update columns of table "old_assessment"
"""
enum old_assessment_update_column {
  """column name"""
  block

  """column name"""
  category

  """column name"""
  clazz

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  cwsn

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade

  """column name"""
  grade_ab

  """column name"""
  id

  """column name"""
  percentage

  """column name"""
  roll

  """column name"""
  sa1

  """column name"""
  sa2

  """column name"""
  school_category

  """column name"""
  school_name

  """column name"""
  section

  """column name"""
  student_id

  """column name"""
  subject

  """column name"""
  summer_winter

  """column name"""
  total

  """column name"""
  udise

  """column name"""
  updated

  """column name"""
  year
}

"""aggregate var_pop on columns"""
type old_assessment_var_pop_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""aggregate var_samp on columns"""
type old_assessment_var_samp_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""aggregate variance on columns"""
type old_assessment_variance_fields {
  grade_ab: Float
  id: Float
  percentage: Float
  sa1: Float
  sa2: Float
  total: Float
}

"""
columns and relationships of "old_lo_master"
"""
type old_lo_master {
  clazz: String
  code: String
  competency: String!
  created: timestamptz
  id: Int!
  subject: String
  updated: timestamptz
  year: String
}

"""
aggregated selection of "old_lo_master"
"""
type old_lo_master_aggregate {
  aggregate: old_lo_master_aggregate_fields
  nodes: [old_lo_master!]!
}

"""
aggregate fields of "old_lo_master"
"""
type old_lo_master_aggregate_fields {
  avg: old_lo_master_avg_fields
  count(columns: [old_lo_master_select_column!], distinct: Boolean): Int!
  max: old_lo_master_max_fields
  min: old_lo_master_min_fields
  stddev: old_lo_master_stddev_fields
  stddev_pop: old_lo_master_stddev_pop_fields
  stddev_samp: old_lo_master_stddev_samp_fields
  sum: old_lo_master_sum_fields
  var_pop: old_lo_master_var_pop_fields
  var_samp: old_lo_master_var_samp_fields
  variance: old_lo_master_variance_fields
}

"""aggregate avg on columns"""
type old_lo_master_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "old_lo_master". All fields are combined with a logical 'AND'.
"""
input old_lo_master_bool_exp {
  _and: [old_lo_master_bool_exp!]
  _not: old_lo_master_bool_exp
  _or: [old_lo_master_bool_exp!]
  clazz: String_comparison_exp
  code: String_comparison_exp
  competency: String_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  subject: String_comparison_exp
  updated: timestamptz_comparison_exp
  year: String_comparison_exp
}

"""
unique or primary key constraints on table "old_lo_master"
"""
enum old_lo_master_constraint {
  """unique or primary key constraint"""
  old_lo_master_pkey
}

"""
input type for incrementing numeric columns in table "old_lo_master"
"""
input old_lo_master_inc_input {
  id: Int
}

"""
input type for inserting data into table "old_lo_master"
"""
input old_lo_master_insert_input {
  clazz: String
  code: String
  competency: String
  created: timestamptz
  id: Int
  subject: String
  updated: timestamptz
  year: String
}

"""aggregate max on columns"""
type old_lo_master_max_fields {
  clazz: String
  code: String
  competency: String
  created: timestamptz
  id: Int
  subject: String
  updated: timestamptz
  year: String
}

"""aggregate min on columns"""
type old_lo_master_min_fields {
  clazz: String
  code: String
  competency: String
  created: timestamptz
  id: Int
  subject: String
  updated: timestamptz
  year: String
}

"""
response of any mutation on the table "old_lo_master"
"""
type old_lo_master_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [old_lo_master!]!
}

"""
on conflict condition type for table "old_lo_master"
"""
input old_lo_master_on_conflict {
  constraint: old_lo_master_constraint!
  update_columns: [old_lo_master_update_column!]! = []
  where: old_lo_master_bool_exp
}

"""Ordering options when selecting data from "old_lo_master"."""
input old_lo_master_order_by {
  clazz: order_by
  code: order_by
  competency: order_by
  created: order_by
  id: order_by
  subject: order_by
  updated: order_by
  year: order_by
}

"""primary key columns input for table: old_lo_master"""
input old_lo_master_pk_columns_input {
  id: Int!
}

"""
select columns of table "old_lo_master"
"""
enum old_lo_master_select_column {
  """column name"""
  clazz

  """column name"""
  code

  """column name"""
  competency

  """column name"""
  created

  """column name"""
  id

  """column name"""
  subject

  """column name"""
  updated

  """column name"""
  year
}

"""
input type for updating data in table "old_lo_master"
"""
input old_lo_master_set_input {
  clazz: String
  code: String
  competency: String
  created: timestamptz
  id: Int
  subject: String
  updated: timestamptz
  year: String
}

"""aggregate stddev on columns"""
type old_lo_master_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type old_lo_master_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type old_lo_master_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type old_lo_master_sum_fields {
  id: Int
}

"""
update columns of table "old_lo_master"
"""
enum old_lo_master_update_column {
  """column name"""
  clazz

  """column name"""
  code

  """column name"""
  competency

  """column name"""
  created

  """column name"""
  id

  """column name"""
  subject

  """column name"""
  updated

  """column name"""
  year
}

"""aggregate var_pop on columns"""
type old_lo_master_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type old_lo_master_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type old_lo_master_variance_fields {
  id: Float
}

"""
columns and relationships of "old_lo_submissions"
"""
type old_lo_submissions {
  achievement_percent: float8!
  clazz: String
  created: timestamptz
  id: Int!
  learning_outcome: String!
  school_name: String
  subject: String
  updated: timestamptz
}

"""
aggregated selection of "old_lo_submissions"
"""
type old_lo_submissions_aggregate {
  aggregate: old_lo_submissions_aggregate_fields
  nodes: [old_lo_submissions!]!
}

"""
aggregate fields of "old_lo_submissions"
"""
type old_lo_submissions_aggregate_fields {
  avg: old_lo_submissions_avg_fields
  count(columns: [old_lo_submissions_select_column!], distinct: Boolean): Int!
  max: old_lo_submissions_max_fields
  min: old_lo_submissions_min_fields
  stddev: old_lo_submissions_stddev_fields
  stddev_pop: old_lo_submissions_stddev_pop_fields
  stddev_samp: old_lo_submissions_stddev_samp_fields
  sum: old_lo_submissions_sum_fields
  var_pop: old_lo_submissions_var_pop_fields
  var_samp: old_lo_submissions_var_samp_fields
  variance: old_lo_submissions_variance_fields
}

"""aggregate avg on columns"""
type old_lo_submissions_avg_fields {
  achievement_percent: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "old_lo_submissions". All fields are combined with a logical 'AND'.
"""
input old_lo_submissions_bool_exp {
  _and: [old_lo_submissions_bool_exp!]
  _not: old_lo_submissions_bool_exp
  _or: [old_lo_submissions_bool_exp!]
  achievement_percent: float8_comparison_exp
  clazz: String_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  learning_outcome: String_comparison_exp
  school_name: String_comparison_exp
  subject: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "old_lo_submissions"
"""
enum old_lo_submissions_constraint {
  """unique or primary key constraint"""
  old_lo_submissions_pkey
}

"""
input type for incrementing numeric columns in table "old_lo_submissions"
"""
input old_lo_submissions_inc_input {
  achievement_percent: float8
  id: Int
}

"""
input type for inserting data into table "old_lo_submissions"
"""
input old_lo_submissions_insert_input {
  achievement_percent: float8
  clazz: String
  created: timestamptz
  id: Int
  learning_outcome: String
  school_name: String
  subject: String
  updated: timestamptz
}

"""aggregate max on columns"""
type old_lo_submissions_max_fields {
  achievement_percent: float8
  clazz: String
  created: timestamptz
  id: Int
  learning_outcome: String
  school_name: String
  subject: String
  updated: timestamptz
}

"""aggregate min on columns"""
type old_lo_submissions_min_fields {
  achievement_percent: float8
  clazz: String
  created: timestamptz
  id: Int
  learning_outcome: String
  school_name: String
  subject: String
  updated: timestamptz
}

"""
response of any mutation on the table "old_lo_submissions"
"""
type old_lo_submissions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [old_lo_submissions!]!
}

"""
on conflict condition type for table "old_lo_submissions"
"""
input old_lo_submissions_on_conflict {
  constraint: old_lo_submissions_constraint!
  update_columns: [old_lo_submissions_update_column!]! = []
  where: old_lo_submissions_bool_exp
}

"""Ordering options when selecting data from "old_lo_submissions"."""
input old_lo_submissions_order_by {
  achievement_percent: order_by
  clazz: order_by
  created: order_by
  id: order_by
  learning_outcome: order_by
  school_name: order_by
  subject: order_by
  updated: order_by
}

"""primary key columns input for table: old_lo_submissions"""
input old_lo_submissions_pk_columns_input {
  id: Int!
}

"""
select columns of table "old_lo_submissions"
"""
enum old_lo_submissions_select_column {
  """column name"""
  achievement_percent

  """column name"""
  clazz

  """column name"""
  created

  """column name"""
  id

  """column name"""
  learning_outcome

  """column name"""
  school_name

  """column name"""
  subject

  """column name"""
  updated
}

"""
input type for updating data in table "old_lo_submissions"
"""
input old_lo_submissions_set_input {
  achievement_percent: float8
  clazz: String
  created: timestamptz
  id: Int
  learning_outcome: String
  school_name: String
  subject: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type old_lo_submissions_stddev_fields {
  achievement_percent: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type old_lo_submissions_stddev_pop_fields {
  achievement_percent: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type old_lo_submissions_stddev_samp_fields {
  achievement_percent: Float
  id: Float
}

"""aggregate sum on columns"""
type old_lo_submissions_sum_fields {
  achievement_percent: float8
  id: Int
}

"""
update columns of table "old_lo_submissions"
"""
enum old_lo_submissions_update_column {
  """column name"""
  achievement_percent

  """column name"""
  clazz

  """column name"""
  created

  """column name"""
  id

  """column name"""
  learning_outcome

  """column name"""
  school_name

  """column name"""
  subject

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type old_lo_submissions_var_pop_fields {
  achievement_percent: Float
  id: Float
}

"""aggregate var_samp on columns"""
type old_lo_submissions_var_samp_fields {
  achievement_percent: Float
  id: Float
}

"""aggregate variance on columns"""
type old_lo_submissions_variance_fields {
  achievement_percent: Float
  id: Float
}

"""
columns and relationships of "old_schools"
"""
type old_schools {
  block: String
  category: String
  cluster: String
  created: timestamptz
  district: String
  id: Int!
  name: String
  session: String
  udise: String
  updated: timestamptz
}

"""
aggregated selection of "old_schools"
"""
type old_schools_aggregate {
  aggregate: old_schools_aggregate_fields
  nodes: [old_schools!]!
}

"""
aggregate fields of "old_schools"
"""
type old_schools_aggregate_fields {
  avg: old_schools_avg_fields
  count(columns: [old_schools_select_column!], distinct: Boolean): Int!
  max: old_schools_max_fields
  min: old_schools_min_fields
  stddev: old_schools_stddev_fields
  stddev_pop: old_schools_stddev_pop_fields
  stddev_samp: old_schools_stddev_samp_fields
  sum: old_schools_sum_fields
  var_pop: old_schools_var_pop_fields
  var_samp: old_schools_var_samp_fields
  variance: old_schools_variance_fields
}

"""aggregate avg on columns"""
type old_schools_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "old_schools". All fields are combined with a logical 'AND'.
"""
input old_schools_bool_exp {
  _and: [old_schools_bool_exp!]
  _not: old_schools_bool_exp
  _or: [old_schools_bool_exp!]
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  created: timestamptz_comparison_exp
  district: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  session: String_comparison_exp
  udise: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "old_schools"
"""
enum old_schools_constraint {
  """unique or primary key constraint"""
  old_schools_pkey
}

"""
input type for incrementing numeric columns in table "old_schools"
"""
input old_schools_inc_input {
  id: Int
}

"""
input type for inserting data into table "old_schools"
"""
input old_schools_insert_input {
  block: String
  category: String
  cluster: String
  created: timestamptz
  district: String
  id: Int
  name: String
  session: String
  udise: String
  updated: timestamptz
}

"""aggregate max on columns"""
type old_schools_max_fields {
  block: String
  category: String
  cluster: String
  created: timestamptz
  district: String
  id: Int
  name: String
  session: String
  udise: String
  updated: timestamptz
}

"""aggregate min on columns"""
type old_schools_min_fields {
  block: String
  category: String
  cluster: String
  created: timestamptz
  district: String
  id: Int
  name: String
  session: String
  udise: String
  updated: timestamptz
}

"""
response of any mutation on the table "old_schools"
"""
type old_schools_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [old_schools!]!
}

"""
on conflict condition type for table "old_schools"
"""
input old_schools_on_conflict {
  constraint: old_schools_constraint!
  update_columns: [old_schools_update_column!]! = []
  where: old_schools_bool_exp
}

"""Ordering options when selecting data from "old_schools"."""
input old_schools_order_by {
  block: order_by
  category: order_by
  cluster: order_by
  created: order_by
  district: order_by
  id: order_by
  name: order_by
  session: order_by
  udise: order_by
  updated: order_by
}

"""primary key columns input for table: old_schools"""
input old_schools_pk_columns_input {
  id: Int!
}

"""
select columns of table "old_schools"
"""
enum old_schools_select_column {
  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  district

  """column name"""
  id

  """column name"""
  name

  """column name"""
  session

  """column name"""
  udise

  """column name"""
  updated
}

"""
input type for updating data in table "old_schools"
"""
input old_schools_set_input {
  block: String
  category: String
  cluster: String
  created: timestamptz
  district: String
  id: Int
  name: String
  session: String
  udise: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type old_schools_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type old_schools_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type old_schools_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type old_schools_sum_fields {
  id: Int
}

"""
update columns of table "old_schools"
"""
enum old_schools_update_column {
  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  district

  """column name"""
  id

  """column name"""
  name

  """column name"""
  session

  """column name"""
  udise

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type old_schools_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type old_schools_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type old_schools_variance_fields {
  id: Float
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "pg_stat_statements"
"""
type pg_stat_statements {
  blk_read_time: float8
  blk_write_time: float8
  calls: bigint
  dbid: oid
  local_blks_dirtied: bigint
  local_blks_hit: bigint
  local_blks_read: bigint
  local_blks_written: bigint
  max_time: float8
  mean_time: float8
  min_time: float8
  query: String
  queryid: bigint
  rows: bigint
  shared_blks_dirtied: bigint
  shared_blks_hit: bigint
  shared_blks_read: bigint
  shared_blks_written: bigint
  stddev_time: float8
  temp_blks_read: bigint
  temp_blks_written: bigint
  total_time: float8
  userid: oid
}

"""
aggregated selection of "pg_stat_statements"
"""
type pg_stat_statements_aggregate {
  aggregate: pg_stat_statements_aggregate_fields
  nodes: [pg_stat_statements!]!
}

"""
aggregate fields of "pg_stat_statements"
"""
type pg_stat_statements_aggregate_fields {
  avg: pg_stat_statements_avg_fields
  count(columns: [pg_stat_statements_select_column!], distinct: Boolean): Int!
  max: pg_stat_statements_max_fields
  min: pg_stat_statements_min_fields
  stddev: pg_stat_statements_stddev_fields
  stddev_pop: pg_stat_statements_stddev_pop_fields
  stddev_samp: pg_stat_statements_stddev_samp_fields
  sum: pg_stat_statements_sum_fields
  var_pop: pg_stat_statements_var_pop_fields
  var_samp: pg_stat_statements_var_samp_fields
  variance: pg_stat_statements_variance_fields
}

"""aggregate avg on columns"""
type pg_stat_statements_avg_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""
Boolean expression to filter rows from the table "pg_stat_statements". All fields are combined with a logical 'AND'.
"""
input pg_stat_statements_bool_exp {
  _and: [pg_stat_statements_bool_exp!]
  _not: pg_stat_statements_bool_exp
  _or: [pg_stat_statements_bool_exp!]
  blk_read_time: float8_comparison_exp
  blk_write_time: float8_comparison_exp
  calls: bigint_comparison_exp
  dbid: oid_comparison_exp
  local_blks_dirtied: bigint_comparison_exp
  local_blks_hit: bigint_comparison_exp
  local_blks_read: bigint_comparison_exp
  local_blks_written: bigint_comparison_exp
  max_time: float8_comparison_exp
  mean_time: float8_comparison_exp
  min_time: float8_comparison_exp
  query: String_comparison_exp
  queryid: bigint_comparison_exp
  rows: bigint_comparison_exp
  shared_blks_dirtied: bigint_comparison_exp
  shared_blks_hit: bigint_comparison_exp
  shared_blks_read: bigint_comparison_exp
  shared_blks_written: bigint_comparison_exp
  stddev_time: float8_comparison_exp
  temp_blks_read: bigint_comparison_exp
  temp_blks_written: bigint_comparison_exp
  total_time: float8_comparison_exp
  userid: oid_comparison_exp
}

"""aggregate max on columns"""
type pg_stat_statements_max_fields {
  blk_read_time: float8
  blk_write_time: float8
  calls: bigint
  local_blks_dirtied: bigint
  local_blks_hit: bigint
  local_blks_read: bigint
  local_blks_written: bigint
  max_time: float8
  mean_time: float8
  min_time: float8
  query: String
  queryid: bigint
  rows: bigint
  shared_blks_dirtied: bigint
  shared_blks_hit: bigint
  shared_blks_read: bigint
  shared_blks_written: bigint
  stddev_time: float8
  temp_blks_read: bigint
  temp_blks_written: bigint
  total_time: float8
}

"""aggregate min on columns"""
type pg_stat_statements_min_fields {
  blk_read_time: float8
  blk_write_time: float8
  calls: bigint
  local_blks_dirtied: bigint
  local_blks_hit: bigint
  local_blks_read: bigint
  local_blks_written: bigint
  max_time: float8
  mean_time: float8
  min_time: float8
  query: String
  queryid: bigint
  rows: bigint
  shared_blks_dirtied: bigint
  shared_blks_hit: bigint
  shared_blks_read: bigint
  shared_blks_written: bigint
  stddev_time: float8
  temp_blks_read: bigint
  temp_blks_written: bigint
  total_time: float8
}

"""Ordering options when selecting data from "pg_stat_statements"."""
input pg_stat_statements_order_by {
  blk_read_time: order_by
  blk_write_time: order_by
  calls: order_by
  dbid: order_by
  local_blks_dirtied: order_by
  local_blks_hit: order_by
  local_blks_read: order_by
  local_blks_written: order_by
  max_time: order_by
  mean_time: order_by
  min_time: order_by
  query: order_by
  queryid: order_by
  rows: order_by
  shared_blks_dirtied: order_by
  shared_blks_hit: order_by
  shared_blks_read: order_by
  shared_blks_written: order_by
  stddev_time: order_by
  temp_blks_read: order_by
  temp_blks_written: order_by
  total_time: order_by
  userid: order_by
}

"""
select columns of table "pg_stat_statements"
"""
enum pg_stat_statements_select_column {
  """column name"""
  blk_read_time

  """column name"""
  blk_write_time

  """column name"""
  calls

  """column name"""
  dbid

  """column name"""
  local_blks_dirtied

  """column name"""
  local_blks_hit

  """column name"""
  local_blks_read

  """column name"""
  local_blks_written

  """column name"""
  max_time

  """column name"""
  mean_time

  """column name"""
  min_time

  """column name"""
  query

  """column name"""
  queryid

  """column name"""
  rows

  """column name"""
  shared_blks_dirtied

  """column name"""
  shared_blks_hit

  """column name"""
  shared_blks_read

  """column name"""
  shared_blks_written

  """column name"""
  stddev_time

  """column name"""
  temp_blks_read

  """column name"""
  temp_blks_written

  """column name"""
  total_time

  """column name"""
  userid
}

"""aggregate stddev on columns"""
type pg_stat_statements_stddev_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""aggregate stddev_pop on columns"""
type pg_stat_statements_stddev_pop_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""aggregate stddev_samp on columns"""
type pg_stat_statements_stddev_samp_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""aggregate sum on columns"""
type pg_stat_statements_sum_fields {
  blk_read_time: float8
  blk_write_time: float8
  calls: bigint
  local_blks_dirtied: bigint
  local_blks_hit: bigint
  local_blks_read: bigint
  local_blks_written: bigint
  max_time: float8
  mean_time: float8
  min_time: float8
  queryid: bigint
  rows: bigint
  shared_blks_dirtied: bigint
  shared_blks_hit: bigint
  shared_blks_read: bigint
  shared_blks_written: bigint
  stddev_time: float8
  temp_blks_read: bigint
  temp_blks_written: bigint
  total_time: float8
}

"""aggregate var_pop on columns"""
type pg_stat_statements_var_pop_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""aggregate var_samp on columns"""
type pg_stat_statements_var_samp_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""aggregate variance on columns"""
type pg_stat_statements_variance_fields {
  blk_read_time: Float
  blk_write_time: Float
  calls: Float
  local_blks_dirtied: Float
  local_blks_hit: Float
  local_blks_read: Float
  local_blks_written: Float
  max_time: Float
  mean_time: Float
  min_time: Float
  queryid: Float
  rows: Float
  shared_blks_dirtied: Float
  shared_blks_hit: Float
  shared_blks_read: Float
  shared_blks_written: Float
  stddev_time: Float
  temp_blks_read: Float
  temp_blks_written: Float
  total_time: Float
}

"""
columns and relationships of "pgbench_accounts"
"""
type pgbench_accounts {
  abalance: Int
  aid: Int!
  bid: Int
  filler: bpchar
}

"""
aggregated selection of "pgbench_accounts"
"""
type pgbench_accounts_aggregate {
  aggregate: pgbench_accounts_aggregate_fields
  nodes: [pgbench_accounts!]!
}

"""
aggregate fields of "pgbench_accounts"
"""
type pgbench_accounts_aggregate_fields {
  avg: pgbench_accounts_avg_fields
  count(columns: [pgbench_accounts_select_column!], distinct: Boolean): Int!
  max: pgbench_accounts_max_fields
  min: pgbench_accounts_min_fields
  stddev: pgbench_accounts_stddev_fields
  stddev_pop: pgbench_accounts_stddev_pop_fields
  stddev_samp: pgbench_accounts_stddev_samp_fields
  sum: pgbench_accounts_sum_fields
  var_pop: pgbench_accounts_var_pop_fields
  var_samp: pgbench_accounts_var_samp_fields
  variance: pgbench_accounts_variance_fields
}

"""aggregate avg on columns"""
type pgbench_accounts_avg_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""
Boolean expression to filter rows from the table "pgbench_accounts". All fields are combined with a logical 'AND'.
"""
input pgbench_accounts_bool_exp {
  _and: [pgbench_accounts_bool_exp!]
  _not: pgbench_accounts_bool_exp
  _or: [pgbench_accounts_bool_exp!]
  abalance: Int_comparison_exp
  aid: Int_comparison_exp
  bid: Int_comparison_exp
  filler: bpchar_comparison_exp
}

"""
unique or primary key constraints on table "pgbench_accounts"
"""
enum pgbench_accounts_constraint {
  """unique or primary key constraint"""
  pgbench_accounts_pkey
}

"""
input type for incrementing numeric columns in table "pgbench_accounts"
"""
input pgbench_accounts_inc_input {
  abalance: Int
  aid: Int
  bid: Int
}

"""
input type for inserting data into table "pgbench_accounts"
"""
input pgbench_accounts_insert_input {
  abalance: Int
  aid: Int
  bid: Int
  filler: bpchar
}

"""aggregate max on columns"""
type pgbench_accounts_max_fields {
  abalance: Int
  aid: Int
  bid: Int
  filler: bpchar
}

"""aggregate min on columns"""
type pgbench_accounts_min_fields {
  abalance: Int
  aid: Int
  bid: Int
  filler: bpchar
}

"""
response of any mutation on the table "pgbench_accounts"
"""
type pgbench_accounts_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pgbench_accounts!]!
}

"""
on conflict condition type for table "pgbench_accounts"
"""
input pgbench_accounts_on_conflict {
  constraint: pgbench_accounts_constraint!
  update_columns: [pgbench_accounts_update_column!]! = []
  where: pgbench_accounts_bool_exp
}

"""Ordering options when selecting data from "pgbench_accounts"."""
input pgbench_accounts_order_by {
  abalance: order_by
  aid: order_by
  bid: order_by
  filler: order_by
}

"""primary key columns input for table: pgbench_accounts"""
input pgbench_accounts_pk_columns_input {
  aid: Int!
}

"""
select columns of table "pgbench_accounts"
"""
enum pgbench_accounts_select_column {
  """column name"""
  abalance

  """column name"""
  aid

  """column name"""
  bid

  """column name"""
  filler
}

"""
input type for updating data in table "pgbench_accounts"
"""
input pgbench_accounts_set_input {
  abalance: Int
  aid: Int
  bid: Int
  filler: bpchar
}

"""aggregate stddev on columns"""
type pgbench_accounts_stddev_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""aggregate stddev_pop on columns"""
type pgbench_accounts_stddev_pop_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""aggregate stddev_samp on columns"""
type pgbench_accounts_stddev_samp_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""aggregate sum on columns"""
type pgbench_accounts_sum_fields {
  abalance: Int
  aid: Int
  bid: Int
}

"""
update columns of table "pgbench_accounts"
"""
enum pgbench_accounts_update_column {
  """column name"""
  abalance

  """column name"""
  aid

  """column name"""
  bid

  """column name"""
  filler
}

"""aggregate var_pop on columns"""
type pgbench_accounts_var_pop_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""aggregate var_samp on columns"""
type pgbench_accounts_var_samp_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""aggregate variance on columns"""
type pgbench_accounts_variance_fields {
  abalance: Float
  aid: Float
  bid: Float
}

"""
columns and relationships of "pgbench_branches"
"""
type pgbench_branches {
  bbalance: Int
  bid: Int!
  filler: bpchar
}

"""
aggregated selection of "pgbench_branches"
"""
type pgbench_branches_aggregate {
  aggregate: pgbench_branches_aggregate_fields
  nodes: [pgbench_branches!]!
}

"""
aggregate fields of "pgbench_branches"
"""
type pgbench_branches_aggregate_fields {
  avg: pgbench_branches_avg_fields
  count(columns: [pgbench_branches_select_column!], distinct: Boolean): Int!
  max: pgbench_branches_max_fields
  min: pgbench_branches_min_fields
  stddev: pgbench_branches_stddev_fields
  stddev_pop: pgbench_branches_stddev_pop_fields
  stddev_samp: pgbench_branches_stddev_samp_fields
  sum: pgbench_branches_sum_fields
  var_pop: pgbench_branches_var_pop_fields
  var_samp: pgbench_branches_var_samp_fields
  variance: pgbench_branches_variance_fields
}

"""aggregate avg on columns"""
type pgbench_branches_avg_fields {
  bbalance: Float
  bid: Float
}

"""
Boolean expression to filter rows from the table "pgbench_branches". All fields are combined with a logical 'AND'.
"""
input pgbench_branches_bool_exp {
  _and: [pgbench_branches_bool_exp!]
  _not: pgbench_branches_bool_exp
  _or: [pgbench_branches_bool_exp!]
  bbalance: Int_comparison_exp
  bid: Int_comparison_exp
  filler: bpchar_comparison_exp
}

"""
unique or primary key constraints on table "pgbench_branches"
"""
enum pgbench_branches_constraint {
  """unique or primary key constraint"""
  pgbench_branches_pkey
}

"""
input type for incrementing numeric columns in table "pgbench_branches"
"""
input pgbench_branches_inc_input {
  bbalance: Int
  bid: Int
}

"""
input type for inserting data into table "pgbench_branches"
"""
input pgbench_branches_insert_input {
  bbalance: Int
  bid: Int
  filler: bpchar
}

"""aggregate max on columns"""
type pgbench_branches_max_fields {
  bbalance: Int
  bid: Int
  filler: bpchar
}

"""aggregate min on columns"""
type pgbench_branches_min_fields {
  bbalance: Int
  bid: Int
  filler: bpchar
}

"""
response of any mutation on the table "pgbench_branches"
"""
type pgbench_branches_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pgbench_branches!]!
}

"""
on conflict condition type for table "pgbench_branches"
"""
input pgbench_branches_on_conflict {
  constraint: pgbench_branches_constraint!
  update_columns: [pgbench_branches_update_column!]! = []
  where: pgbench_branches_bool_exp
}

"""Ordering options when selecting data from "pgbench_branches"."""
input pgbench_branches_order_by {
  bbalance: order_by
  bid: order_by
  filler: order_by
}

"""primary key columns input for table: pgbench_branches"""
input pgbench_branches_pk_columns_input {
  bid: Int!
}

"""
select columns of table "pgbench_branches"
"""
enum pgbench_branches_select_column {
  """column name"""
  bbalance

  """column name"""
  bid

  """column name"""
  filler
}

"""
input type for updating data in table "pgbench_branches"
"""
input pgbench_branches_set_input {
  bbalance: Int
  bid: Int
  filler: bpchar
}

"""aggregate stddev on columns"""
type pgbench_branches_stddev_fields {
  bbalance: Float
  bid: Float
}

"""aggregate stddev_pop on columns"""
type pgbench_branches_stddev_pop_fields {
  bbalance: Float
  bid: Float
}

"""aggregate stddev_samp on columns"""
type pgbench_branches_stddev_samp_fields {
  bbalance: Float
  bid: Float
}

"""aggregate sum on columns"""
type pgbench_branches_sum_fields {
  bbalance: Int
  bid: Int
}

"""
update columns of table "pgbench_branches"
"""
enum pgbench_branches_update_column {
  """column name"""
  bbalance

  """column name"""
  bid

  """column name"""
  filler
}

"""aggregate var_pop on columns"""
type pgbench_branches_var_pop_fields {
  bbalance: Float
  bid: Float
}

"""aggregate var_samp on columns"""
type pgbench_branches_var_samp_fields {
  bbalance: Float
  bid: Float
}

"""aggregate variance on columns"""
type pgbench_branches_variance_fields {
  bbalance: Float
  bid: Float
}

"""
columns and relationships of "pgbench_history"
"""
type pgbench_history {
  aid: Int
  bid: Int
  delta: Int
  filler: bpchar
  mtime: timestamp
  tid: Int
}

"""
aggregated selection of "pgbench_history"
"""
type pgbench_history_aggregate {
  aggregate: pgbench_history_aggregate_fields
  nodes: [pgbench_history!]!
}

"""
aggregate fields of "pgbench_history"
"""
type pgbench_history_aggregate_fields {
  avg: pgbench_history_avg_fields
  count(columns: [pgbench_history_select_column!], distinct: Boolean): Int!
  max: pgbench_history_max_fields
  min: pgbench_history_min_fields
  stddev: pgbench_history_stddev_fields
  stddev_pop: pgbench_history_stddev_pop_fields
  stddev_samp: pgbench_history_stddev_samp_fields
  sum: pgbench_history_sum_fields
  var_pop: pgbench_history_var_pop_fields
  var_samp: pgbench_history_var_samp_fields
  variance: pgbench_history_variance_fields
}

"""aggregate avg on columns"""
type pgbench_history_avg_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""
Boolean expression to filter rows from the table "pgbench_history". All fields are combined with a logical 'AND'.
"""
input pgbench_history_bool_exp {
  _and: [pgbench_history_bool_exp!]
  _not: pgbench_history_bool_exp
  _or: [pgbench_history_bool_exp!]
  aid: Int_comparison_exp
  bid: Int_comparison_exp
  delta: Int_comparison_exp
  filler: bpchar_comparison_exp
  mtime: timestamp_comparison_exp
  tid: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "pgbench_history"
"""
input pgbench_history_inc_input {
  aid: Int
  bid: Int
  delta: Int
  tid: Int
}

"""
input type for inserting data into table "pgbench_history"
"""
input pgbench_history_insert_input {
  aid: Int
  bid: Int
  delta: Int
  filler: bpchar
  mtime: timestamp
  tid: Int
}

"""aggregate max on columns"""
type pgbench_history_max_fields {
  aid: Int
  bid: Int
  delta: Int
  filler: bpchar
  mtime: timestamp
  tid: Int
}

"""aggregate min on columns"""
type pgbench_history_min_fields {
  aid: Int
  bid: Int
  delta: Int
  filler: bpchar
  mtime: timestamp
  tid: Int
}

"""
response of any mutation on the table "pgbench_history"
"""
type pgbench_history_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pgbench_history!]!
}

"""Ordering options when selecting data from "pgbench_history"."""
input pgbench_history_order_by {
  aid: order_by
  bid: order_by
  delta: order_by
  filler: order_by
  mtime: order_by
  tid: order_by
}

"""
select columns of table "pgbench_history"
"""
enum pgbench_history_select_column {
  """column name"""
  aid

  """column name"""
  bid

  """column name"""
  delta

  """column name"""
  filler

  """column name"""
  mtime

  """column name"""
  tid
}

"""
input type for updating data in table "pgbench_history"
"""
input pgbench_history_set_input {
  aid: Int
  bid: Int
  delta: Int
  filler: bpchar
  mtime: timestamp
  tid: Int
}

"""aggregate stddev on columns"""
type pgbench_history_stddev_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""aggregate stddev_pop on columns"""
type pgbench_history_stddev_pop_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""aggregate stddev_samp on columns"""
type pgbench_history_stddev_samp_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""aggregate sum on columns"""
type pgbench_history_sum_fields {
  aid: Int
  bid: Int
  delta: Int
  tid: Int
}

"""aggregate var_pop on columns"""
type pgbench_history_var_pop_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""aggregate var_samp on columns"""
type pgbench_history_var_samp_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""aggregate variance on columns"""
type pgbench_history_variance_fields {
  aid: Float
  bid: Float
  delta: Float
  tid: Float
}

"""
columns and relationships of "pgbench_tellers"
"""
type pgbench_tellers {
  bid: Int
  filler: bpchar
  tbalance: Int
  tid: Int!
}

"""
aggregated selection of "pgbench_tellers"
"""
type pgbench_tellers_aggregate {
  aggregate: pgbench_tellers_aggregate_fields
  nodes: [pgbench_tellers!]!
}

"""
aggregate fields of "pgbench_tellers"
"""
type pgbench_tellers_aggregate_fields {
  avg: pgbench_tellers_avg_fields
  count(columns: [pgbench_tellers_select_column!], distinct: Boolean): Int!
  max: pgbench_tellers_max_fields
  min: pgbench_tellers_min_fields
  stddev: pgbench_tellers_stddev_fields
  stddev_pop: pgbench_tellers_stddev_pop_fields
  stddev_samp: pgbench_tellers_stddev_samp_fields
  sum: pgbench_tellers_sum_fields
  var_pop: pgbench_tellers_var_pop_fields
  var_samp: pgbench_tellers_var_samp_fields
  variance: pgbench_tellers_variance_fields
}

"""aggregate avg on columns"""
type pgbench_tellers_avg_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""
Boolean expression to filter rows from the table "pgbench_tellers". All fields are combined with a logical 'AND'.
"""
input pgbench_tellers_bool_exp {
  _and: [pgbench_tellers_bool_exp!]
  _not: pgbench_tellers_bool_exp
  _or: [pgbench_tellers_bool_exp!]
  bid: Int_comparison_exp
  filler: bpchar_comparison_exp
  tbalance: Int_comparison_exp
  tid: Int_comparison_exp
}

"""
unique or primary key constraints on table "pgbench_tellers"
"""
enum pgbench_tellers_constraint {
  """unique or primary key constraint"""
  pgbench_tellers_pkey
}

"""
input type for incrementing numeric columns in table "pgbench_tellers"
"""
input pgbench_tellers_inc_input {
  bid: Int
  tbalance: Int
  tid: Int
}

"""
input type for inserting data into table "pgbench_tellers"
"""
input pgbench_tellers_insert_input {
  bid: Int
  filler: bpchar
  tbalance: Int
  tid: Int
}

"""aggregate max on columns"""
type pgbench_tellers_max_fields {
  bid: Int
  filler: bpchar
  tbalance: Int
  tid: Int
}

"""aggregate min on columns"""
type pgbench_tellers_min_fields {
  bid: Int
  filler: bpchar
  tbalance: Int
  tid: Int
}

"""
response of any mutation on the table "pgbench_tellers"
"""
type pgbench_tellers_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pgbench_tellers!]!
}

"""
on conflict condition type for table "pgbench_tellers"
"""
input pgbench_tellers_on_conflict {
  constraint: pgbench_tellers_constraint!
  update_columns: [pgbench_tellers_update_column!]! = []
  where: pgbench_tellers_bool_exp
}

"""Ordering options when selecting data from "pgbench_tellers"."""
input pgbench_tellers_order_by {
  bid: order_by
  filler: order_by
  tbalance: order_by
  tid: order_by
}

"""primary key columns input for table: pgbench_tellers"""
input pgbench_tellers_pk_columns_input {
  tid: Int!
}

"""
select columns of table "pgbench_tellers"
"""
enum pgbench_tellers_select_column {
  """column name"""
  bid

  """column name"""
  filler

  """column name"""
  tbalance

  """column name"""
  tid
}

"""
input type for updating data in table "pgbench_tellers"
"""
input pgbench_tellers_set_input {
  bid: Int
  filler: bpchar
  tbalance: Int
  tid: Int
}

"""aggregate stddev on columns"""
type pgbench_tellers_stddev_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""aggregate stddev_pop on columns"""
type pgbench_tellers_stddev_pop_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""aggregate stddev_samp on columns"""
type pgbench_tellers_stddev_samp_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""aggregate sum on columns"""
type pgbench_tellers_sum_fields {
  bid: Int
  tbalance: Int
  tid: Int
}

"""
update columns of table "pgbench_tellers"
"""
enum pgbench_tellers_update_column {
  """column name"""
  bid

  """column name"""
  filler

  """column name"""
  tbalance

  """column name"""
  tid
}

"""aggregate var_pop on columns"""
type pgbench_tellers_var_pop_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""aggregate var_samp on columns"""
type pgbench_tellers_var_samp_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""aggregate variance on columns"""
type pgbench_tellers_variance_fields {
  bid: Float
  tbalance: Float
  tid: Float
}

"""
columns and relationships of "preboard_results_2021"
"""
type preboard_results_2021 {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""
aggregated selection of "preboard_results_2021"
"""
type preboard_results_2021_aggregate {
  aggregate: preboard_results_2021_aggregate_fields
  nodes: [preboard_results_2021!]!
}

"""
aggregate fields of "preboard_results_2021"
"""
type preboard_results_2021_aggregate_fields {
  avg: preboard_results_2021_avg_fields
  count(columns: [preboard_results_2021_select_column!], distinct: Boolean): Int!
  max: preboard_results_2021_max_fields
  min: preboard_results_2021_min_fields
  stddev: preboard_results_2021_stddev_fields
  stddev_pop: preboard_results_2021_stddev_pop_fields
  stddev_samp: preboard_results_2021_stddev_samp_fields
  sum: preboard_results_2021_sum_fields
  var_pop: preboard_results_2021_var_pop_fields
  var_samp: preboard_results_2021_var_samp_fields
  variance: preboard_results_2021_variance_fields
}

"""aggregate avg on columns"""
type preboard_results_2021_avg_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "preboard_results_2021". All fields are combined with a logical 'AND'.
"""
input preboard_results_2021_bool_exp {
  Performance: String_comparison_exp
  _and: [preboard_results_2021_bool_exp!]
  _not: preboard_results_2021_bool_exp
  _or: [preboard_results_2021_bool_exp!]
  acad_year: String_comparison_exp
  admission_number: Int_comparison_exp
  assessment: String_comparison_exp
  assessment_percent: float8_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  school_id: Int_comparison_exp
  school_name: String_comparison_exp
  school_type: String_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  subject: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "preboard_results_2021"
"""
input preboard_results_2021_inc_input {
  admission_number: Int
  assessment_percent: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""
input type for inserting data into table "preboard_results_2021"
"""
input preboard_results_2021_insert_input {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""aggregate max on columns"""
type preboard_results_2021_max_fields {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""aggregate min on columns"""
type preboard_results_2021_min_fields {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""
response of any mutation on the table "preboard_results_2021"
"""
type preboard_results_2021_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [preboard_results_2021!]!
}

"""Ordering options when selecting data from "preboard_results_2021"."""
input preboard_results_2021_order_by {
  Performance: order_by
  acad_year: order_by
  admission_number: order_by
  assessment: order_by
  assessment_percent: order_by
  block: order_by
  category: order_by
  cluster: order_by
  district: order_by
  gender: order_by
  grade_number: order_by
  is_cwsn: order_by
  is_enabled: order_by
  school_id: order_by
  school_name: order_by
  school_type: order_by
  section: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  subject: order_by
  udise: order_by
}

"""
select columns of table "preboard_results_2021"
"""
enum preboard_results_2021_select_column {
  """column name"""
  Performance

  """column name"""
  acad_year

  """column name"""
  admission_number

  """column name"""
  assessment

  """column name"""
  assessment_percent

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  school_id

  """column name"""
  school_name

  """column name"""
  school_type

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  subject

  """column name"""
  udise
}

"""
input type for updating data in table "preboard_results_2021"
"""
input preboard_results_2021_set_input {
  Performance: String
  acad_year: String
  admission_number: Int
  assessment: String
  assessment_percent: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  subject: String
  udise: Int
}

"""aggregate stddev on columns"""
type preboard_results_2021_stddev_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type preboard_results_2021_stddev_pop_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type preboard_results_2021_stddev_samp_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type preboard_results_2021_sum_fields {
  admission_number: Int
  assessment_percent: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type preboard_results_2021_var_pop_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type preboard_results_2021_var_samp_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type preboard_results_2021_variance_fields {
  admission_number: Float
  assessment_percent: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
columns and relationships of "preboard_student_table2021"
"""
type preboard_student_table2021 {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""
aggregated selection of "preboard_student_table2021"
"""
type preboard_student_table2021_aggregate {
  aggregate: preboard_student_table2021_aggregate_fields
  nodes: [preboard_student_table2021!]!
}

"""
aggregate fields of "preboard_student_table2021"
"""
type preboard_student_table2021_aggregate_fields {
  avg: preboard_student_table2021_avg_fields
  count(columns: [preboard_student_table2021_select_column!], distinct: Boolean): Int!
  max: preboard_student_table2021_max_fields
  min: preboard_student_table2021_min_fields
  stddev: preboard_student_table2021_stddev_fields
  stddev_pop: preboard_student_table2021_stddev_pop_fields
  stddev_samp: preboard_student_table2021_stddev_samp_fields
  sum: preboard_student_table2021_sum_fields
  var_pop: preboard_student_table2021_var_pop_fields
  var_samp: preboard_student_table2021_var_samp_fields
  variance: preboard_student_table2021_variance_fields
}

"""aggregate avg on columns"""
type preboard_student_table2021_avg_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "preboard_student_table2021". All fields are combined with a logical 'AND'.
"""
input preboard_student_table2021_bool_exp {
  _and: [preboard_student_table2021_bool_exp!]
  _not: preboard_student_table2021_bool_exp
  _or: [preboard_student_table2021_bool_exp!]
  acad_year: String_comparison_exp
  assessment: String_comparison_exp
  avg: float8_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  school_id: Int_comparison_exp
  school_name: String_comparison_exp
  school_type: String_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "preboard_student_table2021"
"""
input preboard_student_table2021_inc_input {
  avg: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""
input type for inserting data into table "preboard_student_table2021"
"""
input preboard_student_table2021_insert_input {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate max on columns"""
type preboard_student_table2021_max_fields {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate min on columns"""
type preboard_student_table2021_min_fields {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""
response of any mutation on the table "preboard_student_table2021"
"""
type preboard_student_table2021_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [preboard_student_table2021!]!
}

"""
Ordering options when selecting data from "preboard_student_table2021".
"""
input preboard_student_table2021_order_by {
  acad_year: order_by
  assessment: order_by
  avg: order_by
  block: order_by
  category: order_by
  cluster: order_by
  district: order_by
  gender: order_by
  grade_number: order_by
  is_cwsn: order_by
  is_enabled: order_by
  school_id: order_by
  school_name: order_by
  school_type: order_by
  section: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  udise: order_by
}

"""
select columns of table "preboard_student_table2021"
"""
enum preboard_student_table2021_select_column {
  """column name"""
  acad_year

  """column name"""
  assessment

  """column name"""
  avg

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  school_id

  """column name"""
  school_name

  """column name"""
  school_type

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  udise
}

"""
input type for updating data in table "preboard_student_table2021"
"""
input preboard_student_table2021_set_input {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate stddev on columns"""
type preboard_student_table2021_stddev_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type preboard_student_table2021_stddev_pop_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type preboard_student_table2021_stddev_samp_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type preboard_student_table2021_sum_fields {
  avg: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type preboard_student_table2021_var_pop_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type preboard_student_table2021_var_samp_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type preboard_student_table2021_variance_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
columns and relationships of "previous_passwords"
"""
type previous_passwords {
  """"""
  encryption_scheme: String!

  """"""
  factor: Int!

  """"""
  insert_instant: bigint!

  """"""
  password: String!

  """"""
  salt: String!

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "previous_passwords"
"""
type previous_passwords_aggregate {
  """"""
  aggregate: previous_passwords_aggregate_fields

  """"""
  nodes: [previous_passwords!]!
}

"""
aggregate fields of "previous_passwords"
"""
type previous_passwords_aggregate_fields {
  """"""
  avg: previous_passwords_avg_fields

  """"""
  count(columns: [previous_passwords_select_column!], distinct: Boolean): Int!

  """"""
  max: previous_passwords_max_fields

  """"""
  min: previous_passwords_min_fields

  """"""
  stddev: previous_passwords_stddev_fields

  """"""
  stddev_pop: previous_passwords_stddev_pop_fields

  """"""
  stddev_samp: previous_passwords_stddev_samp_fields

  """"""
  sum: previous_passwords_sum_fields

  """"""
  var_pop: previous_passwords_var_pop_fields

  """"""
  var_samp: previous_passwords_var_samp_fields

  """"""
  variance: previous_passwords_variance_fields
}

"""
order by aggregate values of table "previous_passwords"
"""
input previous_passwords_aggregate_order_by {
  """"""
  avg: previous_passwords_avg_order_by

  """"""
  count: order_by

  """"""
  max: previous_passwords_max_order_by

  """"""
  min: previous_passwords_min_order_by

  """"""
  stddev: previous_passwords_stddev_order_by

  """"""
  stddev_pop: previous_passwords_stddev_pop_order_by

  """"""
  stddev_samp: previous_passwords_stddev_samp_order_by

  """"""
  sum: previous_passwords_sum_order_by

  """"""
  var_pop: previous_passwords_var_pop_order_by

  """"""
  var_samp: previous_passwords_var_samp_order_by

  """"""
  variance: previous_passwords_variance_order_by
}

"""
input type for inserting array relation for remote table "previous_passwords"
"""
input previous_passwords_arr_rel_insert_input {
  """"""
  data: [previous_passwords_insert_input!]!

  """on conflict condition"""
  on_conflict: previous_passwords_on_conflict
}

"""aggregate avg on columns"""
type previous_passwords_avg_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by avg() on columns of table "previous_passwords"
"""
input previous_passwords_avg_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""
Boolean expression to filter rows from the table "previous_passwords". All fields are combined with a logical 'AND'.
"""
input previous_passwords_bool_exp {
  """"""
  _and: [previous_passwords_bool_exp!]

  """"""
  _not: previous_passwords_bool_exp

  """"""
  _or: [previous_passwords_bool_exp!]

  """"""
  encryption_scheme: String_comparison_exp

  """"""
  factor: Int_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  password: String_comparison_exp

  """"""
  salt: String_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "previous_passwords"
"""
enum previous_passwords_constraint {
  """unique or primary key constraint"""
  previous_passwords_uk_1
}

"""
input type for incrementing numeric columns in table "previous_passwords"
"""
input previous_passwords_inc_input {
  """"""
  factor: Int

  """"""
  insert_instant: bigint
}

"""
input type for inserting data into table "previous_passwords"
"""
input previous_passwords_insert_input {
  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  insert_instant: bigint

  """"""
  password: String

  """"""
  salt: String

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type previous_passwords_max_fields {
  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  insert_instant: bigint

  """"""
  password: String

  """"""
  salt: String

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "previous_passwords"
"""
input previous_passwords_max_order_by {
  """"""
  encryption_scheme: order_by

  """"""
  factor: order_by

  """"""
  insert_instant: order_by

  """"""
  password: order_by

  """"""
  salt: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type previous_passwords_min_fields {
  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  insert_instant: bigint

  """"""
  password: String

  """"""
  salt: String

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "previous_passwords"
"""
input previous_passwords_min_order_by {
  """"""
  encryption_scheme: order_by

  """"""
  factor: order_by

  """"""
  insert_instant: order_by

  """"""
  password: order_by

  """"""
  salt: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "previous_passwords"
"""
type previous_passwords_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [previous_passwords!]!
}

"""
on conflict condition type for table "previous_passwords"
"""
input previous_passwords_on_conflict {
  """"""
  constraint: previous_passwords_constraint!

  """"""
  update_columns: [previous_passwords_update_column!]!

  """"""
  where: previous_passwords_bool_exp
}

"""Ordering options when selecting data from "previous_passwords"."""
input previous_passwords_order_by {
  """"""
  encryption_scheme: order_by

  """"""
  factor: order_by

  """"""
  insert_instant: order_by

  """"""
  password: order_by

  """"""
  salt: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""
select columns of table "previous_passwords"
"""
enum previous_passwords_select_column {
  """column name"""
  encryption_scheme

  """column name"""
  factor

  """column name"""
  insert_instant

  """column name"""
  password

  """column name"""
  salt

  """column name"""
  users_id
}

"""
input type for updating data in table "previous_passwords"
"""
input previous_passwords_set_input {
  """"""
  encryption_scheme: String

  """"""
  factor: Int

  """"""
  insert_instant: bigint

  """"""
  password: String

  """"""
  salt: String

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type previous_passwords_stddev_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by stddev() on columns of table "previous_passwords"
"""
input previous_passwords_stddev_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""aggregate stddev_pop on columns"""
type previous_passwords_stddev_pop_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by stddev_pop() on columns of table "previous_passwords"
"""
input previous_passwords_stddev_pop_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""aggregate stddev_samp on columns"""
type previous_passwords_stddev_samp_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by stddev_samp() on columns of table "previous_passwords"
"""
input previous_passwords_stddev_samp_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""aggregate sum on columns"""
type previous_passwords_sum_fields {
  """"""
  factor: Int

  """"""
  insert_instant: bigint
}

"""
order by sum() on columns of table "previous_passwords"
"""
input previous_passwords_sum_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""
update columns of table "previous_passwords"
"""
enum previous_passwords_update_column {
  """column name"""
  encryption_scheme

  """column name"""
  factor

  """column name"""
  insert_instant

  """column name"""
  password

  """column name"""
  salt

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type previous_passwords_var_pop_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by var_pop() on columns of table "previous_passwords"
"""
input previous_passwords_var_pop_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""aggregate var_samp on columns"""
type previous_passwords_var_samp_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by var_samp() on columns of table "previous_passwords"
"""
input previous_passwords_var_samp_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

"""aggregate variance on columns"""
type previous_passwords_variance_fields {
  """"""
  factor: Float

  """"""
  insert_instant: Float
}

"""
order by variance() on columns of table "previous_passwords"
"""
input previous_passwords_variance_order_by {
  """"""
  factor: order_by

  """"""
  insert_instant: order_by
}

type query_root {
  """
  fetch data from the table: "Quiz_beforeWeek21"
  """
  Quiz_beforeWeek21(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_bool_exp
  ): [Quiz_beforeWeek21!]!

  """
  fetch data from the table: "Quiz_beforeWeek21_2"
  """
  Quiz_beforeWeek21_2(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_2_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_2_bool_exp
  ): [Quiz_beforeWeek21_2!]!

  """
  fetch aggregated fields from the table: "Quiz_beforeWeek21_2"
  """
  Quiz_beforeWeek21_2_aggregate(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_2_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_2_bool_exp
  ): Quiz_beforeWeek21_2_aggregate!

  """
  fetch aggregated fields from the table: "Quiz_beforeWeek21"
  """
  Quiz_beforeWeek21_aggregate(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_bool_exp
  ): Quiz_beforeWeek21_aggregate!

  """
  fetch data from the table: "activeusers2"
  """
  activeusers2(
    """distinct select on columns"""
    distinct_on: [activeusers2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [activeusers2_order_by!]

    """filter the rows returned"""
    where: activeusers2_bool_exp
  ): [activeusers2!]!

  """
  fetch aggregated fields from the table: "activeusers2"
  """
  activeusers2_aggregate(
    """distinct select on columns"""
    distinct_on: [activeusers2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [activeusers2_order_by!]

    """filter the rows returned"""
    where: activeusers2_bool_exp
  ): activeusers2_aggregate!

  """An array relationship"""
  application_daily_active_users(
    """distinct select on columns"""
    distinct_on: [application_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_daily_active_users_order_by!]

    """filter the rows returned"""
    where: application_daily_active_users_bool_exp
  ): [application_daily_active_users!]!

  """An aggregate relationship"""
  application_daily_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [application_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_daily_active_users_order_by!]

    """filter the rows returned"""
    where: application_daily_active_users_bool_exp
  ): application_daily_active_users_aggregate!

  """An array relationship"""
  application_monthly_active_users(
    """distinct select on columns"""
    distinct_on: [application_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: application_monthly_active_users_bool_exp
  ): [application_monthly_active_users!]!

  """An aggregate relationship"""
  application_monthly_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [application_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: application_monthly_active_users_bool_exp
  ): application_monthly_active_users_aggregate!

  """An array relationship"""
  application_registration_counts(
    """distinct select on columns"""
    distinct_on: [application_registration_counts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_registration_counts_order_by!]

    """filter the rows returned"""
    where: application_registration_counts_bool_exp
  ): [application_registration_counts!]!

  """An aggregate relationship"""
  application_registration_counts_aggregate(
    """distinct select on columns"""
    distinct_on: [application_registration_counts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_registration_counts_order_by!]

    """filter the rows returned"""
    where: application_registration_counts_bool_exp
  ): application_registration_counts_aggregate!

  """An array relationship"""
  application_roles(
    """distinct select on columns"""
    distinct_on: [application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_roles_order_by!]

    """filter the rows returned"""
    where: application_roles_bool_exp
  ): [application_roles!]!

  """An aggregate relationship"""
  application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [application_roles_order_by!]

    """filter the rows returned"""
    where: application_roles_bool_exp
  ): application_roles_aggregate!

  """
  fetch data from the table: "application_roles" using primary key columns
  """
  application_roles_by_pk(id: uuid!): application_roles

  """An array relationship"""
  applications(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applications_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """fetch data from the table: "applications" using primary key columns"""
  applications_by_pk(id: uuid!): applications

  """
  fetch data from the table: "assessment"
  """
  assessment(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """
  fetch aggregated fields from the table: "assessment"
  """
  assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!

  """
  fetch data from the table: "assessment_au_lo_aggregate"
  """
  assessment_au_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): [assessment_au_lo_aggregate!]!

  """
  fetch aggregated fields from the table: "assessment_au_lo_aggregate"
  """
  assessment_au_lo_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): assessment_au_lo_aggregate_aggregate!

  """
  fetch data from the table: "assessment_au_lo_aggregate" using primary key columns
  """
  assessment_au_lo_aggregate_by_pk(id: Int!): assessment_au_lo_aggregate

  """
  fetch data from the table: "assessment_au_lo_aggregate_submission"
  """
  assessment_au_lo_aggregate_submission(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): [assessment_au_lo_aggregate_submission!]!

  """
  fetch aggregated fields from the table: "assessment_au_lo_aggregate_submission"
  """
  assessment_au_lo_aggregate_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): assessment_au_lo_aggregate_submission_aggregate!

  """
  fetch data from the table: "assessment_au_lo_aggregate_submission" using primary key columns
  """
  assessment_au_lo_aggregate_submission_by_pk(id: Int!): assessment_au_lo_aggregate_submission

  """
  fetch data from the table: "assessment_au_question_aggregate"
  """
  assessment_au_question_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): [assessment_au_question_aggregate!]!

  """
  fetch aggregated fields from the table: "assessment_au_question_aggregate"
  """
  assessment_au_question_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): assessment_au_question_aggregate_aggregate!

  """
  fetch data from the table: "assessment_au_question_aggregate" using primary key columns
  """
  assessment_au_question_aggregate_by_pk(id: Int!): assessment_au_question_aggregate

  """
  fetch data from the table: "assessment_au_question_aggregate_submission"
  """
  assessment_au_question_aggregate_submission(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): [assessment_au_question_aggregate_submission!]!

  """
  fetch aggregated fields from the table: "assessment_au_question_aggregate_submission"
  """
  assessment_au_question_aggregate_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): assessment_au_question_aggregate_submission_aggregate!

  """
  fetch data from the table: "assessment_au_question_aggregate_submission" using primary key columns
  """
  assessment_au_question_aggregate_submission_by_pk(id: Int!): assessment_au_question_aggregate_submission

  """
  fetch data from the table: "assessment_builder"
  """
  assessment_builder(
    """distinct select on columns"""
    distinct_on: [assessment_builder_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_builder_order_by!]

    """filter the rows returned"""
    where: assessment_builder_bool_exp
  ): [assessment_builder!]!

  """
  fetch aggregated fields from the table: "assessment_builder"
  """
  assessment_builder_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_builder_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_builder_order_by!]

    """filter the rows returned"""
    where: assessment_builder_bool_exp
  ): assessment_builder_aggregate!

  """
  fetch data from the table: "assessment_builder" using primary key columns
  """
  assessment_builder_by_pk(id: Int!): assessment_builder

  """fetch data from the table: "assessment" using primary key columns"""
  assessment_by_pk(id: Int!): assessment

  """
  fetch data from the table: "assessment_cache"
  """
  assessment_cache(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): [assessment_cache!]!

  """
  fetch aggregated fields from the table: "assessment_cache"
  """
  assessment_cache_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): assessment_cache_aggregate!

  """
  fetch data from the table: "assessment_cache" using primary key columns
  """
  assessment_cache_by_pk(id: Int!): assessment_cache

  """
  fetch data from the table: "assessment_cache_v5"
  """
  assessment_cache_v5(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): [assessment_cache_v5!]!

  """
  fetch aggregated fields from the table: "assessment_cache_v5"
  """
  assessment_cache_v5_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): assessment_cache_v5_aggregate!

  """
  fetch data from the table: "assessment_cache_v5" using primary key columns
  """
  assessment_cache_v5_by_pk(assessment_id: Int!, school_id: Int!): assessment_cache_v5

  """
  fetch data from the table: "assessment_category"
  """
  assessment_category(
    """distinct select on columns"""
    distinct_on: [assessment_category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_category_order_by!]

    """filter the rows returned"""
    where: assessment_category_bool_exp
  ): [assessment_category!]!

  """
  fetch aggregated fields from the table: "assessment_category"
  """
  assessment_category_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_category_order_by!]

    """filter the rows returned"""
    where: assessment_category_bool_exp
  ): assessment_category_aggregate!

  """
  fetch data from the table: "assessment_category" using primary key columns
  """
  assessment_category_by_pk(id: Int!): assessment_category

  """
  fetch data from the table: "assessment_compliance_grade_aggregation"
  """
  assessment_compliance_grade_aggregation(
    """distinct select on columns"""
    distinct_on: [assessment_compliance_grade_aggregation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_compliance_grade_aggregation_order_by!]

    """filter the rows returned"""
    where: assessment_compliance_grade_aggregation_bool_exp
  ): [assessment_compliance_grade_aggregation!]!

  """
  fetch aggregated fields from the table: "assessment_compliance_grade_aggregation"
  """
  assessment_compliance_grade_aggregation_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_compliance_grade_aggregation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_compliance_grade_aggregation_order_by!]

    """filter the rows returned"""
    where: assessment_compliance_grade_aggregation_bool_exp
  ): assessment_compliance_grade_aggregation_aggregate!

  """An array relationship"""
  assessment_components(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): [assessment_components!]!

  """An aggregate relationship"""
  assessment_components_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): assessment_components_aggregate!

  """
  fetch data from the table: "assessment_components" using primary key columns
  """
  assessment_components_by_pk(id: Int!): assessment_components

  """
  fetch data from the table: "assessment_ep_grade"
  """
  assessment_ep_grade(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): [assessment_ep_grade!]!

  """
  fetch aggregated fields from the table: "assessment_ep_grade"
  """
  assessment_ep_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): assessment_ep_grade_aggregate!

  """
  fetch data from the table: "assessment_ep_grade" using primary key columns
  """
  assessment_ep_grade_by_pk(id: Int!): assessment_ep_grade

  """
  fetch data from the table: "assessment_ep_grade_submission"
  """
  assessment_ep_grade_submission(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """
  fetch aggregated fields from the table: "assessment_ep_grade_submission"
  """
  assessment_ep_grade_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """
  fetch data from the table: "assessment_ep_grade_submission" using primary key columns
  """
  assessment_ep_grade_submission_by_pk(id: Int!): assessment_ep_grade_submission

  """An array relationship"""
  assessment_ep_marks(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): [assessment_ep_marks!]!

  """An aggregate relationship"""
  assessment_ep_marks_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): assessment_ep_marks_aggregate!

  """
  fetch data from the table: "assessment_ep_marks" using primary key columns
  """
  assessment_ep_marks_by_pk(id: Int!): assessment_ep_marks

  """
  fetch data from the table: "assessment_ep_marks_submission"
  """
  assessment_ep_marks_submission(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """
  fetch aggregated fields from the table: "assessment_ep_marks_submission"
  """
  assessment_ep_marks_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!

  """
  fetch data from the table: "assessment_ep_marks_submission" using primary key columns
  """
  assessment_ep_marks_submission_by_pk(id: Int!): assessment_ep_marks_submission

  """
  fetch data from the table: "assessment_grade"
  """
  assessment_grade(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): [assessment_grade!]!

  """
  fetch aggregated fields from the table: "assessment_grade"
  """
  assessment_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): assessment_grade_aggregate!

  """
  fetch data from the table: "assessment_grade" using primary key columns
  """
  assessment_grade_by_pk(id: Int!): assessment_grade

  """
  fetch data from the table: "assessment_grade_mapping"
  """
  assessment_grade_mapping(
    """distinct select on columns"""
    distinct_on: [assessment_grade_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_mapping_order_by!]

    """filter the rows returned"""
    where: assessment_grade_mapping_bool_exp
  ): [assessment_grade_mapping!]!

  """
  fetch aggregated fields from the table: "assessment_grade_mapping"
  """
  assessment_grade_mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_grade_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_mapping_order_by!]

    """filter the rows returned"""
    where: assessment_grade_mapping_bool_exp
  ): assessment_grade_mapping_aggregate!

  """
  fetch data from the table: "assessment_grade_mapping" using primary key columns
  """
  assessment_grade_mapping_by_pk(id: Int!): assessment_grade_mapping

  """An array relationship"""
  assessment_lo_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): [assessment_lo_bundles!]!

  """An aggregate relationship"""
  assessment_lo_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): assessment_lo_bundles_aggregate!

  """
  fetch data from the table: "assessment_lo_bundles" using primary key columns
  """
  assessment_lo_bundles_by_pk(id: Int!): assessment_lo_bundles

  """An array relationship"""
  assessment_question_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): [assessment_question_bundles!]!

  """An aggregate relationship"""
  assessment_question_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): assessment_question_bundles_aggregate!

  """
  fetch data from the table: "assessment_question_bundles" using primary key columns
  """
  assessment_question_bundles_by_pk(id: Int!): assessment_question_bundles

  """
  fetch data from the table: "assessment_result"
  """
  assessment_result(
    """distinct select on columns"""
    distinct_on: [assessment_result_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_result_order_by!]

    """filter the rows returned"""
    where: assessment_result_bool_exp
  ): [assessment_result!]!

  """
  fetch aggregated fields from the table: "assessment_result"
  """
  assessment_result_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_result_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_result_order_by!]

    """filter the rows returned"""
    where: assessment_result_bool_exp
  ): assessment_result_aggregate!

  """
  fetch data from the table: "assessment_result" using primary key columns
  """
  assessment_result_by_pk(id: Int!): assessment_result

  """
  fetch data from the table: "assessment_stream"
  """
  assessment_stream(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): [assessment_stream!]!

  """
  fetch aggregated fields from the table: "assessment_stream"
  """
  assessment_stream_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): assessment_stream_aggregate!

  """
  fetch data from the table: "assessment_stream" using primary key columns
  """
  assessment_stream_by_pk(id: Int!): assessment_stream

  """An array relationship"""
  assessment_subjects(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): [assessment_subjects!]!

  """An aggregate relationship"""
  assessment_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): assessment_subjects_aggregate!

  """
  fetch data from the table: "assessment_subjects" using primary key columns
  """
  assessment_subjects_by_pk(id: Int!): assessment_subjects

  """
  fetch data from the table: "assessment_type"
  """
  assessment_type(
    """distinct select on columns"""
    distinct_on: [assessment_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_type_order_by!]

    """filter the rows returned"""
    where: assessment_type_bool_exp
  ): [assessment_type!]!

  """
  fetch aggregated fields from the table: "assessment_type"
  """
  assessment_type_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_type_order_by!]

    """filter the rows returned"""
    where: assessment_type_bool_exp
  ): assessment_type_aggregate!

  """fetch data from the table: "assessment_type" using primary key columns"""
  assessment_type_by_pk(id: Int!): assessment_type

  """
  fetch data from the table: "assessment_unit"
  """
  assessment_unit(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): [assessment_unit!]!

  """
  fetch aggregated fields from the table: "assessment_unit"
  """
  assessment_unit_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): assessment_unit_aggregate!

  """An array relationship"""
  assessment_unit_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): [assessment_unit_bundles!]!

  """An aggregate relationship"""
  assessment_unit_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): assessment_unit_bundles_aggregate!

  """
  fetch data from the table: "assessment_unit_bundles" using primary key columns
  """
  assessment_unit_bundles_by_pk(id: Int!): assessment_unit_bundles

  """fetch data from the table: "assessment_unit" using primary key columns"""
  assessment_unit_by_pk(id: Int!): assessment_unit

  """
  fetch data from the table: "assessment_unit_selected_lo"
  """
  assessment_unit_selected_lo(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): [assessment_unit_selected_lo!]!

  """
  fetch aggregated fields from the table: "assessment_unit_selected_lo"
  """
  assessment_unit_selected_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): assessment_unit_selected_lo_aggregate!

  """
  fetch data from the table: "assessment_unit_selected_lo" using primary key columns
  """
  assessment_unit_selected_lo_by_pk(id: Int!): assessment_unit_selected_lo

  """
  fetch data from the table: "assessment_unit_selected_question"
  """
  assessment_unit_selected_question(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): [assessment_unit_selected_question!]!

  """
  fetch aggregated fields from the table: "assessment_unit_selected_question"
  """
  assessment_unit_selected_question_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): assessment_unit_selected_question_aggregate!

  """
  fetch data from the table: "assessment_unit_selected_question" using primary key columns
  """
  assessment_unit_selected_question_by_pk(id: Int!): assessment_unit_selected_question

  """
  fetch data from the table: "assessment_unit_selected_unit"
  """
  assessment_unit_selected_unit(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): [assessment_unit_selected_unit!]!

  """
  fetch aggregated fields from the table: "assessment_unit_selected_unit"
  """
  assessment_unit_selected_unit_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): assessment_unit_selected_unit_aggregate!

  """
  fetch data from the table: "assessment_unit_selected_unit" using primary key columns
  """
  assessment_unit_selected_unit_by_pk(id: Int!): assessment_unit_selected_unit

  """
  fetch data from the table: "attendance"
  """
  attendance(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): [attendance!]!

  """
  fetch aggregated fields from the table: "attendance"
  """
  attendance_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): attendance_aggregate!

  """fetch data from the table: "attendance" using primary key columns"""
  attendance_by_pk(id: Int!): attendance

  """
  fetch data from the table: "attendance_sms_logs"
  """
  attendance_sms_logs(
    """distinct select on columns"""
    distinct_on: [attendance_sms_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_sms_logs_order_by!]

    """filter the rows returned"""
    where: attendance_sms_logs_bool_exp
  ): [attendance_sms_logs!]!

  """
  fetch aggregated fields from the table: "attendance_sms_logs"
  """
  attendance_sms_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_sms_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_sms_logs_order_by!]

    """filter the rows returned"""
    where: attendance_sms_logs_bool_exp
  ): attendance_sms_logs_aggregate!

  """
  fetch data from the table: "attendance_sms_logs" using primary key columns
  """
  attendance_sms_logs_by_pk(id: Int!): attendance_sms_logs

  """
  fetch data from the table: "attendance_teacher"
  """
  attendance_teacher(
    """distinct select on columns"""
    distinct_on: [attendance_teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_teacher_order_by!]

    """filter the rows returned"""
    where: attendance_teacher_bool_exp
  ): [attendance_teacher!]!

  """
  fetch aggregated fields from the table: "attendance_teacher"
  """
  attendance_teacher_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_teacher_order_by!]

    """filter the rows returned"""
    where: attendance_teacher_bool_exp
  ): attendance_teacher_aggregate!

  """
  fetch data from the table: "attendance_teacher" using primary key columns
  """
  attendance_teacher_by_pk(id: Int!): attendance_teacher

  """
  fetch data from the table: "audit_logs"
  """
  audit_logs(
    """distinct select on columns"""
    distinct_on: [audit_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audit_logs_order_by!]

    """filter the rows returned"""
    where: audit_logs_bool_exp
  ): [audit_logs!]!

  """
  fetch aggregated fields from the table: "audit_logs"
  """
  audit_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [audit_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audit_logs_order_by!]

    """filter the rows returned"""
    where: audit_logs_bool_exp
  ): audit_logs_aggregate!

  """fetch data from the table: "audit_logs" using primary key columns"""
  audit_logs_by_pk(id: bigint!): audit_logs

  """
  fetch data from the table: "auth_group"
  """
  auth_group(
    """distinct select on columns"""
    distinct_on: [auth_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_order_by!]

    """filter the rows returned"""
    where: auth_group_bool_exp
  ): [auth_group!]!

  """
  fetch aggregated fields from the table: "auth_group"
  """
  auth_group_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_order_by!]

    """filter the rows returned"""
    where: auth_group_bool_exp
  ): auth_group_aggregate!

  """fetch data from the table: "auth_group" using primary key columns"""
  auth_group_by_pk(id: Int!): auth_group

  """An array relationship"""
  auth_group_permissions(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): [auth_group_permissions!]!

  """An aggregate relationship"""
  auth_group_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): auth_group_permissions_aggregate!

  """
  fetch data from the table: "auth_group_permissions" using primary key columns
  """
  auth_group_permissions_by_pk(id: Int!): auth_group_permissions

  """
  fetch data from the table: "auth_permission"
  """
  auth_permission(
    """distinct select on columns"""
    distinct_on: [auth_permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_permission_order_by!]

    """filter the rows returned"""
    where: auth_permission_bool_exp
  ): [auth_permission!]!

  """
  fetch aggregated fields from the table: "auth_permission"
  """
  auth_permission_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_permission_order_by!]

    """filter the rows returned"""
    where: auth_permission_bool_exp
  ): auth_permission_aggregate!

  """fetch data from the table: "auth_permission" using primary key columns"""
  auth_permission_by_pk(id: Int!): auth_permission

  """
  fetch data from the table: "auth_user"
  """
  auth_user(
    """distinct select on columns"""
    distinct_on: [auth_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_order_by!]

    """filter the rows returned"""
    where: auth_user_bool_exp
  ): [auth_user!]!

  """
  fetch aggregated fields from the table: "auth_user"
  """
  auth_user_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_order_by!]

    """filter the rows returned"""
    where: auth_user_bool_exp
  ): auth_user_aggregate!

  """fetch data from the table: "auth_user" using primary key columns"""
  auth_user_by_pk(id: Int!): auth_user

  """An array relationship"""
  auth_user_groups(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): [auth_user_groups!]!

  """An aggregate relationship"""
  auth_user_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): auth_user_groups_aggregate!

  """
  fetch data from the table: "auth_user_groups" using primary key columns
  """
  auth_user_groups_by_pk(id: Int!): auth_user_groups

  """An array relationship"""
  auth_user_user_permissions(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): [auth_user_user_permissions!]!

  """An aggregate relationship"""
  auth_user_user_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): auth_user_user_permissions_aggregate!

  """
  fetch data from the table: "auth_user_user_permissions" using primary key columns
  """
  auth_user_user_permissions_by_pk(id: Int!): auth_user_user_permissions

  """An array relationship"""
  authentication_keys(
    """distinct select on columns"""
    distinct_on: [authentication_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [authentication_keys_order_by!]

    """filter the rows returned"""
    where: authentication_keys_bool_exp
  ): [authentication_keys!]!

  """An aggregate relationship"""
  authentication_keys_aggregate(
    """distinct select on columns"""
    distinct_on: [authentication_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [authentication_keys_order_by!]

    """filter the rows returned"""
    where: authentication_keys_bool_exp
  ): authentication_keys_aggregate!

  """
  fetch data from the table: "authentication_keys" using primary key columns
  """
  authentication_keys_by_pk(id: String!): authentication_keys

  """An array relationship"""
  breached_password_metrics(
    """distinct select on columns"""
    distinct_on: [breached_password_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [breached_password_metrics_order_by!]

    """filter the rows returned"""
    where: breached_password_metrics_bool_exp
  ): [breached_password_metrics!]!

  """An aggregate relationship"""
  breached_password_metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [breached_password_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [breached_password_metrics_order_by!]

    """filter the rows returned"""
    where: breached_password_metrics_bool_exp
  ): breached_password_metrics_aggregate!

  """
  fetch data from the table: "breached_password_metrics" using primary key columns
  """
  breached_password_metrics_by_pk(tenants_id: uuid!): breached_password_metrics

  """
  fetch data from the table: "bucketwiseenrolment"
  """
  bucketwiseenrolment(
    """distinct select on columns"""
    distinct_on: [bucketwiseenrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bucketwiseenrolment_order_by!]

    """filter the rows returned"""
    where: bucketwiseenrolment_bool_exp
  ): [bucketwiseenrolment!]!

  """
  fetch aggregated fields from the table: "bucketwiseenrolment"
  """
  bucketwiseenrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [bucketwiseenrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bucketwiseenrolment_order_by!]

    """filter the rows returned"""
    where: bucketwiseenrolment_bool_exp
  ): bucketwiseenrolment_aggregate!

  """
  fetch data from the table: "cdac_sms_input"
  """
  cdac_sms_input(
    """distinct select on columns"""
    distinct_on: [cdac_sms_input_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cdac_sms_input_order_by!]

    """filter the rows returned"""
    where: cdac_sms_input_bool_exp
  ): [cdac_sms_input!]!

  """
  fetch aggregated fields from the table: "cdac_sms_input"
  """
  cdac_sms_input_aggregate(
    """distinct select on columns"""
    distinct_on: [cdac_sms_input_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cdac_sms_input_order_by!]

    """filter the rows returned"""
    where: cdac_sms_input_bool_exp
  ): cdac_sms_input_aggregate!

  """fetch data from the table: "cdac_sms_input" using primary key columns"""
  cdac_sms_input_by_pk(id: Int!): cdac_sms_input

  """
  fetch data from the table: "celery_duplicate_remove"
  """
  celery_duplicate_remove(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): [celery_duplicate_remove!]!

  """
  fetch aggregated fields from the table: "celery_duplicate_remove"
  """
  celery_duplicate_remove_aggregate(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): celery_duplicate_remove_aggregate!

  """
  fetch data from the table: "celery_duplicate_remove" using primary key columns
  """
  celery_duplicate_remove_by_pk(assessment_id: Int!, school_id: Int!): celery_duplicate_remove

  """
  fetch data from the table: "cg_hp_teacher_data"
  """
  cg_hp_teacher_data(
    """distinct select on columns"""
    distinct_on: [cg_hp_teacher_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_hp_teacher_data_order_by!]

    """filter the rows returned"""
    where: cg_hp_teacher_data_bool_exp
  ): [cg_hp_teacher_data!]!

  """
  fetch aggregated fields from the table: "cg_hp_teacher_data"
  """
  cg_hp_teacher_data_aggregate(
    """distinct select on columns"""
    distinct_on: [cg_hp_teacher_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_hp_teacher_data_order_by!]

    """filter the rows returned"""
    where: cg_hp_teacher_data_bool_exp
  ): cg_hp_teacher_data_aggregate!

  """
  fetch data from the table: "cg_to_state_list"
  """
  cg_to_state_list(
    """distinct select on columns"""
    distinct_on: [cg_to_state_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_to_state_list_order_by!]

    """filter the rows returned"""
    where: cg_to_state_list_bool_exp
  ): [cg_to_state_list!]!

  """
  fetch aggregated fields from the table: "cg_to_state_list"
  """
  cg_to_state_list_aggregate(
    """distinct select on columns"""
    distinct_on: [cg_to_state_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_to_state_list_order_by!]

    """filter the rows returned"""
    where: cg_to_state_list_bool_exp
  ): cg_to_state_list_aggregate!

  """
  fetch data from the table: "class_level_component_submission"
  """
  class_level_component_submission(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): [class_level_component_submission!]!

  """
  fetch aggregated fields from the table: "class_level_component_submission"
  """
  class_level_component_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): class_level_component_submission_aggregate!

  """
  fetch data from the table: "class_level_component_submission" using primary key columns
  """
  class_level_component_submission_by_pk(id: Int!): class_level_component_submission

  """
  fetch data from the table: "class_submission"
  """
  class_submission(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """
  fetch aggregated fields from the table: "class_submission"
  """
  class_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!

  """
  fetch data from the table: "class_submission" using primary key columns
  """
  class_submission_by_pk(id: Int!): class_submission

  """An array relationship"""
  clean_speak_applications(
    """distinct select on columns"""
    distinct_on: [clean_speak_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clean_speak_applications_order_by!]

    """filter the rows returned"""
    where: clean_speak_applications_bool_exp
  ): [clean_speak_applications!]!

  """An aggregate relationship"""
  clean_speak_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [clean_speak_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clean_speak_applications_order_by!]

    """filter the rows returned"""
    where: clean_speak_applications_bool_exp
  ): clean_speak_applications_aggregate!

  """
  fetch data from the table: "common_breached_passwords"
  """
  common_breached_passwords(
    """distinct select on columns"""
    distinct_on: [common_breached_passwords_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [common_breached_passwords_order_by!]

    """filter the rows returned"""
    where: common_breached_passwords_bool_exp
  ): [common_breached_passwords!]!

  """
  fetch aggregated fields from the table: "common_breached_passwords"
  """
  common_breached_passwords_aggregate(
    """distinct select on columns"""
    distinct_on: [common_breached_passwords_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [common_breached_passwords_order_by!]

    """filter the rows returned"""
    where: common_breached_passwords_bool_exp
  ): common_breached_passwords_aggregate!

  """
  fetch data from the table: "common_breached_passwords" using primary key columns
  """
  common_breached_passwords_by_pk(password: String!): common_breached_passwords

  """
  fetch data from the table: "component"
  """
  component(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): [component!]!

  """
  fetch aggregated fields from the table: "component"
  """
  component_aggregate(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): component_aggregate!

  """fetch data from the table: "component" using primary key columns"""
  component_by_pk(id: Int!): component

  """An array relationship"""
  component_subjects(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): [component_subjects!]!

  """An aggregate relationship"""
  component_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): component_subjects_aggregate!

  """
  fetch data from the table: "component_subjects" using primary key columns
  """
  component_subjects_by_pk(id: Int!): component_subjects

  """
  fetch data from the table: "component_submission"
  """
  component_submission(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): [component_submission!]!

  """
  fetch aggregated fields from the table: "component_submission"
  """
  component_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): component_submission_aggregate!

  """
  fetch data from the table: "component_submission" using primary key columns
  """
  component_submission_by_pk(id: Int!): component_submission

  """
  fetch data from the table: "component_type"
  """
  component_type(
    """distinct select on columns"""
    distinct_on: [component_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_type_order_by!]

    """filter the rows returned"""
    where: component_type_bool_exp
  ): [component_type!]!

  """
  fetch aggregated fields from the table: "component_type"
  """
  component_type_aggregate(
    """distinct select on columns"""
    distinct_on: [component_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_type_order_by!]

    """filter the rows returned"""
    where: component_type_bool_exp
  ): component_type_aggregate!

  """fetch data from the table: "component_type" using primary key columns"""
  component_type_by_pk(id: Int!): component_type

  """An array relationship"""
  connectors(
    """distinct select on columns"""
    distinct_on: [connectors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_order_by!]

    """filter the rows returned"""
    where: connectors_bool_exp
  ): [connectors!]!

  """An aggregate relationship"""
  connectors_aggregate(
    """distinct select on columns"""
    distinct_on: [connectors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_order_by!]

    """filter the rows returned"""
    where: connectors_bool_exp
  ): connectors_aggregate!

  """fetch data from the table: "connectors" using primary key columns"""
  connectors_by_pk(id: uuid!): connectors

  """An array relationship"""
  connectors_tenants(
    """distinct select on columns"""
    distinct_on: [connectors_tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_tenants_order_by!]

    """filter the rows returned"""
    where: connectors_tenants_bool_exp
  ): [connectors_tenants!]!

  """An aggregate relationship"""
  connectors_tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [connectors_tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_tenants_order_by!]

    """filter the rows returned"""
    where: connectors_tenants_bool_exp
  ): connectors_tenants_aggregate!

  """
  fetch data from the table: "connectors_tenants" using primary key columns
  """
  connectors_tenants_by_pk(connectors_id: uuid!, tenants_id: uuid!): connectors_tenants

  """An array relationship"""
  consents(
    """distinct select on columns"""
    distinct_on: [consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consents_order_by!]

    """filter the rows returned"""
    where: consents_bool_exp
  ): [consents!]!

  """An aggregate relationship"""
  consents_aggregate(
    """distinct select on columns"""
    distinct_on: [consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consents_order_by!]

    """filter the rows returned"""
    where: consents_bool_exp
  ): consents_aggregate!

  """fetch data from the table: "consents" using primary key columns"""
  consents_by_pk(id: uuid!): consents

  """An array relationship"""
  corporate_donor_devices(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): [corporate_donor_devices!]!

  """An aggregate relationship"""
  corporate_donor_devices_aggregate(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): corporate_donor_devices_aggregate!

  """
  fetch data from the table: "corporate_donor_devices" using primary key columns
  """
  corporate_donor_devices_by_pk(id: Int!): corporate_donor_devices

  """
  fetch data from the table: "dashboard_role_access_config"
  """
  dashboard_role_access_config(
    """distinct select on columns"""
    distinct_on: [dashboard_role_access_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_role_access_config_order_by!]

    """filter the rows returned"""
    where: dashboard_role_access_config_bool_exp
  ): [dashboard_role_access_config!]!

  """
  fetch aggregated fields from the table: "dashboard_role_access_config"
  """
  dashboard_role_access_config_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_role_access_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_role_access_config_order_by!]

    """filter the rows returned"""
    where: dashboard_role_access_config_bool_exp
  ): dashboard_role_access_config_aggregate!

  """
  fetch data from the table: "dashboard_role_access_config" using primary key columns
  """
  dashboard_role_access_config_by_pk(id: uuid!): dashboard_role_access_config

  """
  fetch data from the table: "dashboard_userdashboardmodule"
  """
  dashboard_userdashboardmodule(
    """distinct select on columns"""
    distinct_on: [dashboard_userdashboardmodule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_userdashboardmodule_order_by!]

    """filter the rows returned"""
    where: dashboard_userdashboardmodule_bool_exp
  ): [dashboard_userdashboardmodule!]!

  """
  fetch aggregated fields from the table: "dashboard_userdashboardmodule"
  """
  dashboard_userdashboardmodule_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_userdashboardmodule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_userdashboardmodule_order_by!]

    """filter the rows returned"""
    where: dashboard_userdashboardmodule_bool_exp
  ): dashboard_userdashboardmodule_aggregate!

  """
  fetch data from the table: "dashboard_userdashboardmodule" using primary key columns
  """
  dashboard_userdashboardmodule_by_pk(id: Int!): dashboard_userdashboardmodule

  """
  fetch data from the table: "data_sets"
  """
  data_sets(
    """distinct select on columns"""
    distinct_on: [data_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_sets_order_by!]

    """filter the rows returned"""
    where: data_sets_bool_exp
  ): [data_sets!]!

  """
  fetch aggregated fields from the table: "data_sets"
  """
  data_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [data_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_sets_order_by!]

    """filter the rows returned"""
    where: data_sets_bool_exp
  ): data_sets_aggregate!

  """fetch data from the table: "data_sets" using primary key columns"""
  data_sets_by_pk(name: String!): data_sets

  """
  fetch data from the table: "deadline"
  """
  deadline(
    """distinct select on columns"""
    distinct_on: [deadline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [deadline_order_by!]

    """filter the rows returned"""
    where: deadline_bool_exp
  ): [deadline!]!

  """
  fetch aggregated fields from the table: "deadline"
  """
  deadline_aggregate(
    """distinct select on columns"""
    distinct_on: [deadline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [deadline_order_by!]

    """filter the rows returned"""
    where: deadline_bool_exp
  ): deadline_aggregate!

  """fetch data from the table: "deadline" using primary key columns"""
  deadline_by_pk(id: Int!): deadline

  """
  fetch data from the table: "designation_scope_mapping"
  """
  designation_scope_mapping(
    """distinct select on columns"""
    distinct_on: [designation_scope_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [designation_scope_mapping_order_by!]

    """filter the rows returned"""
    where: designation_scope_mapping_bool_exp
  ): [designation_scope_mapping!]!

  """
  fetch aggregated fields from the table: "designation_scope_mapping"
  """
  designation_scope_mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [designation_scope_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [designation_scope_mapping_order_by!]

    """filter the rows returned"""
    where: designation_scope_mapping_bool_exp
  ): designation_scope_mapping_aggregate!

  """
  fetch data from the table: "designation_scope_mapping" using primary key columns
  """
  designation_scope_mapping_by_pk(id: uuid!): designation_scope_mapping

  """
  fetch data from the table: "device_demand_response"
  """
  device_demand_response(
    """distinct select on columns"""
    distinct_on: [device_demand_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_demand_response_order_by!]

    """filter the rows returned"""
    where: device_demand_response_bool_exp
  ): [device_demand_response!]!

  """
  fetch aggregated fields from the table: "device_demand_response"
  """
  device_demand_response_aggregate(
    """distinct select on columns"""
    distinct_on: [device_demand_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_demand_response_order_by!]

    """filter the rows returned"""
    where: device_demand_response_bool_exp
  ): device_demand_response_aggregate!

  """
  fetch data from the table: "device_demand_response" using primary key columns
  """
  device_demand_response_by_pk(id: Int!): device_demand_response

  """
  fetch data from the table: "device_donation_corporates"
  """
  device_donation_corporates(
    """distinct select on columns"""
    distinct_on: [device_donation_corporates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_corporates_order_by!]

    """filter the rows returned"""
    where: device_donation_corporates_bool_exp
  ): [device_donation_corporates!]!

  """
  fetch aggregated fields from the table: "device_donation_corporates"
  """
  device_donation_corporates_aggregate(
    """distinct select on columns"""
    distinct_on: [device_donation_corporates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_corporates_order_by!]

    """filter the rows returned"""
    where: device_donation_corporates_bool_exp
  ): device_donation_corporates_aggregate!

  """
  fetch data from the table: "device_donation_corporates" using primary key columns
  """
  device_donation_corporates_by_pk(company_id: String!): device_donation_corporates

  """
  fetch data from the table: "device_donation_donor"
  """
  device_donation_donor(
    """distinct select on columns"""
    distinct_on: [device_donation_donor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_donor_order_by!]

    """filter the rows returned"""
    where: device_donation_donor_bool_exp
  ): [device_donation_donor!]!

  """
  fetch aggregated fields from the table: "device_donation_donor"
  """
  device_donation_donor_aggregate(
    """distinct select on columns"""
    distinct_on: [device_donation_donor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_donor_order_by!]

    """filter the rows returned"""
    where: device_donation_donor_bool_exp
  ): device_donation_donor_aggregate!

  """
  fetch data from the table: "device_donation_donor" using primary key columns
  """
  device_donation_donor_by_pk(id: Int!): device_donation_donor

  """An array relationship"""
  device_verification_records(
    """distinct select on columns"""
    distinct_on: [device_verification_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_verification_records_order_by!]

    """filter the rows returned"""
    where: device_verification_records_bool_exp
  ): [device_verification_records!]!

  """An aggregate relationship"""
  device_verification_records_aggregate(
    """distinct select on columns"""
    distinct_on: [device_verification_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_verification_records_order_by!]

    """filter the rows returned"""
    where: device_verification_records_bool_exp
  ): device_verification_records_aggregate!

  """
  fetch data from the table: "device_verification_records" using primary key columns
  """
  device_verification_records_by_pk(id: Int!): device_verification_records

  """
  fetch data from the table: "django_admin_log"
  """
  django_admin_log(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): [django_admin_log!]!

  """
  fetch aggregated fields from the table: "django_admin_log"
  """
  django_admin_log_aggregate(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): django_admin_log_aggregate!

  """
  fetch data from the table: "django_admin_log" using primary key columns
  """
  django_admin_log_by_pk(id: Int!): django_admin_log

  """
  fetch data from the table: "django_celery_results_chordcounter"
  """
  django_celery_results_chordcounter(
    """distinct select on columns"""
    distinct_on: [django_celery_results_chordcounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_chordcounter_order_by!]

    """filter the rows returned"""
    where: django_celery_results_chordcounter_bool_exp
  ): [django_celery_results_chordcounter!]!

  """
  fetch aggregated fields from the table: "django_celery_results_chordcounter"
  """
  django_celery_results_chordcounter_aggregate(
    """distinct select on columns"""
    distinct_on: [django_celery_results_chordcounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_chordcounter_order_by!]

    """filter the rows returned"""
    where: django_celery_results_chordcounter_bool_exp
  ): django_celery_results_chordcounter_aggregate!

  """
  fetch data from the table: "django_celery_results_chordcounter" using primary key columns
  """
  django_celery_results_chordcounter_by_pk(id: Int!): django_celery_results_chordcounter

  """
  fetch data from the table: "django_celery_results_groupresult"
  """
  django_celery_results_groupresult(
    """distinct select on columns"""
    distinct_on: [django_celery_results_groupresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_groupresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_groupresult_bool_exp
  ): [django_celery_results_groupresult!]!

  """
  fetch aggregated fields from the table: "django_celery_results_groupresult"
  """
  django_celery_results_groupresult_aggregate(
    """distinct select on columns"""
    distinct_on: [django_celery_results_groupresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_groupresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_groupresult_bool_exp
  ): django_celery_results_groupresult_aggregate!

  """
  fetch data from the table: "django_celery_results_groupresult" using primary key columns
  """
  django_celery_results_groupresult_by_pk(id: Int!): django_celery_results_groupresult

  """
  fetch data from the table: "django_celery_results_taskresult"
  """
  django_celery_results_taskresult(
    """distinct select on columns"""
    distinct_on: [django_celery_results_taskresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_taskresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_taskresult_bool_exp
  ): [django_celery_results_taskresult!]!

  """
  fetch aggregated fields from the table: "django_celery_results_taskresult"
  """
  django_celery_results_taskresult_aggregate(
    """distinct select on columns"""
    distinct_on: [django_celery_results_taskresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_taskresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_taskresult_bool_exp
  ): django_celery_results_taskresult_aggregate!

  """
  fetch data from the table: "django_celery_results_taskresult" using primary key columns
  """
  django_celery_results_taskresult_by_pk(id: Int!): django_celery_results_taskresult

  """
  fetch data from the table: "django_content_type"
  """
  django_content_type(
    """distinct select on columns"""
    distinct_on: [django_content_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_content_type_order_by!]

    """filter the rows returned"""
    where: django_content_type_bool_exp
  ): [django_content_type!]!

  """
  fetch aggregated fields from the table: "django_content_type"
  """
  django_content_type_aggregate(
    """distinct select on columns"""
    distinct_on: [django_content_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_content_type_order_by!]

    """filter the rows returned"""
    where: django_content_type_bool_exp
  ): django_content_type_aggregate!

  """
  fetch data from the table: "django_content_type" using primary key columns
  """
  django_content_type_by_pk(id: Int!): django_content_type

  """
  fetch data from the table: "django_migrations"
  """
  django_migrations(
    """distinct select on columns"""
    distinct_on: [django_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_migrations_order_by!]

    """filter the rows returned"""
    where: django_migrations_bool_exp
  ): [django_migrations!]!

  """
  fetch aggregated fields from the table: "django_migrations"
  """
  django_migrations_aggregate(
    """distinct select on columns"""
    distinct_on: [django_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_migrations_order_by!]

    """filter the rows returned"""
    where: django_migrations_bool_exp
  ): django_migrations_aggregate!

  """
  fetch data from the table: "django_migrations" using primary key columns
  """
  django_migrations_by_pk(id: Int!): django_migrations

  """
  fetch data from the table: "django_session"
  """
  django_session(
    """distinct select on columns"""
    distinct_on: [django_session_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_session_order_by!]

    """filter the rows returned"""
    where: django_session_bool_exp
  ): [django_session!]!

  """
  fetch aggregated fields from the table: "django_session"
  """
  django_session_aggregate(
    """distinct select on columns"""
    distinct_on: [django_session_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_session_order_by!]

    """filter the rows returned"""
    where: django_session_bool_exp
  ): django_session_aggregate!

  """fetch data from the table: "django_session" using primary key columns"""
  django_session_by_pk(session_key: String!): django_session

  """
  fetch data from the table: "duplicates"
  """
  duplicates(
    """distinct select on columns"""
    distinct_on: [duplicates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [duplicates_order_by!]

    """filter the rows returned"""
    where: duplicates_bool_exp
  ): [duplicates!]!

  """
  fetch aggregated fields from the table: "duplicates"
  """
  duplicates_aggregate(
    """distinct select on columns"""
    distinct_on: [duplicates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [duplicates_order_by!]

    """filter the rows returned"""
    where: duplicates_bool_exp
  ): duplicates_aggregate!

  """
  fetch data from the table: "email_templates"
  """
  email_templates(
    """distinct select on columns"""
    distinct_on: [email_templates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [email_templates_order_by!]

    """filter the rows returned"""
    where: email_templates_bool_exp
  ): [email_templates!]!

  """
  fetch aggregated fields from the table: "email_templates"
  """
  email_templates_aggregate(
    """distinct select on columns"""
    distinct_on: [email_templates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [email_templates_order_by!]

    """filter the rows returned"""
    where: email_templates_bool_exp
  ): email_templates_aggregate!

  """fetch data from the table: "email_templates" using primary key columns"""
  email_templates_by_pk(id: uuid!): email_templates

  """
  fetch data from the table: "enroll_group"
  """
  enroll_group(
    """distinct select on columns"""
    distinct_on: [enroll_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enroll_group_order_by!]

    """filter the rows returned"""
    where: enroll_group_bool_exp
  ): [enroll_group!]!

  """
  fetch aggregated fields from the table: "enroll_group"
  """
  enroll_group_aggregate(
    """distinct select on columns"""
    distinct_on: [enroll_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enroll_group_order_by!]

    """filter the rows returned"""
    where: enroll_group_bool_exp
  ): enroll_group_aggregate!

  """
  fetch data from the table: "enrollment"
  """
  enrollment(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): [enrollment!]!

  """
  fetch aggregated fields from the table: "enrollment"
  """
  enrollment_aggregate(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): enrollment_aggregate!

  """fetch data from the table: "enrollment" using primary key columns"""
  enrollment_by_pk(id: Int!): enrollment

  """
  fetch data from the table: "esamwadmatching"
  """
  esamwadmatching(
    """distinct select on columns"""
    distinct_on: [esamwadmatching_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [esamwadmatching_order_by!]

    """filter the rows returned"""
    where: esamwadmatching_bool_exp
  ): [esamwadmatching!]!

  """
  fetch aggregated fields from the table: "esamwadmatching"
  """
  esamwadmatching_aggregate(
    """distinct select on columns"""
    distinct_on: [esamwadmatching_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [esamwadmatching_order_by!]

    """filter the rows returned"""
    where: esamwadmatching_bool_exp
  ): esamwadmatching_aggregate!

  """
  fetch data from the table: "evaluation_param"
  """
  evaluation_param(
    """distinct select on columns"""
    distinct_on: [evaluation_param_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evaluation_param_order_by!]

    """filter the rows returned"""
    where: evaluation_param_bool_exp
  ): [evaluation_param!]!

  """
  fetch aggregated fields from the table: "evaluation_param"
  """
  evaluation_param_aggregate(
    """distinct select on columns"""
    distinct_on: [evaluation_param_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evaluation_param_order_by!]

    """filter the rows returned"""
    where: evaluation_param_bool_exp
  ): evaluation_param_aggregate!

  """
  fetch data from the table: "evaluation_param" using primary key columns
  """
  evaluation_param_by_pk(id: Int!): evaluation_param

  """
  fetch data from the table: "event_logs"
  """
  event_logs(
    """distinct select on columns"""
    distinct_on: [event_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [event_logs_order_by!]

    """filter the rows returned"""
    where: event_logs_bool_exp
  ): [event_logs!]!

  """
  fetch aggregated fields from the table: "event_logs"
  """
  event_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [event_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [event_logs_order_by!]

    """filter the rows returned"""
    where: event_logs_bool_exp
  ): event_logs_aggregate!

  """fetch data from the table: "event_logs" using primary key columns"""
  event_logs_by_pk(id: bigint!): event_logs

  """An array relationship"""
  external_identifiers(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): [external_identifiers!]!

  """An aggregate relationship"""
  external_identifiers_aggregate(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): external_identifiers_aggregate!

  """
  fetch data from the table: "external_identifiers" using primary key columns
  """
  external_identifiers_by_pk(id: String!): external_identifiers

  """An array relationship"""
  failed_logins(
    """distinct select on columns"""
    distinct_on: [failed_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [failed_logins_order_by!]

    """filter the rows returned"""
    where: failed_logins_bool_exp
  ): [failed_logins!]!

  """An aggregate relationship"""
  failed_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [failed_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [failed_logins_order_by!]

    """filter the rows returned"""
    where: failed_logins_bool_exp
  ): failed_logins_aggregate!

  """An array relationship"""
  families(
    """distinct select on columns"""
    distinct_on: [families_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [families_order_by!]

    """filter the rows returned"""
    where: families_bool_exp
  ): [families!]!

  """An aggregate relationship"""
  families_aggregate(
    """distinct select on columns"""
    distinct_on: [families_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [families_order_by!]

    """filter the rows returned"""
    where: families_bool_exp
  ): families_aggregate!

  """fetch data from the table: "families" using primary key columns"""
  families_by_pk(family_id: uuid!, users_id: uuid!): families

  """An array relationship"""
  federated_domains(
    """distinct select on columns"""
    distinct_on: [federated_domains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [federated_domains_order_by!]

    """filter the rows returned"""
    where: federated_domains_bool_exp
  ): [federated_domains!]!

  """An aggregate relationship"""
  federated_domains_aggregate(
    """distinct select on columns"""
    distinct_on: [federated_domains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [federated_domains_order_by!]

    """filter the rows returned"""
    where: federated_domains_bool_exp
  ): federated_domains_aggregate!

  """An array relationship"""
  form_fields(
    """distinct select on columns"""
    distinct_on: [form_fields_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_fields_order_by!]

    """filter the rows returned"""
    where: form_fields_bool_exp
  ): [form_fields!]!

  """An aggregate relationship"""
  form_fields_aggregate(
    """distinct select on columns"""
    distinct_on: [form_fields_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_fields_order_by!]

    """filter the rows returned"""
    where: form_fields_bool_exp
  ): form_fields_aggregate!

  """fetch data from the table: "form_fields" using primary key columns"""
  form_fields_by_pk(id: uuid!): form_fields

  """An array relationship"""
  form_steps(
    """distinct select on columns"""
    distinct_on: [form_steps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_steps_order_by!]

    """filter the rows returned"""
    where: form_steps_bool_exp
  ): [form_steps!]!

  """An aggregate relationship"""
  form_steps_aggregate(
    """distinct select on columns"""
    distinct_on: [form_steps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [form_steps_order_by!]

    """filter the rows returned"""
    where: form_steps_bool_exp
  ): form_steps_aggregate!

  """fetch data from the table: "form_steps" using primary key columns"""
  form_steps_by_pk(form_fields_id: uuid!, forms_id: uuid!): form_steps

  """
  fetch data from the table: "forms"
  """
  forms(
    """distinct select on columns"""
    distinct_on: [forms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [forms_order_by!]

    """filter the rows returned"""
    where: forms_bool_exp
  ): [forms!]!

  """
  fetch aggregated fields from the table: "forms"
  """
  forms_aggregate(
    """distinct select on columns"""
    distinct_on: [forms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [forms_order_by!]

    """filter the rows returned"""
    where: forms_bool_exp
  ): forms_aggregate!

  """fetch data from the table: "forms" using primary key columns"""
  forms_by_pk(id: uuid!): forms

  """
  fetch data from the table: "gender_cat_analysis"
  """
  gender_cat_analysis(
    """distinct select on columns"""
    distinct_on: [gender_cat_analysis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gender_cat_analysis_order_by!]

    """filter the rows returned"""
    where: gender_cat_analysis_bool_exp
  ): [gender_cat_analysis!]!

  """
  fetch aggregated fields from the table: "gender_cat_analysis"
  """
  gender_cat_analysis_aggregate(
    """distinct select on columns"""
    distinct_on: [gender_cat_analysis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gender_cat_analysis_order_by!]

    """filter the rows returned"""
    where: gender_cat_analysis_bool_exp
  ): gender_cat_analysis_aggregate!

  """
  fetch data from the table: "genuine_profiles"
  """
  genuine_profiles(
    """distinct select on columns"""
    distinct_on: [genuine_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [genuine_profiles_order_by!]

    """filter the rows returned"""
    where: genuine_profiles_bool_exp
  ): [genuine_profiles!]!

  """
  fetch aggregated fields from the table: "genuine_profiles"
  """
  genuine_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [genuine_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [genuine_profiles_order_by!]

    """filter the rows returned"""
    where: genuine_profiles_bool_exp
  ): genuine_profiles_aggregate!

  """"""
  getSchoolHeadForSchool(schoolCode: String): users

  """"""
  getTeachersForSchool(schoolCode: String): [users]

  """"""
  getUserById(id: uuid): users

  """"""
  getUsersByApplication(application: String, limit: Int): [users]

  """"""
  getUsersByQuery(queryString: String): [users]

  """"""
  getUsersByUsername(username: String): users

  """"""
  getUsersByUsernameInt(username: Int): users

  """"""
  getUsersFromData(queryString: String): [users]

  """
  fetch data from the table: "global_daily_active_users"
  """
  global_daily_active_users(
    """distinct select on columns"""
    distinct_on: [global_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [global_daily_active_users_order_by!]

    """filter the rows returned"""
    where: global_daily_active_users_bool_exp
  ): [global_daily_active_users!]!

  """
  fetch aggregated fields from the table: "global_daily_active_users"
  """
  global_daily_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [global_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [global_daily_active_users_order_by!]

    """filter the rows returned"""
    where: global_daily_active_users_bool_exp
  ): global_daily_active_users_aggregate!

  """
  fetch data from the table: "global_monthly_active_users"
  """
  global_monthly_active_users(
    """distinct select on columns"""
    distinct_on: [global_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [global_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: global_monthly_active_users_bool_exp
  ): [global_monthly_active_users!]!

  """
  fetch aggregated fields from the table: "global_monthly_active_users"
  """
  global_monthly_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [global_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [global_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: global_monthly_active_users_bool_exp
  ): global_monthly_active_users_aggregate!

  """
  fetch data from the table: "global_registration_counts"
  """
  global_registration_counts(
    """distinct select on columns"""
    distinct_on: [global_registration_counts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [global_registration_counts_order_by!]

    """filter the rows returned"""
    where: global_registration_counts_bool_exp
  ): [global_registration_counts!]!

  """
  fetch aggregated fields from the table: "global_registration_counts"
  """
  global_registration_counts_aggregate(
    """distinct select on columns"""
    distinct_on: [global_registration_counts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [global_registration_counts_order_by!]

    """filter the rows returned"""
    where: global_registration_counts_bool_exp
  ): global_registration_counts_aggregate!

  """
  fetch data from the table: "grade"
  """
  grade(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): [grade!]!

  """
  fetch aggregated fields from the table: "grade"
  """
  grade_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): grade_aggregate!

  """
  fetch data from the table: "grade_assessment"
  """
  grade_assessment(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): [grade_assessment!]!

  """
  fetch aggregated fields from the table: "grade_assessment"
  """
  grade_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): grade_assessment_aggregate!

  """
  fetch data from the table: "grade_assessment" using primary key columns
  """
  grade_assessment_by_pk(id: Int!): grade_assessment

  """fetch data from the table: "grade" using primary key columns"""
  grade_by_pk(id: Int!): grade

  """An array relationship"""
  group_application_roles(
    """distinct select on columns"""
    distinct_on: [group_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_application_roles_order_by!]

    """filter the rows returned"""
    where: group_application_roles_bool_exp
  ): [group_application_roles!]!

  """An aggregate relationship"""
  group_application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [group_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_application_roles_order_by!]

    """filter the rows returned"""
    where: group_application_roles_bool_exp
  ): group_application_roles_aggregate!

  """An array relationship"""
  group_members(
    """distinct select on columns"""
    distinct_on: [group_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_members_order_by!]

    """filter the rows returned"""
    where: group_members_bool_exp
  ): [group_members!]!

  """An aggregate relationship"""
  group_members_aggregate(
    """distinct select on columns"""
    distinct_on: [group_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_members_order_by!]

    """filter the rows returned"""
    where: group_members_bool_exp
  ): group_members_aggregate!

  """fetch data from the table: "group_members" using primary key columns"""
  group_members_by_pk(id: uuid!): group_members

  """An array relationship"""
  groups(
    """distinct select on columns"""
    distinct_on: [groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [groups_order_by!]

    """filter the rows returned"""
    where: groups_bool_exp
  ): [groups!]!

  """An aggregate relationship"""
  groups_aggregate(
    """distinct select on columns"""
    distinct_on: [groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [groups_order_by!]

    """filter the rows returned"""
    where: groups_bool_exp
  ): groups_aggregate!

  """fetch data from the table: "groups" using primary key columns"""
  groups_by_pk(id: uuid!): groups

  """An array relationship"""
  hourly_logins(
    """distinct select on columns"""
    distinct_on: [hourly_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hourly_logins_order_by!]

    """filter the rows returned"""
    where: hourly_logins_bool_exp
  ): [hourly_logins!]!

  """An aggregate relationship"""
  hourly_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [hourly_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hourly_logins_order_by!]

    """filter the rows returned"""
    where: hourly_logins_bool_exp
  ): hourly_logins_aggregate!

  """
  fetch data from the table: "idb_attendance_by_date_aggregate"
  """
  idb_attendance_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_attendance_by_date_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_by_date_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_attendance_by_date_aggregate_bool_exp
  ): [idb_attendance_by_date_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_attendance_by_date_aggregate"
  """
  idb_attendance_by_date_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_attendance_by_date_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_by_date_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_attendance_by_date_aggregate_bool_exp
  ): idb_attendance_by_date_aggregate_aggregate!

  """
  fetch data from the table: "idb_attendance_district_enrolment_percentage"
  """
  idb_attendance_district_enrolment_percentage(
    """distinct select on columns"""
    distinct_on: [idb_attendance_district_enrolment_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_district_enrolment_percentage_order_by!]

    """filter the rows returned"""
    where: idb_attendance_district_enrolment_percentage_bool_exp
  ): [idb_attendance_district_enrolment_percentage!]!

  """
  fetch aggregated fields from the table: "idb_attendance_district_enrolment_percentage"
  """
  idb_attendance_district_enrolment_percentage_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_attendance_district_enrolment_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_district_enrolment_percentage_order_by!]

    """filter the rows returned"""
    where: idb_attendance_district_enrolment_percentage_bool_exp
  ): idb_attendance_district_enrolment_percentage_aggregate!

  """
  fetch data from the table: "idb_block_wise_student_enrolment"
  """
  idb_block_wise_student_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_block_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_block_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_block_wise_student_enrolment_bool_exp
  ): [idb_block_wise_student_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_block_wise_student_enrolment"
  """
  idb_block_wise_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_block_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_block_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_block_wise_student_enrolment_bool_exp
  ): idb_block_wise_student_enrolment_aggregate!

  """
  fetch data from the table: "idb_daily_enrolment_aggregate"
  """
  idb_daily_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_enrolment_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_enrolment_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_enrolment_aggregate_bool_exp
  ): [idb_daily_enrolment_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_daily_enrolment_aggregate"
  """
  idb_daily_enrolment_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_enrolment_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_enrolment_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_enrolment_aggregate_bool_exp
  ): idb_daily_enrolment_aggregate_aggregate!

  """
  fetch data from the table: "idb_daily_total_attendance_percent_aggregate"
  """
  idb_daily_total_attendance_percent_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percent_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percent_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percent_aggregate_bool_exp
  ): [idb_daily_total_attendance_percent_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_daily_total_attendance_percent_aggregate"
  """
  idb_daily_total_attendance_percent_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percent_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percent_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percent_aggregate_bool_exp
  ): idb_daily_total_attendance_percent_aggregate_aggregate!

  """
  fetch data from the table: "idb_daily_total_attendance_percentage"
  """
  idb_daily_total_attendance_percentage(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_bool_exp
  ): [idb_daily_total_attendance_percentage!]!

  """
  fetch aggregated fields from the table: "idb_daily_total_attendance_percentage"
  """
  idb_daily_total_attendance_percentage_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_bool_exp
  ): idb_daily_total_attendance_percentage_aggregate!

  """
  fetch data from the table: "idb_daily_total_attendance_percentage_mv"
  """
  idb_daily_total_attendance_percentage_mv(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_mv_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_mv_bool_exp
  ): [idb_daily_total_attendance_percentage_mv!]!

  """
  fetch aggregated fields from the table: "idb_daily_total_attendance_percentage_mv"
  """
  idb_daily_total_attendance_percentage_mv_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_mv_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_mv_bool_exp
  ): idb_daily_total_attendance_percentage_mv_aggregate!

  """
  fetch data from the table: "idb_district_school_type_percentage"
  """
  idb_district_school_type_percentage(
    """distinct select on columns"""
    distinct_on: [idb_district_school_type_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_school_type_percentage_order_by!]

    """filter the rows returned"""
    where: idb_district_school_type_percentage_bool_exp
  ): [idb_district_school_type_percentage!]!

  """
  fetch aggregated fields from the table: "idb_district_school_type_percentage"
  """
  idb_district_school_type_percentage_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_district_school_type_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_school_type_percentage_order_by!]

    """filter the rows returned"""
    where: idb_district_school_type_percentage_bool_exp
  ): idb_district_school_type_percentage_aggregate!

  """
  fetch data from the table: "idb_district_wise_schools"
  """
  idb_district_wise_schools(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_schools_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_schools_bool_exp
  ): [idb_district_wise_schools!]!

  """
  fetch aggregated fields from the table: "idb_district_wise_schools"
  """
  idb_district_wise_schools_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_schools_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_schools_bool_exp
  ): idb_district_wise_schools_aggregate!

  """
  fetch data from the table: "idb_district_wise_student_enrolment"
  """
  idb_district_wise_student_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_student_enrolment_bool_exp
  ): [idb_district_wise_student_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_district_wise_student_enrolment"
  """
  idb_district_wise_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_student_enrolment_bool_exp
  ): idb_district_wise_student_enrolment_aggregate!

  """
  fetch data from the table: "idb_enrolment_grade_wise_state"
  """
  idb_enrolment_grade_wise_state(
    """distinct select on columns"""
    distinct_on: [idb_enrolment_grade_wise_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_enrolment_grade_wise_state_order_by!]

    """filter the rows returned"""
    where: idb_enrolment_grade_wise_state_bool_exp
  ): [idb_enrolment_grade_wise_state!]!

  """
  fetch aggregated fields from the table: "idb_enrolment_grade_wise_state"
  """
  idb_enrolment_grade_wise_state_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_enrolment_grade_wise_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_enrolment_grade_wise_state_order_by!]

    """filter the rows returned"""
    where: idb_enrolment_grade_wise_state_bool_exp
  ): idb_enrolment_grade_wise_state_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  idb_student_attendance_attendance_final_by_date_grade(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_final_by_date_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_final_by_date_grade_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_final_by_date_grade_bool_exp
  ): [idb_student_attendance_attendance_final_by_date_grade!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  idb_student_attendance_attendance_final_by_date_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_final_by_date_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_final_by_date_grade_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_final_by_date_grade_bool_exp
  ): idb_student_attendance_attendance_final_by_date_grade_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_merged"
  """
  idb_student_attendance_attendance_merged(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_merged_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_merged_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_merged_bool_exp
  ): [idb_student_attendance_attendance_merged!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_merged"
  """
  idb_student_attendance_attendance_merged_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_merged_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_merged_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_merged_bool_exp
  ): idb_student_attendance_attendance_merged_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_present_aggregate"
  """
  idb_student_attendance_attendance_present_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_aggregate_bool_exp
  ): [idb_student_attendance_attendance_present_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_present_aggregate"
  """
  idb_student_attendance_attendance_present_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_aggregate_bool_exp
  ): idb_student_attendance_attendance_present_aggregate_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  idb_student_attendance_attendance_present_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_marked_by_date_bool_exp
  ): [idb_student_attendance_attendance_present_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  idb_student_attendance_attendance_present_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_marked_by_date_bool_exp
  ): idb_student_attendance_attendance_present_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  idb_student_attendance_attendance_total_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_total_marked_by_date_bool_exp
  ): [idb_student_attendance_attendance_total_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  idb_student_attendance_attendance_total_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_total_marked_by_date_bool_exp
  ): idb_student_attendance_attendance_total_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_final"
  """
  idb_student_attendance_block_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_bool_exp
  ): [idb_student_attendance_block_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_final"
  """
  idb_student_attendance_block_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_bool_exp
  ): idb_student_attendance_block_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_final_enrolment"
  """
  idb_student_attendance_block_final_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_enrolment_bool_exp
  ): [idb_student_attendance_block_final_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_final_enrolment"
  """
  idb_student_attendance_block_final_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_enrolment_bool_exp
  ): idb_student_attendance_block_final_enrolment_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  idb_student_attendance_block_level_daily_present_marked(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_present_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_present_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_present_marked_bool_exp
  ): [idb_student_attendance_block_level_daily_present_marked!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  idb_student_attendance_block_level_daily_present_marked_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_present_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_present_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_present_marked_bool_exp
  ): idb_student_attendance_block_level_daily_present_marked_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  idb_student_attendance_block_level_daily_total_marked(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_total_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_total_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_total_marked_bool_exp
  ): [idb_student_attendance_block_level_daily_total_marked!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  idb_student_attendance_block_level_daily_total_marked_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_total_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_total_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_total_marked_bool_exp
  ): idb_student_attendance_block_level_daily_total_marked_aggregate!

  """
  fetch data from the table: "idb_student_attendance_compliance_district_wise"
  """
  idb_student_attendance_compliance_district_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_bool_exp
  ): [idb_student_attendance_compliance_district_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_compliance_district_wise"
  """
  idb_student_attendance_compliance_district_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_bool_exp
  ): idb_student_attendance_compliance_district_wise_aggregate!

  """
  fetch data from the table: "idb_student_attendance_compliance_district_wise_final"
  """
  idb_student_attendance_compliance_district_wise_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_final_bool_exp
  ): [idb_student_attendance_compliance_district_wise_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_compliance_district_wise_final"
  """
  idb_student_attendance_compliance_district_wise_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_final_bool_exp
  ): idb_student_attendance_compliance_district_wise_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_compliance_school_wise"
  """
  idb_student_attendance_compliance_school_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_school_wise_bool_exp
  ): [idb_student_attendance_compliance_school_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_compliance_school_wise"
  """
  idb_student_attendance_compliance_school_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_school_wise_bool_exp
  ): idb_student_attendance_compliance_school_wise_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_final"
  """
  idb_student_attendance_district_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_bool_exp
  ): [idb_student_attendance_district_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_final"
  """
  idb_student_attendance_district_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_bool_exp
  ): idb_student_attendance_district_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_final_enrolment"
  """
  idb_student_attendance_district_final_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_enrolment_bool_exp
  ): [idb_student_attendance_district_final_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_final_enrolment"
  """
  idb_student_attendance_district_final_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_enrolment_bool_exp
  ): idb_student_attendance_district_final_enrolment_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_present_marked_by_date"
  """
  idb_student_attendance_district_present_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_present_marked_by_date_bool_exp
  ): [idb_student_attendance_district_present_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_present_marked_by_date"
  """
  idb_student_attendance_district_present_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_present_marked_by_date_bool_exp
  ): idb_student_attendance_district_present_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_total_marked_by_date"
  """
  idb_student_attendance_district_total_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_total_marked_by_date_bool_exp
  ): [idb_student_attendance_district_total_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_total_marked_by_date"
  """
  idb_student_attendance_district_total_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_total_marked_by_date_bool_exp
  ): idb_student_attendance_district_total_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  idb_student_attendance_final_grade_wise_with_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_final_grade_wise_with_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_final_grade_wise_with_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp
  ): [idb_student_attendance_final_grade_wise_with_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  idb_student_attendance_final_grade_wise_with_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_final_grade_wise_with_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_final_grade_wise_with_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp
  ): idb_student_attendance_final_grade_wise_with_enrolment_aggregate!

  """
  fetch data from the table: "idb_student_attendance_present_school_wise"
  """
  idb_student_attendance_present_school_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_present_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_present_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_present_school_wise_bool_exp
  ): [idb_student_attendance_present_school_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_present_school_wise"
  """
  idb_student_attendance_present_school_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_present_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_present_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_present_school_wise_bool_exp
  ): idb_student_attendance_present_school_wise_aggregate!

  """
  fetch data from the table: "idb_student_attendance_school_wise_final"
  """
  idb_student_attendance_school_wise_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_school_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_school_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_school_wise_final_bool_exp
  ): [idb_student_attendance_school_wise_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_school_wise_final"
  """
  idb_student_attendance_school_wise_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_school_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_school_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_school_wise_final_bool_exp
  ): idb_student_attendance_school_wise_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_total_school_wise"
  """
  idb_student_attendance_total_school_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_total_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_total_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_total_school_wise_bool_exp
  ): [idb_student_attendance_total_school_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_total_school_wise"
  """
  idb_student_attendance_total_school_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_total_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_total_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_total_school_wise_bool_exp
  ): idb_student_attendance_total_school_wise_aggregate!

  """
  fetch data from the table: "idb_total_state_student_enrolment"
  """
  idb_total_state_student_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_total_state_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_total_state_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_total_state_student_enrolment_bool_exp
  ): [idb_total_state_student_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_total_state_student_enrolment"
  """
  idb_total_state_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_total_state_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_total_state_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_total_state_student_enrolment_bool_exp
  ): idb_total_state_student_enrolment_aggregate!

  """An array relationship"""
  identities(
    """distinct select on columns"""
    distinct_on: [identities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identities_order_by!]

    """filter the rows returned"""
    where: identities_bool_exp
  ): [identities!]!

  """An aggregate relationship"""
  identities_aggregate(
    """distinct select on columns"""
    distinct_on: [identities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identities_order_by!]

    """filter the rows returned"""
    where: identities_bool_exp
  ): identities_aggregate!

  """fetch data from the table: "identities" using primary key columns"""
  identities_by_pk(id: bigint!): identities

  """An array relationship"""
  identity_providers(
    """distinct select on columns"""
    distinct_on: [identity_providers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_order_by!]

    """filter the rows returned"""
    where: identity_providers_bool_exp
  ): [identity_providers!]!

  """An aggregate relationship"""
  identity_providers_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_order_by!]

    """filter the rows returned"""
    where: identity_providers_bool_exp
  ): identity_providers_aggregate!

  """
  fetch data from the table: "identity_providers_applications"
  """
  identity_providers_applications(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): [identity_providers_applications!]!

  """An aggregate relationship"""
  identity_providers_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [identity_providers_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identity_providers_applications_order_by!]

    """filter the rows returned"""
    where: identity_providers_applications_bool_exp
  ): identity_providers_applications_aggregate!

  """
  fetch data from the table: "identity_providers" using primary key columns
  """
  identity_providers_by_pk(id: uuid!): identity_providers

  """
  fetch data from the table: "instance"
  """
  instance(
    """distinct select on columns"""
    distinct_on: [instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [instance_order_by!]

    """filter the rows returned"""
    where: instance_bool_exp
  ): [instance!]!

  """
  fetch aggregated fields from the table: "instance"
  """
  instance_aggregate(
    """distinct select on columns"""
    distinct_on: [instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [instance_order_by!]

    """filter the rows returned"""
    where: instance_bool_exp
  ): instance_aggregate!

  """
  fetch data from the table: "integrations"
  """
  integrations(
    """distinct select on columns"""
    distinct_on: [integrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [integrations_order_by!]

    """filter the rows returned"""
    where: integrations_bool_exp
  ): [integrations!]!

  """
  fetch aggregated fields from the table: "integrations"
  """
  integrations_aggregate(
    """distinct select on columns"""
    distinct_on: [integrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [integrations_order_by!]

    """filter the rows returned"""
    where: integrations_bool_exp
  ): integrations_aggregate!

  """
  fetch data from the table: "jet_bookmark"
  """
  jet_bookmark(
    """distinct select on columns"""
    distinct_on: [jet_bookmark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_bookmark_order_by!]

    """filter the rows returned"""
    where: jet_bookmark_bool_exp
  ): [jet_bookmark!]!

  """
  fetch aggregated fields from the table: "jet_bookmark"
  """
  jet_bookmark_aggregate(
    """distinct select on columns"""
    distinct_on: [jet_bookmark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_bookmark_order_by!]

    """filter the rows returned"""
    where: jet_bookmark_bool_exp
  ): jet_bookmark_aggregate!

  """fetch data from the table: "jet_bookmark" using primary key columns"""
  jet_bookmark_by_pk(id: Int!): jet_bookmark

  """
  fetch data from the table: "jet_pinnedapplication"
  """
  jet_pinnedapplication(
    """distinct select on columns"""
    distinct_on: [jet_pinnedapplication_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_pinnedapplication_order_by!]

    """filter the rows returned"""
    where: jet_pinnedapplication_bool_exp
  ): [jet_pinnedapplication!]!

  """
  fetch aggregated fields from the table: "jet_pinnedapplication"
  """
  jet_pinnedapplication_aggregate(
    """distinct select on columns"""
    distinct_on: [jet_pinnedapplication_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_pinnedapplication_order_by!]

    """filter the rows returned"""
    where: jet_pinnedapplication_bool_exp
  ): jet_pinnedapplication_aggregate!

  """
  fetch data from the table: "jet_pinnedapplication" using primary key columns
  """
  jet_pinnedapplication_by_pk(id: Int!): jet_pinnedapplication

  """
  fetch data from the table: "keys"
  """
  keys(
    """distinct select on columns"""
    distinct_on: [keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keys_order_by!]

    """filter the rows returned"""
    where: keys_bool_exp
  ): [keys!]!

  """
  fetch aggregated fields from the table: "keys"
  """
  keys_aggregate(
    """distinct select on columns"""
    distinct_on: [keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keys_order_by!]

    """filter the rows returned"""
    where: keys_bool_exp
  ): keys_aggregate!

  """fetch data from the table: "keys" using primary key columns"""
  keys_by_pk(id: uuid!): keys

  """
  fetch data from the table: "lambdas"
  """
  lambdas(
    """distinct select on columns"""
    distinct_on: [lambdas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lambdas_order_by!]

    """filter the rows returned"""
    where: lambdas_bool_exp
  ): [lambdas!]!

  """
  fetch aggregated fields from the table: "lambdas"
  """
  lambdas_aggregate(
    """distinct select on columns"""
    distinct_on: [lambdas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lambdas_order_by!]

    """filter the rows returned"""
    where: lambdas_bool_exp
  ): lambdas_aggregate!

  """fetch data from the table: "lambdas" using primary key columns"""
  lambdas_by_pk(id: uuid!): lambdas

  """
  fetch data from the table: "lo"
  """
  lo(
    """distinct select on columns"""
    distinct_on: [lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_order_by!]

    """filter the rows returned"""
    where: lo_bool_exp
  ): [lo!]!

  """
  fetch aggregated fields from the table: "lo"
  """
  lo_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_order_by!]

    """filter the rows returned"""
    where: lo_bool_exp
  ): lo_aggregate!

  """
  fetch data from the table: "lo_assessment"
  """
  lo_assessment(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): [lo_assessment!]!

  """
  fetch aggregated fields from the table: "lo_assessment"
  """
  lo_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): lo_assessment_aggregate!

  """fetch data from the table: "lo_assessment" using primary key columns"""
  lo_assessment_by_pk(id: Int!): lo_assessment

  """
  fetch data from the table: "lo_bundle"
  """
  lo_bundle(
    """distinct select on columns"""
    distinct_on: [lo_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_order_by!]

    """filter the rows returned"""
    where: lo_bundle_bool_exp
  ): [lo_bundle!]!

  """
  fetch aggregated fields from the table: "lo_bundle"
  """
  lo_bundle_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_order_by!]

    """filter the rows returned"""
    where: lo_bundle_bool_exp
  ): lo_bundle_aggregate!

  """fetch data from the table: "lo_bundle" using primary key columns"""
  lo_bundle_by_pk(id: Int!): lo_bundle

  """An array relationship"""
  lo_bundle_los(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): [lo_bundle_los!]!

  """An aggregate relationship"""
  lo_bundle_los_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): lo_bundle_los_aggregate!

  """fetch data from the table: "lo_bundle_los" using primary key columns"""
  lo_bundle_los_by_pk(id: Int!): lo_bundle_los

  """fetch data from the table: "lo" using primary key columns"""
  lo_by_pk(id: Int!): lo

  """
  fetch data from the table: "lo_submission"
  """
  lo_submission(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): [lo_submission!]!

  """
  fetch aggregated fields from the table: "lo_submission"
  """
  lo_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): lo_submission_aggregate!

  """fetch data from the table: "lo_submission" using primary key columns"""
  lo_submission_by_pk(id: Int!): lo_submission

  """
  fetch data from the table: "lo_table"
  """
  lo_table(
    """distinct select on columns"""
    distinct_on: [lo_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table_order_by!]

    """filter the rows returned"""
    where: lo_table_bool_exp
  ): [lo_table!]!

  """
  fetch data from the table: "lo_table2"
  """
  lo_table2(
    """distinct select on columns"""
    distinct_on: [lo_table2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table2_order_by!]

    """filter the rows returned"""
    where: lo_table2_bool_exp
  ): [lo_table2!]!

  """
  fetch aggregated fields from the table: "lo_table2"
  """
  lo_table2_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_table2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table2_order_by!]

    """filter the rows returned"""
    where: lo_table2_bool_exp
  ): lo_table2_aggregate!

  """
  fetch aggregated fields from the table: "lo_table"
  """
  lo_table_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table_order_by!]

    """filter the rows returned"""
    where: lo_table_bool_exp
  ): lo_table_aggregate!

  """
  fetch data from the table: "lo_v2"
  """
  lo_v2(
    """distinct select on columns"""
    distinct_on: [lo_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_v2_order_by!]

    """filter the rows returned"""
    where: lo_v2_bool_exp
  ): [lo_v2!]!

  """
  fetch aggregated fields from the table: "lo_v2"
  """
  lo_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_v2_order_by!]

    """filter the rows returned"""
    where: lo_v2_bool_exp
  ): lo_v2_aggregate!

  """fetch data from the table: "lo_v2" using primary key columns"""
  lo_v2_by_pk(id: Int!): lo_v2

  """
  fetch data from the table: "location"
  """
  location(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): [location!]!

  """
  fetch aggregated fields from the table: "location"
  """
  location_aggregate(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): location_aggregate!

  """fetch data from the table: "location" using primary key columns"""
  location_by_pk(id: Int!): location

  """
  fetch data from the table: "locks"
  """
  locks(
    """distinct select on columns"""
    distinct_on: [locks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locks_order_by!]

    """filter the rows returned"""
    where: locks_bool_exp
  ): [locks!]!

  """
  fetch aggregated fields from the table: "locks"
  """
  locks_aggregate(
    """distinct select on columns"""
    distinct_on: [locks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locks_order_by!]

    """filter the rows returned"""
    where: locks_bool_exp
  ): locks_aggregate!

  """fetch data from the table: "locks" using primary key columns"""
  locks_by_pk(type: String!): locks

  """
  fetch data from the table: "mapping"
  """
  mapping(
    """distinct select on columns"""
    distinct_on: [mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_order_by!]

    """filter the rows returned"""
    where: mapping_bool_exp
  ): [mapping!]!

  """
  fetch aggregated fields from the table: "mapping"
  """
  mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_order_by!]

    """filter the rows returned"""
    where: mapping_bool_exp
  ): mapping_aggregate!

  """fetch data from the table: "mapping" using primary key columns"""
  mapping_by_pk(id: Int!): mapping

  """
  fetch data from the table: "mapping_details"
  """
  mapping_details(
    """distinct select on columns"""
    distinct_on: [mapping_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_details_order_by!]

    """filter the rows returned"""
    where: mapping_details_bool_exp
  ): [mapping_details!]!

  """
  fetch aggregated fields from the table: "mapping_details"
  """
  mapping_details_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_details_order_by!]

    """filter the rows returned"""
    where: mapping_details_bool_exp
  ): mapping_details_aggregate!

  """fetch data from the table: "mapping_details" using primary key columns"""
  mapping_details_by_pk(id: Int!): mapping_details

  """
  fetch data from the table: "mapping_submission"
  """
  mapping_submission(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): [mapping_submission!]!

  """
  fetch aggregated fields from the table: "mapping_submission"
  """
  mapping_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): mapping_submission_aggregate!

  """
  fetch data from the table: "mapping_submission" using primary key columns
  """
  mapping_submission_by_pk(id: Int!): mapping_submission

  """
  fetch data from the table: "master_attendance"
  """
  master_attendance(
    """distinct select on columns"""
    distinct_on: [master_attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_attendance_order_by!]

    """filter the rows returned"""
    where: master_attendance_bool_exp
  ): [master_attendance!]!

  """
  fetch aggregated fields from the table: "master_attendance"
  """
  master_attendance_aggregate(
    """distinct select on columns"""
    distinct_on: [master_attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_attendance_order_by!]

    """filter the rows returned"""
    where: master_attendance_bool_exp
  ): master_attendance_aggregate!

  """
  fetch data from the table: "master_presentstudents"
  """
  master_presentstudents(
    """distinct select on columns"""
    distinct_on: [master_presentstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents_order_by!]

    """filter the rows returned"""
    where: master_presentstudents_bool_exp
  ): [master_presentstudents!]!

  """
  fetch data from the table: "master_presentstudents1"
  """
  master_presentstudents1(
    """distinct select on columns"""
    distinct_on: [master_presentstudents1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents1_order_by!]

    """filter the rows returned"""
    where: master_presentstudents1_bool_exp
  ): [master_presentstudents1!]!

  """
  fetch aggregated fields from the table: "master_presentstudents1"
  """
  master_presentstudents1_aggregate(
    """distinct select on columns"""
    distinct_on: [master_presentstudents1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents1_order_by!]

    """filter the rows returned"""
    where: master_presentstudents1_bool_exp
  ): master_presentstudents1_aggregate!

  """
  fetch aggregated fields from the table: "master_presentstudents"
  """
  master_presentstudents_aggregate(
    """distinct select on columns"""
    distinct_on: [master_presentstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents_order_by!]

    """filter the rows returned"""
    where: master_presentstudents_bool_exp
  ): master_presentstudents_aggregate!

  """
  fetch data from the table: "master_record"
  """
  master_record(
    """distinct select on columns"""
    distinct_on: [master_record_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_record_order_by!]

    """filter the rows returned"""
    where: master_record_bool_exp
  ): [master_record!]!

  """
  fetch aggregated fields from the table: "master_record"
  """
  master_record_aggregate(
    """distinct select on columns"""
    distinct_on: [master_record_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_record_order_by!]

    """filter the rows returned"""
    where: master_record_bool_exp
  ): master_record_aggregate!

  """
  fetch data from the table: "master_students"
  """
  master_students(
    """distinct select on columns"""
    distinct_on: [master_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_students_order_by!]

    """filter the rows returned"""
    where: master_students_bool_exp
  ): [master_students!]!

  """
  fetch aggregated fields from the table: "master_students"
  """
  master_students_aggregate(
    """distinct select on columns"""
    distinct_on: [master_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_students_order_by!]

    """filter the rows returned"""
    where: master_students_bool_exp
  ): master_students_aggregate!

  """
  fetch data from the table: "master_table"
  """
  master_table(
    """distinct select on columns"""
    distinct_on: [master_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_order_by!]

    """filter the rows returned"""
    where: master_table_bool_exp
  ): [master_table!]!

  """
  fetch aggregated fields from the table: "master_table"
  """
  master_table_aggregate(
    """distinct select on columns"""
    distinct_on: [master_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_order_by!]

    """filter the rows returned"""
    where: master_table_bool_exp
  ): master_table_aggregate!

  """
  fetch data from the table: "master_table_higher2"
  """
  master_table_higher2(
    """distinct select on columns"""
    distinct_on: [master_table_higher2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_higher2_order_by!]

    """filter the rows returned"""
    where: master_table_higher2_bool_exp
  ): [master_table_higher2!]!

  """
  fetch aggregated fields from the table: "master_table_higher2"
  """
  master_table_higher2_aggregate(
    """distinct select on columns"""
    distinct_on: [master_table_higher2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_higher2_order_by!]

    """filter the rows returned"""
    where: master_table_higher2_bool_exp
  ): master_table_higher2_aggregate!

  """
  fetch data from the table: "masterstudents"
  """
  masterstudents(
    """distinct select on columns"""
    distinct_on: [masterstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [masterstudents_order_by!]

    """filter the rows returned"""
    where: masterstudents_bool_exp
  ): [masterstudents!]!

  """
  fetch aggregated fields from the table: "masterstudents"
  """
  masterstudents_aggregate(
    """distinct select on columns"""
    distinct_on: [masterstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [masterstudents_order_by!]

    """filter the rows returned"""
    where: masterstudents_bool_exp
  ): masterstudents_aggregate!

  """
  fetch data from the table: "matchingteachernos"
  """
  matchingteachernos(
    """distinct select on columns"""
    distinct_on: [matchingteachernos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [matchingteachernos_order_by!]

    """filter the rows returned"""
    where: matchingteachernos_bool_exp
  ): [matchingteachernos!]!

  """
  fetch aggregated fields from the table: "matchingteachernos"
  """
  matchingteachernos_aggregate(
    """distinct select on columns"""
    distinct_on: [matchingteachernos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [matchingteachernos_order_by!]

    """filter the rows returned"""
    where: matchingteachernos_bool_exp
  ): matchingteachernos_aggregate!

  """
  fetch data from the table: "migrations"
  """
  migrations(
    """distinct select on columns"""
    distinct_on: [migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [migrations_order_by!]

    """filter the rows returned"""
    where: migrations_bool_exp
  ): [migrations!]!

  """
  fetch aggregated fields from the table: "migrations"
  """
  migrations_aggregate(
    """distinct select on columns"""
    distinct_on: [migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [migrations_order_by!]

    """filter the rows returned"""
    where: migrations_bool_exp
  ): migrations_aggregate!

  """fetch data from the table: "migrations" using primary key columns"""
  migrations_by_pk(name: String!): migrations

  """
  fetch data from the table: "mvintegrateddb_totalschools"
  """
  mvintegrateddb_totalschools(
    """distinct select on columns"""
    distinct_on: [mvintegrateddb_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mvintegrateddb_totalschools_order_by!]

    """filter the rows returned"""
    where: mvintegrateddb_totalschools_bool_exp
  ): [mvintegrateddb_totalschools!]!

  """
  fetch aggregated fields from the table: "mvintegrateddb_totalschools"
  """
  mvintegrateddb_totalschools_aggregate(
    """distinct select on columns"""
    distinct_on: [mvintegrateddb_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mvintegrateddb_totalschools_order_by!]

    """filter the rows returned"""
    where: mvintegrateddb_totalschools_bool_exp
  ): mvintegrateddb_totalschools_aggregate!

  """
  fetch data from the table: "mystudent_testperformance"
  """
  mystudent_testperformance(
    """distinct select on columns"""
    distinct_on: [mystudent_testperformance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mystudent_testperformance_order_by!]

    """filter the rows returned"""
    where: mystudent_testperformance_bool_exp
  ): [mystudent_testperformance!]!

  """
  fetch aggregated fields from the table: "mystudent_testperformance"
  """
  mystudent_testperformance_aggregate(
    """distinct select on columns"""
    distinct_on: [mystudent_testperformance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mystudent_testperformance_order_by!]

    """filter the rows returned"""
    where: mystudent_testperformance_bool_exp
  ): mystudent_testperformance_aggregate!

  """
  fetch data from the table: "mystudent_testperformance" using primary key columns
  """
  mystudent_testperformance_by_pk(p_key: Int!): mystudent_testperformance

  """
  fetch data from the table: "no_of_profiles"
  """
  no_of_profiles(
    """distinct select on columns"""
    distinct_on: [no_of_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [no_of_profiles_order_by!]

    """filter the rows returned"""
    where: no_of_profiles_bool_exp
  ): [no_of_profiles!]!

  """
  fetch aggregated fields from the table: "no_of_profiles"
  """
  no_of_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [no_of_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [no_of_profiles_order_by!]

    """filter the rows returned"""
    where: no_of_profiles_bool_exp
  ): no_of_profiles_aggregate!

  """
  fetch data from the table: "nodes"
  """
  nodes(
    """distinct select on columns"""
    distinct_on: [nodes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nodes_order_by!]

    """filter the rows returned"""
    where: nodes_bool_exp
  ): [nodes!]!

  """
  fetch aggregated fields from the table: "nodes"
  """
  nodes_aggregate(
    """distinct select on columns"""
    distinct_on: [nodes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nodes_order_by!]

    """filter the rows returned"""
    where: nodes_bool_exp
  ): nodes_aggregate!

  """fetch data from the table: "nodes" using primary key columns"""
  nodes_by_pk(id: uuid!): nodes

  """
  fetch data from the table: "notification"
  """
  notification(
    """distinct select on columns"""
    distinct_on: [notification_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [notification_order_by!]

    """filter the rows returned"""
    where: notification_bool_exp
  ): [notification!]!

  """
  fetch aggregated fields from the table: "notification"
  """
  notification_aggregate(
    """distinct select on columns"""
    distinct_on: [notification_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [notification_order_by!]

    """filter the rows returned"""
    where: notification_bool_exp
  ): notification_aggregate!

  """fetch data from the table: "notification" using primary key columns"""
  notification_by_pk(id: Int!): notification

  """
  fetch data from the table: "number_of_highschools"
  """
  number_of_highschools(
    """distinct select on columns"""
    distinct_on: [number_of_highschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_highschools_order_by!]

    """filter the rows returned"""
    where: number_of_highschools_bool_exp
  ): [number_of_highschools!]!

  """
  fetch aggregated fields from the table: "number_of_highschools"
  """
  number_of_highschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_highschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_highschools_order_by!]

    """filter the rows returned"""
    where: number_of_highschools_bool_exp
  ): number_of_highschools_aggregate!

  """
  fetch data from the table: "number_of_middleschools"
  """
  number_of_middleschools(
    """distinct select on columns"""
    distinct_on: [number_of_middleschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_middleschools_order_by!]

    """filter the rows returned"""
    where: number_of_middleschools_bool_exp
  ): [number_of_middleschools!]!

  """
  fetch aggregated fields from the table: "number_of_middleschools"
  """
  number_of_middleschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_middleschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_middleschools_order_by!]

    """filter the rows returned"""
    where: number_of_middleschools_bool_exp
  ): number_of_middleschools_aggregate!

  """
  fetch data from the table: "number_of_primaryschools"
  """
  number_of_primaryschools(
    """distinct select on columns"""
    distinct_on: [number_of_primaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_primaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_primaryschools_bool_exp
  ): [number_of_primaryschools!]!

  """
  fetch aggregated fields from the table: "number_of_primaryschools"
  """
  number_of_primaryschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_primaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_primaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_primaryschools_bool_exp
  ): number_of_primaryschools_aggregate!

  """
  fetch data from the table: "number_of_secondaryschools"
  """
  number_of_secondaryschools(
    """distinct select on columns"""
    distinct_on: [number_of_secondaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_secondaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_secondaryschools_bool_exp
  ): [number_of_secondaryschools!]!

  """
  fetch aggregated fields from the table: "number_of_secondaryschools"
  """
  number_of_secondaryschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_secondaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_secondaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_secondaryschools_bool_exp
  ): number_of_secondaryschools_aggregate!

  """
  fetch data from the table: "number_of_totalschools"
  """
  number_of_totalschools(
    """distinct select on columns"""
    distinct_on: [number_of_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_totalschools_order_by!]

    """filter the rows returned"""
    where: number_of_totalschools_bool_exp
  ): [number_of_totalschools!]!

  """
  fetch aggregated fields from the table: "number_of_totalschools"
  """
  number_of_totalschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_totalschools_order_by!]

    """filter the rows returned"""
    where: number_of_totalschools_bool_exp
  ): number_of_totalschools_aggregate!

  """
  fetch data from the table: "odk_submission"
  """
  odk_submission(
    """distinct select on columns"""
    distinct_on: [odk_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [odk_submission_order_by!]

    """filter the rows returned"""
    where: odk_submission_bool_exp
  ): [odk_submission!]!

  """
  fetch aggregated fields from the table: "odk_submission"
  """
  odk_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [odk_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [odk_submission_order_by!]

    """filter the rows returned"""
    where: odk_submission_bool_exp
  ): odk_submission_aggregate!

  """fetch data from the table: "odk_submission" using primary key columns"""
  odk_submission_by_pk(id: Int!): odk_submission

  """
  fetch data from the table: "old_assessment"
  """
  old_assessment(
    """distinct select on columns"""
    distinct_on: [old_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_assessment_order_by!]

    """filter the rows returned"""
    where: old_assessment_bool_exp
  ): [old_assessment!]!

  """
  fetch aggregated fields from the table: "old_assessment"
  """
  old_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [old_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_assessment_order_by!]

    """filter the rows returned"""
    where: old_assessment_bool_exp
  ): old_assessment_aggregate!

  """fetch data from the table: "old_assessment" using primary key columns"""
  old_assessment_by_pk(id: Int!): old_assessment

  """
  fetch data from the table: "old_lo_master"
  """
  old_lo_master(
    """distinct select on columns"""
    distinct_on: [old_lo_master_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_master_order_by!]

    """filter the rows returned"""
    where: old_lo_master_bool_exp
  ): [old_lo_master!]!

  """
  fetch aggregated fields from the table: "old_lo_master"
  """
  old_lo_master_aggregate(
    """distinct select on columns"""
    distinct_on: [old_lo_master_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_master_order_by!]

    """filter the rows returned"""
    where: old_lo_master_bool_exp
  ): old_lo_master_aggregate!

  """fetch data from the table: "old_lo_master" using primary key columns"""
  old_lo_master_by_pk(id: Int!): old_lo_master

  """
  fetch data from the table: "old_lo_submissions"
  """
  old_lo_submissions(
    """distinct select on columns"""
    distinct_on: [old_lo_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_submissions_order_by!]

    """filter the rows returned"""
    where: old_lo_submissions_bool_exp
  ): [old_lo_submissions!]!

  """
  fetch aggregated fields from the table: "old_lo_submissions"
  """
  old_lo_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [old_lo_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_submissions_order_by!]

    """filter the rows returned"""
    where: old_lo_submissions_bool_exp
  ): old_lo_submissions_aggregate!

  """
  fetch data from the table: "old_lo_submissions" using primary key columns
  """
  old_lo_submissions_by_pk(id: Int!): old_lo_submissions

  """
  fetch data from the table: "old_schools"
  """
  old_schools(
    """distinct select on columns"""
    distinct_on: [old_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_schools_order_by!]

    """filter the rows returned"""
    where: old_schools_bool_exp
  ): [old_schools!]!

  """
  fetch aggregated fields from the table: "old_schools"
  """
  old_schools_aggregate(
    """distinct select on columns"""
    distinct_on: [old_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_schools_order_by!]

    """filter the rows returned"""
    where: old_schools_bool_exp
  ): old_schools_aggregate!

  """fetch data from the table: "old_schools" using primary key columns"""
  old_schools_by_pk(id: Int!): old_schools

  """
  fetch data from the table: "pg_stat_statements"
  """
  pg_stat_statements(
    """distinct select on columns"""
    distinct_on: [pg_stat_statements_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pg_stat_statements_order_by!]

    """filter the rows returned"""
    where: pg_stat_statements_bool_exp
  ): [pg_stat_statements!]!

  """
  fetch aggregated fields from the table: "pg_stat_statements"
  """
  pg_stat_statements_aggregate(
    """distinct select on columns"""
    distinct_on: [pg_stat_statements_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pg_stat_statements_order_by!]

    """filter the rows returned"""
    where: pg_stat_statements_bool_exp
  ): pg_stat_statements_aggregate!

  """
  fetch data from the table: "pgbench_accounts"
  """
  pgbench_accounts(
    """distinct select on columns"""
    distinct_on: [pgbench_accounts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_accounts_order_by!]

    """filter the rows returned"""
    where: pgbench_accounts_bool_exp
  ): [pgbench_accounts!]!

  """
  fetch aggregated fields from the table: "pgbench_accounts"
  """
  pgbench_accounts_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_accounts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_accounts_order_by!]

    """filter the rows returned"""
    where: pgbench_accounts_bool_exp
  ): pgbench_accounts_aggregate!

  """
  fetch data from the table: "pgbench_accounts" using primary key columns
  """
  pgbench_accounts_by_pk(aid: Int!): pgbench_accounts

  """
  fetch data from the table: "pgbench_branches"
  """
  pgbench_branches(
    """distinct select on columns"""
    distinct_on: [pgbench_branches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_branches_order_by!]

    """filter the rows returned"""
    where: pgbench_branches_bool_exp
  ): [pgbench_branches!]!

  """
  fetch aggregated fields from the table: "pgbench_branches"
  """
  pgbench_branches_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_branches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_branches_order_by!]

    """filter the rows returned"""
    where: pgbench_branches_bool_exp
  ): pgbench_branches_aggregate!

  """
  fetch data from the table: "pgbench_branches" using primary key columns
  """
  pgbench_branches_by_pk(bid: Int!): pgbench_branches

  """
  fetch data from the table: "pgbench_history"
  """
  pgbench_history(
    """distinct select on columns"""
    distinct_on: [pgbench_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_history_order_by!]

    """filter the rows returned"""
    where: pgbench_history_bool_exp
  ): [pgbench_history!]!

  """
  fetch aggregated fields from the table: "pgbench_history"
  """
  pgbench_history_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_history_order_by!]

    """filter the rows returned"""
    where: pgbench_history_bool_exp
  ): pgbench_history_aggregate!

  """
  fetch data from the table: "pgbench_tellers"
  """
  pgbench_tellers(
    """distinct select on columns"""
    distinct_on: [pgbench_tellers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_tellers_order_by!]

    """filter the rows returned"""
    where: pgbench_tellers_bool_exp
  ): [pgbench_tellers!]!

  """
  fetch aggregated fields from the table: "pgbench_tellers"
  """
  pgbench_tellers_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_tellers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_tellers_order_by!]

    """filter the rows returned"""
    where: pgbench_tellers_bool_exp
  ): pgbench_tellers_aggregate!

  """fetch data from the table: "pgbench_tellers" using primary key columns"""
  pgbench_tellers_by_pk(tid: Int!): pgbench_tellers

  """
  fetch data from the table: "preboard_results_2021"
  """
  preboard_results_2021(
    """distinct select on columns"""
    distinct_on: [preboard_results_2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_results_2021_order_by!]

    """filter the rows returned"""
    where: preboard_results_2021_bool_exp
  ): [preboard_results_2021!]!

  """
  fetch aggregated fields from the table: "preboard_results_2021"
  """
  preboard_results_2021_aggregate(
    """distinct select on columns"""
    distinct_on: [preboard_results_2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_results_2021_order_by!]

    """filter the rows returned"""
    where: preboard_results_2021_bool_exp
  ): preboard_results_2021_aggregate!

  """
  fetch data from the table: "preboard_student_table2021"
  """
  preboard_student_table2021(
    """distinct select on columns"""
    distinct_on: [preboard_student_table2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_student_table2021_order_by!]

    """filter the rows returned"""
    where: preboard_student_table2021_bool_exp
  ): [preboard_student_table2021!]!

  """
  fetch aggregated fields from the table: "preboard_student_table2021"
  """
  preboard_student_table2021_aggregate(
    """distinct select on columns"""
    distinct_on: [preboard_student_table2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_student_table2021_order_by!]

    """filter the rows returned"""
    where: preboard_student_table2021_bool_exp
  ): preboard_student_table2021_aggregate!

  """An array relationship"""
  previous_passwords(
    """distinct select on columns"""
    distinct_on: [previous_passwords_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [previous_passwords_order_by!]

    """filter the rows returned"""
    where: previous_passwords_bool_exp
  ): [previous_passwords!]!

  """An aggregate relationship"""
  previous_passwords_aggregate(
    """distinct select on columns"""
    distinct_on: [previous_passwords_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [previous_passwords_order_by!]

    """filter the rows returned"""
    where: previous_passwords_bool_exp
  ): previous_passwords_aggregate!

  """
  fetch data from the table: "question"
  """
  question(
    """distinct select on columns"""
    distinct_on: [question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_order_by!]

    """filter the rows returned"""
    where: question_bool_exp
  ): [question!]!

  """
  fetch aggregated fields from the table: "question"
  """
  question_aggregate(
    """distinct select on columns"""
    distinct_on: [question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_order_by!]

    """filter the rows returned"""
    where: question_bool_exp
  ): question_aggregate!

  """
  fetch data from the table: "question_assessment"
  """
  question_assessment(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): [question_assessment!]!

  """
  fetch aggregated fields from the table: "question_assessment"
  """
  question_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): question_assessment_aggregate!

  """
  fetch data from the table: "question_assessment" using primary key columns
  """
  question_assessment_by_pk(id: Int!): question_assessment

  """
  fetch data from the table: "question_bundle"
  """
  question_bundle(
    """distinct select on columns"""
    distinct_on: [question_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_order_by!]

    """filter the rows returned"""
    where: question_bundle_bool_exp
  ): [question_bundle!]!

  """
  fetch aggregated fields from the table: "question_bundle"
  """
  question_bundle_aggregate(
    """distinct select on columns"""
    distinct_on: [question_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_order_by!]

    """filter the rows returned"""
    where: question_bundle_bool_exp
  ): question_bundle_aggregate!

  """fetch data from the table: "question_bundle" using primary key columns"""
  question_bundle_by_pk(id: Int!): question_bundle

  """An array relationship"""
  question_bundle_questions(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): [question_bundle_questions!]!

  """An aggregate relationship"""
  question_bundle_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): question_bundle_questions_aggregate!

  """
  fetch data from the table: "question_bundle_questions" using primary key columns
  """
  question_bundle_questions_by_pk(id: Int!): question_bundle_questions

  """fetch data from the table: "question" using primary key columns"""
  question_by_pk(id: Int!): question

  """
  fetch data from the table: "question_submission"
  """
  question_submission(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): [question_submission!]!

  """
  fetch aggregated fields from the table: "question_submission"
  """
  question_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): question_submission_aggregate!

  """
  fetch data from the table: "question_submission" using primary key columns
  """
  question_submission_by_pk(id: Int!): question_submission

  """
  fetch data from the table: "question_v2"
  """
  question_v2(
    """distinct select on columns"""
    distinct_on: [question_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_v2_order_by!]

    """filter the rows returned"""
    where: question_v2_bool_exp
  ): [question_v2!]!

  """
  fetch aggregated fields from the table: "question_v2"
  """
  question_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [question_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_v2_order_by!]

    """filter the rows returned"""
    where: question_v2_bool_exp
  ): question_v2_aggregate!

  """fetch data from the table: "question_v2" using primary key columns"""
  question_v2_by_pk(id: Int!): question_v2

  """
  fetch data from the table: "questions_submission_expanded"
  """
  questions_submission_expanded(
    """distinct select on columns"""
    distinct_on: [questions_submission_expanded_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_submission_expanded_order_by!]

    """filter the rows returned"""
    where: questions_submission_expanded_bool_exp
  ): [questions_submission_expanded!]!

  """
  fetch aggregated fields from the table: "questions_submission_expanded"
  """
  questions_submission_expanded_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_submission_expanded_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_submission_expanded_order_by!]

    """filter the rows returned"""
    where: questions_submission_expanded_bool_exp
  ): questions_submission_expanded_aggregate!

  """
  fetch data from the table: "questions_submission_expanded" using primary key columns
  """
  questions_submission_expanded_by_pk(id: Int!): questions_submission_expanded

  """
  fetch data from the table: "raw_application_daily_active_users"
  """
  raw_application_daily_active_users(
    """distinct select on columns"""
    distinct_on: [raw_application_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_application_daily_active_users_order_by!]

    """filter the rows returned"""
    where: raw_application_daily_active_users_bool_exp
  ): [raw_application_daily_active_users!]!

  """
  fetch aggregated fields from the table: "raw_application_daily_active_users"
  """
  raw_application_daily_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_application_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_application_daily_active_users_order_by!]

    """filter the rows returned"""
    where: raw_application_daily_active_users_bool_exp
  ): raw_application_daily_active_users_aggregate!

  """
  fetch data from the table: "raw_application_monthly_active_users"
  """
  raw_application_monthly_active_users(
    """distinct select on columns"""
    distinct_on: [raw_application_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_application_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: raw_application_monthly_active_users_bool_exp
  ): [raw_application_monthly_active_users!]!

  """
  fetch aggregated fields from the table: "raw_application_monthly_active_users"
  """
  raw_application_monthly_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_application_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_application_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: raw_application_monthly_active_users_bool_exp
  ): raw_application_monthly_active_users_aggregate!

  """
  fetch data from the table: "raw_global_daily_active_users"
  """
  raw_global_daily_active_users(
    """distinct select on columns"""
    distinct_on: [raw_global_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_global_daily_active_users_order_by!]

    """filter the rows returned"""
    where: raw_global_daily_active_users_bool_exp
  ): [raw_global_daily_active_users!]!

  """
  fetch aggregated fields from the table: "raw_global_daily_active_users"
  """
  raw_global_daily_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_global_daily_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_global_daily_active_users_order_by!]

    """filter the rows returned"""
    where: raw_global_daily_active_users_bool_exp
  ): raw_global_daily_active_users_aggregate!

  """
  fetch data from the table: "raw_global_monthly_active_users"
  """
  raw_global_monthly_active_users(
    """distinct select on columns"""
    distinct_on: [raw_global_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_global_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: raw_global_monthly_active_users_bool_exp
  ): [raw_global_monthly_active_users!]!

  """
  fetch aggregated fields from the table: "raw_global_monthly_active_users"
  """
  raw_global_monthly_active_users_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_global_monthly_active_users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_global_monthly_active_users_order_by!]

    """filter the rows returned"""
    where: raw_global_monthly_active_users_bool_exp
  ): raw_global_monthly_active_users_aggregate!

  """An array relationship"""
  raw_logins(
    """distinct select on columns"""
    distinct_on: [raw_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_logins_order_by!]

    """filter the rows returned"""
    where: raw_logins_bool_exp
  ): [raw_logins!]!

  """An aggregate relationship"""
  raw_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_logins_order_by!]

    """filter the rows returned"""
    where: raw_logins_bool_exp
  ): raw_logins_aggregate!

  """An array relationship"""
  refresh_tokens(
    """distinct select on columns"""
    distinct_on: [refresh_tokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_tokens_order_by!]

    """filter the rows returned"""
    where: refresh_tokens_bool_exp
  ): [refresh_tokens!]!

  """An aggregate relationship"""
  refresh_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [refresh_tokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_tokens_order_by!]

    """filter the rows returned"""
    where: refresh_tokens_bool_exp
  ): refresh_tokens_aggregate!

  """fetch data from the table: "refresh_tokens" using primary key columns"""
  refresh_tokens_by_pk(id: uuid!): refresh_tokens

  """
  fetch data from the table: "sample_test"
  """
  sample_test(
    """distinct select on columns"""
    distinct_on: [sample_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sample_test_order_by!]

    """filter the rows returned"""
    where: sample_test_bool_exp
  ): [sample_test!]!

  """
  fetch aggregated fields from the table: "sample_test"
  """
  sample_test_aggregate(
    """distinct select on columns"""
    distinct_on: [sample_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sample_test_order_by!]

    """filter the rows returned"""
    where: sample_test_bool_exp
  ): sample_test_aggregate!

  """fetch data from the table: "sample_test" using primary key columns"""
  sample_test_by_pk(id: Int!): sample_test

  """
  fetch data from the table: "school"
  """
  school(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): [school!]!

  """
  fetch aggregated fields from the table: "school"
  """
  school_aggregate(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): school_aggregate!

  """fetch data from the table: "school" using primary key columns"""
  school_by_pk(id: Int!): school

  """
  fetch data from the table: "school_cache"
  """
  school_cache(
    """distinct select on columns"""
    distinct_on: [school_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_cache_order_by!]

    """filter the rows returned"""
    where: school_cache_bool_exp
  ): [school_cache!]!

  """
  fetch aggregated fields from the table: "school_cache"
  """
  school_cache_aggregate(
    """distinct select on columns"""
    distinct_on: [school_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_cache_order_by!]

    """filter the rows returned"""
    where: school_cache_bool_exp
  ): school_cache_aggregate!

  """fetch data from the table: "school_cache" using primary key columns"""
  school_cache_by_pk(id: Int!): school_cache

  """
  fetch data from the table: "school_class_mismatch"
  """
  school_class_mismatch(
    """distinct select on columns"""
    distinct_on: [school_class_mismatch_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_class_mismatch_order_by!]

    """filter the rows returned"""
    where: school_class_mismatch_bool_exp
  ): [school_class_mismatch!]!

  """
  fetch aggregated fields from the table: "school_class_mismatch"
  """
  school_class_mismatch_aggregate(
    """distinct select on columns"""
    distinct_on: [school_class_mismatch_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_class_mismatch_order_by!]

    """filter the rows returned"""
    where: school_class_mismatch_bool_exp
  ): school_class_mismatch_aggregate!

  """
  fetch data from the table: "school_grade"
  """
  school_grade(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): [school_grade!]!

  """
  fetch aggregated fields from the table: "school_grade"
  """
  school_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): school_grade_aggregate!

  """fetch data from the table: "school_grade" using primary key columns"""
  school_grade_by_pk(id: Int!): school_grade

  """
  fetch data from the table: "school_location_mapping"
  """
  school_location_mapping(
    """distinct select on columns"""
    distinct_on: [school_location_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_location_mapping_order_by!]

    """filter the rows returned"""
    where: school_location_mapping_bool_exp
  ): [school_location_mapping!]!

  """
  fetch aggregated fields from the table: "school_location_mapping"
  """
  school_location_mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [school_location_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_location_mapping_order_by!]

    """filter the rows returned"""
    where: school_location_mapping_bool_exp
  ): school_location_mapping_aggregate!

  """
  fetch data from the table: "school_location_mapping" using primary key columns
  """
  school_location_mapping_by_pk(id: Int!): school_location_mapping

  """
  fetch data from the table: "school_type_enrolment"
  """
  school_type_enrolment(
    """distinct select on columns"""
    distinct_on: [school_type_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_enrolment_bool_exp
  ): [school_type_enrolment!]!

  """
  fetch aggregated fields from the table: "school_type_enrolment"
  """
  school_type_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [school_type_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_enrolment_bool_exp
  ): school_type_enrolment_aggregate!

  """
  fetch data from the table: "school_type_udise_enrolment"
  """
  school_type_udise_enrolment(
    """distinct select on columns"""
    distinct_on: [school_type_udise_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_udise_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_udise_enrolment_bool_exp
  ): [school_type_udise_enrolment!]!

  """
  fetch aggregated fields from the table: "school_type_udise_enrolment"
  """
  school_type_udise_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [school_type_udise_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_udise_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_udise_enrolment_bool_exp
  ): school_type_udise_enrolment_aggregate!

  """
  fetch data from the table: "school_wise_daily_enrolment"
  """
  school_wise_daily_enrolment(
    """distinct select on columns"""
    distinct_on: [school_wise_daily_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_wise_daily_enrolment_order_by!]

    """filter the rows returned"""
    where: school_wise_daily_enrolment_bool_exp
  ): [school_wise_daily_enrolment!]!

  """
  fetch aggregated fields from the table: "school_wise_daily_enrolment"
  """
  school_wise_daily_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [school_wise_daily_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_wise_daily_enrolment_order_by!]

    """filter the rows returned"""
    where: school_wise_daily_enrolment_bool_exp
  ): school_wise_daily_enrolment_aggregate!

  """
  fetch data from the table: "school_wise_daily_enrolment" using primary key columns
  """
  school_wise_daily_enrolment_by_pk(id: bigint!): school_wise_daily_enrolment

  """
  fetch data from the table: "schoolwise_student_enrolment"
  """
  schoolwise_student_enrolment(
    """distinct select on columns"""
    distinct_on: [schoolwise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolwise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: schoolwise_student_enrolment_bool_exp
  ): [schoolwise_student_enrolment!]!

  """
  fetch aggregated fields from the table: "schoolwise_student_enrolment"
  """
  schoolwise_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [schoolwise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolwise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: schoolwise_student_enrolment_bool_exp
  ): schoolwise_student_enrolment_aggregate!

  """
  fetch data from the table: "server_logroup"
  """
  server_logroup(
    """distinct select on columns"""
    distinct_on: [server_logroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_order_by!]

    """filter the rows returned"""
    where: server_logroup_bool_exp
  ): [server_logroup!]!

  """
  fetch aggregated fields from the table: "server_logroup"
  """
  server_logroup_aggregate(
    """distinct select on columns"""
    distinct_on: [server_logroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_order_by!]

    """filter the rows returned"""
    where: server_logroup_bool_exp
  ): server_logroup_aggregate!

  """fetch data from the table: "server_logroup" using primary key columns"""
  server_logroup_by_pk(id: Int!): server_logroup

  """
  fetch data from the table: "server_logroup_lo"
  """
  server_logroup_lo(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): [server_logroup_lo!]!

  """
  fetch aggregated fields from the table: "server_logroup_lo"
  """
  server_logroup_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): server_logroup_lo_aggregate!

  """
  fetch data from the table: "server_logroup_lo" using primary key columns
  """
  server_logroup_lo_by_pk(id: Int!): server_logroup_lo

  """
  fetch data from the table: "server_marksrange"
  """
  server_marksrange(
    """distinct select on columns"""
    distinct_on: [server_marksrange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_marksrange_order_by!]

    """filter the rows returned"""
    where: server_marksrange_bool_exp
  ): [server_marksrange!]!

  """
  fetch aggregated fields from the table: "server_marksrange"
  """
  server_marksrange_aggregate(
    """distinct select on columns"""
    distinct_on: [server_marksrange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_marksrange_order_by!]

    """filter the rows returned"""
    where: server_marksrange_bool_exp
  ): server_marksrange_aggregate!

  """
  fetch data from the table: "server_marksrange" using primary key columns
  """
  server_marksrange_by_pk(id: Int!): server_marksrange

  """
  fetch data from the table: "server_questiongroup"
  """
  server_questiongroup(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_bool_exp
  ): [server_questiongroup!]!

  """
  fetch aggregated fields from the table: "server_questiongroup"
  """
  server_questiongroup_aggregate(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_bool_exp
  ): server_questiongroup_aggregate!

  """
  fetch data from the table: "server_questiongroup" using primary key columns
  """
  server_questiongroup_by_pk(id: Int!): server_questiongroup

  """
  fetch data from the table: "server_questiongroup_question"
  """
  server_questiongroup_question(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): [server_questiongroup_question!]!

  """
  fetch aggregated fields from the table: "server_questiongroup_question"
  """
  server_questiongroup_question_aggregate(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): server_questiongroup_question_aggregate!

  """
  fetch data from the table: "server_questiongroup_question" using primary key columns
  """
  server_questiongroup_question_by_pk(id: Int!): server_questiongroup_question

  """
  fetch data from the table: "silk_profile"
  """
  silk_profile(
    """distinct select on columns"""
    distinct_on: [silk_profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_order_by!]

    """filter the rows returned"""
    where: silk_profile_bool_exp
  ): [silk_profile!]!

  """
  fetch aggregated fields from the table: "silk_profile"
  """
  silk_profile_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_order_by!]

    """filter the rows returned"""
    where: silk_profile_bool_exp
  ): silk_profile_aggregate!

  """fetch data from the table: "silk_profile" using primary key columns"""
  silk_profile_by_pk(id: Int!): silk_profile

  """An array relationship"""
  silk_profile_queries(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): [silk_profile_queries!]!

  """An aggregate relationship"""
  silk_profile_queries_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): silk_profile_queries_aggregate!

  """
  fetch data from the table: "silk_profile_queries" using primary key columns
  """
  silk_profile_queries_by_pk(id: Int!): silk_profile_queries

  """
  fetch data from the table: "silk_request"
  """
  silk_request(
    """distinct select on columns"""
    distinct_on: [silk_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_request_order_by!]

    """filter the rows returned"""
    where: silk_request_bool_exp
  ): [silk_request!]!

  """
  fetch aggregated fields from the table: "silk_request"
  """
  silk_request_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_request_order_by!]

    """filter the rows returned"""
    where: silk_request_bool_exp
  ): silk_request_aggregate!

  """fetch data from the table: "silk_request" using primary key columns"""
  silk_request_by_pk(id: String!): silk_request

  """
  fetch data from the table: "silk_response"
  """
  silk_response(
    """distinct select on columns"""
    distinct_on: [silk_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_response_order_by!]

    """filter the rows returned"""
    where: silk_response_bool_exp
  ): [silk_response!]!

  """
  fetch aggregated fields from the table: "silk_response"
  """
  silk_response_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_response_order_by!]

    """filter the rows returned"""
    where: silk_response_bool_exp
  ): silk_response_aggregate!

  """fetch data from the table: "silk_response" using primary key columns"""
  silk_response_by_pk(id: String!): silk_response

  """
  fetch data from the table: "silk_sqlquery"
  """
  silk_sqlquery(
    """distinct select on columns"""
    distinct_on: [silk_sqlquery_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_sqlquery_order_by!]

    """filter the rows returned"""
    where: silk_sqlquery_bool_exp
  ): [silk_sqlquery!]!

  """
  fetch aggregated fields from the table: "silk_sqlquery"
  """
  silk_sqlquery_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_sqlquery_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_sqlquery_order_by!]

    """filter the rows returned"""
    where: silk_sqlquery_bool_exp
  ): silk_sqlquery_aggregate!

  """fetch data from the table: "silk_sqlquery" using primary key columns"""
  silk_sqlquery_by_pk(id: Int!): silk_sqlquery

  """An array relationship"""
  sms(
    """distinct select on columns"""
    distinct_on: [sms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_order_by!]

    """filter the rows returned"""
    where: sms_bool_exp
  ): [sms!]!

  """An aggregate relationship"""
  sms_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_order_by!]

    """filter the rows returned"""
    where: sms_bool_exp
  ): sms_aggregate!

  """fetch data from the table: "sms" using primary key columns"""
  sms_by_pk(id: Int!): sms

  """
  fetch data from the table: "sms_dag_reports"
  """
  sms_dag_reports(
    """distinct select on columns"""
    distinct_on: [sms_dag_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_dag_reports_order_by!]

    """filter the rows returned"""
    where: sms_dag_reports_bool_exp
  ): [sms_dag_reports!]!

  """
  fetch aggregated fields from the table: "sms_dag_reports"
  """
  sms_dag_reports_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_dag_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_dag_reports_order_by!]

    """filter the rows returned"""
    where: sms_dag_reports_bool_exp
  ): sms_dag_reports_aggregate!

  """fetch data from the table: "sms_dag_reports" using primary key columns"""
  sms_dag_reports_by_pk(id: Int!): sms_dag_reports

  """
  fetch data from the table: "sms_student_attendance_mv"
  """
  sms_student_attendance_mv(
    """distinct select on columns"""
    distinct_on: [sms_student_attendance_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_student_attendance_mv_order_by!]

    """filter the rows returned"""
    where: sms_student_attendance_mv_bool_exp
  ): [sms_student_attendance_mv!]!

  """
  fetch aggregated fields from the table: "sms_student_attendance_mv"
  """
  sms_student_attendance_mv_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_student_attendance_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_student_attendance_mv_order_by!]

    """filter the rows returned"""
    where: sms_student_attendance_mv_bool_exp
  ): sms_student_attendance_mv_aggregate!

  """An array relationship"""
  ss_school_allocation_data(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): [ss_school_allocation_data!]!

  """An aggregate relationship"""
  ss_school_allocation_data_aggregate(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): ss_school_allocation_data_aggregate!

  """
  fetch data from the table: "ss_school_allocation_data" using primary key columns
  """
  ss_school_allocation_data_by_pk(id: Int!): ss_school_allocation_data

  """
  fetch data from the table: "ss_school_allocation_quarter"
  """
  ss_school_allocation_quarter(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_quarter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_quarter_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_quarter_bool_exp
  ): [ss_school_allocation_quarter!]!

  """
  fetch aggregated fields from the table: "ss_school_allocation_quarter"
  """
  ss_school_allocation_quarter_aggregate(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_quarter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_quarter_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_quarter_bool_exp
  ): ss_school_allocation_quarter_aggregate!

  """
  fetch data from the table: "ss_school_allocation_quarter" using primary key columns
  """
  ss_school_allocation_quarter_by_pk(id: Int!): ss_school_allocation_quarter

  """
  fetch data from the table: "state_edu_enrolment"
  """
  state_edu_enrolment(
    """distinct select on columns"""
    distinct_on: [state_edu_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_edu_enrolment_order_by!]

    """filter the rows returned"""
    where: state_edu_enrolment_bool_exp
  ): [state_edu_enrolment!]!

  """
  fetch aggregated fields from the table: "state_edu_enrolment"
  """
  state_edu_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [state_edu_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_edu_enrolment_order_by!]

    """filter the rows returned"""
    where: state_edu_enrolment_bool_exp
  ): state_edu_enrolment_aggregate!

  """
  fetch data from the table: "state_lo_list"
  """
  state_lo_list(
    """distinct select on columns"""
    distinct_on: [state_lo_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_lo_list_order_by!]

    """filter the rows returned"""
    where: state_lo_list_bool_exp
  ): [state_lo_list!]!

  """
  fetch aggregated fields from the table: "state_lo_list"
  """
  state_lo_list_aggregate(
    """distinct select on columns"""
    distinct_on: [state_lo_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_lo_list_order_by!]

    """filter the rows returned"""
    where: state_lo_list_bool_exp
  ): state_lo_list_aggregate!

  """
  fetch data from the table: "static"
  """
  static(
    """distinct select on columns"""
    distinct_on: [static_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [static_order_by!]

    """filter the rows returned"""
    where: static_bool_exp
  ): [static!]!

  """
  fetch aggregated fields from the table: "static"
  """
  static_aggregate(
    """distinct select on columns"""
    distinct_on: [static_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [static_order_by!]

    """filter the rows returned"""
    where: static_bool_exp
  ): static_aggregate!

  """fetch data from the table: "static" using primary key columns"""
  static_by_pk(id: Int!): static

  """
  fetch data from the table: "stream"
  """
  stream(
    """distinct select on columns"""
    distinct_on: [stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_order_by!]

    """filter the rows returned"""
    where: stream_bool_exp
  ): [stream!]!

  """
  fetch aggregated fields from the table: "stream"
  """
  stream_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_order_by!]

    """filter the rows returned"""
    where: stream_bool_exp
  ): stream_aggregate!

  """fetch data from the table: "stream" using primary key columns"""
  stream_by_pk(id: Int!): stream

  """
  fetch data from the table: "stream_common_subject"
  """
  stream_common_subject(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): [stream_common_subject!]!

  """
  fetch aggregated fields from the table: "stream_common_subject"
  """
  stream_common_subject_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): stream_common_subject_aggregate!

  """
  fetch data from the table: "stream_common_subject" using primary key columns
  """
  stream_common_subject_by_pk(id: Int!): stream_common_subject

  """
  fetch data from the table: "stream_optional_subjects_1"
  """
  stream_optional_subjects_1(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): [stream_optional_subjects_1!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_1"
  """
  stream_optional_subjects_1_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): stream_optional_subjects_1_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_1" using primary key columns
  """
  stream_optional_subjects_1_by_pk(id: Int!): stream_optional_subjects_1

  """
  fetch data from the table: "stream_optional_subjects_2"
  """
  stream_optional_subjects_2(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): [stream_optional_subjects_2!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_2"
  """
  stream_optional_subjects_2_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): stream_optional_subjects_2_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_2" using primary key columns
  """
  stream_optional_subjects_2_by_pk(id: Int!): stream_optional_subjects_2

  """
  fetch data from the table: "stream_optional_subjects_3"
  """
  stream_optional_subjects_3(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): [stream_optional_subjects_3!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_3"
  """
  stream_optional_subjects_3_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): stream_optional_subjects_3_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_3" using primary key columns
  """
  stream_optional_subjects_3_by_pk(id: Int!): stream_optional_subjects_3

  """
  fetch data from the table: "stream_optional_subjects_4"
  """
  stream_optional_subjects_4(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): [stream_optional_subjects_4!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_4"
  """
  stream_optional_subjects_4_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): stream_optional_subjects_4_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_4" using primary key columns
  """
  stream_optional_subjects_4_by_pk(id: Int!): stream_optional_subjects_4

  """
  fetch data from the table: "student"
  """
  student(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """
  fetch aggregated fields from the table: "student"
  """
  student_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!

  """fetch data from the table: "student" using primary key columns"""
  student_by_pk(id: Int!): student

  """
  fetch data from the table: "student_content_share"
  """
  student_content_share(
    """distinct select on columns"""
    distinct_on: [student_content_share_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_content_share_order_by!]

    """filter the rows returned"""
    where: student_content_share_bool_exp
  ): [student_content_share!]!

  """
  fetch aggregated fields from the table: "student_content_share"
  """
  student_content_share_aggregate(
    """distinct select on columns"""
    distinct_on: [student_content_share_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_content_share_order_by!]

    """filter the rows returned"""
    where: student_content_share_bool_exp
  ): student_content_share_aggregate!

  """
  fetch data from the table: "student_content_share" using primary key columns
  """
  student_content_share_by_pk(id: Int!): student_content_share

  """
  fetch data from the table: "student_subject"
  """
  student_subject(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): [student_subject!]!

  """
  fetch aggregated fields from the table: "student_subject"
  """
  student_subject_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): student_subject_aggregate!

  """fetch data from the table: "student_subject" using primary key columns"""
  student_subject_by_pk(id: Int!): student_subject

  """
  fetch data from the table: "student_submission"
  """
  student_submission(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """
  fetch aggregated fields from the table: "student_submission"
  """
  student_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!

  """
  fetch data from the table: "student_submission" using primary key columns
  """
  student_submission_by_pk(id: Int!): student_submission

  """
  fetch data from the table: "student_submission_v2"
  """
  student_submission_v2(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """
  fetch aggregated fields from the table: "student_submission_v2"
  """
  student_submission_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """
  fetch data from the table: "student_submission_v2" using primary key columns
  """
  student_submission_v2_by_pk(id: Int!): student_submission_v2

  """An array relationship"""
  student_submission_v2_marks_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): [student_submission_v2_marks_submissions!]!

  """An aggregate relationship"""
  student_submission_v2_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): student_submission_v2_marks_submissions_aggregate!

  """
  fetch data from the table: "student_submission_v2_marks_submissions" using primary key columns
  """
  student_submission_v2_marks_submissions_by_pk(id: Int!): student_submission_v2_marks_submissions

  """
  fetch data from the table: "student_table_higher"
  """
  student_table_higher(
    """distinct select on columns"""
    distinct_on: [student_table_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_order_by!]

    """filter the rows returned"""
    where: student_table_higher_bool_exp
  ): [student_table_higher!]!

  """
  fetch data from the table: "student_table_higher_2"
  """
  student_table_higher_2(
    """distinct select on columns"""
    distinct_on: [student_table_higher_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_2_order_by!]

    """filter the rows returned"""
    where: student_table_higher_2_bool_exp
  ): [student_table_higher_2!]!

  """
  fetch aggregated fields from the table: "student_table_higher_2"
  """
  student_table_higher_2_aggregate(
    """distinct select on columns"""
    distinct_on: [student_table_higher_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_2_order_by!]

    """filter the rows returned"""
    where: student_table_higher_2_bool_exp
  ): student_table_higher_2_aggregate!

  """
  fetch aggregated fields from the table: "student_table_higher"
  """
  student_table_higher_aggregate(
    """distinct select on columns"""
    distinct_on: [student_table_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_order_by!]

    """filter the rows returned"""
    where: student_table_higher_bool_exp
  ): student_table_higher_aggregate!

  """
  fetch data from the table: "studentprofiles_cg"
  """
  studentprofiles_cg(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_bool_exp
  ): [studentprofiles_cg!]!

  """
  fetch data from the table: "studentprofiles_cg_2"
  """
  studentprofiles_cg_2(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_2_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_2_bool_exp
  ): [studentprofiles_cg_2!]!

  """
  fetch aggregated fields from the table: "studentprofiles_cg_2"
  """
  studentprofiles_cg_2_aggregate(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_2_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_2_bool_exp
  ): studentprofiles_cg_2_aggregate!

  """
  fetch aggregated fields from the table: "studentprofiles_cg"
  """
  studentprofiles_cg_aggregate(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_bool_exp
  ): studentprofiles_cg_aggregate!

  """
  fetch data from the table: "students_present"
  """
  students_present(
    """distinct select on columns"""
    distinct_on: [students_present_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_present_order_by!]

    """filter the rows returned"""
    where: students_present_bool_exp
  ): [students_present!]!

  """
  fetch aggregated fields from the table: "students_present"
  """
  students_present_aggregate(
    """distinct select on columns"""
    distinct_on: [students_present_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_present_order_by!]

    """filter the rows returned"""
    where: students_present_bool_exp
  ): students_present_aggregate!

  """
  fetch data from the table: "subject"
  """
  subject(
    """distinct select on columns"""
    distinct_on: [subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_order_by!]

    """filter the rows returned"""
    where: subject_bool_exp
  ): [subject!]!

  """
  fetch aggregated fields from the table: "subject"
  """
  subject_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_order_by!]

    """filter the rows returned"""
    where: subject_bool_exp
  ): subject_aggregate!

  """fetch data from the table: "subject" using primary key columns"""
  subject_by_pk(id: Int!): subject

  """
  fetch data from the table: "subject_submission"
  """
  subject_submission(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """
  fetch aggregated fields from the table: "subject_submission"
  """
  subject_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!

  """
  fetch data from the table: "subject_submission" using primary key columns
  """
  subject_submission_by_pk(id: Int!): subject_submission

  """
  fetch data from the table: "subject_submission_selected_lo"
  """
  subject_submission_selected_lo(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): [subject_submission_selected_lo!]!

  """
  fetch aggregated fields from the table: "subject_submission_selected_lo"
  """
  subject_submission_selected_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): subject_submission_selected_lo_aggregate!

  """
  fetch data from the table: "subject_submission_selected_lo" using primary key columns
  """
  subject_submission_selected_lo_by_pk(id: Int!): subject_submission_selected_lo

  """
  fetch data from the table: "submission_summary"
  """
  submission_summary(
    """distinct select on columns"""
    distinct_on: [submission_summary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_summary_order_by!]

    """filter the rows returned"""
    where: submission_summary_bool_exp
  ): [submission_summary!]!

  """
  fetch aggregated fields from the table: "submission_summary"
  """
  submission_summary_aggregate(
    """distinct select on columns"""
    distinct_on: [submission_summary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_summary_order_by!]

    """filter the rows returned"""
    where: submission_summary_bool_exp
  ): submission_summary_aggregate!

  """
  fetch data from the table: "submission_summary" using primary key columns
  """
  submission_summary_by_pk(id: Int!): submission_summary

  """
  fetch data from the table: "submission_type"
  """
  submission_type(
    """distinct select on columns"""
    distinct_on: [submission_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_type_order_by!]

    """filter the rows returned"""
    where: submission_type_bool_exp
  ): [submission_type!]!

  """
  fetch aggregated fields from the table: "submission_type"
  """
  submission_type_aggregate(
    """distinct select on columns"""
    distinct_on: [submission_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_type_order_by!]

    """filter the rows returned"""
    where: submission_type_bool_exp
  ): submission_type_aggregate!

  """fetch data from the table: "submission_type" using primary key columns"""
  submission_type_by_pk(id: Int!): submission_type

  """
  fetch data from the table: "system_configuration"
  """
  system_configuration(
    """distinct select on columns"""
    distinct_on: [system_configuration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [system_configuration_order_by!]

    """filter the rows returned"""
    where: system_configuration_bool_exp
  ): [system_configuration!]!

  """
  fetch aggregated fields from the table: "system_configuration"
  """
  system_configuration_aggregate(
    """distinct select on columns"""
    distinct_on: [system_configuration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [system_configuration_order_by!]

    """filter the rows returned"""
    where: system_configuration_bool_exp
  ): system_configuration_aggregate!

  """
  fetch data from the table: "teacher"
  """
  teacher(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): [teacher!]!

  """
  fetch aggregated fields from the table: "teacher"
  """
  teacher_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): teacher_aggregate!

  """
  fetch data from the table: "teacher_attendance_status"
  """
  teacher_attendance_status(
    """distinct select on columns"""
    distinct_on: [teacher_attendance_status_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_attendance_status_order_by!]

    """filter the rows returned"""
    where: teacher_attendance_status_bool_exp
  ): [teacher_attendance_status!]!

  """
  fetch aggregated fields from the table: "teacher_attendance_status"
  """
  teacher_attendance_status_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_attendance_status_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_attendance_status_order_by!]

    """filter the rows returned"""
    where: teacher_attendance_status_bool_exp
  ): teacher_attendance_status_aggregate!

  """
  fetch data from the table: "teacher_attendance_status" using primary key columns
  """
  teacher_attendance_status_by_pk(value: String!): teacher_attendance_status

  """fetch data from the table: "teacher" using primary key columns"""
  teacher_by_pk(id: Int!): teacher

  """
  fetch data from the table: "teacher_registration_compliance"
  """
  teacher_registration_compliance(
    """distinct select on columns"""
    distinct_on: [teacher_registration_compliance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_registration_compliance_order_by!]

    """filter the rows returned"""
    where: teacher_registration_compliance_bool_exp
  ): [teacher_registration_compliance!]!

  """
  fetch aggregated fields from the table: "teacher_registration_compliance"
  """
  teacher_registration_compliance_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_registration_compliance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_registration_compliance_order_by!]

    """filter the rows returned"""
    where: teacher_registration_compliance_bool_exp
  ): teacher_registration_compliance_aggregate!

  """
  fetch data from the table: "teacher_registration_compliance" using primary key columns
  """
  teacher_registration_compliance_by_pk(id: Int!, udise: Int!): teacher_registration_compliance

  """An array relationship"""
  teacher_subjects(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): [teacher_subjects!]!

  """An aggregate relationship"""
  teacher_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): teacher_subjects_aggregate!

  """
  fetch data from the table: "teacher_subjects" using primary key columns
  """
  teacher_subjects_by_pk(id: Int!): teacher_subjects

  """An array relationship"""
  tenants(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """fetch data from the table: "tenants" using primary key columns"""
  tenants_by_pk(id: uuid!): tenants

  """
  fetch data from the table: "term1results2021"
  """
  term1results2021(
    """distinct select on columns"""
    distinct_on: [term1results2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021_order_by!]

    """filter the rows returned"""
    where: term1results2021_bool_exp
  ): [term1results2021!]!

  """
  fetch aggregated fields from the table: "term1results2021"
  """
  term1results2021_aggregate(
    """distinct select on columns"""
    distinct_on: [term1results2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021_order_by!]

    """filter the rows returned"""
    where: term1results2021_bool_exp
  ): term1results2021_aggregate!

  """
  fetch data from the table: "term1results2021stream"
  """
  term1results2021stream(
    """distinct select on columns"""
    distinct_on: [term1results2021stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021stream_order_by!]

    """filter the rows returned"""
    where: term1results2021stream_bool_exp
  ): [term1results2021stream!]!

  """
  fetch aggregated fields from the table: "term1results2021stream"
  """
  term1results2021stream_aggregate(
    """distinct select on columns"""
    distinct_on: [term1results2021stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021stream_order_by!]

    """filter the rows returned"""
    where: term1results2021stream_bool_exp
  ): term1results2021stream_aggregate!

  """
  fetch data from the table: "test_ku"
  """
  test_ku(
    """distinct select on columns"""
    distinct_on: [test_ku_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_ku_order_by!]

    """filter the rows returned"""
    where: test_ku_bool_exp
  ): [test_ku!]!

  """
  fetch aggregated fields from the table: "test_ku"
  """
  test_ku_aggregate(
    """distinct select on columns"""
    distinct_on: [test_ku_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_ku_order_by!]

    """filter the rows returned"""
    where: test_ku_bool_exp
  ): test_ku_aggregate!

  """fetch data from the table: "test_ku" using primary key columns"""
  test_ku_by_pk(sss: Int!): test_ku

  """
  fetch data from the table: "test_telemetry"
  """
  test_telemetry(
    """distinct select on columns"""
    distinct_on: [test_telemetry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_telemetry_order_by!]

    """filter the rows returned"""
    where: test_telemetry_bool_exp
  ): [test_telemetry!]!

  """
  fetch aggregated fields from the table: "test_telemetry"
  """
  test_telemetry_aggregate(
    """distinct select on columns"""
    distinct_on: [test_telemetry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_telemetry_order_by!]

    """filter the rows returned"""
    where: test_telemetry_bool_exp
  ): test_telemetry_aggregate!

  """fetch data from the table: "test_telemetry" using primary key columns"""
  test_telemetry_by_pk(id: Int!): test_telemetry

  """
  fetch data from the table: "themes"
  """
  themes(
    """distinct select on columns"""
    distinct_on: [themes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [themes_order_by!]

    """filter the rows returned"""
    where: themes_bool_exp
  ): [themes!]!

  """
  fetch aggregated fields from the table: "themes"
  """
  themes_aggregate(
    """distinct select on columns"""
    distinct_on: [themes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [themes_order_by!]

    """filter the rows returned"""
    where: themes_bool_exp
  ): themes_aggregate!

  """fetch data from the table: "themes" using primary key columns"""
  themes_by_pk(id: uuid!): themes

  """
  fetch data from the table: "tracking_elem"
  """
  tracking_elem(
    """distinct select on columns"""
    distinct_on: [tracking_elem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_elem_order_by!]

    """filter the rows returned"""
    where: tracking_elem_bool_exp
  ): [tracking_elem!]!

  """
  fetch aggregated fields from the table: "tracking_elem"
  """
  tracking_elem_aggregate(
    """distinct select on columns"""
    distinct_on: [tracking_elem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_elem_order_by!]

    """filter the rows returned"""
    where: tracking_elem_bool_exp
  ): tracking_elem_aggregate!

  """
  fetch data from the table: "tracking_higher"
  """
  tracking_higher(
    """distinct select on columns"""
    distinct_on: [tracking_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_higher_order_by!]

    """filter the rows returned"""
    where: tracking_higher_bool_exp
  ): [tracking_higher!]!

  """
  fetch aggregated fields from the table: "tracking_higher"
  """
  tracking_higher_aggregate(
    """distinct select on columns"""
    distinct_on: [tracking_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_higher_order_by!]

    """filter the rows returned"""
    where: tracking_higher_bool_exp
  ): tracking_higher_aggregate!

  """
  fetch data from the table: "unit_bundle"
  """
  unit_bundle(
    """distinct select on columns"""
    distinct_on: [unit_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_order_by!]

    """filter the rows returned"""
    where: unit_bundle_bool_exp
  ): [unit_bundle!]!

  """
  fetch aggregated fields from the table: "unit_bundle"
  """
  unit_bundle_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_order_by!]

    """filter the rows returned"""
    where: unit_bundle_bool_exp
  ): unit_bundle_aggregate!

  """fetch data from the table: "unit_bundle" using primary key columns"""
  unit_bundle_by_pk(id: Int!): unit_bundle

  """An array relationship"""
  unit_bundle_units(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): [unit_bundle_units!]!

  """An aggregate relationship"""
  unit_bundle_units_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): unit_bundle_units_aggregate!

  """
  fetch data from the table: "unit_bundle_units" using primary key columns
  """
  unit_bundle_units_by_pk(id: Int!): unit_bundle_units

  """
  fetch data from the table: "unit_submission"
  """
  unit_submission(
    """distinct select on columns"""
    distinct_on: [unit_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_submission_order_by!]

    """filter the rows returned"""
    where: unit_submission_bool_exp
  ): [unit_submission!]!

  """
  fetch aggregated fields from the table: "unit_submission"
  """
  unit_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_submission_order_by!]

    """filter the rows returned"""
    where: unit_submission_bool_exp
  ): unit_submission_aggregate!

  """
  fetch data from the table: "unit_v2"
  """
  unit_v2(
    """distinct select on columns"""
    distinct_on: [unit_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_v2_order_by!]

    """filter the rows returned"""
    where: unit_v2_bool_exp
  ): [unit_v2!]!

  """
  fetch aggregated fields from the table: "unit_v2"
  """
  unit_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_v2_order_by!]

    """filter the rows returned"""
    where: unit_v2_bool_exp
  ): unit_v2_aggregate!

  """fetch data from the table: "unit_v2" using primary key columns"""
  unit_v2_by_pk(id: Int!): unit_v2

  """An array relationship"""
  user_action_logs(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): [user_action_logs!]!

  """An aggregate relationship"""
  user_action_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): user_action_logs_aggregate!

  """An array relationship"""
  user_action_logs_applications(
    """distinct select on columns"""
    distinct_on: [user_action_logs_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_applications_order_by!]

    """filter the rows returned"""
    where: user_action_logs_applications_bool_exp
  ): [user_action_logs_applications!]!

  """An aggregate relationship"""
  user_action_logs_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_applications_order_by!]

    """filter the rows returned"""
    where: user_action_logs_applications_bool_exp
  ): user_action_logs_applications_aggregate!

  """
  fetch data from the table: "user_action_logs" using primary key columns
  """
  user_action_logs_by_pk(id: uuid!): user_action_logs

  """
  fetch data from the table: "user_action_reasons"
  """
  user_action_reasons(
    """distinct select on columns"""
    distinct_on: [user_action_reasons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_reasons_order_by!]

    """filter the rows returned"""
    where: user_action_reasons_bool_exp
  ): [user_action_reasons!]!

  """
  fetch aggregated fields from the table: "user_action_reasons"
  """
  user_action_reasons_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_reasons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_reasons_order_by!]

    """filter the rows returned"""
    where: user_action_reasons_bool_exp
  ): user_action_reasons_aggregate!

  """
  fetch data from the table: "user_action_reasons" using primary key columns
  """
  user_action_reasons_by_pk(id: uuid!): user_action_reasons

  """An array relationship"""
  user_actions(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): [user_actions!]!

  """An aggregate relationship"""
  user_actions_aggregate(
    """distinct select on columns"""
    distinct_on: [user_actions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_actions_order_by!]

    """filter the rows returned"""
    where: user_actions_bool_exp
  ): user_actions_aggregate!

  """fetch data from the table: "user_actions" using primary key columns"""
  user_actions_by_pk(id: uuid!): user_actions

  """An array relationship"""
  user_comments(
    """distinct select on columns"""
    distinct_on: [user_comments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_comments_order_by!]

    """filter the rows returned"""
    where: user_comments_bool_exp
  ): [user_comments!]!

  """An aggregate relationship"""
  user_comments_aggregate(
    """distinct select on columns"""
    distinct_on: [user_comments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_comments_order_by!]

    """filter the rows returned"""
    where: user_comments_bool_exp
  ): user_comments_aggregate!

  """fetch data from the table: "user_comments" using primary key columns"""
  user_comments_by_pk(id: uuid!): user_comments

  """An array relationship"""
  user_consents(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): [user_consents!]!

  """An aggregate relationship"""
  user_consents_aggregate(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): user_consents_aggregate!

  """fetch data from the table: "user_consents" using primary key columns"""
  user_consents_by_pk(id: uuid!): user_consents

  """An array relationship"""
  user_consents_email_plus(
    """distinct select on columns"""
    distinct_on: [user_consents_email_plus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_email_plus_order_by!]

    """filter the rows returned"""
    where: user_consents_email_plus_bool_exp
  ): [user_consents_email_plus!]!

  """An aggregate relationship"""
  user_consents_email_plus_aggregate(
    """distinct select on columns"""
    distinct_on: [user_consents_email_plus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_email_plus_order_by!]

    """filter the rows returned"""
    where: user_consents_email_plus_bool_exp
  ): user_consents_email_plus_aggregate!

  """
  fetch data from the table: "user_consents_email_plus" using primary key columns
  """
  user_consents_email_plus_by_pk(id: bigint!): user_consents_email_plus

  """An array relationship"""
  user_registrations(
    """distinct select on columns"""
    distinct_on: [user_registrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_order_by!]

    """filter the rows returned"""
    where: user_registrations_bool_exp
  ): [user_registrations!]!

  """An aggregate relationship"""
  user_registrations_aggregate(
    """distinct select on columns"""
    distinct_on: [user_registrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_order_by!]

    """filter the rows returned"""
    where: user_registrations_bool_exp
  ): user_registrations_aggregate!

  """An array relationship"""
  user_registrations_application_roles(
    """distinct select on columns"""
    distinct_on: [user_registrations_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_application_roles_order_by!]

    """filter the rows returned"""
    where: user_registrations_application_roles_bool_exp
  ): [user_registrations_application_roles!]!

  """An aggregate relationship"""
  user_registrations_application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_registrations_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_application_roles_order_by!]

    """filter the rows returned"""
    where: user_registrations_application_roles_bool_exp
  ): user_registrations_application_roles_aggregate!

  """
  fetch data from the table: "user_registrations" using primary key columns
  """
  user_registrations_by_pk(id: uuid!): user_registrations

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """An aggregate relationship"""
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(id: uuid!): users

  """
  fetch data from the table: "version"
  """
  version(
    """distinct select on columns"""
    distinct_on: [version_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_order_by!]

    """filter the rows returned"""
    where: version_bool_exp
  ): [version!]!

  """
  fetch aggregated fields from the table: "version"
  """
  version_aggregate(
    """distinct select on columns"""
    distinct_on: [version_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_order_by!]

    """filter the rows returned"""
    where: version_bool_exp
  ): version_aggregate!

  """
  fetch data from the table: "webhooks"
  """
  webhooks(
    """distinct select on columns"""
    distinct_on: [webhooks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_order_by!]

    """filter the rows returned"""
    where: webhooks_bool_exp
  ): [webhooks!]!

  """
  fetch aggregated fields from the table: "webhooks"
  """
  webhooks_aggregate(
    """distinct select on columns"""
    distinct_on: [webhooks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_order_by!]

    """filter the rows returned"""
    where: webhooks_bool_exp
  ): webhooks_aggregate!

  """An array relationship"""
  webhooks_applications(
    """distinct select on columns"""
    distinct_on: [webhooks_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_applications_order_by!]

    """filter the rows returned"""
    where: webhooks_applications_bool_exp
  ): [webhooks_applications!]!

  """An aggregate relationship"""
  webhooks_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [webhooks_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_applications_order_by!]

    """filter the rows returned"""
    where: webhooks_applications_bool_exp
  ): webhooks_applications_aggregate!

  """
  fetch data from the table: "webhooks_applications" using primary key columns
  """
  webhooks_applications_by_pk(applications_id: uuid!, webhooks_id: uuid!): webhooks_applications

  """fetch data from the table: "webhooks" using primary key columns"""
  webhooks_by_pk(id: uuid!): webhooks

  """
  fetch data from the table: "Week 17-24"
  """
  week_17_24(
    """distinct select on columns"""
    distinct_on: [week_17_24_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_17_24_order_by!]

    """filter the rows returned"""
    where: week_17_24_bool_exp
  ): [week_17_24!]!

  """
  fetch aggregated fields from the table: "Week 17-24"
  """
  week_17_24_aggregate(
    """distinct select on columns"""
    distinct_on: [week_17_24_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_17_24_order_by!]

    """filter the rows returned"""
    where: week_17_24_bool_exp
  ): week_17_24_aggregate!

  """
  fetch data from the table: "Week 1-8"
  """
  week_1_8(
    """distinct select on columns"""
    distinct_on: [week_1_8_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_1_8_order_by!]

    """filter the rows returned"""
    where: week_1_8_bool_exp
  ): [week_1_8!]!

  """
  fetch aggregated fields from the table: "Week 1-8"
  """
  week_1_8_aggregate(
    """distinct select on columns"""
    distinct_on: [week_1_8_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_1_8_order_by!]

    """filter the rows returned"""
    where: week_1_8_bool_exp
  ): week_1_8_aggregate!

  """
  fetch data from the table: "Week 9-16"
  """
  week_9_16(
    """distinct select on columns"""
    distinct_on: [week_9_16_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_9_16_order_by!]

    """filter the rows returned"""
    where: week_9_16_bool_exp
  ): [week_9_16!]!

  """
  fetch aggregated fields from the table: "Week 9-16"
  """
  week_9_16_aggregate(
    """distinct select on columns"""
    distinct_on: [week_9_16_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_9_16_order_by!]

    """filter the rows returned"""
    where: week_9_16_bool_exp
  ): week_9_16_aggregate!
}

"""
columns and relationships of "question"
"""
type question {
  """An array relationship"""
  assessment_au_question_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): [assessment_au_question_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_question_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): assessment_au_question_aggregate_submission_aggregate!
  cutoff: numeric
  id: Int!

  """An object relationship"""
  lo: lo
  lo_id: Int

  """An array relationship"""
  question_assessments(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): [question_assessment!]!

  """An aggregate relationship"""
  question_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): question_assessment_aggregate!

  """An array relationship"""
  question_submissions(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): [question_submission!]!

  """An aggregate relationship"""
  question_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): question_submission_aggregate!

  """An array relationship"""
  server_questiongroup_questions(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): [server_questiongroup_question!]!

  """An aggregate relationship"""
  server_questiongroup_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): server_questiongroup_question_aggregate!
  statement: String!
}

"""
aggregated selection of "question"
"""
type question_aggregate {
  aggregate: question_aggregate_fields
  nodes: [question!]!
}

"""
aggregate fields of "question"
"""
type question_aggregate_fields {
  avg: question_avg_fields
  count(columns: [question_select_column!], distinct: Boolean): Int!
  max: question_max_fields
  min: question_min_fields
  stddev: question_stddev_fields
  stddev_pop: question_stddev_pop_fields
  stddev_samp: question_stddev_samp_fields
  sum: question_sum_fields
  var_pop: question_var_pop_fields
  var_samp: question_var_samp_fields
  variance: question_variance_fields
}

"""
order by aggregate values of table "question"
"""
input question_aggregate_order_by {
  avg: question_avg_order_by
  count: order_by
  max: question_max_order_by
  min: question_min_order_by
  stddev: question_stddev_order_by
  stddev_pop: question_stddev_pop_order_by
  stddev_samp: question_stddev_samp_order_by
  sum: question_sum_order_by
  var_pop: question_var_pop_order_by
  var_samp: question_var_samp_order_by
  variance: question_variance_order_by
}

"""
input type for inserting array relation for remote table "question"
"""
input question_arr_rel_insert_input {
  data: [question_insert_input!]!

  """on conflict condition"""
  on_conflict: question_on_conflict
}

"""
columns and relationships of "question_assessment"
"""
type question_assessment {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  id: Int!

  """An object relationship"""
  question: question!
  question_id: Int!
}

"""
aggregated selection of "question_assessment"
"""
type question_assessment_aggregate {
  aggregate: question_assessment_aggregate_fields
  nodes: [question_assessment!]!
}

"""
aggregate fields of "question_assessment"
"""
type question_assessment_aggregate_fields {
  avg: question_assessment_avg_fields
  count(columns: [question_assessment_select_column!], distinct: Boolean): Int!
  max: question_assessment_max_fields
  min: question_assessment_min_fields
  stddev: question_assessment_stddev_fields
  stddev_pop: question_assessment_stddev_pop_fields
  stddev_samp: question_assessment_stddev_samp_fields
  sum: question_assessment_sum_fields
  var_pop: question_assessment_var_pop_fields
  var_samp: question_assessment_var_samp_fields
  variance: question_assessment_variance_fields
}

"""
order by aggregate values of table "question_assessment"
"""
input question_assessment_aggregate_order_by {
  avg: question_assessment_avg_order_by
  count: order_by
  max: question_assessment_max_order_by
  min: question_assessment_min_order_by
  stddev: question_assessment_stddev_order_by
  stddev_pop: question_assessment_stddev_pop_order_by
  stddev_samp: question_assessment_stddev_samp_order_by
  sum: question_assessment_sum_order_by
  var_pop: question_assessment_var_pop_order_by
  var_samp: question_assessment_var_samp_order_by
  variance: question_assessment_variance_order_by
}

"""
input type for inserting array relation for remote table "question_assessment"
"""
input question_assessment_arr_rel_insert_input {
  data: [question_assessment_insert_input!]!

  """on conflict condition"""
  on_conflict: question_assessment_on_conflict
}

"""aggregate avg on columns"""
type question_assessment_avg_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by avg() on columns of table "question_assessment"
"""
input question_assessment_avg_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""
Boolean expression to filter rows from the table "question_assessment". All fields are combined with a logical 'AND'.
"""
input question_assessment_bool_exp {
  _and: [question_assessment_bool_exp!]
  _not: question_assessment_bool_exp
  _or: [question_assessment_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  question: question_bool_exp
  question_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "question_assessment"
"""
enum question_assessment_constraint {
  """unique or primary key constraint"""
  question_assessment_pkey

  """unique or primary key constraint"""
  question_assessment_question_id_assessment_id_ea71dde4_uniq
}

"""
input type for incrementing numeric columns in table "question_assessment"
"""
input question_assessment_inc_input {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""
input type for inserting data into table "question_assessment"
"""
input question_assessment_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  question: question_obj_rel_insert_input
  question_id: Int
}

"""aggregate max on columns"""
type question_assessment_max_fields {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""
order by max() on columns of table "question_assessment"
"""
input question_assessment_max_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate min on columns"""
type question_assessment_min_fields {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""
order by min() on columns of table "question_assessment"
"""
input question_assessment_min_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""
response of any mutation on the table "question_assessment"
"""
type question_assessment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [question_assessment!]!
}

"""
on conflict condition type for table "question_assessment"
"""
input question_assessment_on_conflict {
  constraint: question_assessment_constraint!
  update_columns: [question_assessment_update_column!]! = []
  where: question_assessment_bool_exp
}

"""Ordering options when selecting data from "question_assessment"."""
input question_assessment_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  question: question_order_by
  question_id: order_by
}

"""primary key columns input for table: question_assessment"""
input question_assessment_pk_columns_input {
  id: Int!
}

"""
select columns of table "question_assessment"
"""
enum question_assessment_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  question_id
}

"""
input type for updating data in table "question_assessment"
"""
input question_assessment_set_input {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""aggregate stddev on columns"""
type question_assessment_stddev_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by stddev() on columns of table "question_assessment"
"""
input question_assessment_stddev_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate stddev_pop on columns"""
type question_assessment_stddev_pop_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by stddev_pop() on columns of table "question_assessment"
"""
input question_assessment_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate stddev_samp on columns"""
type question_assessment_stddev_samp_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by stddev_samp() on columns of table "question_assessment"
"""
input question_assessment_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate sum on columns"""
type question_assessment_sum_fields {
  assessment_id: Int
  id: Int
  question_id: Int
}

"""
order by sum() on columns of table "question_assessment"
"""
input question_assessment_sum_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""
update columns of table "question_assessment"
"""
enum question_assessment_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  question_id
}

"""aggregate var_pop on columns"""
type question_assessment_var_pop_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by var_pop() on columns of table "question_assessment"
"""
input question_assessment_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate var_samp on columns"""
type question_assessment_var_samp_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by var_samp() on columns of table "question_assessment"
"""
input question_assessment_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate variance on columns"""
type question_assessment_variance_fields {
  assessment_id: Float
  id: Float
  question_id: Float
}

"""
order by variance() on columns of table "question_assessment"
"""
input question_assessment_variance_order_by {
  assessment_id: order_by
  id: order_by
  question_id: order_by
}

"""aggregate avg on columns"""
type question_avg_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by avg() on columns of table "question"
"""
input question_avg_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""
Boolean expression to filter rows from the table "question". All fields are combined with a logical 'AND'.
"""
input question_bool_exp {
  _and: [question_bool_exp!]
  _not: question_bool_exp
  _or: [question_bool_exp!]
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_bool_exp
  cutoff: numeric_comparison_exp
  id: Int_comparison_exp
  lo: lo_bool_exp
  lo_id: Int_comparison_exp
  question_assessments: question_assessment_bool_exp
  question_submissions: question_submission_bool_exp
  server_questiongroup_questions: server_questiongroup_question_bool_exp
  statement: String_comparison_exp
}

"""
columns and relationships of "question_bundle"
"""
type question_bundle {
  """An array relationship"""
  assessment_question_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): [assessment_question_bundles!]!

  """An aggregate relationship"""
  assessment_question_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): assessment_question_bundles_aggregate!
  cache(
    """JSON select path"""
    path: String
  ): jsonb
  created: timestamptz
  desc: String!
  id: Int!
  name: String!

  """An array relationship"""
  question_bundle_questions(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): [question_bundle_questions!]!

  """An aggregate relationship"""
  question_bundle_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): question_bundle_questions_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "question_bundle"
"""
type question_bundle_aggregate {
  aggregate: question_bundle_aggregate_fields
  nodes: [question_bundle!]!
}

"""
aggregate fields of "question_bundle"
"""
type question_bundle_aggregate_fields {
  avg: question_bundle_avg_fields
  count(columns: [question_bundle_select_column!], distinct: Boolean): Int!
  max: question_bundle_max_fields
  min: question_bundle_min_fields
  stddev: question_bundle_stddev_fields
  stddev_pop: question_bundle_stddev_pop_fields
  stddev_samp: question_bundle_stddev_samp_fields
  sum: question_bundle_sum_fields
  var_pop: question_bundle_var_pop_fields
  var_samp: question_bundle_var_samp_fields
  variance: question_bundle_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input question_bundle_append_input {
  cache: jsonb
}

"""aggregate avg on columns"""
type question_bundle_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "question_bundle". All fields are combined with a logical 'AND'.
"""
input question_bundle_bool_exp {
  _and: [question_bundle_bool_exp!]
  _not: question_bundle_bool_exp
  _or: [question_bundle_bool_exp!]
  assessment_question_bundles: assessment_question_bundles_bool_exp
  cache: jsonb_comparison_exp
  created: timestamptz_comparison_exp
  desc: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  question_bundle_questions: question_bundle_questions_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "question_bundle"
"""
enum question_bundle_constraint {
  """unique or primary key constraint"""
  question_bundle_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input question_bundle_delete_at_path_input {
  cache: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input question_bundle_delete_elem_input {
  cache: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input question_bundle_delete_key_input {
  cache: String
}

"""
input type for incrementing numeric columns in table "question_bundle"
"""
input question_bundle_inc_input {
  id: Int
}

"""
input type for inserting data into table "question_bundle"
"""
input question_bundle_insert_input {
  assessment_question_bundles: assessment_question_bundles_arr_rel_insert_input
  cache: jsonb
  created: timestamptz
  desc: String
  id: Int
  name: String
  question_bundle_questions: question_bundle_questions_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type question_bundle_max_fields {
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type question_bundle_min_fields {
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "question_bundle"
"""
type question_bundle_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [question_bundle!]!
}

"""
input type for inserting object relation for remote table "question_bundle"
"""
input question_bundle_obj_rel_insert_input {
  data: question_bundle_insert_input!

  """on conflict condition"""
  on_conflict: question_bundle_on_conflict
}

"""
on conflict condition type for table "question_bundle"
"""
input question_bundle_on_conflict {
  constraint: question_bundle_constraint!
  update_columns: [question_bundle_update_column!]! = []
  where: question_bundle_bool_exp
}

"""Ordering options when selecting data from "question_bundle"."""
input question_bundle_order_by {
  assessment_question_bundles_aggregate: assessment_question_bundles_aggregate_order_by
  cache: order_by
  created: order_by
  desc: order_by
  id: order_by
  name: order_by
  question_bundle_questions_aggregate: question_bundle_questions_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: question_bundle"""
input question_bundle_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input question_bundle_prepend_input {
  cache: jsonb
}

"""
columns and relationships of "question_bundle_questions"
"""
type question_bundle_questions {
  id: Int!

  """An object relationship"""
  question_bundle: question_bundle!

  """An object relationship"""
  question_v2: question_v2!
  question_v2_id: Int!
  questionbundle_id: Int!
}

"""
aggregated selection of "question_bundle_questions"
"""
type question_bundle_questions_aggregate {
  aggregate: question_bundle_questions_aggregate_fields
  nodes: [question_bundle_questions!]!
}

"""
aggregate fields of "question_bundle_questions"
"""
type question_bundle_questions_aggregate_fields {
  avg: question_bundle_questions_avg_fields
  count(columns: [question_bundle_questions_select_column!], distinct: Boolean): Int!
  max: question_bundle_questions_max_fields
  min: question_bundle_questions_min_fields
  stddev: question_bundle_questions_stddev_fields
  stddev_pop: question_bundle_questions_stddev_pop_fields
  stddev_samp: question_bundle_questions_stddev_samp_fields
  sum: question_bundle_questions_sum_fields
  var_pop: question_bundle_questions_var_pop_fields
  var_samp: question_bundle_questions_var_samp_fields
  variance: question_bundle_questions_variance_fields
}

"""
order by aggregate values of table "question_bundle_questions"
"""
input question_bundle_questions_aggregate_order_by {
  avg: question_bundle_questions_avg_order_by
  count: order_by
  max: question_bundle_questions_max_order_by
  min: question_bundle_questions_min_order_by
  stddev: question_bundle_questions_stddev_order_by
  stddev_pop: question_bundle_questions_stddev_pop_order_by
  stddev_samp: question_bundle_questions_stddev_samp_order_by
  sum: question_bundle_questions_sum_order_by
  var_pop: question_bundle_questions_var_pop_order_by
  var_samp: question_bundle_questions_var_samp_order_by
  variance: question_bundle_questions_variance_order_by
}

"""
input type for inserting array relation for remote table "question_bundle_questions"
"""
input question_bundle_questions_arr_rel_insert_input {
  data: [question_bundle_questions_insert_input!]!

  """on conflict condition"""
  on_conflict: question_bundle_questions_on_conflict
}

"""aggregate avg on columns"""
type question_bundle_questions_avg_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by avg() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_avg_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""
Boolean expression to filter rows from the table "question_bundle_questions". All fields are combined with a logical 'AND'.
"""
input question_bundle_questions_bool_exp {
  _and: [question_bundle_questions_bool_exp!]
  _not: question_bundle_questions_bool_exp
  _or: [question_bundle_questions_bool_exp!]
  id: Int_comparison_exp
  question_bundle: question_bundle_bool_exp
  question_v2: question_v2_bool_exp
  question_v2_id: Int_comparison_exp
  questionbundle_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "question_bundle_questions"
"""
enum question_bundle_questions_constraint {
  """unique or primary key constraint"""
  question_bundle_question_pkey

  """unique or primary key constraint"""
  question_bundle_question_questionbundle_id_questi_c71f2308_uniq
}

"""
input type for incrementing numeric columns in table "question_bundle_questions"
"""
input question_bundle_questions_inc_input {
  id: Int
  question_v2_id: Int
  questionbundle_id: Int
}

"""
input type for inserting data into table "question_bundle_questions"
"""
input question_bundle_questions_insert_input {
  id: Int
  question_bundle: question_bundle_obj_rel_insert_input
  question_v2: question_v2_obj_rel_insert_input
  question_v2_id: Int
  questionbundle_id: Int
}

"""aggregate max on columns"""
type question_bundle_questions_max_fields {
  id: Int
  question_v2_id: Int
  questionbundle_id: Int
}

"""
order by max() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_max_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""aggregate min on columns"""
type question_bundle_questions_min_fields {
  id: Int
  question_v2_id: Int
  questionbundle_id: Int
}

"""
order by min() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_min_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""
response of any mutation on the table "question_bundle_questions"
"""
type question_bundle_questions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [question_bundle_questions!]!
}

"""
on conflict condition type for table "question_bundle_questions"
"""
input question_bundle_questions_on_conflict {
  constraint: question_bundle_questions_constraint!
  update_columns: [question_bundle_questions_update_column!]! = []
  where: question_bundle_questions_bool_exp
}

"""Ordering options when selecting data from "question_bundle_questions"."""
input question_bundle_questions_order_by {
  id: order_by
  question_bundle: question_bundle_order_by
  question_v2: question_v2_order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""primary key columns input for table: question_bundle_questions"""
input question_bundle_questions_pk_columns_input {
  id: Int!
}

"""
select columns of table "question_bundle_questions"
"""
enum question_bundle_questions_select_column {
  """column name"""
  id

  """column name"""
  question_v2_id

  """column name"""
  questionbundle_id
}

"""
input type for updating data in table "question_bundle_questions"
"""
input question_bundle_questions_set_input {
  id: Int
  question_v2_id: Int
  questionbundle_id: Int
}

"""aggregate stddev on columns"""
type question_bundle_questions_stddev_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by stddev() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_stddev_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""aggregate stddev_pop on columns"""
type question_bundle_questions_stddev_pop_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by stddev_pop() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_stddev_pop_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""aggregate stddev_samp on columns"""
type question_bundle_questions_stddev_samp_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by stddev_samp() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_stddev_samp_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""aggregate sum on columns"""
type question_bundle_questions_sum_fields {
  id: Int
  question_v2_id: Int
  questionbundle_id: Int
}

"""
order by sum() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_sum_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""
update columns of table "question_bundle_questions"
"""
enum question_bundle_questions_update_column {
  """column name"""
  id

  """column name"""
  question_v2_id

  """column name"""
  questionbundle_id
}

"""aggregate var_pop on columns"""
type question_bundle_questions_var_pop_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by var_pop() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_var_pop_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""aggregate var_samp on columns"""
type question_bundle_questions_var_samp_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by var_samp() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_var_samp_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""aggregate variance on columns"""
type question_bundle_questions_variance_fields {
  id: Float
  question_v2_id: Float
  questionbundle_id: Float
}

"""
order by variance() on columns of table "question_bundle_questions"
"""
input question_bundle_questions_variance_order_by {
  id: order_by
  question_v2_id: order_by
  questionbundle_id: order_by
}

"""
select columns of table "question_bundle"
"""
enum question_bundle_select_column {
  """column name"""
  cache

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "question_bundle"
"""
input question_bundle_set_input {
  cache: jsonb
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type question_bundle_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type question_bundle_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type question_bundle_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type question_bundle_sum_fields {
  id: Int
}

"""
update columns of table "question_bundle"
"""
enum question_bundle_update_column {
  """column name"""
  cache

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type question_bundle_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type question_bundle_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type question_bundle_variance_fields {
  id: Float
}

"""
unique or primary key constraints on table "question"
"""
enum question_constraint {
  """unique or primary key constraint"""
  question_pkey
}

"""
input type for incrementing numeric columns in table "question"
"""
input question_inc_input {
  cutoff: numeric
  id: Int
  lo_id: Int
}

"""
input type for inserting data into table "question"
"""
input question_insert_input {
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_arr_rel_insert_input
  cutoff: numeric
  id: Int
  lo: lo_obj_rel_insert_input
  lo_id: Int
  question_assessments: question_assessment_arr_rel_insert_input
  question_submissions: question_submission_arr_rel_insert_input
  server_questiongroup_questions: server_questiongroup_question_arr_rel_insert_input
  statement: String
}

"""aggregate max on columns"""
type question_max_fields {
  cutoff: numeric
  id: Int
  lo_id: Int
  statement: String
}

"""
order by max() on columns of table "question"
"""
input question_max_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
  statement: order_by
}

"""aggregate min on columns"""
type question_min_fields {
  cutoff: numeric
  id: Int
  lo_id: Int
  statement: String
}

"""
order by min() on columns of table "question"
"""
input question_min_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
  statement: order_by
}

"""
response of any mutation on the table "question"
"""
type question_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [question!]!
}

"""
input type for inserting object relation for remote table "question"
"""
input question_obj_rel_insert_input {
  data: question_insert_input!

  """on conflict condition"""
  on_conflict: question_on_conflict
}

"""
on conflict condition type for table "question"
"""
input question_on_conflict {
  constraint: question_constraint!
  update_columns: [question_update_column!]! = []
  where: question_bool_exp
}

"""Ordering options when selecting data from "question"."""
input question_order_by {
  assessment_au_question_aggregate_submissions_aggregate: assessment_au_question_aggregate_submission_aggregate_order_by
  cutoff: order_by
  id: order_by
  lo: lo_order_by
  lo_id: order_by
  question_assessments_aggregate: question_assessment_aggregate_order_by
  question_submissions_aggregate: question_submission_aggregate_order_by
  server_questiongroup_questions_aggregate: server_questiongroup_question_aggregate_order_by
  statement: order_by
}

"""primary key columns input for table: question"""
input question_pk_columns_input {
  id: Int!
}

"""
select columns of table "question"
"""
enum question_select_column {
  """column name"""
  cutoff

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  statement
}

"""
input type for updating data in table "question"
"""
input question_set_input {
  cutoff: numeric
  id: Int
  lo_id: Int
  statement: String
}

"""aggregate stddev on columns"""
type question_stddev_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by stddev() on columns of table "question"
"""
input question_stddev_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate stddev_pop on columns"""
type question_stddev_pop_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by stddev_pop() on columns of table "question"
"""
input question_stddev_pop_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate stddev_samp on columns"""
type question_stddev_samp_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by stddev_samp() on columns of table "question"
"""
input question_stddev_samp_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""
columns and relationships of "question_submission"
"""
type question_submission {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  created: timestamptz

  """An object relationship"""
  grade: grade!
  grade_id: Int!
  id: Int!

  """An object relationship"""
  question: question!
  question_id: Int!

  """An object relationship"""
  school: school!
  school_id: Int!
  students_cleared: Int!
  updated: timestamptz
}

"""
aggregated selection of "question_submission"
"""
type question_submission_aggregate {
  aggregate: question_submission_aggregate_fields
  nodes: [question_submission!]!
}

"""
aggregate fields of "question_submission"
"""
type question_submission_aggregate_fields {
  avg: question_submission_avg_fields
  count(columns: [question_submission_select_column!], distinct: Boolean): Int!
  max: question_submission_max_fields
  min: question_submission_min_fields
  stddev: question_submission_stddev_fields
  stddev_pop: question_submission_stddev_pop_fields
  stddev_samp: question_submission_stddev_samp_fields
  sum: question_submission_sum_fields
  var_pop: question_submission_var_pop_fields
  var_samp: question_submission_var_samp_fields
  variance: question_submission_variance_fields
}

"""
order by aggregate values of table "question_submission"
"""
input question_submission_aggregate_order_by {
  avg: question_submission_avg_order_by
  count: order_by
  max: question_submission_max_order_by
  min: question_submission_min_order_by
  stddev: question_submission_stddev_order_by
  stddev_pop: question_submission_stddev_pop_order_by
  stddev_samp: question_submission_stddev_samp_order_by
  sum: question_submission_sum_order_by
  var_pop: question_submission_var_pop_order_by
  var_samp: question_submission_var_samp_order_by
  variance: question_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "question_submission"
"""
input question_submission_arr_rel_insert_input {
  data: [question_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: question_submission_on_conflict
}

"""aggregate avg on columns"""
type question_submission_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by avg() on columns of table "question_submission"
"""
input question_submission_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
Boolean expression to filter rows from the table "question_submission". All fields are combined with a logical 'AND'.
"""
input question_submission_bool_exp {
  _and: [question_submission_bool_exp!]
  _not: question_submission_bool_exp
  _or: [question_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  question: question_bool_exp
  question_id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  students_cleared: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "question_submission"
"""
enum question_submission_constraint {
  """unique or primary key constraint"""
  question_submission_pkey
}

"""
input type for incrementing numeric columns in table "question_submission"
"""
input question_submission_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
}

"""
input type for inserting data into table "question_submission"
"""
input question_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  question: question_obj_rel_insert_input
  question_id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type question_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by max() on columns of table "question_submission"
"""
input question_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""aggregate min on columns"""
type question_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""
order by min() on columns of table "question_submission"
"""
input question_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""
response of any mutation on the table "question_submission"
"""
type question_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [question_submission!]!
}

"""
on conflict condition type for table "question_submission"
"""
input question_submission_on_conflict {
  constraint: question_submission_constraint!
  update_columns: [question_submission_update_column!]! = []
  where: question_submission_bool_exp
}

"""Ordering options when selecting data from "question_submission"."""
input question_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  question: question_order_by
  question_id: order_by
  school: school_order_by
  school_id: order_by
  students_cleared: order_by
  updated: order_by
}

"""primary key columns input for table: question_submission"""
input question_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "question_submission"
"""
enum question_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""
input type for updating data in table "question_submission"
"""
input question_submission_set_input {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type question_submission_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev() on columns of table "question_submission"
"""
input question_submission_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_pop on columns"""
type question_submission_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_pop() on columns of table "question_submission"
"""
input question_submission_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate stddev_samp on columns"""
type question_submission_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by stddev_samp() on columns of table "question_submission"
"""
input question_submission_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type question_submission_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
  question_id: Int
  school_id: Int
  students_cleared: Int
}

"""
order by sum() on columns of table "question_submission"
"""
input question_submission_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""
update columns of table "question_submission"
"""
enum question_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  school_id

  """column name"""
  students_cleared

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type question_submission_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_pop() on columns of table "question_submission"
"""
input question_submission_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate var_samp on columns"""
type question_submission_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by var_samp() on columns of table "question_submission"
"""
input question_submission_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate variance on columns"""
type question_submission_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  question_id: Float
  school_id: Float
  students_cleared: Float
}

"""
order by variance() on columns of table "question_submission"
"""
input question_submission_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  question_id: order_by
  school_id: order_by
  students_cleared: order_by
}

"""aggregate sum on columns"""
type question_sum_fields {
  cutoff: numeric
  id: Int
  lo_id: Int
}

"""
order by sum() on columns of table "question"
"""
input question_sum_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""
update columns of table "question"
"""
enum question_update_column {
  """column name"""
  cutoff

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  statement
}

"""
columns and relationships of "question_v2"
"""
type question_v2 {
  """An array relationship"""
  assessment_unit_selected_questions(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): [assessment_unit_selected_question!]!

  """An aggregate relationship"""
  assessment_unit_selected_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): assessment_unit_selected_question_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!
  created: timestamptz
  cutoff: numeric
  id: Int!
  lo_id: Int

  """An object relationship"""
  lo_v2: lo_v2

  """An array relationship"""
  question_bundle_questions(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): [question_bundle_questions!]!

  """An aggregate relationship"""
  question_bundle_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): question_bundle_questions_aggregate!
  statement: String!
  updated: timestamptz
}

"""
aggregated selection of "question_v2"
"""
type question_v2_aggregate {
  aggregate: question_v2_aggregate_fields
  nodes: [question_v2!]!
}

"""
aggregate fields of "question_v2"
"""
type question_v2_aggregate_fields {
  avg: question_v2_avg_fields
  count(columns: [question_v2_select_column!], distinct: Boolean): Int!
  max: question_v2_max_fields
  min: question_v2_min_fields
  stddev: question_v2_stddev_fields
  stddev_pop: question_v2_stddev_pop_fields
  stddev_samp: question_v2_stddev_samp_fields
  sum: question_v2_sum_fields
  var_pop: question_v2_var_pop_fields
  var_samp: question_v2_var_samp_fields
  variance: question_v2_variance_fields
}

"""
order by aggregate values of table "question_v2"
"""
input question_v2_aggregate_order_by {
  avg: question_v2_avg_order_by
  count: order_by
  max: question_v2_max_order_by
  min: question_v2_min_order_by
  stddev: question_v2_stddev_order_by
  stddev_pop: question_v2_stddev_pop_order_by
  stddev_samp: question_v2_stddev_samp_order_by
  sum: question_v2_sum_order_by
  var_pop: question_v2_var_pop_order_by
  var_samp: question_v2_var_samp_order_by
  variance: question_v2_variance_order_by
}

"""
input type for inserting array relation for remote table "question_v2"
"""
input question_v2_arr_rel_insert_input {
  data: [question_v2_insert_input!]!

  """on conflict condition"""
  on_conflict: question_v2_on_conflict
}

"""aggregate avg on columns"""
type question_v2_avg_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by avg() on columns of table "question_v2"
"""
input question_v2_avg_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""
Boolean expression to filter rows from the table "question_v2". All fields are combined with a logical 'AND'.
"""
input question_v2_bool_exp {
  _and: [question_v2_bool_exp!]
  _not: question_v2_bool_exp
  _or: [question_v2_bool_exp!]
  assessment_unit_selected_questions: assessment_unit_selected_question_bool_exp
  class_submissions: class_submission_bool_exp
  created: timestamptz_comparison_exp
  cutoff: numeric_comparison_exp
  id: Int_comparison_exp
  lo_id: Int_comparison_exp
  lo_v2: lo_v2_bool_exp
  question_bundle_questions: question_bundle_questions_bool_exp
  statement: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "question_v2"
"""
enum question_v2_constraint {
  """unique or primary key constraint"""
  question_v2_pkey
}

"""
input type for incrementing numeric columns in table "question_v2"
"""
input question_v2_inc_input {
  cutoff: numeric
  id: Int
  lo_id: Int
}

"""
input type for inserting data into table "question_v2"
"""
input question_v2_insert_input {
  assessment_unit_selected_questions: assessment_unit_selected_question_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  created: timestamptz
  cutoff: numeric
  id: Int
  lo_id: Int
  lo_v2: lo_v2_obj_rel_insert_input
  question_bundle_questions: question_bundle_questions_arr_rel_insert_input
  statement: String
  updated: timestamptz
}

"""aggregate max on columns"""
type question_v2_max_fields {
  created: timestamptz
  cutoff: numeric
  id: Int
  lo_id: Int
  statement: String
  updated: timestamptz
}

"""
order by max() on columns of table "question_v2"
"""
input question_v2_max_order_by {
  created: order_by
  cutoff: order_by
  id: order_by
  lo_id: order_by
  statement: order_by
  updated: order_by
}

"""aggregate min on columns"""
type question_v2_min_fields {
  created: timestamptz
  cutoff: numeric
  id: Int
  lo_id: Int
  statement: String
  updated: timestamptz
}

"""
order by min() on columns of table "question_v2"
"""
input question_v2_min_order_by {
  created: order_by
  cutoff: order_by
  id: order_by
  lo_id: order_by
  statement: order_by
  updated: order_by
}

"""
response of any mutation on the table "question_v2"
"""
type question_v2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [question_v2!]!
}

"""
input type for inserting object relation for remote table "question_v2"
"""
input question_v2_obj_rel_insert_input {
  data: question_v2_insert_input!

  """on conflict condition"""
  on_conflict: question_v2_on_conflict
}

"""
on conflict condition type for table "question_v2"
"""
input question_v2_on_conflict {
  constraint: question_v2_constraint!
  update_columns: [question_v2_update_column!]! = []
  where: question_v2_bool_exp
}

"""Ordering options when selecting data from "question_v2"."""
input question_v2_order_by {
  assessment_unit_selected_questions_aggregate: assessment_unit_selected_question_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  created: order_by
  cutoff: order_by
  id: order_by
  lo_id: order_by
  lo_v2: lo_v2_order_by
  question_bundle_questions_aggregate: question_bundle_questions_aggregate_order_by
  statement: order_by
  updated: order_by
}

"""primary key columns input for table: question_v2"""
input question_v2_pk_columns_input {
  id: Int!
}

"""
select columns of table "question_v2"
"""
enum question_v2_select_column {
  """column name"""
  created

  """column name"""
  cutoff

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  statement

  """column name"""
  updated
}

"""
input type for updating data in table "question_v2"
"""
input question_v2_set_input {
  created: timestamptz
  cutoff: numeric
  id: Int
  lo_id: Int
  statement: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type question_v2_stddev_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by stddev() on columns of table "question_v2"
"""
input question_v2_stddev_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate stddev_pop on columns"""
type question_v2_stddev_pop_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by stddev_pop() on columns of table "question_v2"
"""
input question_v2_stddev_pop_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate stddev_samp on columns"""
type question_v2_stddev_samp_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by stddev_samp() on columns of table "question_v2"
"""
input question_v2_stddev_samp_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate sum on columns"""
type question_v2_sum_fields {
  cutoff: numeric
  id: Int
  lo_id: Int
}

"""
order by sum() on columns of table "question_v2"
"""
input question_v2_sum_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""
update columns of table "question_v2"
"""
enum question_v2_update_column {
  """column name"""
  created

  """column name"""
  cutoff

  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  statement

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type question_v2_var_pop_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by var_pop() on columns of table "question_v2"
"""
input question_v2_var_pop_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate var_samp on columns"""
type question_v2_var_samp_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by var_samp() on columns of table "question_v2"
"""
input question_v2_var_samp_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate variance on columns"""
type question_v2_variance_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by variance() on columns of table "question_v2"
"""
input question_v2_variance_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate var_pop on columns"""
type question_var_pop_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by var_pop() on columns of table "question"
"""
input question_var_pop_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate var_samp on columns"""
type question_var_samp_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by var_samp() on columns of table "question"
"""
input question_var_samp_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""aggregate variance on columns"""
type question_variance_fields {
  cutoff: Float
  id: Float
  lo_id: Float
}

"""
order by variance() on columns of table "question"
"""
input question_variance_order_by {
  cutoff: order_by
  id: order_by
  lo_id: order_by
}

"""
columns and relationships of "questions_submission_expanded"
"""
type questions_submission_expanded {
  acad_year: String!
  achievement_level: float8!
  assessment_end: timestamptz
  assessment_start: timestamptz
  assessment_type: String!
  block: String
  cluster: String
  created: timestamptz
  district: String!
  grade: String!
  grade_assessment_id: Int!
  id: Int!
  lo_code: String
  lo_name: String!
  question_id: Int!
  school_session: String!
  school_type: String!
  school_udise: Int!
  student_present: Int!
  students_cleared: Int!
  subject: String
  updated: timestamptz
}

"""
aggregated selection of "questions_submission_expanded"
"""
type questions_submission_expanded_aggregate {
  aggregate: questions_submission_expanded_aggregate_fields
  nodes: [questions_submission_expanded!]!
}

"""
aggregate fields of "questions_submission_expanded"
"""
type questions_submission_expanded_aggregate_fields {
  avg: questions_submission_expanded_avg_fields
  count(columns: [questions_submission_expanded_select_column!], distinct: Boolean): Int!
  max: questions_submission_expanded_max_fields
  min: questions_submission_expanded_min_fields
  stddev: questions_submission_expanded_stddev_fields
  stddev_pop: questions_submission_expanded_stddev_pop_fields
  stddev_samp: questions_submission_expanded_stddev_samp_fields
  sum: questions_submission_expanded_sum_fields
  var_pop: questions_submission_expanded_var_pop_fields
  var_samp: questions_submission_expanded_var_samp_fields
  variance: questions_submission_expanded_variance_fields
}

"""aggregate avg on columns"""
type questions_submission_expanded_avg_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""
Boolean expression to filter rows from the table "questions_submission_expanded". All fields are combined with a logical 'AND'.
"""
input questions_submission_expanded_bool_exp {
  _and: [questions_submission_expanded_bool_exp!]
  _not: questions_submission_expanded_bool_exp
  _or: [questions_submission_expanded_bool_exp!]
  acad_year: String_comparison_exp
  achievement_level: float8_comparison_exp
  assessment_end: timestamptz_comparison_exp
  assessment_start: timestamptz_comparison_exp
  assessment_type: String_comparison_exp
  block: String_comparison_exp
  cluster: String_comparison_exp
  created: timestamptz_comparison_exp
  district: String_comparison_exp
  grade: String_comparison_exp
  grade_assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  lo_code: String_comparison_exp
  lo_name: String_comparison_exp
  question_id: Int_comparison_exp
  school_session: String_comparison_exp
  school_type: String_comparison_exp
  school_udise: Int_comparison_exp
  student_present: Int_comparison_exp
  students_cleared: Int_comparison_exp
  subject: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "questions_submission_expanded"
"""
enum questions_submission_expanded_constraint {
  """unique or primary key constraint"""
  server_questionsubmissionview_pkey
}

"""
input type for incrementing numeric columns in table "questions_submission_expanded"
"""
input questions_submission_expanded_inc_input {
  achievement_level: float8
  grade_assessment_id: Int
  id: Int
  question_id: Int
  school_udise: Int
  student_present: Int
  students_cleared: Int
}

"""
input type for inserting data into table "questions_submission_expanded"
"""
input questions_submission_expanded_insert_input {
  acad_year: String
  achievement_level: float8
  assessment_end: timestamptz
  assessment_start: timestamptz
  assessment_type: String
  block: String
  cluster: String
  created: timestamptz
  district: String
  grade: String
  grade_assessment_id: Int
  id: Int
  lo_code: String
  lo_name: String
  question_id: Int
  school_session: String
  school_type: String
  school_udise: Int
  student_present: Int
  students_cleared: Int
  subject: String
  updated: timestamptz
}

"""aggregate max on columns"""
type questions_submission_expanded_max_fields {
  acad_year: String
  achievement_level: float8
  assessment_end: timestamptz
  assessment_start: timestamptz
  assessment_type: String
  block: String
  cluster: String
  created: timestamptz
  district: String
  grade: String
  grade_assessment_id: Int
  id: Int
  lo_code: String
  lo_name: String
  question_id: Int
  school_session: String
  school_type: String
  school_udise: Int
  student_present: Int
  students_cleared: Int
  subject: String
  updated: timestamptz
}

"""aggregate min on columns"""
type questions_submission_expanded_min_fields {
  acad_year: String
  achievement_level: float8
  assessment_end: timestamptz
  assessment_start: timestamptz
  assessment_type: String
  block: String
  cluster: String
  created: timestamptz
  district: String
  grade: String
  grade_assessment_id: Int
  id: Int
  lo_code: String
  lo_name: String
  question_id: Int
  school_session: String
  school_type: String
  school_udise: Int
  student_present: Int
  students_cleared: Int
  subject: String
  updated: timestamptz
}

"""
response of any mutation on the table "questions_submission_expanded"
"""
type questions_submission_expanded_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [questions_submission_expanded!]!
}

"""
on conflict condition type for table "questions_submission_expanded"
"""
input questions_submission_expanded_on_conflict {
  constraint: questions_submission_expanded_constraint!
  update_columns: [questions_submission_expanded_update_column!]! = []
  where: questions_submission_expanded_bool_exp
}

"""
Ordering options when selecting data from "questions_submission_expanded".
"""
input questions_submission_expanded_order_by {
  acad_year: order_by
  achievement_level: order_by
  assessment_end: order_by
  assessment_start: order_by
  assessment_type: order_by
  block: order_by
  cluster: order_by
  created: order_by
  district: order_by
  grade: order_by
  grade_assessment_id: order_by
  id: order_by
  lo_code: order_by
  lo_name: order_by
  question_id: order_by
  school_session: order_by
  school_type: order_by
  school_udise: order_by
  student_present: order_by
  students_cleared: order_by
  subject: order_by
  updated: order_by
}

"""primary key columns input for table: questions_submission_expanded"""
input questions_submission_expanded_pk_columns_input {
  id: Int!
}

"""
select columns of table "questions_submission_expanded"
"""
enum questions_submission_expanded_select_column {
  """column name"""
  acad_year

  """column name"""
  achievement_level

  """column name"""
  assessment_end

  """column name"""
  assessment_start

  """column name"""
  assessment_type

  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  district

  """column name"""
  grade

  """column name"""
  grade_assessment_id

  """column name"""
  id

  """column name"""
  lo_code

  """column name"""
  lo_name

  """column name"""
  question_id

  """column name"""
  school_session

  """column name"""
  school_type

  """column name"""
  school_udise

  """column name"""
  student_present

  """column name"""
  students_cleared

  """column name"""
  subject

  """column name"""
  updated
}

"""
input type for updating data in table "questions_submission_expanded"
"""
input questions_submission_expanded_set_input {
  acad_year: String
  achievement_level: float8
  assessment_end: timestamptz
  assessment_start: timestamptz
  assessment_type: String
  block: String
  cluster: String
  created: timestamptz
  district: String
  grade: String
  grade_assessment_id: Int
  id: Int
  lo_code: String
  lo_name: String
  question_id: Int
  school_session: String
  school_type: String
  school_udise: Int
  student_present: Int
  students_cleared: Int
  subject: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type questions_submission_expanded_stddev_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""aggregate stddev_pop on columns"""
type questions_submission_expanded_stddev_pop_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""aggregate stddev_samp on columns"""
type questions_submission_expanded_stddev_samp_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""aggregate sum on columns"""
type questions_submission_expanded_sum_fields {
  achievement_level: float8
  grade_assessment_id: Int
  id: Int
  question_id: Int
  school_udise: Int
  student_present: Int
  students_cleared: Int
}

"""
update columns of table "questions_submission_expanded"
"""
enum questions_submission_expanded_update_column {
  """column name"""
  acad_year

  """column name"""
  achievement_level

  """column name"""
  assessment_end

  """column name"""
  assessment_start

  """column name"""
  assessment_type

  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  created

  """column name"""
  district

  """column name"""
  grade

  """column name"""
  grade_assessment_id

  """column name"""
  id

  """column name"""
  lo_code

  """column name"""
  lo_name

  """column name"""
  question_id

  """column name"""
  school_session

  """column name"""
  school_type

  """column name"""
  school_udise

  """column name"""
  student_present

  """column name"""
  students_cleared

  """column name"""
  subject

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type questions_submission_expanded_var_pop_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""aggregate var_samp on columns"""
type questions_submission_expanded_var_samp_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""aggregate variance on columns"""
type questions_submission_expanded_variance_fields {
  achievement_level: Float
  grade_assessment_id: Float
  id: Float
  question_id: Float
  school_udise: Float
  student_present: Float
  students_cleared: Float
}

"""
columns and relationships of "raw_application_daily_active_users"
"""
type raw_application_daily_active_users {
  """"""
  applications_id: uuid!

  """"""
  day: Int!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "raw_application_daily_active_users"
"""
type raw_application_daily_active_users_aggregate {
  """"""
  aggregate: raw_application_daily_active_users_aggregate_fields

  """"""
  nodes: [raw_application_daily_active_users!]!
}

"""
aggregate fields of "raw_application_daily_active_users"
"""
type raw_application_daily_active_users_aggregate_fields {
  """"""
  avg: raw_application_daily_active_users_avg_fields

  """"""
  count(columns: [raw_application_daily_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: raw_application_daily_active_users_max_fields

  """"""
  min: raw_application_daily_active_users_min_fields

  """"""
  stddev: raw_application_daily_active_users_stddev_fields

  """"""
  stddev_pop: raw_application_daily_active_users_stddev_pop_fields

  """"""
  stddev_samp: raw_application_daily_active_users_stddev_samp_fields

  """"""
  sum: raw_application_daily_active_users_sum_fields

  """"""
  var_pop: raw_application_daily_active_users_var_pop_fields

  """"""
  var_samp: raw_application_daily_active_users_var_samp_fields

  """"""
  variance: raw_application_daily_active_users_variance_fields
}

"""aggregate avg on columns"""
type raw_application_daily_active_users_avg_fields {
  """"""
  day: Float
}

"""
Boolean expression to filter rows from the table
"raw_application_daily_active_users". All fields are combined with a logical 'AND'.
"""
input raw_application_daily_active_users_bool_exp {
  """"""
  _and: [raw_application_daily_active_users_bool_exp!]

  """"""
  _not: raw_application_daily_active_users_bool_exp

  """"""
  _or: [raw_application_daily_active_users_bool_exp!]

  """"""
  applications_id: uuid_comparison_exp

  """"""
  day: Int_comparison_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "raw_application_daily_active_users"
"""
enum raw_application_daily_active_users_constraint {
  """unique or primary key constraint"""
  raw_application_daily_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "raw_application_daily_active_users"
"""
input raw_application_daily_active_users_inc_input {
  """"""
  day: Int
}

"""
input type for inserting data into table "raw_application_daily_active_users"
"""
input raw_application_daily_active_users_insert_input {
  """"""
  applications_id: uuid

  """"""
  day: Int

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type raw_application_daily_active_users_max_fields {
  """"""
  applications_id: uuid

  """"""
  day: Int

  """"""
  users_id: uuid
}

"""aggregate min on columns"""
type raw_application_daily_active_users_min_fields {
  """"""
  applications_id: uuid

  """"""
  day: Int

  """"""
  users_id: uuid
}

"""
response of any mutation on the table "raw_application_daily_active_users"
"""
type raw_application_daily_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [raw_application_daily_active_users!]!
}

"""
on conflict condition type for table "raw_application_daily_active_users"
"""
input raw_application_daily_active_users_on_conflict {
  """"""
  constraint: raw_application_daily_active_users_constraint!

  """"""
  update_columns: [raw_application_daily_active_users_update_column!]!

  """"""
  where: raw_application_daily_active_users_bool_exp
}

"""
Ordering options when selecting data from "raw_application_daily_active_users".
"""
input raw_application_daily_active_users_order_by {
  """"""
  applications_id: order_by

  """"""
  day: order_by

  """"""
  users_id: order_by
}

"""
select columns of table "raw_application_daily_active_users"
"""
enum raw_application_daily_active_users_select_column {
  """column name"""
  applications_id

  """column name"""
  day

  """column name"""
  users_id
}

"""
input type for updating data in table "raw_application_daily_active_users"
"""
input raw_application_daily_active_users_set_input {
  """"""
  applications_id: uuid

  """"""
  day: Int

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type raw_application_daily_active_users_stddev_fields {
  """"""
  day: Float
}

"""aggregate stddev_pop on columns"""
type raw_application_daily_active_users_stddev_pop_fields {
  """"""
  day: Float
}

"""aggregate stddev_samp on columns"""
type raw_application_daily_active_users_stddev_samp_fields {
  """"""
  day: Float
}

"""aggregate sum on columns"""
type raw_application_daily_active_users_sum_fields {
  """"""
  day: Int
}

"""
update columns of table "raw_application_daily_active_users"
"""
enum raw_application_daily_active_users_update_column {
  """column name"""
  applications_id

  """column name"""
  day

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type raw_application_daily_active_users_var_pop_fields {
  """"""
  day: Float
}

"""aggregate var_samp on columns"""
type raw_application_daily_active_users_var_samp_fields {
  """"""
  day: Float
}

"""aggregate variance on columns"""
type raw_application_daily_active_users_variance_fields {
  """"""
  day: Float
}

"""
columns and relationships of "raw_application_monthly_active_users"
"""
type raw_application_monthly_active_users {
  """"""
  applications_id: uuid!

  """"""
  month: Int!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "raw_application_monthly_active_users"
"""
type raw_application_monthly_active_users_aggregate {
  """"""
  aggregate: raw_application_monthly_active_users_aggregate_fields

  """"""
  nodes: [raw_application_monthly_active_users!]!
}

"""
aggregate fields of "raw_application_monthly_active_users"
"""
type raw_application_monthly_active_users_aggregate_fields {
  """"""
  avg: raw_application_monthly_active_users_avg_fields

  """"""
  count(columns: [raw_application_monthly_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: raw_application_monthly_active_users_max_fields

  """"""
  min: raw_application_monthly_active_users_min_fields

  """"""
  stddev: raw_application_monthly_active_users_stddev_fields

  """"""
  stddev_pop: raw_application_monthly_active_users_stddev_pop_fields

  """"""
  stddev_samp: raw_application_monthly_active_users_stddev_samp_fields

  """"""
  sum: raw_application_monthly_active_users_sum_fields

  """"""
  var_pop: raw_application_monthly_active_users_var_pop_fields

  """"""
  var_samp: raw_application_monthly_active_users_var_samp_fields

  """"""
  variance: raw_application_monthly_active_users_variance_fields
}

"""aggregate avg on columns"""
type raw_application_monthly_active_users_avg_fields {
  """"""
  month: Float
}

"""
Boolean expression to filter rows from the table
"raw_application_monthly_active_users". All fields are combined with a logical 'AND'.
"""
input raw_application_monthly_active_users_bool_exp {
  """"""
  _and: [raw_application_monthly_active_users_bool_exp!]

  """"""
  _not: raw_application_monthly_active_users_bool_exp

  """"""
  _or: [raw_application_monthly_active_users_bool_exp!]

  """"""
  applications_id: uuid_comparison_exp

  """"""
  month: Int_comparison_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "raw_application_monthly_active_users"
"""
enum raw_application_monthly_active_users_constraint {
  """unique or primary key constraint"""
  raw_application_monthly_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "raw_application_monthly_active_users"
"""
input raw_application_monthly_active_users_inc_input {
  """"""
  month: Int
}

"""
input type for inserting data into table "raw_application_monthly_active_users"
"""
input raw_application_monthly_active_users_insert_input {
  """"""
  applications_id: uuid

  """"""
  month: Int

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type raw_application_monthly_active_users_max_fields {
  """"""
  applications_id: uuid

  """"""
  month: Int

  """"""
  users_id: uuid
}

"""aggregate min on columns"""
type raw_application_monthly_active_users_min_fields {
  """"""
  applications_id: uuid

  """"""
  month: Int

  """"""
  users_id: uuid
}

"""
response of any mutation on the table "raw_application_monthly_active_users"
"""
type raw_application_monthly_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [raw_application_monthly_active_users!]!
}

"""
on conflict condition type for table "raw_application_monthly_active_users"
"""
input raw_application_monthly_active_users_on_conflict {
  """"""
  constraint: raw_application_monthly_active_users_constraint!

  """"""
  update_columns: [raw_application_monthly_active_users_update_column!]!

  """"""
  where: raw_application_monthly_active_users_bool_exp
}

"""
Ordering options when selecting data from "raw_application_monthly_active_users".
"""
input raw_application_monthly_active_users_order_by {
  """"""
  applications_id: order_by

  """"""
  month: order_by

  """"""
  users_id: order_by
}

"""
select columns of table "raw_application_monthly_active_users"
"""
enum raw_application_monthly_active_users_select_column {
  """column name"""
  applications_id

  """column name"""
  month

  """column name"""
  users_id
}

"""
input type for updating data in table "raw_application_monthly_active_users"
"""
input raw_application_monthly_active_users_set_input {
  """"""
  applications_id: uuid

  """"""
  month: Int

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type raw_application_monthly_active_users_stddev_fields {
  """"""
  month: Float
}

"""aggregate stddev_pop on columns"""
type raw_application_monthly_active_users_stddev_pop_fields {
  """"""
  month: Float
}

"""aggregate stddev_samp on columns"""
type raw_application_monthly_active_users_stddev_samp_fields {
  """"""
  month: Float
}

"""aggregate sum on columns"""
type raw_application_monthly_active_users_sum_fields {
  """"""
  month: Int
}

"""
update columns of table "raw_application_monthly_active_users"
"""
enum raw_application_monthly_active_users_update_column {
  """column name"""
  applications_id

  """column name"""
  month

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type raw_application_monthly_active_users_var_pop_fields {
  """"""
  month: Float
}

"""aggregate var_samp on columns"""
type raw_application_monthly_active_users_var_samp_fields {
  """"""
  month: Float
}

"""aggregate variance on columns"""
type raw_application_monthly_active_users_variance_fields {
  """"""
  month: Float
}

"""
columns and relationships of "raw_global_daily_active_users"
"""
type raw_global_daily_active_users {
  """"""
  day: Int!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "raw_global_daily_active_users"
"""
type raw_global_daily_active_users_aggregate {
  """"""
  aggregate: raw_global_daily_active_users_aggregate_fields

  """"""
  nodes: [raw_global_daily_active_users!]!
}

"""
aggregate fields of "raw_global_daily_active_users"
"""
type raw_global_daily_active_users_aggregate_fields {
  """"""
  avg: raw_global_daily_active_users_avg_fields

  """"""
  count(columns: [raw_global_daily_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: raw_global_daily_active_users_max_fields

  """"""
  min: raw_global_daily_active_users_min_fields

  """"""
  stddev: raw_global_daily_active_users_stddev_fields

  """"""
  stddev_pop: raw_global_daily_active_users_stddev_pop_fields

  """"""
  stddev_samp: raw_global_daily_active_users_stddev_samp_fields

  """"""
  sum: raw_global_daily_active_users_sum_fields

  """"""
  var_pop: raw_global_daily_active_users_var_pop_fields

  """"""
  var_samp: raw_global_daily_active_users_var_samp_fields

  """"""
  variance: raw_global_daily_active_users_variance_fields
}

"""aggregate avg on columns"""
type raw_global_daily_active_users_avg_fields {
  """"""
  day: Float
}

"""
Boolean expression to filter rows from the table
"raw_global_daily_active_users". All fields are combined with a logical 'AND'.
"""
input raw_global_daily_active_users_bool_exp {
  """"""
  _and: [raw_global_daily_active_users_bool_exp!]

  """"""
  _not: raw_global_daily_active_users_bool_exp

  """"""
  _or: [raw_global_daily_active_users_bool_exp!]

  """"""
  day: Int_comparison_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "raw_global_daily_active_users"
"""
enum raw_global_daily_active_users_constraint {
  """unique or primary key constraint"""
  raw_global_daily_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "raw_global_daily_active_users"
"""
input raw_global_daily_active_users_inc_input {
  """"""
  day: Int
}

"""
input type for inserting data into table "raw_global_daily_active_users"
"""
input raw_global_daily_active_users_insert_input {
  """"""
  day: Int

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type raw_global_daily_active_users_max_fields {
  """"""
  day: Int

  """"""
  users_id: uuid
}

"""aggregate min on columns"""
type raw_global_daily_active_users_min_fields {
  """"""
  day: Int

  """"""
  users_id: uuid
}

"""
response of any mutation on the table "raw_global_daily_active_users"
"""
type raw_global_daily_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [raw_global_daily_active_users!]!
}

"""
on conflict condition type for table "raw_global_daily_active_users"
"""
input raw_global_daily_active_users_on_conflict {
  """"""
  constraint: raw_global_daily_active_users_constraint!

  """"""
  update_columns: [raw_global_daily_active_users_update_column!]!

  """"""
  where: raw_global_daily_active_users_bool_exp
}

"""
Ordering options when selecting data from "raw_global_daily_active_users".
"""
input raw_global_daily_active_users_order_by {
  """"""
  day: order_by

  """"""
  users_id: order_by
}

"""
select columns of table "raw_global_daily_active_users"
"""
enum raw_global_daily_active_users_select_column {
  """column name"""
  day

  """column name"""
  users_id
}

"""
input type for updating data in table "raw_global_daily_active_users"
"""
input raw_global_daily_active_users_set_input {
  """"""
  day: Int

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type raw_global_daily_active_users_stddev_fields {
  """"""
  day: Float
}

"""aggregate stddev_pop on columns"""
type raw_global_daily_active_users_stddev_pop_fields {
  """"""
  day: Float
}

"""aggregate stddev_samp on columns"""
type raw_global_daily_active_users_stddev_samp_fields {
  """"""
  day: Float
}

"""aggregate sum on columns"""
type raw_global_daily_active_users_sum_fields {
  """"""
  day: Int
}

"""
update columns of table "raw_global_daily_active_users"
"""
enum raw_global_daily_active_users_update_column {
  """column name"""
  day

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type raw_global_daily_active_users_var_pop_fields {
  """"""
  day: Float
}

"""aggregate var_samp on columns"""
type raw_global_daily_active_users_var_samp_fields {
  """"""
  day: Float
}

"""aggregate variance on columns"""
type raw_global_daily_active_users_variance_fields {
  """"""
  day: Float
}

"""
columns and relationships of "raw_global_monthly_active_users"
"""
type raw_global_monthly_active_users {
  """"""
  month: Int!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "raw_global_monthly_active_users"
"""
type raw_global_monthly_active_users_aggregate {
  """"""
  aggregate: raw_global_monthly_active_users_aggregate_fields

  """"""
  nodes: [raw_global_monthly_active_users!]!
}

"""
aggregate fields of "raw_global_monthly_active_users"
"""
type raw_global_monthly_active_users_aggregate_fields {
  """"""
  avg: raw_global_monthly_active_users_avg_fields

  """"""
  count(columns: [raw_global_monthly_active_users_select_column!], distinct: Boolean): Int!

  """"""
  max: raw_global_monthly_active_users_max_fields

  """"""
  min: raw_global_monthly_active_users_min_fields

  """"""
  stddev: raw_global_monthly_active_users_stddev_fields

  """"""
  stddev_pop: raw_global_monthly_active_users_stddev_pop_fields

  """"""
  stddev_samp: raw_global_monthly_active_users_stddev_samp_fields

  """"""
  sum: raw_global_monthly_active_users_sum_fields

  """"""
  var_pop: raw_global_monthly_active_users_var_pop_fields

  """"""
  var_samp: raw_global_monthly_active_users_var_samp_fields

  """"""
  variance: raw_global_monthly_active_users_variance_fields
}

"""aggregate avg on columns"""
type raw_global_monthly_active_users_avg_fields {
  """"""
  month: Float
}

"""
Boolean expression to filter rows from the table
"raw_global_monthly_active_users". All fields are combined with a logical 'AND'.
"""
input raw_global_monthly_active_users_bool_exp {
  """"""
  _and: [raw_global_monthly_active_users_bool_exp!]

  """"""
  _not: raw_global_monthly_active_users_bool_exp

  """"""
  _or: [raw_global_monthly_active_users_bool_exp!]

  """"""
  month: Int_comparison_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "raw_global_monthly_active_users"
"""
enum raw_global_monthly_active_users_constraint {
  """unique or primary key constraint"""
  raw_global_monthly_active_users_uk_1
}

"""
input type for incrementing numeric columns in table "raw_global_monthly_active_users"
"""
input raw_global_monthly_active_users_inc_input {
  """"""
  month: Int
}

"""
input type for inserting data into table "raw_global_monthly_active_users"
"""
input raw_global_monthly_active_users_insert_input {
  """"""
  month: Int

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type raw_global_monthly_active_users_max_fields {
  """"""
  month: Int

  """"""
  users_id: uuid
}

"""aggregate min on columns"""
type raw_global_monthly_active_users_min_fields {
  """"""
  month: Int

  """"""
  users_id: uuid
}

"""
response of any mutation on the table "raw_global_monthly_active_users"
"""
type raw_global_monthly_active_users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [raw_global_monthly_active_users!]!
}

"""
on conflict condition type for table "raw_global_monthly_active_users"
"""
input raw_global_monthly_active_users_on_conflict {
  """"""
  constraint: raw_global_monthly_active_users_constraint!

  """"""
  update_columns: [raw_global_monthly_active_users_update_column!]!

  """"""
  where: raw_global_monthly_active_users_bool_exp
}

"""
Ordering options when selecting data from "raw_global_monthly_active_users".
"""
input raw_global_monthly_active_users_order_by {
  """"""
  month: order_by

  """"""
  users_id: order_by
}

"""
select columns of table "raw_global_monthly_active_users"
"""
enum raw_global_monthly_active_users_select_column {
  """column name"""
  month

  """column name"""
  users_id
}

"""
input type for updating data in table "raw_global_monthly_active_users"
"""
input raw_global_monthly_active_users_set_input {
  """"""
  month: Int

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type raw_global_monthly_active_users_stddev_fields {
  """"""
  month: Float
}

"""aggregate stddev_pop on columns"""
type raw_global_monthly_active_users_stddev_pop_fields {
  """"""
  month: Float
}

"""aggregate stddev_samp on columns"""
type raw_global_monthly_active_users_stddev_samp_fields {
  """"""
  month: Float
}

"""aggregate sum on columns"""
type raw_global_monthly_active_users_sum_fields {
  """"""
  month: Int
}

"""
update columns of table "raw_global_monthly_active_users"
"""
enum raw_global_monthly_active_users_update_column {
  """column name"""
  month

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type raw_global_monthly_active_users_var_pop_fields {
  """"""
  month: Float
}

"""aggregate var_samp on columns"""
type raw_global_monthly_active_users_var_samp_fields {
  """"""
  month: Float
}

"""aggregate variance on columns"""
type raw_global_monthly_active_users_variance_fields {
  """"""
  month: Float
}

"""
columns and relationships of "raw_logins"
"""
type raw_logins {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid

  """"""
  instant: bigint!

  """"""
  ip_address: String

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "raw_logins"
"""
type raw_logins_aggregate {
  """"""
  aggregate: raw_logins_aggregate_fields

  """"""
  nodes: [raw_logins!]!
}

"""
aggregate fields of "raw_logins"
"""
type raw_logins_aggregate_fields {
  """"""
  avg: raw_logins_avg_fields

  """"""
  count(columns: [raw_logins_select_column!], distinct: Boolean): Int!

  """"""
  max: raw_logins_max_fields

  """"""
  min: raw_logins_min_fields

  """"""
  stddev: raw_logins_stddev_fields

  """"""
  stddev_pop: raw_logins_stddev_pop_fields

  """"""
  stddev_samp: raw_logins_stddev_samp_fields

  """"""
  sum: raw_logins_sum_fields

  """"""
  var_pop: raw_logins_var_pop_fields

  """"""
  var_samp: raw_logins_var_samp_fields

  """"""
  variance: raw_logins_variance_fields
}

"""
order by aggregate values of table "raw_logins"
"""
input raw_logins_aggregate_order_by {
  """"""
  avg: raw_logins_avg_order_by

  """"""
  count: order_by

  """"""
  max: raw_logins_max_order_by

  """"""
  min: raw_logins_min_order_by

  """"""
  stddev: raw_logins_stddev_order_by

  """"""
  stddev_pop: raw_logins_stddev_pop_order_by

  """"""
  stddev_samp: raw_logins_stddev_samp_order_by

  """"""
  sum: raw_logins_sum_order_by

  """"""
  var_pop: raw_logins_var_pop_order_by

  """"""
  var_samp: raw_logins_var_samp_order_by

  """"""
  variance: raw_logins_variance_order_by
}

"""
input type for inserting array relation for remote table "raw_logins"
"""
input raw_logins_arr_rel_insert_input {
  """"""
  data: [raw_logins_insert_input!]!
}

"""aggregate avg on columns"""
type raw_logins_avg_fields {
  """"""
  instant: Float
}

"""
order by avg() on columns of table "raw_logins"
"""
input raw_logins_avg_order_by {
  """"""
  instant: order_by
}

"""
Boolean expression to filter rows from the table "raw_logins". All fields are combined with a logical 'AND'.
"""
input raw_logins_bool_exp {
  """"""
  _and: [raw_logins_bool_exp!]

  """"""
  _not: raw_logins_bool_exp

  """"""
  _or: [raw_logins_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  instant: bigint_comparison_exp

  """"""
  ip_address: String_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
input type for incrementing numeric columns in table "raw_logins"
"""
input raw_logins_inc_input {
  """"""
  instant: bigint
}

"""
input type for inserting data into table "raw_logins"
"""
input raw_logins_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  instant: bigint

  """"""
  ip_address: String

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type raw_logins_max_fields {
  """"""
  applications_id: uuid

  """"""
  instant: bigint

  """"""
  ip_address: String

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "raw_logins"
"""
input raw_logins_max_order_by {
  """"""
  applications_id: order_by

  """"""
  instant: order_by

  """"""
  ip_address: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type raw_logins_min_fields {
  """"""
  applications_id: uuid

  """"""
  instant: bigint

  """"""
  ip_address: String

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "raw_logins"
"""
input raw_logins_min_order_by {
  """"""
  applications_id: order_by

  """"""
  instant: order_by

  """"""
  ip_address: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "raw_logins"
"""
type raw_logins_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [raw_logins!]!
}

"""Ordering options when selecting data from "raw_logins"."""
input raw_logins_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  instant: order_by

  """"""
  ip_address: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""
select columns of table "raw_logins"
"""
enum raw_logins_select_column {
  """column name"""
  applications_id

  """column name"""
  instant

  """column name"""
  ip_address

  """column name"""
  users_id
}

"""
input type for updating data in table "raw_logins"
"""
input raw_logins_set_input {
  """"""
  applications_id: uuid

  """"""
  instant: bigint

  """"""
  ip_address: String

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type raw_logins_stddev_fields {
  """"""
  instant: Float
}

"""
order by stddev() on columns of table "raw_logins"
"""
input raw_logins_stddev_order_by {
  """"""
  instant: order_by
}

"""aggregate stddev_pop on columns"""
type raw_logins_stddev_pop_fields {
  """"""
  instant: Float
}

"""
order by stddev_pop() on columns of table "raw_logins"
"""
input raw_logins_stddev_pop_order_by {
  """"""
  instant: order_by
}

"""aggregate stddev_samp on columns"""
type raw_logins_stddev_samp_fields {
  """"""
  instant: Float
}

"""
order by stddev_samp() on columns of table "raw_logins"
"""
input raw_logins_stddev_samp_order_by {
  """"""
  instant: order_by
}

"""aggregate sum on columns"""
type raw_logins_sum_fields {
  """"""
  instant: bigint
}

"""
order by sum() on columns of table "raw_logins"
"""
input raw_logins_sum_order_by {
  """"""
  instant: order_by
}

"""aggregate var_pop on columns"""
type raw_logins_var_pop_fields {
  """"""
  instant: Float
}

"""
order by var_pop() on columns of table "raw_logins"
"""
input raw_logins_var_pop_order_by {
  """"""
  instant: order_by
}

"""aggregate var_samp on columns"""
type raw_logins_var_samp_fields {
  """"""
  instant: Float
}

"""
order by var_samp() on columns of table "raw_logins"
"""
input raw_logins_var_samp_order_by {
  """"""
  instant: order_by
}

"""aggregate variance on columns"""
type raw_logins_variance_fields {
  """"""
  instant: Float
}

"""
order by variance() on columns of table "raw_logins"
"""
input raw_logins_variance_order_by {
  """"""
  instant: order_by
}

"""
columns and relationships of "refresh_tokens"
"""
type refresh_tokens {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid

  """"""
  data: String!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  start_instant: bigint!

  """"""
  token: String!

  """An object relationship"""
  user: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "refresh_tokens"
"""
type refresh_tokens_aggregate {
  """"""
  aggregate: refresh_tokens_aggregate_fields

  """"""
  nodes: [refresh_tokens!]!
}

"""
aggregate fields of "refresh_tokens"
"""
type refresh_tokens_aggregate_fields {
  """"""
  avg: refresh_tokens_avg_fields

  """"""
  count(columns: [refresh_tokens_select_column!], distinct: Boolean): Int!

  """"""
  max: refresh_tokens_max_fields

  """"""
  min: refresh_tokens_min_fields

  """"""
  stddev: refresh_tokens_stddev_fields

  """"""
  stddev_pop: refresh_tokens_stddev_pop_fields

  """"""
  stddev_samp: refresh_tokens_stddev_samp_fields

  """"""
  sum: refresh_tokens_sum_fields

  """"""
  var_pop: refresh_tokens_var_pop_fields

  """"""
  var_samp: refresh_tokens_var_samp_fields

  """"""
  variance: refresh_tokens_variance_fields
}

"""
order by aggregate values of table "refresh_tokens"
"""
input refresh_tokens_aggregate_order_by {
  """"""
  avg: refresh_tokens_avg_order_by

  """"""
  count: order_by

  """"""
  max: refresh_tokens_max_order_by

  """"""
  min: refresh_tokens_min_order_by

  """"""
  stddev: refresh_tokens_stddev_order_by

  """"""
  stddev_pop: refresh_tokens_stddev_pop_order_by

  """"""
  stddev_samp: refresh_tokens_stddev_samp_order_by

  """"""
  sum: refresh_tokens_sum_order_by

  """"""
  var_pop: refresh_tokens_var_pop_order_by

  """"""
  var_samp: refresh_tokens_var_samp_order_by

  """"""
  variance: refresh_tokens_variance_order_by
}

"""
input type for inserting array relation for remote table "refresh_tokens"
"""
input refresh_tokens_arr_rel_insert_input {
  """"""
  data: [refresh_tokens_insert_input!]!

  """on conflict condition"""
  on_conflict: refresh_tokens_on_conflict
}

"""aggregate avg on columns"""
type refresh_tokens_avg_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by avg() on columns of table "refresh_tokens"
"""
input refresh_tokens_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""
Boolean expression to filter rows from the table "refresh_tokens". All fields are combined with a logical 'AND'.
"""
input refresh_tokens_bool_exp {
  """"""
  _and: [refresh_tokens_bool_exp!]

  """"""
  _not: refresh_tokens_bool_exp

  """"""
  _or: [refresh_tokens_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  start_instant: bigint_comparison_exp

  """"""
  token: String_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "refresh_tokens"
"""
enum refresh_tokens_constraint {
  """unique or primary key constraint"""
  refresh_tokens_pkey1

  """unique or primary key constraint"""
  refresh_tokens_uk_1
}

"""
input type for incrementing numeric columns in table "refresh_tokens"
"""
input refresh_tokens_inc_input {
  """"""
  insert_instant: bigint

  """"""
  start_instant: bigint
}

"""
input type for inserting data into table "refresh_tokens"
"""
input refresh_tokens_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  start_instant: bigint

  """"""
  token: String

  """"""
  user: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type refresh_tokens_max_fields {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  start_instant: bigint

  """"""
  token: String

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "refresh_tokens"
"""
input refresh_tokens_max_order_by {
  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by

  """"""
  token: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type refresh_tokens_min_fields {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  start_instant: bigint

  """"""
  token: String

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "refresh_tokens"
"""
input refresh_tokens_min_order_by {
  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by

  """"""
  token: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "refresh_tokens"
"""
type refresh_tokens_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [refresh_tokens!]!
}

"""
on conflict condition type for table "refresh_tokens"
"""
input refresh_tokens_on_conflict {
  """"""
  constraint: refresh_tokens_constraint!

  """"""
  update_columns: [refresh_tokens_update_column!]!

  """"""
  where: refresh_tokens_bool_exp
}

"""Ordering options when selecting data from "refresh_tokens"."""
input refresh_tokens_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by

  """"""
  token: order_by

  """"""
  user: users_order_by

  """"""
  users_id: order_by
}

"""primary key columns input for table: refresh_tokens"""
input refresh_tokens_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "refresh_tokens"
"""
enum refresh_tokens_select_column {
  """column name"""
  applications_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  start_instant

  """column name"""
  token

  """column name"""
  users_id
}

"""
input type for updating data in table "refresh_tokens"
"""
input refresh_tokens_set_input {
  """"""
  applications_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  start_instant: bigint

  """"""
  token: String

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type refresh_tokens_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by stddev() on columns of table "refresh_tokens"
"""
input refresh_tokens_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""aggregate stddev_pop on columns"""
type refresh_tokens_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by stddev_pop() on columns of table "refresh_tokens"
"""
input refresh_tokens_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""aggregate stddev_samp on columns"""
type refresh_tokens_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by stddev_samp() on columns of table "refresh_tokens"
"""
input refresh_tokens_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""aggregate sum on columns"""
type refresh_tokens_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  start_instant: bigint
}

"""
order by sum() on columns of table "refresh_tokens"
"""
input refresh_tokens_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""
update columns of table "refresh_tokens"
"""
enum refresh_tokens_update_column {
  """column name"""
  applications_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  start_instant

  """column name"""
  token

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type refresh_tokens_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by var_pop() on columns of table "refresh_tokens"
"""
input refresh_tokens_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""aggregate var_samp on columns"""
type refresh_tokens_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by var_samp() on columns of table "refresh_tokens"
"""
input refresh_tokens_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""aggregate variance on columns"""
type refresh_tokens_variance_fields {
  """"""
  insert_instant: Float

  """"""
  start_instant: Float
}

"""
order by variance() on columns of table "refresh_tokens"
"""
input refresh_tokens_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  start_instant: order_by
}

"""
columns and relationships of "sample_test"
"""
type sample_test {
  count: Int!
  id: Int!
  name: String!
}

"""
aggregated selection of "sample_test"
"""
type sample_test_aggregate {
  aggregate: sample_test_aggregate_fields
  nodes: [sample_test!]!
}

"""
aggregate fields of "sample_test"
"""
type sample_test_aggregate_fields {
  avg: sample_test_avg_fields
  count(columns: [sample_test_select_column!], distinct: Boolean): Int!
  max: sample_test_max_fields
  min: sample_test_min_fields
  stddev: sample_test_stddev_fields
  stddev_pop: sample_test_stddev_pop_fields
  stddev_samp: sample_test_stddev_samp_fields
  sum: sample_test_sum_fields
  var_pop: sample_test_var_pop_fields
  var_samp: sample_test_var_samp_fields
  variance: sample_test_variance_fields
}

"""aggregate avg on columns"""
type sample_test_avg_fields {
  count: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "sample_test". All fields are combined with a logical 'AND'.
"""
input sample_test_bool_exp {
  _and: [sample_test_bool_exp!]
  _not: sample_test_bool_exp
  _or: [sample_test_bool_exp!]
  count: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "sample_test"
"""
enum sample_test_constraint {
  """unique or primary key constraint"""
  sample_test_pkey
}

"""
input type for incrementing numeric columns in table "sample_test"
"""
input sample_test_inc_input {
  count: Int
  id: Int
}

"""
input type for inserting data into table "sample_test"
"""
input sample_test_insert_input {
  count: Int
  id: Int
  name: String
}

"""aggregate max on columns"""
type sample_test_max_fields {
  count: Int
  id: Int
  name: String
}

"""aggregate min on columns"""
type sample_test_min_fields {
  count: Int
  id: Int
  name: String
}

"""
response of any mutation on the table "sample_test"
"""
type sample_test_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [sample_test!]!
}

"""
on conflict condition type for table "sample_test"
"""
input sample_test_on_conflict {
  constraint: sample_test_constraint!
  update_columns: [sample_test_update_column!]! = []
  where: sample_test_bool_exp
}

"""Ordering options when selecting data from "sample_test"."""
input sample_test_order_by {
  count: order_by
  id: order_by
  name: order_by
}

"""primary key columns input for table: sample_test"""
input sample_test_pk_columns_input {
  id: Int!
}

"""
select columns of table "sample_test"
"""
enum sample_test_select_column {
  """column name"""
  count

  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "sample_test"
"""
input sample_test_set_input {
  count: Int
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type sample_test_stddev_fields {
  count: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type sample_test_stddev_pop_fields {
  count: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type sample_test_stddev_samp_fields {
  count: Float
  id: Float
}

"""aggregate sum on columns"""
type sample_test_sum_fields {
  count: Int
  id: Int
}

"""
update columns of table "sample_test"
"""
enum sample_test_update_column {
  """column name"""
  count

  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type sample_test_var_pop_fields {
  count: Float
  id: Float
}

"""aggregate var_samp on columns"""
type sample_test_var_samp_fields {
  count: Float
  id: Float
}

"""aggregate variance on columns"""
type sample_test_variance_fields {
  count: Float
  id: Float
}

"""
columns and relationships of "school"
"""
type school {
  """An array relationship"""
  assessment_au_lo_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): [assessment_au_lo_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_lo_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): assessment_au_lo_aggregate_submission_aggregate!

  """An array relationship"""
  assessment_au_question_aggregate_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): [assessment_au_question_aggregate_submission!]!

  """An aggregate relationship"""
  assessment_au_question_aggregate_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): assessment_au_question_aggregate_submission_aggregate!

  """An array relationship"""
  assessment_cache_v5s(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): [assessment_cache_v5!]!

  """An aggregate relationship"""
  assessment_cache_v5s_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): assessment_cache_v5_aggregate!

  """An array relationship"""
  assessment_caches(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): [assessment_cache!]!

  """An aggregate relationship"""
  assessment_caches_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): assessment_cache_aggregate!

  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!

  """An array relationship"""
  assessment_units(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): [assessment_unit!]!

  """An aggregate relationship"""
  assessment_units_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): assessment_unit_aggregate!

  """An array relationship"""
  attendance_teachers(
    """distinct select on columns"""
    distinct_on: [attendance_teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_teacher_order_by!]

    """filter the rows returned"""
    where: attendance_teacher_bool_exp
  ): [attendance_teacher!]!

  """An aggregate relationship"""
  attendance_teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_teacher_order_by!]

    """filter the rows returned"""
    where: attendance_teacher_bool_exp
  ): attendance_teacher_aggregate!

  """An array relationship"""
  attendances(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): [attendance!]!

  """An aggregate relationship"""
  attendances_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): attendance_aggregate!

  """An array relationship"""
  celery_duplicate_removes(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): [celery_duplicate_remove!]!

  """An aggregate relationship"""
  celery_duplicate_removes_aggregate(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): celery_duplicate_remove_aggregate!

  """An array relationship"""
  class_level_component_submissions(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): [class_level_component_submission!]!

  """An aggregate relationship"""
  class_level_component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): class_level_component_submission_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!

  """An array relationship"""
  component_submissions(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): [component_submission!]!

  """An aggregate relationship"""
  component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): component_submission_aggregate!

  """An array relationship"""
  corporate_donor_devices(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): [corporate_donor_devices!]!

  """An aggregate relationship"""
  corporate_donor_devices_aggregate(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): corporate_donor_devices_aggregate!

  """An array relationship"""
  device_donation_donors(
    """distinct select on columns"""
    distinct_on: [device_donation_donor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_donor_order_by!]

    """filter the rows returned"""
    where: device_donation_donor_bool_exp
  ): [device_donation_donor!]!

  """An aggregate relationship"""
  device_donation_donors_aggregate(
    """distinct select on columns"""
    distinct_on: [device_donation_donor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_donor_order_by!]

    """filter the rows returned"""
    where: device_donation_donor_bool_exp
  ): device_donation_donor_aggregate!

  """An array relationship"""
  device_verification_records(
    """distinct select on columns"""
    distinct_on: [device_verification_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_verification_records_order_by!]

    """filter the rows returned"""
    where: device_verification_records_bool_exp
  ): [device_verification_records!]!

  """An aggregate relationship"""
  device_verification_records_aggregate(
    """distinct select on columns"""
    distinct_on: [device_verification_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_verification_records_order_by!]

    """filter the rows returned"""
    where: device_verification_records_bool_exp
  ): device_verification_records_aggregate!
  enroll_count: Int

  """An array relationship"""
  enrollments(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): [enrollment!]!

  """An aggregate relationship"""
  enrollments_aggregate(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): enrollment_aggregate!

  """An array relationship"""
  grade_assessments(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): [grade_assessment!]!

  """An aggregate relationship"""
  grade_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): grade_assessment_aggregate!
  id: Int!
  is_active: Boolean!
  latitude: float8

  """An array relationship"""
  lo_submissions(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): [lo_submission!]!

  """An aggregate relationship"""
  lo_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): lo_submission_aggregate!

  """An object relationship"""
  location: location
  location_id: Int
  longitude: float8

  """An array relationship"""
  mapping_submissions(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): [mapping_submission!]!

  """An aggregate relationship"""
  mapping_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): mapping_submission_aggregate!
  name: String

  """An array relationship"""
  question_submissions(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): [question_submission!]!

  """An aggregate relationship"""
  question_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): question_submission_aggregate!

  """An array relationship"""
  school_caches(
    """distinct select on columns"""
    distinct_on: [school_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_cache_order_by!]

    """filter the rows returned"""
    where: school_cache_bool_exp
  ): [school_cache!]!

  """An aggregate relationship"""
  school_caches_aggregate(
    """distinct select on columns"""
    distinct_on: [school_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_cache_order_by!]

    """filter the rows returned"""
    where: school_cache_bool_exp
  ): school_cache_aggregate!

  """An array relationship"""
  school_grades(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): [school_grade!]!

  """An aggregate relationship"""
  school_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): school_grade_aggregate!
  session: String!

  """An array relationship"""
  ss_school_allocation_data(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): [ss_school_allocation_data!]!

  """An aggregate relationship"""
  ss_school_allocation_data_aggregate(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): ss_school_allocation_data_aggregate!

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An array relationship"""
  students(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """An aggregate relationship"""
  students_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!

  """An array relationship"""
  subject_submissions(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """An aggregate relationship"""
  subject_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!

  """An array relationship"""
  teacher_registration_compliances(
    """distinct select on columns"""
    distinct_on: [teacher_registration_compliance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_registration_compliance_order_by!]

    """filter the rows returned"""
    where: teacher_registration_compliance_bool_exp
  ): [teacher_registration_compliance!]!

  """An aggregate relationship"""
  teacher_registration_compliances_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_registration_compliance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_registration_compliance_order_by!]

    """filter the rows returned"""
    where: teacher_registration_compliance_bool_exp
  ): teacher_registration_compliance_aggregate!

  """An array relationship"""
  teachers(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): [teacher!]!

  """An aggregate relationship"""
  teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): teacher_aggregate!
  type: String!
  udise: Int!
}

"""
aggregated selection of "school"
"""
type school_aggregate {
  aggregate: school_aggregate_fields
  nodes: [school!]!
}

"""
aggregate fields of "school"
"""
type school_aggregate_fields {
  avg: school_avg_fields
  count(columns: [school_select_column!], distinct: Boolean): Int!
  max: school_max_fields
  min: school_min_fields
  stddev: school_stddev_fields
  stddev_pop: school_stddev_pop_fields
  stddev_samp: school_stddev_samp_fields
  sum: school_sum_fields
  var_pop: school_var_pop_fields
  var_samp: school_var_samp_fields
  variance: school_variance_fields
}

"""
order by aggregate values of table "school"
"""
input school_aggregate_order_by {
  avg: school_avg_order_by
  count: order_by
  max: school_max_order_by
  min: school_min_order_by
  stddev: school_stddev_order_by
  stddev_pop: school_stddev_pop_order_by
  stddev_samp: school_stddev_samp_order_by
  sum: school_sum_order_by
  var_pop: school_var_pop_order_by
  var_samp: school_var_samp_order_by
  variance: school_variance_order_by
}

"""
input type for inserting array relation for remote table "school"
"""
input school_arr_rel_insert_input {
  data: [school_insert_input!]!

  """on conflict condition"""
  on_conflict: school_on_conflict
}

"""aggregate avg on columns"""
type school_avg_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by avg() on columns of table "school"
"""
input school_avg_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""
Boolean expression to filter rows from the table "school". All fields are combined with a logical 'AND'.
"""
input school_bool_exp {
  _and: [school_bool_exp!]
  _not: school_bool_exp
  _or: [school_bool_exp!]
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_bool_exp
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_bool_exp
  assessment_cache_v5s: assessment_cache_v5_bool_exp
  assessment_caches: assessment_cache_bool_exp
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  assessment_units: assessment_unit_bool_exp
  attendance_teachers: attendance_teacher_bool_exp
  attendances: attendance_bool_exp
  celery_duplicate_removes: celery_duplicate_remove_bool_exp
  class_level_component_submissions: class_level_component_submission_bool_exp
  class_submissions: class_submission_bool_exp
  component_submissions: component_submission_bool_exp
  corporate_donor_devices: corporate_donor_devices_bool_exp
  device_donation_donors: device_donation_donor_bool_exp
  device_verification_records: device_verification_records_bool_exp
  enroll_count: Int_comparison_exp
  enrollments: enrollment_bool_exp
  grade_assessments: grade_assessment_bool_exp
  id: Int_comparison_exp
  is_active: Boolean_comparison_exp
  latitude: float8_comparison_exp
  lo_submissions: lo_submission_bool_exp
  location: location_bool_exp
  location_id: Int_comparison_exp
  longitude: float8_comparison_exp
  mapping_submissions: mapping_submission_bool_exp
  name: String_comparison_exp
  question_submissions: question_submission_bool_exp
  school_caches: school_cache_bool_exp
  school_grades: school_grade_bool_exp
  session: String_comparison_exp
  ss_school_allocation_data: ss_school_allocation_data_bool_exp
  student_submission_v2s: student_submission_v2_bool_exp
  students: student_bool_exp
  subject_submissions: subject_submission_bool_exp
  teacher_registration_compliances: teacher_registration_compliance_bool_exp
  teachers: teacher_bool_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
columns and relationships of "school_cache"
"""
type school_cache {
  created: timestamptz
  id: Int!

  """An object relationship"""
  school: school
  school_id: Int
  stream_data(
    """JSON select path"""
    path: String
  ): jsonb
  updated: timestamptz
}

"""
aggregated selection of "school_cache"
"""
type school_cache_aggregate {
  aggregate: school_cache_aggregate_fields
  nodes: [school_cache!]!
}

"""
aggregate fields of "school_cache"
"""
type school_cache_aggregate_fields {
  avg: school_cache_avg_fields
  count(columns: [school_cache_select_column!], distinct: Boolean): Int!
  max: school_cache_max_fields
  min: school_cache_min_fields
  stddev: school_cache_stddev_fields
  stddev_pop: school_cache_stddev_pop_fields
  stddev_samp: school_cache_stddev_samp_fields
  sum: school_cache_sum_fields
  var_pop: school_cache_var_pop_fields
  var_samp: school_cache_var_samp_fields
  variance: school_cache_variance_fields
}

"""
order by aggregate values of table "school_cache"
"""
input school_cache_aggregate_order_by {
  avg: school_cache_avg_order_by
  count: order_by
  max: school_cache_max_order_by
  min: school_cache_min_order_by
  stddev: school_cache_stddev_order_by
  stddev_pop: school_cache_stddev_pop_order_by
  stddev_samp: school_cache_stddev_samp_order_by
  sum: school_cache_sum_order_by
  var_pop: school_cache_var_pop_order_by
  var_samp: school_cache_var_samp_order_by
  variance: school_cache_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input school_cache_append_input {
  stream_data: jsonb
}

"""
input type for inserting array relation for remote table "school_cache"
"""
input school_cache_arr_rel_insert_input {
  data: [school_cache_insert_input!]!

  """on conflict condition"""
  on_conflict: school_cache_on_conflict
}

"""aggregate avg on columns"""
type school_cache_avg_fields {
  id: Float
  school_id: Float
}

"""
order by avg() on columns of table "school_cache"
"""
input school_cache_avg_order_by {
  id: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "school_cache". All fields are combined with a logical 'AND'.
"""
input school_cache_bool_exp {
  _and: [school_cache_bool_exp!]
  _not: school_cache_bool_exp
  _or: [school_cache_bool_exp!]
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  stream_data: jsonb_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "school_cache"
"""
enum school_cache_constraint {
  """unique or primary key constraint"""
  school_cache_pkey

  """unique or primary key constraint"""
  school_cache_school_id_23741c3c_uniq
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input school_cache_delete_at_path_input {
  stream_data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input school_cache_delete_elem_input {
  stream_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input school_cache_delete_key_input {
  stream_data: String
}

"""
input type for incrementing numeric columns in table "school_cache"
"""
input school_cache_inc_input {
  id: Int
  school_id: Int
}

"""
input type for inserting data into table "school_cache"
"""
input school_cache_insert_input {
  created: timestamptz
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  stream_data: jsonb
  updated: timestamptz
}

"""aggregate max on columns"""
type school_cache_max_fields {
  created: timestamptz
  id: Int
  school_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "school_cache"
"""
input school_cache_max_order_by {
  created: order_by
  id: order_by
  school_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type school_cache_min_fields {
  created: timestamptz
  id: Int
  school_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "school_cache"
"""
input school_cache_min_order_by {
  created: order_by
  id: order_by
  school_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "school_cache"
"""
type school_cache_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_cache!]!
}

"""
on conflict condition type for table "school_cache"
"""
input school_cache_on_conflict {
  constraint: school_cache_constraint!
  update_columns: [school_cache_update_column!]! = []
  where: school_cache_bool_exp
}

"""Ordering options when selecting data from "school_cache"."""
input school_cache_order_by {
  created: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  stream_data: order_by
  updated: order_by
}

"""primary key columns input for table: school_cache"""
input school_cache_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input school_cache_prepend_input {
  stream_data: jsonb
}

"""
select columns of table "school_cache"
"""
enum school_cache_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  stream_data

  """column name"""
  updated
}

"""
input type for updating data in table "school_cache"
"""
input school_cache_set_input {
  created: timestamptz
  id: Int
  school_id: Int
  stream_data: jsonb
  updated: timestamptz
}

"""aggregate stddev on columns"""
type school_cache_stddev_fields {
  id: Float
  school_id: Float
}

"""
order by stddev() on columns of table "school_cache"
"""
input school_cache_stddev_order_by {
  id: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type school_cache_stddev_pop_fields {
  id: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "school_cache"
"""
input school_cache_stddev_pop_order_by {
  id: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type school_cache_stddev_samp_fields {
  id: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "school_cache"
"""
input school_cache_stddev_samp_order_by {
  id: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type school_cache_sum_fields {
  id: Int
  school_id: Int
}

"""
order by sum() on columns of table "school_cache"
"""
input school_cache_sum_order_by {
  id: order_by
  school_id: order_by
}

"""
update columns of table "school_cache"
"""
enum school_cache_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  stream_data

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type school_cache_var_pop_fields {
  id: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "school_cache"
"""
input school_cache_var_pop_order_by {
  id: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type school_cache_var_samp_fields {
  id: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "school_cache"
"""
input school_cache_var_samp_order_by {
  id: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type school_cache_variance_fields {
  id: Float
  school_id: Float
}

"""
order by variance() on columns of table "school_cache"
"""
input school_cache_variance_order_by {
  id: order_by
  school_id: order_by
}

"""
columns and relationships of "school_class_mismatch"
"""
type school_class_mismatch {
  case: String
  cg_udise: Int
  grade: String
  id: Int
  mobile: String
  type: String
}

"""
aggregated selection of "school_class_mismatch"
"""
type school_class_mismatch_aggregate {
  aggregate: school_class_mismatch_aggregate_fields
  nodes: [school_class_mismatch!]!
}

"""
aggregate fields of "school_class_mismatch"
"""
type school_class_mismatch_aggregate_fields {
  avg: school_class_mismatch_avg_fields
  count(columns: [school_class_mismatch_select_column!], distinct: Boolean): Int!
  max: school_class_mismatch_max_fields
  min: school_class_mismatch_min_fields
  stddev: school_class_mismatch_stddev_fields
  stddev_pop: school_class_mismatch_stddev_pop_fields
  stddev_samp: school_class_mismatch_stddev_samp_fields
  sum: school_class_mismatch_sum_fields
  var_pop: school_class_mismatch_var_pop_fields
  var_samp: school_class_mismatch_var_samp_fields
  variance: school_class_mismatch_variance_fields
}

"""aggregate avg on columns"""
type school_class_mismatch_avg_fields {
  cg_udise: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "school_class_mismatch". All fields are combined with a logical 'AND'.
"""
input school_class_mismatch_bool_exp {
  _and: [school_class_mismatch_bool_exp!]
  _not: school_class_mismatch_bool_exp
  _or: [school_class_mismatch_bool_exp!]
  case: String_comparison_exp
  cg_udise: Int_comparison_exp
  grade: String_comparison_exp
  id: Int_comparison_exp
  mobile: String_comparison_exp
  type: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "school_class_mismatch"
"""
input school_class_mismatch_inc_input {
  cg_udise: Int
  id: Int
}

"""
input type for inserting data into table "school_class_mismatch"
"""
input school_class_mismatch_insert_input {
  case: String
  cg_udise: Int
  grade: String
  id: Int
  mobile: String
  type: String
}

"""aggregate max on columns"""
type school_class_mismatch_max_fields {
  case: String
  cg_udise: Int
  grade: String
  id: Int
  mobile: String
  type: String
}

"""aggregate min on columns"""
type school_class_mismatch_min_fields {
  case: String
  cg_udise: Int
  grade: String
  id: Int
  mobile: String
  type: String
}

"""
response of any mutation on the table "school_class_mismatch"
"""
type school_class_mismatch_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_class_mismatch!]!
}

"""Ordering options when selecting data from "school_class_mismatch"."""
input school_class_mismatch_order_by {
  case: order_by
  cg_udise: order_by
  grade: order_by
  id: order_by
  mobile: order_by
  type: order_by
}

"""
select columns of table "school_class_mismatch"
"""
enum school_class_mismatch_select_column {
  """column name"""
  case

  """column name"""
  cg_udise

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  mobile

  """column name"""
  type
}

"""
input type for updating data in table "school_class_mismatch"
"""
input school_class_mismatch_set_input {
  case: String
  cg_udise: Int
  grade: String
  id: Int
  mobile: String
  type: String
}

"""aggregate stddev on columns"""
type school_class_mismatch_stddev_fields {
  cg_udise: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type school_class_mismatch_stddev_pop_fields {
  cg_udise: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type school_class_mismatch_stddev_samp_fields {
  cg_udise: Float
  id: Float
}

"""aggregate sum on columns"""
type school_class_mismatch_sum_fields {
  cg_udise: Int
  id: Int
}

"""aggregate var_pop on columns"""
type school_class_mismatch_var_pop_fields {
  cg_udise: Float
  id: Float
}

"""aggregate var_samp on columns"""
type school_class_mismatch_var_samp_fields {
  cg_udise: Float
  id: Float
}

"""aggregate variance on columns"""
type school_class_mismatch_variance_fields {
  cg_udise: Float
  id: Float
}

"""
unique or primary key constraints on table "school"
"""
enum school_constraint {
  """unique or primary key constraint"""
  school_pkey

  """unique or primary key constraint"""
  school_udise_key
}

"""
columns and relationships of "school_grade"
"""
type school_grade {
  """An object relationship"""
  grade: grade!
  grade_id: Int!
  id: Int!

  """An object relationship"""
  school: school!
  school_id: Int!
}

"""
aggregated selection of "school_grade"
"""
type school_grade_aggregate {
  aggregate: school_grade_aggregate_fields
  nodes: [school_grade!]!
}

"""
aggregate fields of "school_grade"
"""
type school_grade_aggregate_fields {
  avg: school_grade_avg_fields
  count(columns: [school_grade_select_column!], distinct: Boolean): Int!
  max: school_grade_max_fields
  min: school_grade_min_fields
  stddev: school_grade_stddev_fields
  stddev_pop: school_grade_stddev_pop_fields
  stddev_samp: school_grade_stddev_samp_fields
  sum: school_grade_sum_fields
  var_pop: school_grade_var_pop_fields
  var_samp: school_grade_var_samp_fields
  variance: school_grade_variance_fields
}

"""
order by aggregate values of table "school_grade"
"""
input school_grade_aggregate_order_by {
  avg: school_grade_avg_order_by
  count: order_by
  max: school_grade_max_order_by
  min: school_grade_min_order_by
  stddev: school_grade_stddev_order_by
  stddev_pop: school_grade_stddev_pop_order_by
  stddev_samp: school_grade_stddev_samp_order_by
  sum: school_grade_sum_order_by
  var_pop: school_grade_var_pop_order_by
  var_samp: school_grade_var_samp_order_by
  variance: school_grade_variance_order_by
}

"""
input type for inserting array relation for remote table "school_grade"
"""
input school_grade_arr_rel_insert_input {
  data: [school_grade_insert_input!]!

  """on conflict condition"""
  on_conflict: school_grade_on_conflict
}

"""aggregate avg on columns"""
type school_grade_avg_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by avg() on columns of table "school_grade"
"""
input school_grade_avg_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "school_grade". All fields are combined with a logical 'AND'.
"""
input school_grade_bool_exp {
  _and: [school_grade_bool_exp!]
  _not: school_grade_bool_exp
  _or: [school_grade_bool_exp!]
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "school_grade"
"""
enum school_grade_constraint {
  """unique or primary key constraint"""
  school_grade_pkey

  """unique or primary key constraint"""
  school_grade_school_id_grade_id_37387cad_uniq
}

"""
input type for incrementing numeric columns in table "school_grade"
"""
input school_grade_inc_input {
  grade_id: Int
  id: Int
  school_id: Int
}

"""
input type for inserting data into table "school_grade"
"""
input school_grade_insert_input {
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
}

"""aggregate max on columns"""
type school_grade_max_fields {
  grade_id: Int
  id: Int
  school_id: Int
}

"""
order by max() on columns of table "school_grade"
"""
input school_grade_max_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate min on columns"""
type school_grade_min_fields {
  grade_id: Int
  id: Int
  school_id: Int
}

"""
order by min() on columns of table "school_grade"
"""
input school_grade_min_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""
response of any mutation on the table "school_grade"
"""
type school_grade_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_grade!]!
}

"""
on conflict condition type for table "school_grade"
"""
input school_grade_on_conflict {
  constraint: school_grade_constraint!
  update_columns: [school_grade_update_column!]! = []
  where: school_grade_bool_exp
}

"""Ordering options when selecting data from "school_grade"."""
input school_grade_order_by {
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
}

"""primary key columns input for table: school_grade"""
input school_grade_pk_columns_input {
  id: Int!
}

"""
select columns of table "school_grade"
"""
enum school_grade_select_column {
  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  school_id
}

"""
input type for updating data in table "school_grade"
"""
input school_grade_set_input {
  grade_id: Int
  id: Int
  school_id: Int
}

"""aggregate stddev on columns"""
type school_grade_stddev_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev() on columns of table "school_grade"
"""
input school_grade_stddev_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type school_grade_stddev_pop_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "school_grade"
"""
input school_grade_stddev_pop_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type school_grade_stddev_samp_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "school_grade"
"""
input school_grade_stddev_samp_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type school_grade_sum_fields {
  grade_id: Int
  id: Int
  school_id: Int
}

"""
order by sum() on columns of table "school_grade"
"""
input school_grade_sum_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""
update columns of table "school_grade"
"""
enum school_grade_update_column {
  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  school_id
}

"""aggregate var_pop on columns"""
type school_grade_var_pop_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "school_grade"
"""
input school_grade_var_pop_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type school_grade_var_samp_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "school_grade"
"""
input school_grade_var_samp_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type school_grade_variance_fields {
  grade_id: Float
  id: Float
  school_id: Float
}

"""
order by variance() on columns of table "school_grade"
"""
input school_grade_variance_order_by {
  grade_id: order_by
  id: order_by
  school_id: order_by
}

"""
input type for incrementing numeric columns in table "school"
"""
input school_inc_input {
  enroll_count: Int
  id: Int
  latitude: float8
  location_id: Int
  longitude: float8
  udise: Int
}

"""
input type for inserting data into table "school"
"""
input school_insert_input {
  assessment_au_lo_aggregate_submissions: assessment_au_lo_aggregate_submission_arr_rel_insert_input
  assessment_au_question_aggregate_submissions: assessment_au_question_aggregate_submission_arr_rel_insert_input
  assessment_cache_v5s: assessment_cache_v5_arr_rel_insert_input
  assessment_caches: assessment_cache_arr_rel_insert_input
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  assessment_units: assessment_unit_arr_rel_insert_input
  attendance_teachers: attendance_teacher_arr_rel_insert_input
  attendances: attendance_arr_rel_insert_input
  celery_duplicate_removes: celery_duplicate_remove_arr_rel_insert_input
  class_level_component_submissions: class_level_component_submission_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  component_submissions: component_submission_arr_rel_insert_input
  corporate_donor_devices: corporate_donor_devices_arr_rel_insert_input
  device_donation_donors: device_donation_donor_arr_rel_insert_input
  device_verification_records: device_verification_records_arr_rel_insert_input
  enroll_count: Int
  enrollments: enrollment_arr_rel_insert_input
  grade_assessments: grade_assessment_arr_rel_insert_input
  id: Int
  is_active: Boolean
  latitude: float8
  lo_submissions: lo_submission_arr_rel_insert_input
  location: location_obj_rel_insert_input
  location_id: Int
  longitude: float8
  mapping_submissions: mapping_submission_arr_rel_insert_input
  name: String
  question_submissions: question_submission_arr_rel_insert_input
  school_caches: school_cache_arr_rel_insert_input
  school_grades: school_grade_arr_rel_insert_input
  session: String
  ss_school_allocation_data: ss_school_allocation_data_arr_rel_insert_input
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  students: student_arr_rel_insert_input
  subject_submissions: subject_submission_arr_rel_insert_input
  teacher_registration_compliances: teacher_registration_compliance_arr_rel_insert_input
  teachers: teacher_arr_rel_insert_input
  type: String
  udise: Int
}

"""
columns and relationships of "school_location_mapping"
"""
type school_location_mapping {
  id: Int!
  location_id: Int!
  school_id: Int!
}

"""
aggregated selection of "school_location_mapping"
"""
type school_location_mapping_aggregate {
  aggregate: school_location_mapping_aggregate_fields
  nodes: [school_location_mapping!]!
}

"""
aggregate fields of "school_location_mapping"
"""
type school_location_mapping_aggregate_fields {
  avg: school_location_mapping_avg_fields
  count(columns: [school_location_mapping_select_column!], distinct: Boolean): Int!
  max: school_location_mapping_max_fields
  min: school_location_mapping_min_fields
  stddev: school_location_mapping_stddev_fields
  stddev_pop: school_location_mapping_stddev_pop_fields
  stddev_samp: school_location_mapping_stddev_samp_fields
  sum: school_location_mapping_sum_fields
  var_pop: school_location_mapping_var_pop_fields
  var_samp: school_location_mapping_var_samp_fields
  variance: school_location_mapping_variance_fields
}

"""aggregate avg on columns"""
type school_location_mapping_avg_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""
Boolean expression to filter rows from the table "school_location_mapping". All fields are combined with a logical 'AND'.
"""
input school_location_mapping_bool_exp {
  _and: [school_location_mapping_bool_exp!]
  _not: school_location_mapping_bool_exp
  _or: [school_location_mapping_bool_exp!]
  id: Int_comparison_exp
  location_id: Int_comparison_exp
  school_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "school_location_mapping"
"""
enum school_location_mapping_constraint {
  """unique or primary key constraint"""
  school_location_mapping_pkey
}

"""
input type for incrementing numeric columns in table "school_location_mapping"
"""
input school_location_mapping_inc_input {
  id: Int
  location_id: Int
  school_id: Int
}

"""
input type for inserting data into table "school_location_mapping"
"""
input school_location_mapping_insert_input {
  id: Int
  location_id: Int
  school_id: Int
}

"""aggregate max on columns"""
type school_location_mapping_max_fields {
  id: Int
  location_id: Int
  school_id: Int
}

"""aggregate min on columns"""
type school_location_mapping_min_fields {
  id: Int
  location_id: Int
  school_id: Int
}

"""
response of any mutation on the table "school_location_mapping"
"""
type school_location_mapping_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_location_mapping!]!
}

"""
on conflict condition type for table "school_location_mapping"
"""
input school_location_mapping_on_conflict {
  constraint: school_location_mapping_constraint!
  update_columns: [school_location_mapping_update_column!]! = []
  where: school_location_mapping_bool_exp
}

"""Ordering options when selecting data from "school_location_mapping"."""
input school_location_mapping_order_by {
  id: order_by
  location_id: order_by
  school_id: order_by
}

"""primary key columns input for table: school_location_mapping"""
input school_location_mapping_pk_columns_input {
  id: Int!
}

"""
select columns of table "school_location_mapping"
"""
enum school_location_mapping_select_column {
  """column name"""
  id

  """column name"""
  location_id

  """column name"""
  school_id
}

"""
input type for updating data in table "school_location_mapping"
"""
input school_location_mapping_set_input {
  id: Int
  location_id: Int
  school_id: Int
}

"""aggregate stddev on columns"""
type school_location_mapping_stddev_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""aggregate stddev_pop on columns"""
type school_location_mapping_stddev_pop_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""aggregate stddev_samp on columns"""
type school_location_mapping_stddev_samp_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""aggregate sum on columns"""
type school_location_mapping_sum_fields {
  id: Int
  location_id: Int
  school_id: Int
}

"""
update columns of table "school_location_mapping"
"""
enum school_location_mapping_update_column {
  """column name"""
  id

  """column name"""
  location_id

  """column name"""
  school_id
}

"""aggregate var_pop on columns"""
type school_location_mapping_var_pop_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""aggregate var_samp on columns"""
type school_location_mapping_var_samp_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""aggregate variance on columns"""
type school_location_mapping_variance_fields {
  id: Float
  location_id: Float
  school_id: Float
}

"""aggregate max on columns"""
type school_max_fields {
  enroll_count: Int
  id: Int
  latitude: float8
  location_id: Int
  longitude: float8
  name: String
  session: String
  type: String
  udise: Int
}

"""
order by max() on columns of table "school"
"""
input school_max_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  name: order_by
  session: order_by
  type: order_by
  udise: order_by
}

"""aggregate min on columns"""
type school_min_fields {
  enroll_count: Int
  id: Int
  latitude: float8
  location_id: Int
  longitude: float8
  name: String
  session: String
  type: String
  udise: Int
}

"""
order by min() on columns of table "school"
"""
input school_min_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  name: order_by
  session: order_by
  type: order_by
  udise: order_by
}

"""
response of any mutation on the table "school"
"""
type school_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school!]!
}

"""
input type for inserting object relation for remote table "school"
"""
input school_obj_rel_insert_input {
  data: school_insert_input!

  """on conflict condition"""
  on_conflict: school_on_conflict
}

"""
on conflict condition type for table "school"
"""
input school_on_conflict {
  constraint: school_constraint!
  update_columns: [school_update_column!]! = []
  where: school_bool_exp
}

"""Ordering options when selecting data from "school"."""
input school_order_by {
  assessment_au_lo_aggregate_submissions_aggregate: assessment_au_lo_aggregate_submission_aggregate_order_by
  assessment_au_question_aggregate_submissions_aggregate: assessment_au_question_aggregate_submission_aggregate_order_by
  assessment_cache_v5s_aggregate: assessment_cache_v5_aggregate_order_by
  assessment_caches_aggregate: assessment_cache_aggregate_order_by
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  assessment_units_aggregate: assessment_unit_aggregate_order_by
  attendance_teachers_aggregate: attendance_teacher_aggregate_order_by
  attendances_aggregate: attendance_aggregate_order_by
  celery_duplicate_removes_aggregate: celery_duplicate_remove_aggregate_order_by
  class_level_component_submissions_aggregate: class_level_component_submission_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  component_submissions_aggregate: component_submission_aggregate_order_by
  corporate_donor_devices_aggregate: corporate_donor_devices_aggregate_order_by
  device_donation_donors_aggregate: device_donation_donor_aggregate_order_by
  device_verification_records_aggregate: device_verification_records_aggregate_order_by
  enroll_count: order_by
  enrollments_aggregate: enrollment_aggregate_order_by
  grade_assessments_aggregate: grade_assessment_aggregate_order_by
  id: order_by
  is_active: order_by
  latitude: order_by
  lo_submissions_aggregate: lo_submission_aggregate_order_by
  location: location_order_by
  location_id: order_by
  longitude: order_by
  mapping_submissions_aggregate: mapping_submission_aggregate_order_by
  name: order_by
  question_submissions_aggregate: question_submission_aggregate_order_by
  school_caches_aggregate: school_cache_aggregate_order_by
  school_grades_aggregate: school_grade_aggregate_order_by
  session: order_by
  ss_school_allocation_data_aggregate: ss_school_allocation_data_aggregate_order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  students_aggregate: student_aggregate_order_by
  subject_submissions_aggregate: subject_submission_aggregate_order_by
  teacher_registration_compliances_aggregate: teacher_registration_compliance_aggregate_order_by
  teachers_aggregate: teacher_aggregate_order_by
  type: order_by
  udise: order_by
}

"""primary key columns input for table: school"""
input school_pk_columns_input {
  id: Int!
}

"""
select columns of table "school"
"""
enum school_select_column {
  """column name"""
  enroll_count

  """column name"""
  id

  """column name"""
  is_active

  """column name"""
  latitude

  """column name"""
  location_id

  """column name"""
  longitude

  """column name"""
  name

  """column name"""
  session

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "school"
"""
input school_set_input {
  enroll_count: Int
  id: Int
  is_active: Boolean
  latitude: float8
  location_id: Int
  longitude: float8
  name: String
  session: String
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type school_stddev_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by stddev() on columns of table "school"
"""
input school_stddev_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""aggregate stddev_pop on columns"""
type school_stddev_pop_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by stddev_pop() on columns of table "school"
"""
input school_stddev_pop_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""aggregate stddev_samp on columns"""
type school_stddev_samp_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by stddev_samp() on columns of table "school"
"""
input school_stddev_samp_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""aggregate sum on columns"""
type school_sum_fields {
  enroll_count: Int
  id: Int
  latitude: float8
  location_id: Int
  longitude: float8
  udise: Int
}

"""
order by sum() on columns of table "school"
"""
input school_sum_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""
columns and relationships of "school_type_enrolment"
"""
type school_type_enrolment {
  count: bigint
  type: String
}

"""
aggregated selection of "school_type_enrolment"
"""
type school_type_enrolment_aggregate {
  aggregate: school_type_enrolment_aggregate_fields
  nodes: [school_type_enrolment!]!
}

"""
aggregate fields of "school_type_enrolment"
"""
type school_type_enrolment_aggregate_fields {
  avg: school_type_enrolment_avg_fields
  count(columns: [school_type_enrolment_select_column!], distinct: Boolean): Int!
  max: school_type_enrolment_max_fields
  min: school_type_enrolment_min_fields
  stddev: school_type_enrolment_stddev_fields
  stddev_pop: school_type_enrolment_stddev_pop_fields
  stddev_samp: school_type_enrolment_stddev_samp_fields
  sum: school_type_enrolment_sum_fields
  var_pop: school_type_enrolment_var_pop_fields
  var_samp: school_type_enrolment_var_samp_fields
  variance: school_type_enrolment_variance_fields
}

"""aggregate avg on columns"""
type school_type_enrolment_avg_fields {
  count: Float
}

"""
Boolean expression to filter rows from the table "school_type_enrolment". All fields are combined with a logical 'AND'.
"""
input school_type_enrolment_bool_exp {
  _and: [school_type_enrolment_bool_exp!]
  _not: school_type_enrolment_bool_exp
  _or: [school_type_enrolment_bool_exp!]
  count: bigint_comparison_exp
  type: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "school_type_enrolment"
"""
input school_type_enrolment_inc_input {
  count: bigint
}

"""
input type for inserting data into table "school_type_enrolment"
"""
input school_type_enrolment_insert_input {
  count: bigint
  type: String
}

"""aggregate max on columns"""
type school_type_enrolment_max_fields {
  count: bigint
  type: String
}

"""aggregate min on columns"""
type school_type_enrolment_min_fields {
  count: bigint
  type: String
}

"""
response of any mutation on the table "school_type_enrolment"
"""
type school_type_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_type_enrolment!]!
}

"""Ordering options when selecting data from "school_type_enrolment"."""
input school_type_enrolment_order_by {
  count: order_by
  type: order_by
}

"""
select columns of table "school_type_enrolment"
"""
enum school_type_enrolment_select_column {
  """column name"""
  count

  """column name"""
  type
}

"""
input type for updating data in table "school_type_enrolment"
"""
input school_type_enrolment_set_input {
  count: bigint
  type: String
}

"""aggregate stddev on columns"""
type school_type_enrolment_stddev_fields {
  count: Float
}

"""aggregate stddev_pop on columns"""
type school_type_enrolment_stddev_pop_fields {
  count: Float
}

"""aggregate stddev_samp on columns"""
type school_type_enrolment_stddev_samp_fields {
  count: Float
}

"""aggregate sum on columns"""
type school_type_enrolment_sum_fields {
  count: bigint
}

"""aggregate var_pop on columns"""
type school_type_enrolment_var_pop_fields {
  count: Float
}

"""aggregate var_samp on columns"""
type school_type_enrolment_var_samp_fields {
  count: Float
}

"""aggregate variance on columns"""
type school_type_enrolment_variance_fields {
  count: Float
}

"""
columns and relationships of "school_type_udise_enrolment"
"""
type school_type_udise_enrolment {
  schoolenrolment: bigint
  type: String
  udise: Int
}

"""
aggregated selection of "school_type_udise_enrolment"
"""
type school_type_udise_enrolment_aggregate {
  aggregate: school_type_udise_enrolment_aggregate_fields
  nodes: [school_type_udise_enrolment!]!
}

"""
aggregate fields of "school_type_udise_enrolment"
"""
type school_type_udise_enrolment_aggregate_fields {
  avg: school_type_udise_enrolment_avg_fields
  count(columns: [school_type_udise_enrolment_select_column!], distinct: Boolean): Int!
  max: school_type_udise_enrolment_max_fields
  min: school_type_udise_enrolment_min_fields
  stddev: school_type_udise_enrolment_stddev_fields
  stddev_pop: school_type_udise_enrolment_stddev_pop_fields
  stddev_samp: school_type_udise_enrolment_stddev_samp_fields
  sum: school_type_udise_enrolment_sum_fields
  var_pop: school_type_udise_enrolment_var_pop_fields
  var_samp: school_type_udise_enrolment_var_samp_fields
  variance: school_type_udise_enrolment_variance_fields
}

"""aggregate avg on columns"""
type school_type_udise_enrolment_avg_fields {
  schoolenrolment: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "school_type_udise_enrolment". All fields are combined with a logical 'AND'.
"""
input school_type_udise_enrolment_bool_exp {
  _and: [school_type_udise_enrolment_bool_exp!]
  _not: school_type_udise_enrolment_bool_exp
  _or: [school_type_udise_enrolment_bool_exp!]
  schoolenrolment: bigint_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "school_type_udise_enrolment"
"""
input school_type_udise_enrolment_inc_input {
  schoolenrolment: bigint
  udise: Int
}

"""
input type for inserting data into table "school_type_udise_enrolment"
"""
input school_type_udise_enrolment_insert_input {
  schoolenrolment: bigint
  type: String
  udise: Int
}

"""aggregate max on columns"""
type school_type_udise_enrolment_max_fields {
  schoolenrolment: bigint
  type: String
  udise: Int
}

"""aggregate min on columns"""
type school_type_udise_enrolment_min_fields {
  schoolenrolment: bigint
  type: String
  udise: Int
}

"""
response of any mutation on the table "school_type_udise_enrolment"
"""
type school_type_udise_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_type_udise_enrolment!]!
}

"""
Ordering options when selecting data from "school_type_udise_enrolment".
"""
input school_type_udise_enrolment_order_by {
  schoolenrolment: order_by
  type: order_by
  udise: order_by
}

"""
select columns of table "school_type_udise_enrolment"
"""
enum school_type_udise_enrolment_select_column {
  """column name"""
  schoolenrolment

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "school_type_udise_enrolment"
"""
input school_type_udise_enrolment_set_input {
  schoolenrolment: bigint
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type school_type_udise_enrolment_stddev_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type school_type_udise_enrolment_stddev_pop_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type school_type_udise_enrolment_stddev_samp_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate sum on columns"""
type school_type_udise_enrolment_sum_fields {
  schoolenrolment: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type school_type_udise_enrolment_var_pop_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type school_type_udise_enrolment_var_samp_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate variance on columns"""
type school_type_udise_enrolment_variance_fields {
  schoolenrolment: Float
  udise: Float
}

"""
update columns of table "school"
"""
enum school_update_column {
  """column name"""
  enroll_count

  """column name"""
  id

  """column name"""
  is_active

  """column name"""
  latitude

  """column name"""
  location_id

  """column name"""
  longitude

  """column name"""
  name

  """column name"""
  session

  """column name"""
  type

  """column name"""
  udise
}

"""aggregate var_pop on columns"""
type school_var_pop_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by var_pop() on columns of table "school"
"""
input school_var_pop_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""aggregate var_samp on columns"""
type school_var_samp_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by var_samp() on columns of table "school"
"""
input school_var_samp_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""aggregate variance on columns"""
type school_variance_fields {
  enroll_count: Float
  id: Float
  latitude: Float
  location_id: Float
  longitude: Float
  udise: Float
}

"""
order by variance() on columns of table "school"
"""
input school_variance_order_by {
  enroll_count: order_by
  id: order_by
  latitude: order_by
  location_id: order_by
  longitude: order_by
  udise: order_by
}

"""
columns and relationships of "school_wise_daily_enrolment"
"""
type school_wise_daily_enrolment {
  block: String!
  date: date!
  district: String!
  id: bigint!
  name: String
  students_enrolled: Int!
  udise: Int
}

"""
aggregated selection of "school_wise_daily_enrolment"
"""
type school_wise_daily_enrolment_aggregate {
  aggregate: school_wise_daily_enrolment_aggregate_fields
  nodes: [school_wise_daily_enrolment!]!
}

"""
aggregate fields of "school_wise_daily_enrolment"
"""
type school_wise_daily_enrolment_aggregate_fields {
  avg: school_wise_daily_enrolment_avg_fields
  count(columns: [school_wise_daily_enrolment_select_column!], distinct: Boolean): Int!
  max: school_wise_daily_enrolment_max_fields
  min: school_wise_daily_enrolment_min_fields
  stddev: school_wise_daily_enrolment_stddev_fields
  stddev_pop: school_wise_daily_enrolment_stddev_pop_fields
  stddev_samp: school_wise_daily_enrolment_stddev_samp_fields
  sum: school_wise_daily_enrolment_sum_fields
  var_pop: school_wise_daily_enrolment_var_pop_fields
  var_samp: school_wise_daily_enrolment_var_samp_fields
  variance: school_wise_daily_enrolment_variance_fields
}

"""aggregate avg on columns"""
type school_wise_daily_enrolment_avg_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "school_wise_daily_enrolment". All fields are combined with a logical 'AND'.
"""
input school_wise_daily_enrolment_bool_exp {
  _and: [school_wise_daily_enrolment_bool_exp!]
  _not: school_wise_daily_enrolment_bool_exp
  _or: [school_wise_daily_enrolment_bool_exp!]
  block: String_comparison_exp
  date: date_comparison_exp
  district: String_comparison_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  students_enrolled: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
unique or primary key constraints on table "school_wise_daily_enrolment"
"""
enum school_wise_daily_enrolment_constraint {
  """unique or primary key constraint"""
  school_wise_daily_enrolment_id_key

  """unique or primary key constraint"""
  school_wise_daily_enrolment_pkey
}

"""
input type for incrementing numeric columns in table "school_wise_daily_enrolment"
"""
input school_wise_daily_enrolment_inc_input {
  id: bigint
  students_enrolled: Int
  udise: Int
}

"""
input type for inserting data into table "school_wise_daily_enrolment"
"""
input school_wise_daily_enrolment_insert_input {
  block: String
  date: date
  district: String
  id: bigint
  name: String
  students_enrolled: Int
  udise: Int
}

"""aggregate max on columns"""
type school_wise_daily_enrolment_max_fields {
  block: String
  date: date
  district: String
  id: bigint
  name: String
  students_enrolled: Int
  udise: Int
}

"""aggregate min on columns"""
type school_wise_daily_enrolment_min_fields {
  block: String
  date: date
  district: String
  id: bigint
  name: String
  students_enrolled: Int
  udise: Int
}

"""
response of any mutation on the table "school_wise_daily_enrolment"
"""
type school_wise_daily_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [school_wise_daily_enrolment!]!
}

"""
on conflict condition type for table "school_wise_daily_enrolment"
"""
input school_wise_daily_enrolment_on_conflict {
  constraint: school_wise_daily_enrolment_constraint!
  update_columns: [school_wise_daily_enrolment_update_column!]! = []
  where: school_wise_daily_enrolment_bool_exp
}

"""
Ordering options when selecting data from "school_wise_daily_enrolment".
"""
input school_wise_daily_enrolment_order_by {
  block: order_by
  date: order_by
  district: order_by
  id: order_by
  name: order_by
  students_enrolled: order_by
  udise: order_by
}

"""primary key columns input for table: school_wise_daily_enrolment"""
input school_wise_daily_enrolment_pk_columns_input {
  id: bigint!
}

"""
select columns of table "school_wise_daily_enrolment"
"""
enum school_wise_daily_enrolment_select_column {
  """column name"""
  block

  """column name"""
  date

  """column name"""
  district

  """column name"""
  id

  """column name"""
  name

  """column name"""
  students_enrolled

  """column name"""
  udise
}

"""
input type for updating data in table "school_wise_daily_enrolment"
"""
input school_wise_daily_enrolment_set_input {
  block: String
  date: date
  district: String
  id: bigint
  name: String
  students_enrolled: Int
  udise: Int
}

"""aggregate stddev on columns"""
type school_wise_daily_enrolment_stddev_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type school_wise_daily_enrolment_stddev_pop_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type school_wise_daily_enrolment_stddev_samp_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""aggregate sum on columns"""
type school_wise_daily_enrolment_sum_fields {
  id: bigint
  students_enrolled: Int
  udise: Int
}

"""
update columns of table "school_wise_daily_enrolment"
"""
enum school_wise_daily_enrolment_update_column {
  """column name"""
  block

  """column name"""
  date

  """column name"""
  district

  """column name"""
  id

  """column name"""
  name

  """column name"""
  students_enrolled

  """column name"""
  udise
}

"""aggregate var_pop on columns"""
type school_wise_daily_enrolment_var_pop_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type school_wise_daily_enrolment_var_samp_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""aggregate variance on columns"""
type school_wise_daily_enrolment_variance_fields {
  id: Float
  students_enrolled: Float
  udise: Float
}

"""
columns and relationships of "schoolwise_student_enrolment"
"""
type schoolwise_student_enrolment {
  schoolenrolment: bigint
  udise: Int
}

"""
aggregated selection of "schoolwise_student_enrolment"
"""
type schoolwise_student_enrolment_aggregate {
  aggregate: schoolwise_student_enrolment_aggregate_fields
  nodes: [schoolwise_student_enrolment!]!
}

"""
aggregate fields of "schoolwise_student_enrolment"
"""
type schoolwise_student_enrolment_aggregate_fields {
  avg: schoolwise_student_enrolment_avg_fields
  count(columns: [schoolwise_student_enrolment_select_column!], distinct: Boolean): Int!
  max: schoolwise_student_enrolment_max_fields
  min: schoolwise_student_enrolment_min_fields
  stddev: schoolwise_student_enrolment_stddev_fields
  stddev_pop: schoolwise_student_enrolment_stddev_pop_fields
  stddev_samp: schoolwise_student_enrolment_stddev_samp_fields
  sum: schoolwise_student_enrolment_sum_fields
  var_pop: schoolwise_student_enrolment_var_pop_fields
  var_samp: schoolwise_student_enrolment_var_samp_fields
  variance: schoolwise_student_enrolment_variance_fields
}

"""aggregate avg on columns"""
type schoolwise_student_enrolment_avg_fields {
  schoolenrolment: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "schoolwise_student_enrolment". All fields are combined with a logical 'AND'.
"""
input schoolwise_student_enrolment_bool_exp {
  _and: [schoolwise_student_enrolment_bool_exp!]
  _not: schoolwise_student_enrolment_bool_exp
  _or: [schoolwise_student_enrolment_bool_exp!]
  schoolenrolment: bigint_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "schoolwise_student_enrolment"
"""
input schoolwise_student_enrolment_inc_input {
  schoolenrolment: bigint
  udise: Int
}

"""
input type for inserting data into table "schoolwise_student_enrolment"
"""
input schoolwise_student_enrolment_insert_input {
  schoolenrolment: bigint
  udise: Int
}

"""aggregate max on columns"""
type schoolwise_student_enrolment_max_fields {
  schoolenrolment: bigint
  udise: Int
}

"""aggregate min on columns"""
type schoolwise_student_enrolment_min_fields {
  schoolenrolment: bigint
  udise: Int
}

"""
response of any mutation on the table "schoolwise_student_enrolment"
"""
type schoolwise_student_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [schoolwise_student_enrolment!]!
}

"""
Ordering options when selecting data from "schoolwise_student_enrolment".
"""
input schoolwise_student_enrolment_order_by {
  schoolenrolment: order_by
  udise: order_by
}

"""
select columns of table "schoolwise_student_enrolment"
"""
enum schoolwise_student_enrolment_select_column {
  """column name"""
  schoolenrolment

  """column name"""
  udise
}

"""
input type for updating data in table "schoolwise_student_enrolment"
"""
input schoolwise_student_enrolment_set_input {
  schoolenrolment: bigint
  udise: Int
}

"""aggregate stddev on columns"""
type schoolwise_student_enrolment_stddev_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type schoolwise_student_enrolment_stddev_pop_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type schoolwise_student_enrolment_stddev_samp_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate sum on columns"""
type schoolwise_student_enrolment_sum_fields {
  schoolenrolment: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type schoolwise_student_enrolment_var_pop_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type schoolwise_student_enrolment_var_samp_fields {
  schoolenrolment: Float
  udise: Float
}

"""aggregate variance on columns"""
type schoolwise_student_enrolment_variance_fields {
  schoolenrolment: Float
  udise: Float
}

"""
columns and relationships of "server_logroup"
"""
type server_logroup {
  """An array relationship"""
  assessment_au_lo_aggregates(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): [assessment_au_lo_aggregate!]!

  """An aggregate relationship"""
  assessment_au_lo_aggregates_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): assessment_au_lo_aggregate_aggregate!
  created: timestamptz
  id: Int!
  name: String!

  """An array relationship"""
  server_logroup_los(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): [server_logroup_lo!]!

  """An aggregate relationship"""
  server_logroup_los_aggregate(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): server_logroup_lo_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "server_logroup"
"""
type server_logroup_aggregate {
  aggregate: server_logroup_aggregate_fields
  nodes: [server_logroup!]!
}

"""
aggregate fields of "server_logroup"
"""
type server_logroup_aggregate_fields {
  avg: server_logroup_avg_fields
  count(columns: [server_logroup_select_column!], distinct: Boolean): Int!
  max: server_logroup_max_fields
  min: server_logroup_min_fields
  stddev: server_logroup_stddev_fields
  stddev_pop: server_logroup_stddev_pop_fields
  stddev_samp: server_logroup_stddev_samp_fields
  sum: server_logroup_sum_fields
  var_pop: server_logroup_var_pop_fields
  var_samp: server_logroup_var_samp_fields
  variance: server_logroup_variance_fields
}

"""aggregate avg on columns"""
type server_logroup_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "server_logroup". All fields are combined with a logical 'AND'.
"""
input server_logroup_bool_exp {
  _and: [server_logroup_bool_exp!]
  _not: server_logroup_bool_exp
  _or: [server_logroup_bool_exp!]
  assessment_au_lo_aggregates: assessment_au_lo_aggregate_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  server_logroup_los: server_logroup_lo_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "server_logroup"
"""
enum server_logroup_constraint {
  """unique or primary key constraint"""
  server_logroup_pkey
}

"""
input type for incrementing numeric columns in table "server_logroup"
"""
input server_logroup_inc_input {
  id: Int
}

"""
input type for inserting data into table "server_logroup"
"""
input server_logroup_insert_input {
  assessment_au_lo_aggregates: assessment_au_lo_aggregate_arr_rel_insert_input
  created: timestamptz
  id: Int
  name: String
  server_logroup_los: server_logroup_lo_arr_rel_insert_input
  updated: timestamptz
}

"""
columns and relationships of "server_logroup_lo"
"""
type server_logroup_lo {
  id: Int!

  """An object relationship"""
  lo: lo!
  lo_id: Int!
  logroup_id: Int!

  """An object relationship"""
  server_logroup: server_logroup!
}

"""
aggregated selection of "server_logroup_lo"
"""
type server_logroup_lo_aggregate {
  aggregate: server_logroup_lo_aggregate_fields
  nodes: [server_logroup_lo!]!
}

"""
aggregate fields of "server_logroup_lo"
"""
type server_logroup_lo_aggregate_fields {
  avg: server_logroup_lo_avg_fields
  count(columns: [server_logroup_lo_select_column!], distinct: Boolean): Int!
  max: server_logroup_lo_max_fields
  min: server_logroup_lo_min_fields
  stddev: server_logroup_lo_stddev_fields
  stddev_pop: server_logroup_lo_stddev_pop_fields
  stddev_samp: server_logroup_lo_stddev_samp_fields
  sum: server_logroup_lo_sum_fields
  var_pop: server_logroup_lo_var_pop_fields
  var_samp: server_logroup_lo_var_samp_fields
  variance: server_logroup_lo_variance_fields
}

"""
order by aggregate values of table "server_logroup_lo"
"""
input server_logroup_lo_aggregate_order_by {
  avg: server_logroup_lo_avg_order_by
  count: order_by
  max: server_logroup_lo_max_order_by
  min: server_logroup_lo_min_order_by
  stddev: server_logroup_lo_stddev_order_by
  stddev_pop: server_logroup_lo_stddev_pop_order_by
  stddev_samp: server_logroup_lo_stddev_samp_order_by
  sum: server_logroup_lo_sum_order_by
  var_pop: server_logroup_lo_var_pop_order_by
  var_samp: server_logroup_lo_var_samp_order_by
  variance: server_logroup_lo_variance_order_by
}

"""
input type for inserting array relation for remote table "server_logroup_lo"
"""
input server_logroup_lo_arr_rel_insert_input {
  data: [server_logroup_lo_insert_input!]!

  """on conflict condition"""
  on_conflict: server_logroup_lo_on_conflict
}

"""aggregate avg on columns"""
type server_logroup_lo_avg_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by avg() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_avg_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""
Boolean expression to filter rows from the table "server_logroup_lo". All fields are combined with a logical 'AND'.
"""
input server_logroup_lo_bool_exp {
  _and: [server_logroup_lo_bool_exp!]
  _not: server_logroup_lo_bool_exp
  _or: [server_logroup_lo_bool_exp!]
  id: Int_comparison_exp
  lo: lo_bool_exp
  lo_id: Int_comparison_exp
  logroup_id: Int_comparison_exp
  server_logroup: server_logroup_bool_exp
}

"""
unique or primary key constraints on table "server_logroup_lo"
"""
enum server_logroup_lo_constraint {
  """unique or primary key constraint"""
  server_logroup_lo_logroup_id_lo_id_b89be6c0_uniq

  """unique or primary key constraint"""
  server_logroup_lo_pkey
}

"""
input type for incrementing numeric columns in table "server_logroup_lo"
"""
input server_logroup_lo_inc_input {
  id: Int
  lo_id: Int
  logroup_id: Int
}

"""
input type for inserting data into table "server_logroup_lo"
"""
input server_logroup_lo_insert_input {
  id: Int
  lo: lo_obj_rel_insert_input
  lo_id: Int
  logroup_id: Int
  server_logroup: server_logroup_obj_rel_insert_input
}

"""aggregate max on columns"""
type server_logroup_lo_max_fields {
  id: Int
  lo_id: Int
  logroup_id: Int
}

"""
order by max() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_max_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate min on columns"""
type server_logroup_lo_min_fields {
  id: Int
  lo_id: Int
  logroup_id: Int
}

"""
order by min() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_min_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""
response of any mutation on the table "server_logroup_lo"
"""
type server_logroup_lo_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [server_logroup_lo!]!
}

"""
on conflict condition type for table "server_logroup_lo"
"""
input server_logroup_lo_on_conflict {
  constraint: server_logroup_lo_constraint!
  update_columns: [server_logroup_lo_update_column!]! = []
  where: server_logroup_lo_bool_exp
}

"""Ordering options when selecting data from "server_logroup_lo"."""
input server_logroup_lo_order_by {
  id: order_by
  lo: lo_order_by
  lo_id: order_by
  logroup_id: order_by
  server_logroup: server_logroup_order_by
}

"""primary key columns input for table: server_logroup_lo"""
input server_logroup_lo_pk_columns_input {
  id: Int!
}

"""
select columns of table "server_logroup_lo"
"""
enum server_logroup_lo_select_column {
  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  logroup_id
}

"""
input type for updating data in table "server_logroup_lo"
"""
input server_logroup_lo_set_input {
  id: Int
  lo_id: Int
  logroup_id: Int
}

"""aggregate stddev on columns"""
type server_logroup_lo_stddev_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by stddev() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_stddev_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate stddev_pop on columns"""
type server_logroup_lo_stddev_pop_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by stddev_pop() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_stddev_pop_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate stddev_samp on columns"""
type server_logroup_lo_stddev_samp_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by stddev_samp() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_stddev_samp_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate sum on columns"""
type server_logroup_lo_sum_fields {
  id: Int
  lo_id: Int
  logroup_id: Int
}

"""
order by sum() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_sum_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""
update columns of table "server_logroup_lo"
"""
enum server_logroup_lo_update_column {
  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  logroup_id
}

"""aggregate var_pop on columns"""
type server_logroup_lo_var_pop_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by var_pop() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_var_pop_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate var_samp on columns"""
type server_logroup_lo_var_samp_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by var_samp() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_var_samp_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate variance on columns"""
type server_logroup_lo_variance_fields {
  id: Float
  lo_id: Float
  logroup_id: Float
}

"""
order by variance() on columns of table "server_logroup_lo"
"""
input server_logroup_lo_variance_order_by {
  id: order_by
  lo_id: order_by
  logroup_id: order_by
}

"""aggregate max on columns"""
type server_logroup_max_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type server_logroup_min_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "server_logroup"
"""
type server_logroup_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [server_logroup!]!
}

"""
input type for inserting object relation for remote table "server_logroup"
"""
input server_logroup_obj_rel_insert_input {
  data: server_logroup_insert_input!

  """on conflict condition"""
  on_conflict: server_logroup_on_conflict
}

"""
on conflict condition type for table "server_logroup"
"""
input server_logroup_on_conflict {
  constraint: server_logroup_constraint!
  update_columns: [server_logroup_update_column!]! = []
  where: server_logroup_bool_exp
}

"""Ordering options when selecting data from "server_logroup"."""
input server_logroup_order_by {
  assessment_au_lo_aggregates_aggregate: assessment_au_lo_aggregate_aggregate_order_by
  created: order_by
  id: order_by
  name: order_by
  server_logroup_los_aggregate: server_logroup_lo_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: server_logroup"""
input server_logroup_pk_columns_input {
  id: Int!
}

"""
select columns of table "server_logroup"
"""
enum server_logroup_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "server_logroup"
"""
input server_logroup_set_input {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type server_logroup_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type server_logroup_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type server_logroup_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type server_logroup_sum_fields {
  id: Int
}

"""
update columns of table "server_logroup"
"""
enum server_logroup_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type server_logroup_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type server_logroup_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type server_logroup_variance_fields {
  id: Float
}

"""
columns and relationships of "server_marksrange"
"""
type server_marksrange {
  """An array relationship"""
  assessment_ep_marks(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): [assessment_ep_marks!]!

  """An aggregate relationship"""
  assessment_ep_marks_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): assessment_ep_marks_aggregate!
  created: timestamptz
  id: Int!
  max: Int!
  min: Int!
  updated: timestamptz
}

"""
aggregated selection of "server_marksrange"
"""
type server_marksrange_aggregate {
  aggregate: server_marksrange_aggregate_fields
  nodes: [server_marksrange!]!
}

"""
aggregate fields of "server_marksrange"
"""
type server_marksrange_aggregate_fields {
  avg: server_marksrange_avg_fields
  count(columns: [server_marksrange_select_column!], distinct: Boolean): Int!
  max: server_marksrange_max_fields
  min: server_marksrange_min_fields
  stddev: server_marksrange_stddev_fields
  stddev_pop: server_marksrange_stddev_pop_fields
  stddev_samp: server_marksrange_stddev_samp_fields
  sum: server_marksrange_sum_fields
  var_pop: server_marksrange_var_pop_fields
  var_samp: server_marksrange_var_samp_fields
  variance: server_marksrange_variance_fields
}

"""aggregate avg on columns"""
type server_marksrange_avg_fields {
  id: Float
  max: Float
  min: Float
}

"""
Boolean expression to filter rows from the table "server_marksrange". All fields are combined with a logical 'AND'.
"""
input server_marksrange_bool_exp {
  _and: [server_marksrange_bool_exp!]
  _not: server_marksrange_bool_exp
  _or: [server_marksrange_bool_exp!]
  assessment_ep_marks: assessment_ep_marks_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  max: Int_comparison_exp
  min: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "server_marksrange"
"""
enum server_marksrange_constraint {
  """unique or primary key constraint"""
  server_marksrange_pkey
}

"""
input type for incrementing numeric columns in table "server_marksrange"
"""
input server_marksrange_inc_input {
  id: Int
  max: Int
  min: Int
}

"""
input type for inserting data into table "server_marksrange"
"""
input server_marksrange_insert_input {
  assessment_ep_marks: assessment_ep_marks_arr_rel_insert_input
  created: timestamptz
  id: Int
  max: Int
  min: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type server_marksrange_max_fields {
  created: timestamptz
  id: Int
  max: Int
  min: Int
  updated: timestamptz
}

"""aggregate min on columns"""
type server_marksrange_min_fields {
  created: timestamptz
  id: Int
  max: Int
  min: Int
  updated: timestamptz
}

"""
response of any mutation on the table "server_marksrange"
"""
type server_marksrange_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [server_marksrange!]!
}

"""
input type for inserting object relation for remote table "server_marksrange"
"""
input server_marksrange_obj_rel_insert_input {
  data: server_marksrange_insert_input!

  """on conflict condition"""
  on_conflict: server_marksrange_on_conflict
}

"""
on conflict condition type for table "server_marksrange"
"""
input server_marksrange_on_conflict {
  constraint: server_marksrange_constraint!
  update_columns: [server_marksrange_update_column!]! = []
  where: server_marksrange_bool_exp
}

"""Ordering options when selecting data from "server_marksrange"."""
input server_marksrange_order_by {
  assessment_ep_marks_aggregate: assessment_ep_marks_aggregate_order_by
  created: order_by
  id: order_by
  max: order_by
  min: order_by
  updated: order_by
}

"""primary key columns input for table: server_marksrange"""
input server_marksrange_pk_columns_input {
  id: Int!
}

"""
select columns of table "server_marksrange"
"""
enum server_marksrange_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  max

  """column name"""
  min

  """column name"""
  updated
}

"""
input type for updating data in table "server_marksrange"
"""
input server_marksrange_set_input {
  created: timestamptz
  id: Int
  max: Int
  min: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type server_marksrange_stddev_fields {
  id: Float
  max: Float
  min: Float
}

"""aggregate stddev_pop on columns"""
type server_marksrange_stddev_pop_fields {
  id: Float
  max: Float
  min: Float
}

"""aggregate stddev_samp on columns"""
type server_marksrange_stddev_samp_fields {
  id: Float
  max: Float
  min: Float
}

"""aggregate sum on columns"""
type server_marksrange_sum_fields {
  id: Int
  max: Int
  min: Int
}

"""
update columns of table "server_marksrange"
"""
enum server_marksrange_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  max

  """column name"""
  min

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type server_marksrange_var_pop_fields {
  id: Float
  max: Float
  min: Float
}

"""aggregate var_samp on columns"""
type server_marksrange_var_samp_fields {
  id: Float
  max: Float
  min: Float
}

"""aggregate variance on columns"""
type server_marksrange_variance_fields {
  id: Float
  max: Float
  min: Float
}

"""
columns and relationships of "server_questiongroup"
"""
type server_questiongroup {
  """An array relationship"""
  assessment_au_question_aggregates(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): [assessment_au_question_aggregate!]!

  """An aggregate relationship"""
  assessment_au_question_aggregates_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): assessment_au_question_aggregate_aggregate!
  created: timestamptz
  id: Int!
  name: String!

  """An array relationship"""
  server_questiongroup_questions(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): [server_questiongroup_question!]!

  """An aggregate relationship"""
  server_questiongroup_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): server_questiongroup_question_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "server_questiongroup"
"""
type server_questiongroup_aggregate {
  aggregate: server_questiongroup_aggregate_fields
  nodes: [server_questiongroup!]!
}

"""
aggregate fields of "server_questiongroup"
"""
type server_questiongroup_aggregate_fields {
  avg: server_questiongroup_avg_fields
  count(columns: [server_questiongroup_select_column!], distinct: Boolean): Int!
  max: server_questiongroup_max_fields
  min: server_questiongroup_min_fields
  stddev: server_questiongroup_stddev_fields
  stddev_pop: server_questiongroup_stddev_pop_fields
  stddev_samp: server_questiongroup_stddev_samp_fields
  sum: server_questiongroup_sum_fields
  var_pop: server_questiongroup_var_pop_fields
  var_samp: server_questiongroup_var_samp_fields
  variance: server_questiongroup_variance_fields
}

"""aggregate avg on columns"""
type server_questiongroup_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "server_questiongroup". All fields are combined with a logical 'AND'.
"""
input server_questiongroup_bool_exp {
  _and: [server_questiongroup_bool_exp!]
  _not: server_questiongroup_bool_exp
  _or: [server_questiongroup_bool_exp!]
  assessment_au_question_aggregates: assessment_au_question_aggregate_bool_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  server_questiongroup_questions: server_questiongroup_question_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "server_questiongroup"
"""
enum server_questiongroup_constraint {
  """unique or primary key constraint"""
  server_questiongroup_pkey
}

"""
input type for incrementing numeric columns in table "server_questiongroup"
"""
input server_questiongroup_inc_input {
  id: Int
}

"""
input type for inserting data into table "server_questiongroup"
"""
input server_questiongroup_insert_input {
  assessment_au_question_aggregates: assessment_au_question_aggregate_arr_rel_insert_input
  created: timestamptz
  id: Int
  name: String
  server_questiongroup_questions: server_questiongroup_question_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type server_questiongroup_max_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type server_questiongroup_min_fields {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "server_questiongroup"
"""
type server_questiongroup_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [server_questiongroup!]!
}

"""
input type for inserting object relation for remote table "server_questiongroup"
"""
input server_questiongroup_obj_rel_insert_input {
  data: server_questiongroup_insert_input!

  """on conflict condition"""
  on_conflict: server_questiongroup_on_conflict
}

"""
on conflict condition type for table "server_questiongroup"
"""
input server_questiongroup_on_conflict {
  constraint: server_questiongroup_constraint!
  update_columns: [server_questiongroup_update_column!]! = []
  where: server_questiongroup_bool_exp
}

"""Ordering options when selecting data from "server_questiongroup"."""
input server_questiongroup_order_by {
  assessment_au_question_aggregates_aggregate: assessment_au_question_aggregate_aggregate_order_by
  created: order_by
  id: order_by
  name: order_by
  server_questiongroup_questions_aggregate: server_questiongroup_question_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: server_questiongroup"""
input server_questiongroup_pk_columns_input {
  id: Int!
}

"""
columns and relationships of "server_questiongroup_question"
"""
type server_questiongroup_question {
  id: Int!

  """An object relationship"""
  question: question!
  question_id: Int!
  questiongroup_id: Int!

  """An object relationship"""
  server_questiongroup: server_questiongroup!
}

"""
aggregated selection of "server_questiongroup_question"
"""
type server_questiongroup_question_aggregate {
  aggregate: server_questiongroup_question_aggregate_fields
  nodes: [server_questiongroup_question!]!
}

"""
aggregate fields of "server_questiongroup_question"
"""
type server_questiongroup_question_aggregate_fields {
  avg: server_questiongroup_question_avg_fields
  count(columns: [server_questiongroup_question_select_column!], distinct: Boolean): Int!
  max: server_questiongroup_question_max_fields
  min: server_questiongroup_question_min_fields
  stddev: server_questiongroup_question_stddev_fields
  stddev_pop: server_questiongroup_question_stddev_pop_fields
  stddev_samp: server_questiongroup_question_stddev_samp_fields
  sum: server_questiongroup_question_sum_fields
  var_pop: server_questiongroup_question_var_pop_fields
  var_samp: server_questiongroup_question_var_samp_fields
  variance: server_questiongroup_question_variance_fields
}

"""
order by aggregate values of table "server_questiongroup_question"
"""
input server_questiongroup_question_aggregate_order_by {
  avg: server_questiongroup_question_avg_order_by
  count: order_by
  max: server_questiongroup_question_max_order_by
  min: server_questiongroup_question_min_order_by
  stddev: server_questiongroup_question_stddev_order_by
  stddev_pop: server_questiongroup_question_stddev_pop_order_by
  stddev_samp: server_questiongroup_question_stddev_samp_order_by
  sum: server_questiongroup_question_sum_order_by
  var_pop: server_questiongroup_question_var_pop_order_by
  var_samp: server_questiongroup_question_var_samp_order_by
  variance: server_questiongroup_question_variance_order_by
}

"""
input type for inserting array relation for remote table "server_questiongroup_question"
"""
input server_questiongroup_question_arr_rel_insert_input {
  data: [server_questiongroup_question_insert_input!]!

  """on conflict condition"""
  on_conflict: server_questiongroup_question_on_conflict
}

"""aggregate avg on columns"""
type server_questiongroup_question_avg_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by avg() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_avg_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""
Boolean expression to filter rows from the table "server_questiongroup_question". All fields are combined with a logical 'AND'.
"""
input server_questiongroup_question_bool_exp {
  _and: [server_questiongroup_question_bool_exp!]
  _not: server_questiongroup_question_bool_exp
  _or: [server_questiongroup_question_bool_exp!]
  id: Int_comparison_exp
  question: question_bool_exp
  question_id: Int_comparison_exp
  questiongroup_id: Int_comparison_exp
  server_questiongroup: server_questiongroup_bool_exp
}

"""
unique or primary key constraints on table "server_questiongroup_question"
"""
enum server_questiongroup_question_constraint {
  """unique or primary key constraint"""
  server_questiongroup_que_questiongroup_id_questio_ce11f00d_uniq

  """unique or primary key constraint"""
  server_questiongroup_question_pkey
}

"""
input type for incrementing numeric columns in table "server_questiongroup_question"
"""
input server_questiongroup_question_inc_input {
  id: Int
  question_id: Int
  questiongroup_id: Int
}

"""
input type for inserting data into table "server_questiongroup_question"
"""
input server_questiongroup_question_insert_input {
  id: Int
  question: question_obj_rel_insert_input
  question_id: Int
  questiongroup_id: Int
  server_questiongroup: server_questiongroup_obj_rel_insert_input
}

"""aggregate max on columns"""
type server_questiongroup_question_max_fields {
  id: Int
  question_id: Int
  questiongroup_id: Int
}

"""
order by max() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_max_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""aggregate min on columns"""
type server_questiongroup_question_min_fields {
  id: Int
  question_id: Int
  questiongroup_id: Int
}

"""
order by min() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_min_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""
response of any mutation on the table "server_questiongroup_question"
"""
type server_questiongroup_question_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [server_questiongroup_question!]!
}

"""
on conflict condition type for table "server_questiongroup_question"
"""
input server_questiongroup_question_on_conflict {
  constraint: server_questiongroup_question_constraint!
  update_columns: [server_questiongroup_question_update_column!]! = []
  where: server_questiongroup_question_bool_exp
}

"""
Ordering options when selecting data from "server_questiongroup_question".
"""
input server_questiongroup_question_order_by {
  id: order_by
  question: question_order_by
  question_id: order_by
  questiongroup_id: order_by
  server_questiongroup: server_questiongroup_order_by
}

"""primary key columns input for table: server_questiongroup_question"""
input server_questiongroup_question_pk_columns_input {
  id: Int!
}

"""
select columns of table "server_questiongroup_question"
"""
enum server_questiongroup_question_select_column {
  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  questiongroup_id
}

"""
input type for updating data in table "server_questiongroup_question"
"""
input server_questiongroup_question_set_input {
  id: Int
  question_id: Int
  questiongroup_id: Int
}

"""aggregate stddev on columns"""
type server_questiongroup_question_stddev_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by stddev() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_stddev_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""aggregate stddev_pop on columns"""
type server_questiongroup_question_stddev_pop_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by stddev_pop() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_stddev_pop_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""aggregate stddev_samp on columns"""
type server_questiongroup_question_stddev_samp_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by stddev_samp() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_stddev_samp_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""aggregate sum on columns"""
type server_questiongroup_question_sum_fields {
  id: Int
  question_id: Int
  questiongroup_id: Int
}

"""
order by sum() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_sum_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""
update columns of table "server_questiongroup_question"
"""
enum server_questiongroup_question_update_column {
  """column name"""
  id

  """column name"""
  question_id

  """column name"""
  questiongroup_id
}

"""aggregate var_pop on columns"""
type server_questiongroup_question_var_pop_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by var_pop() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_var_pop_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""aggregate var_samp on columns"""
type server_questiongroup_question_var_samp_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by var_samp() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_var_samp_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""aggregate variance on columns"""
type server_questiongroup_question_variance_fields {
  id: Float
  question_id: Float
  questiongroup_id: Float
}

"""
order by variance() on columns of table "server_questiongroup_question"
"""
input server_questiongroup_question_variance_order_by {
  id: order_by
  question_id: order_by
  questiongroup_id: order_by
}

"""
select columns of table "server_questiongroup"
"""
enum server_questiongroup_select_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "server_questiongroup"
"""
input server_questiongroup_set_input {
  created: timestamptz
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type server_questiongroup_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type server_questiongroup_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type server_questiongroup_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type server_questiongroup_sum_fields {
  id: Int
}

"""
update columns of table "server_questiongroup"
"""
enum server_questiongroup_update_column {
  """column name"""
  created

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type server_questiongroup_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type server_questiongroup_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type server_questiongroup_variance_fields {
  id: Float
}

"""
columns and relationships of "silk_profile"
"""
type silk_profile {
  dynamic: Boolean!
  end_line_num: Int
  end_time: timestamptz
  exception_raised: Boolean!
  file_path: String!
  func_name: String!
  id: Int!
  line_num: Int
  name: String!
  request_id: String

  """An array relationship"""
  silk_profile_queries(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): [silk_profile_queries!]!

  """An aggregate relationship"""
  silk_profile_queries_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): silk_profile_queries_aggregate!

  """An object relationship"""
  silk_request: silk_request
  start_time: timestamptz!
  time_taken: float8
}

"""
aggregated selection of "silk_profile"
"""
type silk_profile_aggregate {
  aggregate: silk_profile_aggregate_fields
  nodes: [silk_profile!]!
}

"""
aggregate fields of "silk_profile"
"""
type silk_profile_aggregate_fields {
  avg: silk_profile_avg_fields
  count(columns: [silk_profile_select_column!], distinct: Boolean): Int!
  max: silk_profile_max_fields
  min: silk_profile_min_fields
  stddev: silk_profile_stddev_fields
  stddev_pop: silk_profile_stddev_pop_fields
  stddev_samp: silk_profile_stddev_samp_fields
  sum: silk_profile_sum_fields
  var_pop: silk_profile_var_pop_fields
  var_samp: silk_profile_var_samp_fields
  variance: silk_profile_variance_fields
}

"""
order by aggregate values of table "silk_profile"
"""
input silk_profile_aggregate_order_by {
  avg: silk_profile_avg_order_by
  count: order_by
  max: silk_profile_max_order_by
  min: silk_profile_min_order_by
  stddev: silk_profile_stddev_order_by
  stddev_pop: silk_profile_stddev_pop_order_by
  stddev_samp: silk_profile_stddev_samp_order_by
  sum: silk_profile_sum_order_by
  var_pop: silk_profile_var_pop_order_by
  var_samp: silk_profile_var_samp_order_by
  variance: silk_profile_variance_order_by
}

"""
input type for inserting array relation for remote table "silk_profile"
"""
input silk_profile_arr_rel_insert_input {
  data: [silk_profile_insert_input!]!

  """on conflict condition"""
  on_conflict: silk_profile_on_conflict
}

"""aggregate avg on columns"""
type silk_profile_avg_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by avg() on columns of table "silk_profile"
"""
input silk_profile_avg_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""
Boolean expression to filter rows from the table "silk_profile". All fields are combined with a logical 'AND'.
"""
input silk_profile_bool_exp {
  _and: [silk_profile_bool_exp!]
  _not: silk_profile_bool_exp
  _or: [silk_profile_bool_exp!]
  dynamic: Boolean_comparison_exp
  end_line_num: Int_comparison_exp
  end_time: timestamptz_comparison_exp
  exception_raised: Boolean_comparison_exp
  file_path: String_comparison_exp
  func_name: String_comparison_exp
  id: Int_comparison_exp
  line_num: Int_comparison_exp
  name: String_comparison_exp
  request_id: String_comparison_exp
  silk_profile_queries: silk_profile_queries_bool_exp
  silk_request: silk_request_bool_exp
  start_time: timestamptz_comparison_exp
  time_taken: float8_comparison_exp
}

"""
unique or primary key constraints on table "silk_profile"
"""
enum silk_profile_constraint {
  """unique or primary key constraint"""
  silk_profile_pkey
}

"""
input type for incrementing numeric columns in table "silk_profile"
"""
input silk_profile_inc_input {
  end_line_num: Int
  id: Int
  line_num: Int
  time_taken: float8
}

"""
input type for inserting data into table "silk_profile"
"""
input silk_profile_insert_input {
  dynamic: Boolean
  end_line_num: Int
  end_time: timestamptz
  exception_raised: Boolean
  file_path: String
  func_name: String
  id: Int
  line_num: Int
  name: String
  request_id: String
  silk_profile_queries: silk_profile_queries_arr_rel_insert_input
  silk_request: silk_request_obj_rel_insert_input
  start_time: timestamptz
  time_taken: float8
}

"""aggregate max on columns"""
type silk_profile_max_fields {
  end_line_num: Int
  end_time: timestamptz
  file_path: String
  func_name: String
  id: Int
  line_num: Int
  name: String
  request_id: String
  start_time: timestamptz
  time_taken: float8
}

"""
order by max() on columns of table "silk_profile"
"""
input silk_profile_max_order_by {
  end_line_num: order_by
  end_time: order_by
  file_path: order_by
  func_name: order_by
  id: order_by
  line_num: order_by
  name: order_by
  request_id: order_by
  start_time: order_by
  time_taken: order_by
}

"""aggregate min on columns"""
type silk_profile_min_fields {
  end_line_num: Int
  end_time: timestamptz
  file_path: String
  func_name: String
  id: Int
  line_num: Int
  name: String
  request_id: String
  start_time: timestamptz
  time_taken: float8
}

"""
order by min() on columns of table "silk_profile"
"""
input silk_profile_min_order_by {
  end_line_num: order_by
  end_time: order_by
  file_path: order_by
  func_name: order_by
  id: order_by
  line_num: order_by
  name: order_by
  request_id: order_by
  start_time: order_by
  time_taken: order_by
}

"""
response of any mutation on the table "silk_profile"
"""
type silk_profile_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [silk_profile!]!
}

"""
input type for inserting object relation for remote table "silk_profile"
"""
input silk_profile_obj_rel_insert_input {
  data: silk_profile_insert_input!

  """on conflict condition"""
  on_conflict: silk_profile_on_conflict
}

"""
on conflict condition type for table "silk_profile"
"""
input silk_profile_on_conflict {
  constraint: silk_profile_constraint!
  update_columns: [silk_profile_update_column!]! = []
  where: silk_profile_bool_exp
}

"""Ordering options when selecting data from "silk_profile"."""
input silk_profile_order_by {
  dynamic: order_by
  end_line_num: order_by
  end_time: order_by
  exception_raised: order_by
  file_path: order_by
  func_name: order_by
  id: order_by
  line_num: order_by
  name: order_by
  request_id: order_by
  silk_profile_queries_aggregate: silk_profile_queries_aggregate_order_by
  silk_request: silk_request_order_by
  start_time: order_by
  time_taken: order_by
}

"""primary key columns input for table: silk_profile"""
input silk_profile_pk_columns_input {
  id: Int!
}

"""
columns and relationships of "silk_profile_queries"
"""
type silk_profile_queries {
  id: Int!
  profile_id: Int!

  """An object relationship"""
  silk_profile: silk_profile!

  """An object relationship"""
  silk_sqlquery: silk_sqlquery!
  sqlquery_id: Int!
}

"""
aggregated selection of "silk_profile_queries"
"""
type silk_profile_queries_aggregate {
  aggregate: silk_profile_queries_aggregate_fields
  nodes: [silk_profile_queries!]!
}

"""
aggregate fields of "silk_profile_queries"
"""
type silk_profile_queries_aggregate_fields {
  avg: silk_profile_queries_avg_fields
  count(columns: [silk_profile_queries_select_column!], distinct: Boolean): Int!
  max: silk_profile_queries_max_fields
  min: silk_profile_queries_min_fields
  stddev: silk_profile_queries_stddev_fields
  stddev_pop: silk_profile_queries_stddev_pop_fields
  stddev_samp: silk_profile_queries_stddev_samp_fields
  sum: silk_profile_queries_sum_fields
  var_pop: silk_profile_queries_var_pop_fields
  var_samp: silk_profile_queries_var_samp_fields
  variance: silk_profile_queries_variance_fields
}

"""
order by aggregate values of table "silk_profile_queries"
"""
input silk_profile_queries_aggregate_order_by {
  avg: silk_profile_queries_avg_order_by
  count: order_by
  max: silk_profile_queries_max_order_by
  min: silk_profile_queries_min_order_by
  stddev: silk_profile_queries_stddev_order_by
  stddev_pop: silk_profile_queries_stddev_pop_order_by
  stddev_samp: silk_profile_queries_stddev_samp_order_by
  sum: silk_profile_queries_sum_order_by
  var_pop: silk_profile_queries_var_pop_order_by
  var_samp: silk_profile_queries_var_samp_order_by
  variance: silk_profile_queries_variance_order_by
}

"""
input type for inserting array relation for remote table "silk_profile_queries"
"""
input silk_profile_queries_arr_rel_insert_input {
  data: [silk_profile_queries_insert_input!]!

  """on conflict condition"""
  on_conflict: silk_profile_queries_on_conflict
}

"""aggregate avg on columns"""
type silk_profile_queries_avg_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by avg() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_avg_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""
Boolean expression to filter rows from the table "silk_profile_queries". All fields are combined with a logical 'AND'.
"""
input silk_profile_queries_bool_exp {
  _and: [silk_profile_queries_bool_exp!]
  _not: silk_profile_queries_bool_exp
  _or: [silk_profile_queries_bool_exp!]
  id: Int_comparison_exp
  profile_id: Int_comparison_exp
  silk_profile: silk_profile_bool_exp
  silk_sqlquery: silk_sqlquery_bool_exp
  sqlquery_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "silk_profile_queries"
"""
enum silk_profile_queries_constraint {
  """unique or primary key constraint"""
  silk_profile_queries_pkey

  """unique or primary key constraint"""
  silk_profile_queries_profile_id_sqlquery_id_b2403d9b_uniq
}

"""
input type for incrementing numeric columns in table "silk_profile_queries"
"""
input silk_profile_queries_inc_input {
  id: Int
  profile_id: Int
  sqlquery_id: Int
}

"""
input type for inserting data into table "silk_profile_queries"
"""
input silk_profile_queries_insert_input {
  id: Int
  profile_id: Int
  silk_profile: silk_profile_obj_rel_insert_input
  silk_sqlquery: silk_sqlquery_obj_rel_insert_input
  sqlquery_id: Int
}

"""aggregate max on columns"""
type silk_profile_queries_max_fields {
  id: Int
  profile_id: Int
  sqlquery_id: Int
}

"""
order by max() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_max_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""aggregate min on columns"""
type silk_profile_queries_min_fields {
  id: Int
  profile_id: Int
  sqlquery_id: Int
}

"""
order by min() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_min_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""
response of any mutation on the table "silk_profile_queries"
"""
type silk_profile_queries_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [silk_profile_queries!]!
}

"""
on conflict condition type for table "silk_profile_queries"
"""
input silk_profile_queries_on_conflict {
  constraint: silk_profile_queries_constraint!
  update_columns: [silk_profile_queries_update_column!]! = []
  where: silk_profile_queries_bool_exp
}

"""Ordering options when selecting data from "silk_profile_queries"."""
input silk_profile_queries_order_by {
  id: order_by
  profile_id: order_by
  silk_profile: silk_profile_order_by
  silk_sqlquery: silk_sqlquery_order_by
  sqlquery_id: order_by
}

"""primary key columns input for table: silk_profile_queries"""
input silk_profile_queries_pk_columns_input {
  id: Int!
}

"""
select columns of table "silk_profile_queries"
"""
enum silk_profile_queries_select_column {
  """column name"""
  id

  """column name"""
  profile_id

  """column name"""
  sqlquery_id
}

"""
input type for updating data in table "silk_profile_queries"
"""
input silk_profile_queries_set_input {
  id: Int
  profile_id: Int
  sqlquery_id: Int
}

"""aggregate stddev on columns"""
type silk_profile_queries_stddev_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by stddev() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_stddev_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""aggregate stddev_pop on columns"""
type silk_profile_queries_stddev_pop_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by stddev_pop() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_stddev_pop_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""aggregate stddev_samp on columns"""
type silk_profile_queries_stddev_samp_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by stddev_samp() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_stddev_samp_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""aggregate sum on columns"""
type silk_profile_queries_sum_fields {
  id: Int
  profile_id: Int
  sqlquery_id: Int
}

"""
order by sum() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_sum_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""
update columns of table "silk_profile_queries"
"""
enum silk_profile_queries_update_column {
  """column name"""
  id

  """column name"""
  profile_id

  """column name"""
  sqlquery_id
}

"""aggregate var_pop on columns"""
type silk_profile_queries_var_pop_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by var_pop() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_var_pop_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""aggregate var_samp on columns"""
type silk_profile_queries_var_samp_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by var_samp() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_var_samp_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""aggregate variance on columns"""
type silk_profile_queries_variance_fields {
  id: Float
  profile_id: Float
  sqlquery_id: Float
}

"""
order by variance() on columns of table "silk_profile_queries"
"""
input silk_profile_queries_variance_order_by {
  id: order_by
  profile_id: order_by
  sqlquery_id: order_by
}

"""
select columns of table "silk_profile"
"""
enum silk_profile_select_column {
  """column name"""
  dynamic

  """column name"""
  end_line_num

  """column name"""
  end_time

  """column name"""
  exception_raised

  """column name"""
  file_path

  """column name"""
  func_name

  """column name"""
  id

  """column name"""
  line_num

  """column name"""
  name

  """column name"""
  request_id

  """column name"""
  start_time

  """column name"""
  time_taken
}

"""
input type for updating data in table "silk_profile"
"""
input silk_profile_set_input {
  dynamic: Boolean
  end_line_num: Int
  end_time: timestamptz
  exception_raised: Boolean
  file_path: String
  func_name: String
  id: Int
  line_num: Int
  name: String
  request_id: String
  start_time: timestamptz
  time_taken: float8
}

"""aggregate stddev on columns"""
type silk_profile_stddev_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by stddev() on columns of table "silk_profile"
"""
input silk_profile_stddev_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""aggregate stddev_pop on columns"""
type silk_profile_stddev_pop_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by stddev_pop() on columns of table "silk_profile"
"""
input silk_profile_stddev_pop_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""aggregate stddev_samp on columns"""
type silk_profile_stddev_samp_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by stddev_samp() on columns of table "silk_profile"
"""
input silk_profile_stddev_samp_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""aggregate sum on columns"""
type silk_profile_sum_fields {
  end_line_num: Int
  id: Int
  line_num: Int
  time_taken: float8
}

"""
order by sum() on columns of table "silk_profile"
"""
input silk_profile_sum_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""
update columns of table "silk_profile"
"""
enum silk_profile_update_column {
  """column name"""
  dynamic

  """column name"""
  end_line_num

  """column name"""
  end_time

  """column name"""
  exception_raised

  """column name"""
  file_path

  """column name"""
  func_name

  """column name"""
  id

  """column name"""
  line_num

  """column name"""
  name

  """column name"""
  request_id

  """column name"""
  start_time

  """column name"""
  time_taken
}

"""aggregate var_pop on columns"""
type silk_profile_var_pop_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by var_pop() on columns of table "silk_profile"
"""
input silk_profile_var_pop_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""aggregate var_samp on columns"""
type silk_profile_var_samp_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by var_samp() on columns of table "silk_profile"
"""
input silk_profile_var_samp_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""aggregate variance on columns"""
type silk_profile_variance_fields {
  end_line_num: Float
  id: Float
  line_num: Float
  time_taken: Float
}

"""
order by variance() on columns of table "silk_profile"
"""
input silk_profile_variance_order_by {
  end_line_num: order_by
  id: order_by
  line_num: order_by
  time_taken: order_by
}

"""
columns and relationships of "silk_request"
"""
type silk_request {
  body: String!
  encoded_headers: String!
  end_time: timestamptz
  id: String!
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  method: String!
  num_sql_queries: Int!
  path: String!
  prof_file: String!
  pyprofile: String!
  query_params: String!
  raw_body: String!

  """An array relationship"""
  silk_profiles(
    """distinct select on columns"""
    distinct_on: [silk_profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_order_by!]

    """filter the rows returned"""
    where: silk_profile_bool_exp
  ): [silk_profile!]!

  """An aggregate relationship"""
  silk_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_order_by!]

    """filter the rows returned"""
    where: silk_profile_bool_exp
  ): silk_profile_aggregate!

  """An object relationship"""
  silk_response: silk_response!

  """An array relationship"""
  silk_sqlqueries(
    """distinct select on columns"""
    distinct_on: [silk_sqlquery_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_sqlquery_order_by!]

    """filter the rows returned"""
    where: silk_sqlquery_bool_exp
  ): [silk_sqlquery!]!

  """An aggregate relationship"""
  silk_sqlqueries_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_sqlquery_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_sqlquery_order_by!]

    """filter the rows returned"""
    where: silk_sqlquery_bool_exp
  ): silk_sqlquery_aggregate!
  start_time: timestamptz!
  time_taken: float8
  view_name: String
}

"""
aggregated selection of "silk_request"
"""
type silk_request_aggregate {
  aggregate: silk_request_aggregate_fields
  nodes: [silk_request!]!
}

"""
aggregate fields of "silk_request"
"""
type silk_request_aggregate_fields {
  avg: silk_request_avg_fields
  count(columns: [silk_request_select_column!], distinct: Boolean): Int!
  max: silk_request_max_fields
  min: silk_request_min_fields
  stddev: silk_request_stddev_fields
  stddev_pop: silk_request_stddev_pop_fields
  stddev_samp: silk_request_stddev_samp_fields
  sum: silk_request_sum_fields
  var_pop: silk_request_var_pop_fields
  var_samp: silk_request_var_samp_fields
  variance: silk_request_variance_fields
}

"""aggregate avg on columns"""
type silk_request_avg_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""
Boolean expression to filter rows from the table "silk_request". All fields are combined with a logical 'AND'.
"""
input silk_request_bool_exp {
  _and: [silk_request_bool_exp!]
  _not: silk_request_bool_exp
  _or: [silk_request_bool_exp!]
  body: String_comparison_exp
  encoded_headers: String_comparison_exp
  end_time: timestamptz_comparison_exp
  id: String_comparison_exp
  meta_num_queries: Int_comparison_exp
  meta_time: float8_comparison_exp
  meta_time_spent_queries: float8_comparison_exp
  method: String_comparison_exp
  num_sql_queries: Int_comparison_exp
  path: String_comparison_exp
  prof_file: String_comparison_exp
  pyprofile: String_comparison_exp
  query_params: String_comparison_exp
  raw_body: String_comparison_exp
  silk_profiles: silk_profile_bool_exp
  silk_response: silk_response_bool_exp
  silk_sqlqueries: silk_sqlquery_bool_exp
  start_time: timestamptz_comparison_exp
  time_taken: float8_comparison_exp
  view_name: String_comparison_exp
}

"""
unique or primary key constraints on table "silk_request"
"""
enum silk_request_constraint {
  """unique or primary key constraint"""
  silk_request_pkey
}

"""
input type for incrementing numeric columns in table "silk_request"
"""
input silk_request_inc_input {
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  num_sql_queries: Int
  time_taken: float8
}

"""
input type for inserting data into table "silk_request"
"""
input silk_request_insert_input {
  body: String
  encoded_headers: String
  end_time: timestamptz
  id: String
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  method: String
  num_sql_queries: Int
  path: String
  prof_file: String
  pyprofile: String
  query_params: String
  raw_body: String
  silk_profiles: silk_profile_arr_rel_insert_input
  silk_response: silk_response_obj_rel_insert_input
  silk_sqlqueries: silk_sqlquery_arr_rel_insert_input
  start_time: timestamptz
  time_taken: float8
  view_name: String
}

"""aggregate max on columns"""
type silk_request_max_fields {
  body: String
  encoded_headers: String
  end_time: timestamptz
  id: String
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  method: String
  num_sql_queries: Int
  path: String
  prof_file: String
  pyprofile: String
  query_params: String
  raw_body: String
  start_time: timestamptz
  time_taken: float8
  view_name: String
}

"""aggregate min on columns"""
type silk_request_min_fields {
  body: String
  encoded_headers: String
  end_time: timestamptz
  id: String
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  method: String
  num_sql_queries: Int
  path: String
  prof_file: String
  pyprofile: String
  query_params: String
  raw_body: String
  start_time: timestamptz
  time_taken: float8
  view_name: String
}

"""
response of any mutation on the table "silk_request"
"""
type silk_request_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [silk_request!]!
}

"""
input type for inserting object relation for remote table "silk_request"
"""
input silk_request_obj_rel_insert_input {
  data: silk_request_insert_input!

  """on conflict condition"""
  on_conflict: silk_request_on_conflict
}

"""
on conflict condition type for table "silk_request"
"""
input silk_request_on_conflict {
  constraint: silk_request_constraint!
  update_columns: [silk_request_update_column!]! = []
  where: silk_request_bool_exp
}

"""Ordering options when selecting data from "silk_request"."""
input silk_request_order_by {
  body: order_by
  encoded_headers: order_by
  end_time: order_by
  id: order_by
  meta_num_queries: order_by
  meta_time: order_by
  meta_time_spent_queries: order_by
  method: order_by
  num_sql_queries: order_by
  path: order_by
  prof_file: order_by
  pyprofile: order_by
  query_params: order_by
  raw_body: order_by
  silk_profiles_aggregate: silk_profile_aggregate_order_by
  silk_response: silk_response_order_by
  silk_sqlqueries_aggregate: silk_sqlquery_aggregate_order_by
  start_time: order_by
  time_taken: order_by
  view_name: order_by
}

"""primary key columns input for table: silk_request"""
input silk_request_pk_columns_input {
  id: String!
}

"""
select columns of table "silk_request"
"""
enum silk_request_select_column {
  """column name"""
  body

  """column name"""
  encoded_headers

  """column name"""
  end_time

  """column name"""
  id

  """column name"""
  meta_num_queries

  """column name"""
  meta_time

  """column name"""
  meta_time_spent_queries

  """column name"""
  method

  """column name"""
  num_sql_queries

  """column name"""
  path

  """column name"""
  prof_file

  """column name"""
  pyprofile

  """column name"""
  query_params

  """column name"""
  raw_body

  """column name"""
  start_time

  """column name"""
  time_taken

  """column name"""
  view_name
}

"""
input type for updating data in table "silk_request"
"""
input silk_request_set_input {
  body: String
  encoded_headers: String
  end_time: timestamptz
  id: String
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  method: String
  num_sql_queries: Int
  path: String
  prof_file: String
  pyprofile: String
  query_params: String
  raw_body: String
  start_time: timestamptz
  time_taken: float8
  view_name: String
}

"""aggregate stddev on columns"""
type silk_request_stddev_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""aggregate stddev_pop on columns"""
type silk_request_stddev_pop_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""aggregate stddev_samp on columns"""
type silk_request_stddev_samp_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""aggregate sum on columns"""
type silk_request_sum_fields {
  meta_num_queries: Int
  meta_time: float8
  meta_time_spent_queries: float8
  num_sql_queries: Int
  time_taken: float8
}

"""
update columns of table "silk_request"
"""
enum silk_request_update_column {
  """column name"""
  body

  """column name"""
  encoded_headers

  """column name"""
  end_time

  """column name"""
  id

  """column name"""
  meta_num_queries

  """column name"""
  meta_time

  """column name"""
  meta_time_spent_queries

  """column name"""
  method

  """column name"""
  num_sql_queries

  """column name"""
  path

  """column name"""
  prof_file

  """column name"""
  pyprofile

  """column name"""
  query_params

  """column name"""
  raw_body

  """column name"""
  start_time

  """column name"""
  time_taken

  """column name"""
  view_name
}

"""aggregate var_pop on columns"""
type silk_request_var_pop_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""aggregate var_samp on columns"""
type silk_request_var_samp_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""aggregate variance on columns"""
type silk_request_variance_fields {
  meta_num_queries: Float
  meta_time: Float
  meta_time_spent_queries: Float
  num_sql_queries: Float
  time_taken: Float
}

"""
columns and relationships of "silk_response"
"""
type silk_response {
  body: String!
  encoded_headers: String!
  id: String!
  raw_body: String!
  request_id: String!

  """An object relationship"""
  silk_request: silk_request!
  status_code: Int!
}

"""
aggregated selection of "silk_response"
"""
type silk_response_aggregate {
  aggregate: silk_response_aggregate_fields
  nodes: [silk_response!]!
}

"""
aggregate fields of "silk_response"
"""
type silk_response_aggregate_fields {
  avg: silk_response_avg_fields
  count(columns: [silk_response_select_column!], distinct: Boolean): Int!
  max: silk_response_max_fields
  min: silk_response_min_fields
  stddev: silk_response_stddev_fields
  stddev_pop: silk_response_stddev_pop_fields
  stddev_samp: silk_response_stddev_samp_fields
  sum: silk_response_sum_fields
  var_pop: silk_response_var_pop_fields
  var_samp: silk_response_var_samp_fields
  variance: silk_response_variance_fields
}

"""aggregate avg on columns"""
type silk_response_avg_fields {
  status_code: Float
}

"""
Boolean expression to filter rows from the table "silk_response". All fields are combined with a logical 'AND'.
"""
input silk_response_bool_exp {
  _and: [silk_response_bool_exp!]
  _not: silk_response_bool_exp
  _or: [silk_response_bool_exp!]
  body: String_comparison_exp
  encoded_headers: String_comparison_exp
  id: String_comparison_exp
  raw_body: String_comparison_exp
  request_id: String_comparison_exp
  silk_request: silk_request_bool_exp
  status_code: Int_comparison_exp
}

"""
unique or primary key constraints on table "silk_response"
"""
enum silk_response_constraint {
  """unique or primary key constraint"""
  silk_response_pkey

  """unique or primary key constraint"""
  silk_response_request_id_key
}

"""
input type for incrementing numeric columns in table "silk_response"
"""
input silk_response_inc_input {
  status_code: Int
}

"""
input type for inserting data into table "silk_response"
"""
input silk_response_insert_input {
  body: String
  encoded_headers: String
  id: String
  raw_body: String
  request_id: String
  silk_request: silk_request_obj_rel_insert_input
  status_code: Int
}

"""aggregate max on columns"""
type silk_response_max_fields {
  body: String
  encoded_headers: String
  id: String
  raw_body: String
  request_id: String
  status_code: Int
}

"""aggregate min on columns"""
type silk_response_min_fields {
  body: String
  encoded_headers: String
  id: String
  raw_body: String
  request_id: String
  status_code: Int
}

"""
response of any mutation on the table "silk_response"
"""
type silk_response_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [silk_response!]!
}

"""
input type for inserting object relation for remote table "silk_response"
"""
input silk_response_obj_rel_insert_input {
  data: silk_response_insert_input!

  """on conflict condition"""
  on_conflict: silk_response_on_conflict
}

"""
on conflict condition type for table "silk_response"
"""
input silk_response_on_conflict {
  constraint: silk_response_constraint!
  update_columns: [silk_response_update_column!]! = []
  where: silk_response_bool_exp
}

"""Ordering options when selecting data from "silk_response"."""
input silk_response_order_by {
  body: order_by
  encoded_headers: order_by
  id: order_by
  raw_body: order_by
  request_id: order_by
  silk_request: silk_request_order_by
  status_code: order_by
}

"""primary key columns input for table: silk_response"""
input silk_response_pk_columns_input {
  id: String!
}

"""
select columns of table "silk_response"
"""
enum silk_response_select_column {
  """column name"""
  body

  """column name"""
  encoded_headers

  """column name"""
  id

  """column name"""
  raw_body

  """column name"""
  request_id

  """column name"""
  status_code
}

"""
input type for updating data in table "silk_response"
"""
input silk_response_set_input {
  body: String
  encoded_headers: String
  id: String
  raw_body: String
  request_id: String
  status_code: Int
}

"""aggregate stddev on columns"""
type silk_response_stddev_fields {
  status_code: Float
}

"""aggregate stddev_pop on columns"""
type silk_response_stddev_pop_fields {
  status_code: Float
}

"""aggregate stddev_samp on columns"""
type silk_response_stddev_samp_fields {
  status_code: Float
}

"""aggregate sum on columns"""
type silk_response_sum_fields {
  status_code: Int
}

"""
update columns of table "silk_response"
"""
enum silk_response_update_column {
  """column name"""
  body

  """column name"""
  encoded_headers

  """column name"""
  id

  """column name"""
  raw_body

  """column name"""
  request_id

  """column name"""
  status_code
}

"""aggregate var_pop on columns"""
type silk_response_var_pop_fields {
  status_code: Float
}

"""aggregate var_samp on columns"""
type silk_response_var_samp_fields {
  status_code: Float
}

"""aggregate variance on columns"""
type silk_response_variance_fields {
  status_code: Float
}

"""
columns and relationships of "silk_sqlquery"
"""
type silk_sqlquery {
  analysis: String
  end_time: timestamptz
  id: Int!
  identifier: Int!
  query: String!
  request_id: String

  """An array relationship"""
  silk_profile_queries(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): [silk_profile_queries!]!

  """An aggregate relationship"""
  silk_profile_queries_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): silk_profile_queries_aggregate!

  """An object relationship"""
  silk_request: silk_request
  start_time: timestamptz
  time_taken: float8
  traceback: String!
}

"""
aggregated selection of "silk_sqlquery"
"""
type silk_sqlquery_aggregate {
  aggregate: silk_sqlquery_aggregate_fields
  nodes: [silk_sqlquery!]!
}

"""
aggregate fields of "silk_sqlquery"
"""
type silk_sqlquery_aggregate_fields {
  avg: silk_sqlquery_avg_fields
  count(columns: [silk_sqlquery_select_column!], distinct: Boolean): Int!
  max: silk_sqlquery_max_fields
  min: silk_sqlquery_min_fields
  stddev: silk_sqlquery_stddev_fields
  stddev_pop: silk_sqlquery_stddev_pop_fields
  stddev_samp: silk_sqlquery_stddev_samp_fields
  sum: silk_sqlquery_sum_fields
  var_pop: silk_sqlquery_var_pop_fields
  var_samp: silk_sqlquery_var_samp_fields
  variance: silk_sqlquery_variance_fields
}

"""
order by aggregate values of table "silk_sqlquery"
"""
input silk_sqlquery_aggregate_order_by {
  avg: silk_sqlquery_avg_order_by
  count: order_by
  max: silk_sqlquery_max_order_by
  min: silk_sqlquery_min_order_by
  stddev: silk_sqlquery_stddev_order_by
  stddev_pop: silk_sqlquery_stddev_pop_order_by
  stddev_samp: silk_sqlquery_stddev_samp_order_by
  sum: silk_sqlquery_sum_order_by
  var_pop: silk_sqlquery_var_pop_order_by
  var_samp: silk_sqlquery_var_samp_order_by
  variance: silk_sqlquery_variance_order_by
}

"""
input type for inserting array relation for remote table "silk_sqlquery"
"""
input silk_sqlquery_arr_rel_insert_input {
  data: [silk_sqlquery_insert_input!]!

  """on conflict condition"""
  on_conflict: silk_sqlquery_on_conflict
}

"""aggregate avg on columns"""
type silk_sqlquery_avg_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by avg() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_avg_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""
Boolean expression to filter rows from the table "silk_sqlquery". All fields are combined with a logical 'AND'.
"""
input silk_sqlquery_bool_exp {
  _and: [silk_sqlquery_bool_exp!]
  _not: silk_sqlquery_bool_exp
  _or: [silk_sqlquery_bool_exp!]
  analysis: String_comparison_exp
  end_time: timestamptz_comparison_exp
  id: Int_comparison_exp
  identifier: Int_comparison_exp
  query: String_comparison_exp
  request_id: String_comparison_exp
  silk_profile_queries: silk_profile_queries_bool_exp
  silk_request: silk_request_bool_exp
  start_time: timestamptz_comparison_exp
  time_taken: float8_comparison_exp
  traceback: String_comparison_exp
}

"""
unique or primary key constraints on table "silk_sqlquery"
"""
enum silk_sqlquery_constraint {
  """unique or primary key constraint"""
  silk_sqlquery_pkey
}

"""
input type for incrementing numeric columns in table "silk_sqlquery"
"""
input silk_sqlquery_inc_input {
  id: Int
  identifier: Int
  time_taken: float8
}

"""
input type for inserting data into table "silk_sqlquery"
"""
input silk_sqlquery_insert_input {
  analysis: String
  end_time: timestamptz
  id: Int
  identifier: Int
  query: String
  request_id: String
  silk_profile_queries: silk_profile_queries_arr_rel_insert_input
  silk_request: silk_request_obj_rel_insert_input
  start_time: timestamptz
  time_taken: float8
  traceback: String
}

"""aggregate max on columns"""
type silk_sqlquery_max_fields {
  analysis: String
  end_time: timestamptz
  id: Int
  identifier: Int
  query: String
  request_id: String
  start_time: timestamptz
  time_taken: float8
  traceback: String
}

"""
order by max() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_max_order_by {
  analysis: order_by
  end_time: order_by
  id: order_by
  identifier: order_by
  query: order_by
  request_id: order_by
  start_time: order_by
  time_taken: order_by
  traceback: order_by
}

"""aggregate min on columns"""
type silk_sqlquery_min_fields {
  analysis: String
  end_time: timestamptz
  id: Int
  identifier: Int
  query: String
  request_id: String
  start_time: timestamptz
  time_taken: float8
  traceback: String
}

"""
order by min() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_min_order_by {
  analysis: order_by
  end_time: order_by
  id: order_by
  identifier: order_by
  query: order_by
  request_id: order_by
  start_time: order_by
  time_taken: order_by
  traceback: order_by
}

"""
response of any mutation on the table "silk_sqlquery"
"""
type silk_sqlquery_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [silk_sqlquery!]!
}

"""
input type for inserting object relation for remote table "silk_sqlquery"
"""
input silk_sqlquery_obj_rel_insert_input {
  data: silk_sqlquery_insert_input!

  """on conflict condition"""
  on_conflict: silk_sqlquery_on_conflict
}

"""
on conflict condition type for table "silk_sqlquery"
"""
input silk_sqlquery_on_conflict {
  constraint: silk_sqlquery_constraint!
  update_columns: [silk_sqlquery_update_column!]! = []
  where: silk_sqlquery_bool_exp
}

"""Ordering options when selecting data from "silk_sqlquery"."""
input silk_sqlquery_order_by {
  analysis: order_by
  end_time: order_by
  id: order_by
  identifier: order_by
  query: order_by
  request_id: order_by
  silk_profile_queries_aggregate: silk_profile_queries_aggregate_order_by
  silk_request: silk_request_order_by
  start_time: order_by
  time_taken: order_by
  traceback: order_by
}

"""primary key columns input for table: silk_sqlquery"""
input silk_sqlquery_pk_columns_input {
  id: Int!
}

"""
select columns of table "silk_sqlquery"
"""
enum silk_sqlquery_select_column {
  """column name"""
  analysis

  """column name"""
  end_time

  """column name"""
  id

  """column name"""
  identifier

  """column name"""
  query

  """column name"""
  request_id

  """column name"""
  start_time

  """column name"""
  time_taken

  """column name"""
  traceback
}

"""
input type for updating data in table "silk_sqlquery"
"""
input silk_sqlquery_set_input {
  analysis: String
  end_time: timestamptz
  id: Int
  identifier: Int
  query: String
  request_id: String
  start_time: timestamptz
  time_taken: float8
  traceback: String
}

"""aggregate stddev on columns"""
type silk_sqlquery_stddev_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by stddev() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_stddev_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""aggregate stddev_pop on columns"""
type silk_sqlquery_stddev_pop_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by stddev_pop() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_stddev_pop_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""aggregate stddev_samp on columns"""
type silk_sqlquery_stddev_samp_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by stddev_samp() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_stddev_samp_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""aggregate sum on columns"""
type silk_sqlquery_sum_fields {
  id: Int
  identifier: Int
  time_taken: float8
}

"""
order by sum() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_sum_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""
update columns of table "silk_sqlquery"
"""
enum silk_sqlquery_update_column {
  """column name"""
  analysis

  """column name"""
  end_time

  """column name"""
  id

  """column name"""
  identifier

  """column name"""
  query

  """column name"""
  request_id

  """column name"""
  start_time

  """column name"""
  time_taken

  """column name"""
  traceback
}

"""aggregate var_pop on columns"""
type silk_sqlquery_var_pop_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by var_pop() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_var_pop_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""aggregate var_samp on columns"""
type silk_sqlquery_var_samp_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by var_samp() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_var_samp_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

"""aggregate variance on columns"""
type silk_sqlquery_variance_fields {
  id: Float
  identifier: Float
  time_taken: Float
}

"""
order by variance() on columns of table "silk_sqlquery"
"""
input silk_sqlquery_variance_order_by {
  id: order_by
  identifier: order_by
  time_taken: order_by
}

scalar smallint

"""
Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  """"""
  _eq: smallint

  """"""
  _gt: smallint

  """"""
  _gte: smallint

  """"""
  _in: [smallint!]

  """"""
  _is_null: Boolean

  """"""
  _lt: smallint

  """"""
  _lte: smallint

  """"""
  _neq: smallint

  """"""
  _nin: [smallint!]
}

"""
columns and relationships of "sms"
"""
type sms {
  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!
  created: timestamptz
  form_id: String!
  form_type: String!
  gupshup_updated: timestamptz
  history(
    """JSON select path"""
    path: String
  ): jsonb
  id: Int!
  message_id: String!
  phone: bigint
  response_code: Int
  school: Int!
  status: String!

  """An object relationship"""
  student: student
  student_id: Int

  """An array relationship"""
  student_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """An aggregate relationship"""
  student_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!
  submitted: timestamptz!
  text: String
  tries: Int!
  updated: timestamptz
}

"""
aggregated selection of "sms"
"""
type sms_aggregate {
  aggregate: sms_aggregate_fields
  nodes: [sms!]!
}

"""
aggregate fields of "sms"
"""
type sms_aggregate_fields {
  avg: sms_avg_fields
  count(columns: [sms_select_column!], distinct: Boolean): Int!
  max: sms_max_fields
  min: sms_min_fields
  stddev: sms_stddev_fields
  stddev_pop: sms_stddev_pop_fields
  stddev_samp: sms_stddev_samp_fields
  sum: sms_sum_fields
  var_pop: sms_var_pop_fields
  var_samp: sms_var_samp_fields
  variance: sms_variance_fields
}

"""
order by aggregate values of table "sms"
"""
input sms_aggregate_order_by {
  avg: sms_avg_order_by
  count: order_by
  max: sms_max_order_by
  min: sms_min_order_by
  stddev: sms_stddev_order_by
  stddev_pop: sms_stddev_pop_order_by
  stddev_samp: sms_stddev_samp_order_by
  sum: sms_sum_order_by
  var_pop: sms_var_pop_order_by
  var_samp: sms_var_samp_order_by
  variance: sms_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input sms_append_input {
  history: jsonb
}

"""
input type for inserting array relation for remote table "sms"
"""
input sms_arr_rel_insert_input {
  data: [sms_insert_input!]!

  """on conflict condition"""
  on_conflict: sms_on_conflict
}

"""aggregate avg on columns"""
type sms_avg_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by avg() on columns of table "sms"
"""
input sms_avg_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""
Boolean expression to filter rows from the table "sms". All fields are combined with a logical 'AND'.
"""
input sms_bool_exp {
  _and: [sms_bool_exp!]
  _not: sms_bool_exp
  _or: [sms_bool_exp!]
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  created: timestamptz_comparison_exp
  form_id: String_comparison_exp
  form_type: String_comparison_exp
  gupshup_updated: timestamptz_comparison_exp
  history: jsonb_comparison_exp
  id: Int_comparison_exp
  message_id: String_comparison_exp
  phone: bigint_comparison_exp
  response_code: Int_comparison_exp
  school: Int_comparison_exp
  status: String_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  student_submissions: student_submission_bool_exp
  submitted: timestamptz_comparison_exp
  text: String_comparison_exp
  tries: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "sms"
"""
enum sms_constraint {
  """unique or primary key constraint"""
  sms_messageId_key

  """unique or primary key constraint"""
  sms_pkey
}

"""
columns and relationships of "sms_dag_reports"
"""
type sms_dag_reports {
  dag_name: String!
  id: Int!
  run_date: String!
  successful_sms_count: Int!
  total_records_present: Int!
}

"""
aggregated selection of "sms_dag_reports"
"""
type sms_dag_reports_aggregate {
  aggregate: sms_dag_reports_aggregate_fields
  nodes: [sms_dag_reports!]!
}

"""
aggregate fields of "sms_dag_reports"
"""
type sms_dag_reports_aggregate_fields {
  avg: sms_dag_reports_avg_fields
  count(columns: [sms_dag_reports_select_column!], distinct: Boolean): Int!
  max: sms_dag_reports_max_fields
  min: sms_dag_reports_min_fields
  stddev: sms_dag_reports_stddev_fields
  stddev_pop: sms_dag_reports_stddev_pop_fields
  stddev_samp: sms_dag_reports_stddev_samp_fields
  sum: sms_dag_reports_sum_fields
  var_pop: sms_dag_reports_var_pop_fields
  var_samp: sms_dag_reports_var_samp_fields
  variance: sms_dag_reports_variance_fields
}

"""aggregate avg on columns"""
type sms_dag_reports_avg_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""
Boolean expression to filter rows from the table "sms_dag_reports". All fields are combined with a logical 'AND'.
"""
input sms_dag_reports_bool_exp {
  _and: [sms_dag_reports_bool_exp!]
  _not: sms_dag_reports_bool_exp
  _or: [sms_dag_reports_bool_exp!]
  dag_name: String_comparison_exp
  id: Int_comparison_exp
  run_date: String_comparison_exp
  successful_sms_count: Int_comparison_exp
  total_records_present: Int_comparison_exp
}

"""
unique or primary key constraints on table "sms_dag_reports"
"""
enum sms_dag_reports_constraint {
  """unique or primary key constraint"""
  sms_dag_reports_pkey
}

"""
input type for incrementing numeric columns in table "sms_dag_reports"
"""
input sms_dag_reports_inc_input {
  id: Int
  successful_sms_count: Int
  total_records_present: Int
}

"""
input type for inserting data into table "sms_dag_reports"
"""
input sms_dag_reports_insert_input {
  dag_name: String
  id: Int
  run_date: String
  successful_sms_count: Int
  total_records_present: Int
}

"""aggregate max on columns"""
type sms_dag_reports_max_fields {
  dag_name: String
  id: Int
  run_date: String
  successful_sms_count: Int
  total_records_present: Int
}

"""aggregate min on columns"""
type sms_dag_reports_min_fields {
  dag_name: String
  id: Int
  run_date: String
  successful_sms_count: Int
  total_records_present: Int
}

"""
response of any mutation on the table "sms_dag_reports"
"""
type sms_dag_reports_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [sms_dag_reports!]!
}

"""
on conflict condition type for table "sms_dag_reports"
"""
input sms_dag_reports_on_conflict {
  constraint: sms_dag_reports_constraint!
  update_columns: [sms_dag_reports_update_column!]! = []
  where: sms_dag_reports_bool_exp
}

"""Ordering options when selecting data from "sms_dag_reports"."""
input sms_dag_reports_order_by {
  dag_name: order_by
  id: order_by
  run_date: order_by
  successful_sms_count: order_by
  total_records_present: order_by
}

"""primary key columns input for table: sms_dag_reports"""
input sms_dag_reports_pk_columns_input {
  id: Int!
}

"""
select columns of table "sms_dag_reports"
"""
enum sms_dag_reports_select_column {
  """column name"""
  dag_name

  """column name"""
  id

  """column name"""
  run_date

  """column name"""
  successful_sms_count

  """column name"""
  total_records_present
}

"""
input type for updating data in table "sms_dag_reports"
"""
input sms_dag_reports_set_input {
  dag_name: String
  id: Int
  run_date: String
  successful_sms_count: Int
  total_records_present: Int
}

"""aggregate stddev on columns"""
type sms_dag_reports_stddev_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""aggregate stddev_pop on columns"""
type sms_dag_reports_stddev_pop_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""aggregate stddev_samp on columns"""
type sms_dag_reports_stddev_samp_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""aggregate sum on columns"""
type sms_dag_reports_sum_fields {
  id: Int
  successful_sms_count: Int
  total_records_present: Int
}

"""
update columns of table "sms_dag_reports"
"""
enum sms_dag_reports_update_column {
  """column name"""
  dag_name

  """column name"""
  id

  """column name"""
  run_date

  """column name"""
  successful_sms_count

  """column name"""
  total_records_present
}

"""aggregate var_pop on columns"""
type sms_dag_reports_var_pop_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""aggregate var_samp on columns"""
type sms_dag_reports_var_samp_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""aggregate variance on columns"""
type sms_dag_reports_variance_fields {
  id: Float
  successful_sms_count: Float
  total_records_present: Float
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input sms_delete_at_path_input {
  history: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input sms_delete_elem_input {
  history: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input sms_delete_key_input {
  history: String
}

"""
input type for incrementing numeric columns in table "sms"
"""
input sms_inc_input {
  id: Int
  phone: bigint
  response_code: Int
  school: Int
  student_id: Int
  tries: Int
}

"""
input type for inserting data into table "sms"
"""
input sms_insert_input {
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  created: timestamptz
  form_id: String
  form_type: String
  gupshup_updated: timestamptz
  history: jsonb
  id: Int
  message_id: String
  phone: bigint
  response_code: Int
  school: Int
  status: String
  student: student_obj_rel_insert_input
  student_id: Int
  student_submissions: student_submission_arr_rel_insert_input
  submitted: timestamptz
  text: String
  tries: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type sms_max_fields {
  created: timestamptz
  form_id: String
  form_type: String
  gupshup_updated: timestamptz
  id: Int
  message_id: String
  phone: bigint
  response_code: Int
  school: Int
  status: String
  student_id: Int
  submitted: timestamptz
  text: String
  tries: Int
  updated: timestamptz
}

"""
order by max() on columns of table "sms"
"""
input sms_max_order_by {
  created: order_by
  form_id: order_by
  form_type: order_by
  gupshup_updated: order_by
  id: order_by
  message_id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  status: order_by
  student_id: order_by
  submitted: order_by
  text: order_by
  tries: order_by
  updated: order_by
}

"""aggregate min on columns"""
type sms_min_fields {
  created: timestamptz
  form_id: String
  form_type: String
  gupshup_updated: timestamptz
  id: Int
  message_id: String
  phone: bigint
  response_code: Int
  school: Int
  status: String
  student_id: Int
  submitted: timestamptz
  text: String
  tries: Int
  updated: timestamptz
}

"""
order by min() on columns of table "sms"
"""
input sms_min_order_by {
  created: order_by
  form_id: order_by
  form_type: order_by
  gupshup_updated: order_by
  id: order_by
  message_id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  status: order_by
  student_id: order_by
  submitted: order_by
  text: order_by
  tries: order_by
  updated: order_by
}

"""
response of any mutation on the table "sms"
"""
type sms_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [sms!]!
}

"""
input type for inserting object relation for remote table "sms"
"""
input sms_obj_rel_insert_input {
  data: sms_insert_input!

  """on conflict condition"""
  on_conflict: sms_on_conflict
}

"""
on conflict condition type for table "sms"
"""
input sms_on_conflict {
  constraint: sms_constraint!
  update_columns: [sms_update_column!]! = []
  where: sms_bool_exp
}

"""Ordering options when selecting data from "sms"."""
input sms_order_by {
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  created: order_by
  form_id: order_by
  form_type: order_by
  gupshup_updated: order_by
  history: order_by
  id: order_by
  message_id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  status: order_by
  student: student_order_by
  student_id: order_by
  student_submissions_aggregate: student_submission_aggregate_order_by
  submitted: order_by
  text: order_by
  tries: order_by
  updated: order_by
}

"""primary key columns input for table: sms"""
input sms_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input sms_prepend_input {
  history: jsonb
}

"""
select columns of table "sms"
"""
enum sms_select_column {
  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  form_type

  """column name"""
  gupshup_updated

  """column name"""
  history

  """column name"""
  id

  """column name"""
  message_id

  """column name"""
  phone

  """column name"""
  response_code

  """column name"""
  school

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  submitted

  """column name"""
  text

  """column name"""
  tries

  """column name"""
  updated
}

"""
input type for updating data in table "sms"
"""
input sms_set_input {
  created: timestamptz
  form_id: String
  form_type: String
  gupshup_updated: timestamptz
  history: jsonb
  id: Int
  message_id: String
  phone: bigint
  response_code: Int
  school: Int
  status: String
  student_id: Int
  submitted: timestamptz
  text: String
  tries: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type sms_stddev_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by stddev() on columns of table "sms"
"""
input sms_stddev_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""aggregate stddev_pop on columns"""
type sms_stddev_pop_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by stddev_pop() on columns of table "sms"
"""
input sms_stddev_pop_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""aggregate stddev_samp on columns"""
type sms_stddev_samp_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by stddev_samp() on columns of table "sms"
"""
input sms_stddev_samp_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""
columns and relationships of "sms_student_attendance_mv"
"""
type sms_student_attendance_mv {
  date: date
  phone_number: bigint
  student_name: String
}

"""
aggregated selection of "sms_student_attendance_mv"
"""
type sms_student_attendance_mv_aggregate {
  aggregate: sms_student_attendance_mv_aggregate_fields
  nodes: [sms_student_attendance_mv!]!
}

"""
aggregate fields of "sms_student_attendance_mv"
"""
type sms_student_attendance_mv_aggregate_fields {
  avg: sms_student_attendance_mv_avg_fields
  count(columns: [sms_student_attendance_mv_select_column!], distinct: Boolean): Int!
  max: sms_student_attendance_mv_max_fields
  min: sms_student_attendance_mv_min_fields
  stddev: sms_student_attendance_mv_stddev_fields
  stddev_pop: sms_student_attendance_mv_stddev_pop_fields
  stddev_samp: sms_student_attendance_mv_stddev_samp_fields
  sum: sms_student_attendance_mv_sum_fields
  var_pop: sms_student_attendance_mv_var_pop_fields
  var_samp: sms_student_attendance_mv_var_samp_fields
  variance: sms_student_attendance_mv_variance_fields
}

"""aggregate avg on columns"""
type sms_student_attendance_mv_avg_fields {
  phone_number: Float
}

"""
Boolean expression to filter rows from the table "sms_student_attendance_mv". All fields are combined with a logical 'AND'.
"""
input sms_student_attendance_mv_bool_exp {
  _and: [sms_student_attendance_mv_bool_exp!]
  _not: sms_student_attendance_mv_bool_exp
  _or: [sms_student_attendance_mv_bool_exp!]
  date: date_comparison_exp
  phone_number: bigint_comparison_exp
  student_name: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "sms_student_attendance_mv"
"""
input sms_student_attendance_mv_inc_input {
  phone_number: bigint
}

"""
input type for inserting data into table "sms_student_attendance_mv"
"""
input sms_student_attendance_mv_insert_input {
  date: date
  phone_number: bigint
  student_name: String
}

"""aggregate max on columns"""
type sms_student_attendance_mv_max_fields {
  date: date
  phone_number: bigint
  student_name: String
}

"""aggregate min on columns"""
type sms_student_attendance_mv_min_fields {
  date: date
  phone_number: bigint
  student_name: String
}

"""
response of any mutation on the table "sms_student_attendance_mv"
"""
type sms_student_attendance_mv_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [sms_student_attendance_mv!]!
}

"""Ordering options when selecting data from "sms_student_attendance_mv"."""
input sms_student_attendance_mv_order_by {
  date: order_by
  phone_number: order_by
  student_name: order_by
}

"""
select columns of table "sms_student_attendance_mv"
"""
enum sms_student_attendance_mv_select_column {
  """column name"""
  date

  """column name"""
  phone_number

  """column name"""
  student_name
}

"""
input type for updating data in table "sms_student_attendance_mv"
"""
input sms_student_attendance_mv_set_input {
  date: date
  phone_number: bigint
  student_name: String
}

"""aggregate stddev on columns"""
type sms_student_attendance_mv_stddev_fields {
  phone_number: Float
}

"""aggregate stddev_pop on columns"""
type sms_student_attendance_mv_stddev_pop_fields {
  phone_number: Float
}

"""aggregate stddev_samp on columns"""
type sms_student_attendance_mv_stddev_samp_fields {
  phone_number: Float
}

"""aggregate sum on columns"""
type sms_student_attendance_mv_sum_fields {
  phone_number: bigint
}

"""aggregate var_pop on columns"""
type sms_student_attendance_mv_var_pop_fields {
  phone_number: Float
}

"""aggregate var_samp on columns"""
type sms_student_attendance_mv_var_samp_fields {
  phone_number: Float
}

"""aggregate variance on columns"""
type sms_student_attendance_mv_variance_fields {
  phone_number: Float
}

"""aggregate sum on columns"""
type sms_sum_fields {
  id: Int
  phone: bigint
  response_code: Int
  school: Int
  student_id: Int
  tries: Int
}

"""
order by sum() on columns of table "sms"
"""
input sms_sum_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""
update columns of table "sms"
"""
enum sms_update_column {
  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  form_type

  """column name"""
  gupshup_updated

  """column name"""
  history

  """column name"""
  id

  """column name"""
  message_id

  """column name"""
  phone

  """column name"""
  response_code

  """column name"""
  school

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  submitted

  """column name"""
  text

  """column name"""
  tries

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type sms_var_pop_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by var_pop() on columns of table "sms"
"""
input sms_var_pop_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""aggregate var_samp on columns"""
type sms_var_samp_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by var_samp() on columns of table "sms"
"""
input sms_var_samp_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""aggregate variance on columns"""
type sms_variance_fields {
  id: Float
  phone: Float
  response_code: Float
  school: Float
  student_id: Float
  tries: Float
}

"""
order by variance() on columns of table "sms"
"""
input sms_variance_order_by {
  id: order_by
  phone: order_by
  response_code: order_by
  school: order_by
  student_id: order_by
  tries: order_by
}

"""
columns and relationships of "ss_school_allocation_data"
"""
type ss_school_allocation_data {
  created_at: timestamptz!
  date_of_visit: date
  id: Int!
  is_visited: Boolean!
  quarter: Int!

  """An object relationship"""
  school: school!
  school_id: Int!

  """An object relationship"""
  ss_school_allocation_quarter: ss_school_allocation_quarter!
  updated_at: timestamptz!
  username: String!
}

"""
aggregated selection of "ss_school_allocation_data"
"""
type ss_school_allocation_data_aggregate {
  aggregate: ss_school_allocation_data_aggregate_fields
  nodes: [ss_school_allocation_data!]!
}

"""
aggregate fields of "ss_school_allocation_data"
"""
type ss_school_allocation_data_aggregate_fields {
  avg: ss_school_allocation_data_avg_fields
  count(columns: [ss_school_allocation_data_select_column!], distinct: Boolean): Int!
  max: ss_school_allocation_data_max_fields
  min: ss_school_allocation_data_min_fields
  stddev: ss_school_allocation_data_stddev_fields
  stddev_pop: ss_school_allocation_data_stddev_pop_fields
  stddev_samp: ss_school_allocation_data_stddev_samp_fields
  sum: ss_school_allocation_data_sum_fields
  var_pop: ss_school_allocation_data_var_pop_fields
  var_samp: ss_school_allocation_data_var_samp_fields
  variance: ss_school_allocation_data_variance_fields
}

"""
order by aggregate values of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_aggregate_order_by {
  avg: ss_school_allocation_data_avg_order_by
  count: order_by
  max: ss_school_allocation_data_max_order_by
  min: ss_school_allocation_data_min_order_by
  stddev: ss_school_allocation_data_stddev_order_by
  stddev_pop: ss_school_allocation_data_stddev_pop_order_by
  stddev_samp: ss_school_allocation_data_stddev_samp_order_by
  sum: ss_school_allocation_data_sum_order_by
  var_pop: ss_school_allocation_data_var_pop_order_by
  var_samp: ss_school_allocation_data_var_samp_order_by
  variance: ss_school_allocation_data_variance_order_by
}

"""
input type for inserting array relation for remote table "ss_school_allocation_data"
"""
input ss_school_allocation_data_arr_rel_insert_input {
  data: [ss_school_allocation_data_insert_input!]!

  """on conflict condition"""
  on_conflict: ss_school_allocation_data_on_conflict
}

"""aggregate avg on columns"""
type ss_school_allocation_data_avg_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by avg() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_avg_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "ss_school_allocation_data". All fields are combined with a logical 'AND'.
"""
input ss_school_allocation_data_bool_exp {
  _and: [ss_school_allocation_data_bool_exp!]
  _not: ss_school_allocation_data_bool_exp
  _or: [ss_school_allocation_data_bool_exp!]
  created_at: timestamptz_comparison_exp
  date_of_visit: date_comparison_exp
  id: Int_comparison_exp
  is_visited: Boolean_comparison_exp
  quarter: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  ss_school_allocation_quarter: ss_school_allocation_quarter_bool_exp
  updated_at: timestamptz_comparison_exp
  username: String_comparison_exp
}

"""
unique or primary key constraints on table "ss_school_allocation_data"
"""
enum ss_school_allocation_data_constraint {
  """unique or primary key constraint"""
  ss_school_allocation_data_pkey
}

"""
input type for incrementing numeric columns in table "ss_school_allocation_data"
"""
input ss_school_allocation_data_inc_input {
  id: Int
  quarter: Int
  school_id: Int
}

"""
input type for inserting data into table "ss_school_allocation_data"
"""
input ss_school_allocation_data_insert_input {
  created_at: timestamptz
  date_of_visit: date
  id: Int
  is_visited: Boolean
  quarter: Int
  school: school_obj_rel_insert_input
  school_id: Int
  ss_school_allocation_quarter: ss_school_allocation_quarter_obj_rel_insert_input
  updated_at: timestamptz
  username: String
}

"""aggregate max on columns"""
type ss_school_allocation_data_max_fields {
  created_at: timestamptz
  date_of_visit: date
  id: Int
  quarter: Int
  school_id: Int
  updated_at: timestamptz
  username: String
}

"""
order by max() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_max_order_by {
  created_at: order_by
  date_of_visit: order_by
  id: order_by
  quarter: order_by
  school_id: order_by
  updated_at: order_by
  username: order_by
}

"""aggregate min on columns"""
type ss_school_allocation_data_min_fields {
  created_at: timestamptz
  date_of_visit: date
  id: Int
  quarter: Int
  school_id: Int
  updated_at: timestamptz
  username: String
}

"""
order by min() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_min_order_by {
  created_at: order_by
  date_of_visit: order_by
  id: order_by
  quarter: order_by
  school_id: order_by
  updated_at: order_by
  username: order_by
}

"""
response of any mutation on the table "ss_school_allocation_data"
"""
type ss_school_allocation_data_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ss_school_allocation_data!]!
}

"""
on conflict condition type for table "ss_school_allocation_data"
"""
input ss_school_allocation_data_on_conflict {
  constraint: ss_school_allocation_data_constraint!
  update_columns: [ss_school_allocation_data_update_column!]! = []
  where: ss_school_allocation_data_bool_exp
}

"""Ordering options when selecting data from "ss_school_allocation_data"."""
input ss_school_allocation_data_order_by {
  created_at: order_by
  date_of_visit: order_by
  id: order_by
  is_visited: order_by
  quarter: order_by
  school: school_order_by
  school_id: order_by
  ss_school_allocation_quarter: ss_school_allocation_quarter_order_by
  updated_at: order_by
  username: order_by
}

"""primary key columns input for table: ss_school_allocation_data"""
input ss_school_allocation_data_pk_columns_input {
  id: Int!
}

"""
select columns of table "ss_school_allocation_data"
"""
enum ss_school_allocation_data_select_column {
  """column name"""
  created_at

  """column name"""
  date_of_visit

  """column name"""
  id

  """column name"""
  is_visited

  """column name"""
  quarter

  """column name"""
  school_id

  """column name"""
  updated_at

  """column name"""
  username
}

"""
input type for updating data in table "ss_school_allocation_data"
"""
input ss_school_allocation_data_set_input {
  created_at: timestamptz
  date_of_visit: date
  id: Int
  is_visited: Boolean
  quarter: Int
  school_id: Int
  updated_at: timestamptz
  username: String
}

"""aggregate stddev on columns"""
type ss_school_allocation_data_stddev_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by stddev() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_stddev_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type ss_school_allocation_data_stddev_pop_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_stddev_pop_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type ss_school_allocation_data_stddev_samp_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_stddev_samp_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type ss_school_allocation_data_sum_fields {
  id: Int
  quarter: Int
  school_id: Int
}

"""
order by sum() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_sum_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""
update columns of table "ss_school_allocation_data"
"""
enum ss_school_allocation_data_update_column {
  """column name"""
  created_at

  """column name"""
  date_of_visit

  """column name"""
  id

  """column name"""
  is_visited

  """column name"""
  quarter

  """column name"""
  school_id

  """column name"""
  updated_at

  """column name"""
  username
}

"""aggregate var_pop on columns"""
type ss_school_allocation_data_var_pop_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_var_pop_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type ss_school_allocation_data_var_samp_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_var_samp_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type ss_school_allocation_data_variance_fields {
  id: Float
  quarter: Float
  school_id: Float
}

"""
order by variance() on columns of table "ss_school_allocation_data"
"""
input ss_school_allocation_data_variance_order_by {
  id: order_by
  quarter: order_by
  school_id: order_by
}

"""
columns and relationships of "ss_school_allocation_quarter"
"""
type ss_school_allocation_quarter {
  created_at: timestamptz!
  id: Int!
  month1: String!
  month2: String!
  month3: String!
  quarter_id: Int!

  """An array relationship"""
  ss_school_allocation_data(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): [ss_school_allocation_data!]!

  """An aggregate relationship"""
  ss_school_allocation_data_aggregate(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): ss_school_allocation_data_aggregate!
  updated_at: timestamptz!
  year: Int!
}

"""
aggregated selection of "ss_school_allocation_quarter"
"""
type ss_school_allocation_quarter_aggregate {
  aggregate: ss_school_allocation_quarter_aggregate_fields
  nodes: [ss_school_allocation_quarter!]!
}

"""
aggregate fields of "ss_school_allocation_quarter"
"""
type ss_school_allocation_quarter_aggregate_fields {
  avg: ss_school_allocation_quarter_avg_fields
  count(columns: [ss_school_allocation_quarter_select_column!], distinct: Boolean): Int!
  max: ss_school_allocation_quarter_max_fields
  min: ss_school_allocation_quarter_min_fields
  stddev: ss_school_allocation_quarter_stddev_fields
  stddev_pop: ss_school_allocation_quarter_stddev_pop_fields
  stddev_samp: ss_school_allocation_quarter_stddev_samp_fields
  sum: ss_school_allocation_quarter_sum_fields
  var_pop: ss_school_allocation_quarter_var_pop_fields
  var_samp: ss_school_allocation_quarter_var_samp_fields
  variance: ss_school_allocation_quarter_variance_fields
}

"""aggregate avg on columns"""
type ss_school_allocation_quarter_avg_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""
Boolean expression to filter rows from the table "ss_school_allocation_quarter". All fields are combined with a logical 'AND'.
"""
input ss_school_allocation_quarter_bool_exp {
  _and: [ss_school_allocation_quarter_bool_exp!]
  _not: ss_school_allocation_quarter_bool_exp
  _or: [ss_school_allocation_quarter_bool_exp!]
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  month1: String_comparison_exp
  month2: String_comparison_exp
  month3: String_comparison_exp
  quarter_id: Int_comparison_exp
  ss_school_allocation_data: ss_school_allocation_data_bool_exp
  updated_at: timestamptz_comparison_exp
  year: Int_comparison_exp
}

"""
unique or primary key constraints on table "ss_school_allocation_quarter"
"""
enum ss_school_allocation_quarter_constraint {
  """unique or primary key constraint"""
  ss_school_allocation_quarter_pkey

  """unique or primary key constraint"""
  ss_school_allocation_quarter_quarter_id_key
}

"""
input type for incrementing numeric columns in table "ss_school_allocation_quarter"
"""
input ss_school_allocation_quarter_inc_input {
  id: Int
  quarter_id: Int
  year: Int
}

"""
input type for inserting data into table "ss_school_allocation_quarter"
"""
input ss_school_allocation_quarter_insert_input {
  created_at: timestamptz
  id: Int
  month1: String
  month2: String
  month3: String
  quarter_id: Int
  ss_school_allocation_data: ss_school_allocation_data_arr_rel_insert_input
  updated_at: timestamptz
  year: Int
}

"""aggregate max on columns"""
type ss_school_allocation_quarter_max_fields {
  created_at: timestamptz
  id: Int
  month1: String
  month2: String
  month3: String
  quarter_id: Int
  updated_at: timestamptz
  year: Int
}

"""aggregate min on columns"""
type ss_school_allocation_quarter_min_fields {
  created_at: timestamptz
  id: Int
  month1: String
  month2: String
  month3: String
  quarter_id: Int
  updated_at: timestamptz
  year: Int
}

"""
response of any mutation on the table "ss_school_allocation_quarter"
"""
type ss_school_allocation_quarter_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ss_school_allocation_quarter!]!
}

"""
input type for inserting object relation for remote table "ss_school_allocation_quarter"
"""
input ss_school_allocation_quarter_obj_rel_insert_input {
  data: ss_school_allocation_quarter_insert_input!

  """on conflict condition"""
  on_conflict: ss_school_allocation_quarter_on_conflict
}

"""
on conflict condition type for table "ss_school_allocation_quarter"
"""
input ss_school_allocation_quarter_on_conflict {
  constraint: ss_school_allocation_quarter_constraint!
  update_columns: [ss_school_allocation_quarter_update_column!]! = []
  where: ss_school_allocation_quarter_bool_exp
}

"""
Ordering options when selecting data from "ss_school_allocation_quarter".
"""
input ss_school_allocation_quarter_order_by {
  created_at: order_by
  id: order_by
  month1: order_by
  month2: order_by
  month3: order_by
  quarter_id: order_by
  ss_school_allocation_data_aggregate: ss_school_allocation_data_aggregate_order_by
  updated_at: order_by
  year: order_by
}

"""primary key columns input for table: ss_school_allocation_quarter"""
input ss_school_allocation_quarter_pk_columns_input {
  id: Int!
}

"""
select columns of table "ss_school_allocation_quarter"
"""
enum ss_school_allocation_quarter_select_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  month1

  """column name"""
  month2

  """column name"""
  month3

  """column name"""
  quarter_id

  """column name"""
  updated_at

  """column name"""
  year
}

"""
input type for updating data in table "ss_school_allocation_quarter"
"""
input ss_school_allocation_quarter_set_input {
  created_at: timestamptz
  id: Int
  month1: String
  month2: String
  month3: String
  quarter_id: Int
  updated_at: timestamptz
  year: Int
}

"""aggregate stddev on columns"""
type ss_school_allocation_quarter_stddev_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""aggregate stddev_pop on columns"""
type ss_school_allocation_quarter_stddev_pop_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""aggregate stddev_samp on columns"""
type ss_school_allocation_quarter_stddev_samp_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""aggregate sum on columns"""
type ss_school_allocation_quarter_sum_fields {
  id: Int
  quarter_id: Int
  year: Int
}

"""
update columns of table "ss_school_allocation_quarter"
"""
enum ss_school_allocation_quarter_update_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  month1

  """column name"""
  month2

  """column name"""
  month3

  """column name"""
  quarter_id

  """column name"""
  updated_at

  """column name"""
  year
}

"""aggregate var_pop on columns"""
type ss_school_allocation_quarter_var_pop_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""aggregate var_samp on columns"""
type ss_school_allocation_quarter_var_samp_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""aggregate variance on columns"""
type ss_school_allocation_quarter_variance_fields {
  id: Float
  quarter_id: Float
  year: Float
}

"""
columns and relationships of "state_edu_enrolment"
"""
type state_edu_enrolment {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""
aggregated selection of "state_edu_enrolment"
"""
type state_edu_enrolment_aggregate {
  aggregate: state_edu_enrolment_aggregate_fields
  nodes: [state_edu_enrolment!]!
}

"""
aggregate fields of "state_edu_enrolment"
"""
type state_edu_enrolment_aggregate_fields {
  avg: state_edu_enrolment_avg_fields
  count(columns: [state_edu_enrolment_select_column!], distinct: Boolean): Int!
  max: state_edu_enrolment_max_fields
  min: state_edu_enrolment_min_fields
  stddev: state_edu_enrolment_stddev_fields
  stddev_pop: state_edu_enrolment_stddev_pop_fields
  stddev_samp: state_edu_enrolment_stddev_samp_fields
  sum: state_edu_enrolment_sum_fields
  var_pop: state_edu_enrolment_var_pop_fields
  var_samp: state_edu_enrolment_var_samp_fields
  variance: state_edu_enrolment_variance_fields
}

"""aggregate avg on columns"""
type state_edu_enrolment_avg_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""
Boolean expression to filter rows from the table "state_edu_enrolment". All fields are combined with a logical 'AND'.
"""
input state_edu_enrolment_bool_exp {
  Number_of_Middle: bigint_comparison_exp
  Number_of_Primary: bigint_comparison_exp
  Number_of_Secondary: bigint_comparison_exp
  Number_of_Senior_Secondary: bigint_comparison_exp
  _and: [state_edu_enrolment_bool_exp!]
  _not: state_edu_enrolment_bool_exp
  _or: [state_edu_enrolment_bool_exp!]
}

"""
input type for incrementing numeric columns in table "state_edu_enrolment"
"""
input state_edu_enrolment_inc_input {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""
input type for inserting data into table "state_edu_enrolment"
"""
input state_edu_enrolment_insert_input {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""aggregate max on columns"""
type state_edu_enrolment_max_fields {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""aggregate min on columns"""
type state_edu_enrolment_min_fields {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""
response of any mutation on the table "state_edu_enrolment"
"""
type state_edu_enrolment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [state_edu_enrolment!]!
}

"""Ordering options when selecting data from "state_edu_enrolment"."""
input state_edu_enrolment_order_by {
  Number_of_Middle: order_by
  Number_of_Primary: order_by
  Number_of_Secondary: order_by
  Number_of_Senior_Secondary: order_by
}

"""
select columns of table "state_edu_enrolment"
"""
enum state_edu_enrolment_select_column {
  """column name"""
  Number_of_Middle

  """column name"""
  Number_of_Primary

  """column name"""
  Number_of_Secondary

  """column name"""
  Number_of_Senior_Secondary
}

"""
input type for updating data in table "state_edu_enrolment"
"""
input state_edu_enrolment_set_input {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""aggregate stddev on columns"""
type state_edu_enrolment_stddev_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""aggregate stddev_pop on columns"""
type state_edu_enrolment_stddev_pop_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""aggregate stddev_samp on columns"""
type state_edu_enrolment_stddev_samp_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""aggregate sum on columns"""
type state_edu_enrolment_sum_fields {
  Number_of_Middle: bigint
  Number_of_Primary: bigint
  Number_of_Secondary: bigint
  Number_of_Senior_Secondary: bigint
}

"""aggregate var_pop on columns"""
type state_edu_enrolment_var_pop_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""aggregate var_samp on columns"""
type state_edu_enrolment_var_samp_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""aggregate variance on columns"""
type state_edu_enrolment_variance_fields {
  Number_of_Middle: Float
  Number_of_Primary: Float
  Number_of_Secondary: Float
  Number_of_Senior_Secondary: Float
}

"""
columns and relationships of "state_lo_list"
"""
type state_lo_list {
  Chapter_Name: String
  Chapter_number: Int
  Grade: Int
  State_LO_Code: String
  Subject: String
}

"""
aggregated selection of "state_lo_list"
"""
type state_lo_list_aggregate {
  aggregate: state_lo_list_aggregate_fields
  nodes: [state_lo_list!]!
}

"""
aggregate fields of "state_lo_list"
"""
type state_lo_list_aggregate_fields {
  avg: state_lo_list_avg_fields
  count(columns: [state_lo_list_select_column!], distinct: Boolean): Int!
  max: state_lo_list_max_fields
  min: state_lo_list_min_fields
  stddev: state_lo_list_stddev_fields
  stddev_pop: state_lo_list_stddev_pop_fields
  stddev_samp: state_lo_list_stddev_samp_fields
  sum: state_lo_list_sum_fields
  var_pop: state_lo_list_var_pop_fields
  var_samp: state_lo_list_var_samp_fields
  variance: state_lo_list_variance_fields
}

"""aggregate avg on columns"""
type state_lo_list_avg_fields {
  Chapter_number: Float
  Grade: Float
}

"""
Boolean expression to filter rows from the table "state_lo_list". All fields are combined with a logical 'AND'.
"""
input state_lo_list_bool_exp {
  Chapter_Name: String_comparison_exp
  Chapter_number: Int_comparison_exp
  Grade: Int_comparison_exp
  State_LO_Code: String_comparison_exp
  Subject: String_comparison_exp
  _and: [state_lo_list_bool_exp!]
  _not: state_lo_list_bool_exp
  _or: [state_lo_list_bool_exp!]
}

"""
input type for incrementing numeric columns in table "state_lo_list"
"""
input state_lo_list_inc_input {
  Chapter_number: Int
  Grade: Int
}

"""
input type for inserting data into table "state_lo_list"
"""
input state_lo_list_insert_input {
  Chapter_Name: String
  Chapter_number: Int
  Grade: Int
  State_LO_Code: String
  Subject: String
}

"""aggregate max on columns"""
type state_lo_list_max_fields {
  Chapter_Name: String
  Chapter_number: Int
  Grade: Int
  State_LO_Code: String
  Subject: String
}

"""aggregate min on columns"""
type state_lo_list_min_fields {
  Chapter_Name: String
  Chapter_number: Int
  Grade: Int
  State_LO_Code: String
  Subject: String
}

"""
response of any mutation on the table "state_lo_list"
"""
type state_lo_list_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [state_lo_list!]!
}

"""Ordering options when selecting data from "state_lo_list"."""
input state_lo_list_order_by {
  Chapter_Name: order_by
  Chapter_number: order_by
  Grade: order_by
  State_LO_Code: order_by
  Subject: order_by
}

"""
select columns of table "state_lo_list"
"""
enum state_lo_list_select_column {
  """column name"""
  Chapter_Name

  """column name"""
  Chapter_number

  """column name"""
  Grade

  """column name"""
  State_LO_Code

  """column name"""
  Subject
}

"""
input type for updating data in table "state_lo_list"
"""
input state_lo_list_set_input {
  Chapter_Name: String
  Chapter_number: Int
  Grade: Int
  State_LO_Code: String
  Subject: String
}

"""aggregate stddev on columns"""
type state_lo_list_stddev_fields {
  Chapter_number: Float
  Grade: Float
}

"""aggregate stddev_pop on columns"""
type state_lo_list_stddev_pop_fields {
  Chapter_number: Float
  Grade: Float
}

"""aggregate stddev_samp on columns"""
type state_lo_list_stddev_samp_fields {
  Chapter_number: Float
  Grade: Float
}

"""aggregate sum on columns"""
type state_lo_list_sum_fields {
  Chapter_number: Int
  Grade: Int
}

"""aggregate var_pop on columns"""
type state_lo_list_var_pop_fields {
  Chapter_number: Float
  Grade: Float
}

"""aggregate var_samp on columns"""
type state_lo_list_var_samp_fields {
  Chapter_number: Float
  Grade: Float
}

"""aggregate variance on columns"""
type state_lo_list_variance_fields {
  Chapter_number: Float
  Grade: Float
}

"""
columns and relationships of "static"
"""
type static {
  created: timestamptz
  current_acad_year: String!
  id: Int!
  updated: timestamptz
}

"""
aggregated selection of "static"
"""
type static_aggregate {
  aggregate: static_aggregate_fields
  nodes: [static!]!
}

"""
aggregate fields of "static"
"""
type static_aggregate_fields {
  avg: static_avg_fields
  count(columns: [static_select_column!], distinct: Boolean): Int!
  max: static_max_fields
  min: static_min_fields
  stddev: static_stddev_fields
  stddev_pop: static_stddev_pop_fields
  stddev_samp: static_stddev_samp_fields
  sum: static_sum_fields
  var_pop: static_var_pop_fields
  var_samp: static_var_samp_fields
  variance: static_variance_fields
}

"""aggregate avg on columns"""
type static_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "static". All fields are combined with a logical 'AND'.
"""
input static_bool_exp {
  _and: [static_bool_exp!]
  _not: static_bool_exp
  _or: [static_bool_exp!]
  created: timestamptz_comparison_exp
  current_acad_year: String_comparison_exp
  id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "static"
"""
enum static_constraint {
  """unique or primary key constraint"""
  static_pkey
}

"""
input type for incrementing numeric columns in table "static"
"""
input static_inc_input {
  id: Int
}

"""
input type for inserting data into table "static"
"""
input static_insert_input {
  created: timestamptz
  current_acad_year: String
  id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type static_max_fields {
  created: timestamptz
  current_acad_year: String
  id: Int
  updated: timestamptz
}

"""aggregate min on columns"""
type static_min_fields {
  created: timestamptz
  current_acad_year: String
  id: Int
  updated: timestamptz
}

"""
response of any mutation on the table "static"
"""
type static_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [static!]!
}

"""
on conflict condition type for table "static"
"""
input static_on_conflict {
  constraint: static_constraint!
  update_columns: [static_update_column!]! = []
  where: static_bool_exp
}

"""Ordering options when selecting data from "static"."""
input static_order_by {
  created: order_by
  current_acad_year: order_by
  id: order_by
  updated: order_by
}

"""primary key columns input for table: static"""
input static_pk_columns_input {
  id: Int!
}

"""
select columns of table "static"
"""
enum static_select_column {
  """column name"""
  created

  """column name"""
  current_acad_year

  """column name"""
  id

  """column name"""
  updated
}

"""
input type for updating data in table "static"
"""
input static_set_input {
  created: timestamptz
  current_acad_year: String
  id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type static_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type static_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type static_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type static_sum_fields {
  id: Int
}

"""
update columns of table "static"
"""
enum static_update_column {
  """column name"""
  created

  """column name"""
  current_acad_year

  """column name"""
  id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type static_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type static_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type static_variance_fields {
  id: Float
}

"""
columns and relationships of "stream"
"""
type stream {
  """An array relationship"""
  assessment_streams(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): [assessment_stream!]!

  """An aggregate relationship"""
  assessment_streams_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): assessment_stream_aggregate!

  """An array relationship"""
  grade_assessments(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): [grade_assessment!]!

  """An aggregate relationship"""
  grade_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): grade_assessment_aggregate!
  grade_number: Int

  """An array relationship"""
  grades(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): [grade!]!

  """An aggregate relationship"""
  grades_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): grade_aggregate!
  id: Int!

  """An array relationship"""
  stream_common_subjects(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): [stream_common_subject!]!

  """An aggregate relationship"""
  stream_common_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): stream_common_subject_aggregate!

  """An array relationship"""
  stream_optional_subjects_1s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): [stream_optional_subjects_1!]!

  """An aggregate relationship"""
  stream_optional_subjects_1s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): stream_optional_subjects_1_aggregate!

  """An array relationship"""
  stream_optional_subjects_2s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): [stream_optional_subjects_2!]!

  """An aggregate relationship"""
  stream_optional_subjects_2s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): stream_optional_subjects_2_aggregate!

  """An array relationship"""
  stream_optional_subjects_3s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): [stream_optional_subjects_3!]!

  """An aggregate relationship"""
  stream_optional_subjects_3s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): stream_optional_subjects_3_aggregate!

  """An array relationship"""
  stream_optional_subjects_4s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): [stream_optional_subjects_4!]!

  """An aggregate relationship"""
  stream_optional_subjects_4s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): stream_optional_subjects_4_aggregate!

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An array relationship"""
  subject_submissions(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """An aggregate relationship"""
  subject_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!
  tag: String
  total_subjects: Int!
  total_subjects_opt_1: Int!
  total_subjects_opt_2: Int!
  total_subjects_opt_3: Int!
  total_subjects_opt_4: Int!
}

"""
aggregated selection of "stream"
"""
type stream_aggregate {
  aggregate: stream_aggregate_fields
  nodes: [stream!]!
}

"""
aggregate fields of "stream"
"""
type stream_aggregate_fields {
  avg: stream_avg_fields
  count(columns: [stream_select_column!], distinct: Boolean): Int!
  max: stream_max_fields
  min: stream_min_fields
  stddev: stream_stddev_fields
  stddev_pop: stream_stddev_pop_fields
  stddev_samp: stream_stddev_samp_fields
  sum: stream_sum_fields
  var_pop: stream_var_pop_fields
  var_samp: stream_var_samp_fields
  variance: stream_variance_fields
}

"""aggregate avg on columns"""
type stream_avg_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""
Boolean expression to filter rows from the table "stream". All fields are combined with a logical 'AND'.
"""
input stream_bool_exp {
  _and: [stream_bool_exp!]
  _not: stream_bool_exp
  _or: [stream_bool_exp!]
  assessment_streams: assessment_stream_bool_exp
  grade_assessments: grade_assessment_bool_exp
  grade_number: Int_comparison_exp
  grades: grade_bool_exp
  id: Int_comparison_exp
  stream_common_subjects: stream_common_subject_bool_exp
  stream_optional_subjects_1s: stream_optional_subjects_1_bool_exp
  stream_optional_subjects_2s: stream_optional_subjects_2_bool_exp
  stream_optional_subjects_3s: stream_optional_subjects_3_bool_exp
  stream_optional_subjects_4s: stream_optional_subjects_4_bool_exp
  student_submission_v2s: student_submission_v2_bool_exp
  subject_submissions: subject_submission_bool_exp
  tag: String_comparison_exp
  total_subjects: Int_comparison_exp
  total_subjects_opt_1: Int_comparison_exp
  total_subjects_opt_2: Int_comparison_exp
  total_subjects_opt_3: Int_comparison_exp
  total_subjects_opt_4: Int_comparison_exp
}

"""
columns and relationships of "stream_common_subject"
"""
type stream_common_subject {
  id: Int!

  """An object relationship"""
  stream: stream!
  stream_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "stream_common_subject"
"""
type stream_common_subject_aggregate {
  aggregate: stream_common_subject_aggregate_fields
  nodes: [stream_common_subject!]!
}

"""
aggregate fields of "stream_common_subject"
"""
type stream_common_subject_aggregate_fields {
  avg: stream_common_subject_avg_fields
  count(columns: [stream_common_subject_select_column!], distinct: Boolean): Int!
  max: stream_common_subject_max_fields
  min: stream_common_subject_min_fields
  stddev: stream_common_subject_stddev_fields
  stddev_pop: stream_common_subject_stddev_pop_fields
  stddev_samp: stream_common_subject_stddev_samp_fields
  sum: stream_common_subject_sum_fields
  var_pop: stream_common_subject_var_pop_fields
  var_samp: stream_common_subject_var_samp_fields
  variance: stream_common_subject_variance_fields
}

"""
order by aggregate values of table "stream_common_subject"
"""
input stream_common_subject_aggregate_order_by {
  avg: stream_common_subject_avg_order_by
  count: order_by
  max: stream_common_subject_max_order_by
  min: stream_common_subject_min_order_by
  stddev: stream_common_subject_stddev_order_by
  stddev_pop: stream_common_subject_stddev_pop_order_by
  stddev_samp: stream_common_subject_stddev_samp_order_by
  sum: stream_common_subject_sum_order_by
  var_pop: stream_common_subject_var_pop_order_by
  var_samp: stream_common_subject_var_samp_order_by
  variance: stream_common_subject_variance_order_by
}

"""
input type for inserting array relation for remote table "stream_common_subject"
"""
input stream_common_subject_arr_rel_insert_input {
  data: [stream_common_subject_insert_input!]!

  """on conflict condition"""
  on_conflict: stream_common_subject_on_conflict
}

"""aggregate avg on columns"""
type stream_common_subject_avg_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "stream_common_subject"
"""
input stream_common_subject_avg_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "stream_common_subject". All fields are combined with a logical 'AND'.
"""
input stream_common_subject_bool_exp {
  _and: [stream_common_subject_bool_exp!]
  _not: stream_common_subject_bool_exp
  _or: [stream_common_subject_bool_exp!]
  id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "stream_common_subject"
"""
enum stream_common_subject_constraint {
  """unique or primary key constraint"""
  stream_common_subject_pkey

  """unique or primary key constraint"""
  stream_common_subject_stream_id_subject_id_da4abd3e_uniq
}

"""
input type for incrementing numeric columns in table "stream_common_subject"
"""
input stream_common_subject_inc_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "stream_common_subject"
"""
input stream_common_subject_insert_input {
  id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type stream_common_subject_max_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "stream_common_subject"
"""
input stream_common_subject_max_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type stream_common_subject_min_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "stream_common_subject"
"""
input stream_common_subject_min_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "stream_common_subject"
"""
type stream_common_subject_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [stream_common_subject!]!
}

"""
on conflict condition type for table "stream_common_subject"
"""
input stream_common_subject_on_conflict {
  constraint: stream_common_subject_constraint!
  update_columns: [stream_common_subject_update_column!]! = []
  where: stream_common_subject_bool_exp
}

"""Ordering options when selecting data from "stream_common_subject"."""
input stream_common_subject_order_by {
  id: order_by
  stream: stream_order_by
  stream_id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: stream_common_subject"""
input stream_common_subject_pk_columns_input {
  id: Int!
}

"""
select columns of table "stream_common_subject"
"""
enum stream_common_subject_select_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "stream_common_subject"
"""
input stream_common_subject_set_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type stream_common_subject_stddev_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "stream_common_subject"
"""
input stream_common_subject_stddev_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type stream_common_subject_stddev_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "stream_common_subject"
"""
input stream_common_subject_stddev_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type stream_common_subject_stddev_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "stream_common_subject"
"""
input stream_common_subject_stddev_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type stream_common_subject_sum_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "stream_common_subject"
"""
input stream_common_subject_sum_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
update columns of table "stream_common_subject"
"""
enum stream_common_subject_update_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type stream_common_subject_var_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "stream_common_subject"
"""
input stream_common_subject_var_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type stream_common_subject_var_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "stream_common_subject"
"""
input stream_common_subject_var_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type stream_common_subject_variance_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "stream_common_subject"
"""
input stream_common_subject_variance_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
unique or primary key constraints on table "stream"
"""
enum stream_constraint {
  """unique or primary key constraint"""
  Stream_pkey
}

"""
input type for incrementing numeric columns in table "stream"
"""
input stream_inc_input {
  grade_number: Int
  id: Int
  total_subjects: Int
  total_subjects_opt_1: Int
  total_subjects_opt_2: Int
  total_subjects_opt_3: Int
  total_subjects_opt_4: Int
}

"""
input type for inserting data into table "stream"
"""
input stream_insert_input {
  assessment_streams: assessment_stream_arr_rel_insert_input
  grade_assessments: grade_assessment_arr_rel_insert_input
  grade_number: Int
  grades: grade_arr_rel_insert_input
  id: Int
  stream_common_subjects: stream_common_subject_arr_rel_insert_input
  stream_optional_subjects_1s: stream_optional_subjects_1_arr_rel_insert_input
  stream_optional_subjects_2s: stream_optional_subjects_2_arr_rel_insert_input
  stream_optional_subjects_3s: stream_optional_subjects_3_arr_rel_insert_input
  stream_optional_subjects_4s: stream_optional_subjects_4_arr_rel_insert_input
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  subject_submissions: subject_submission_arr_rel_insert_input
  tag: String
  total_subjects: Int
  total_subjects_opt_1: Int
  total_subjects_opt_2: Int
  total_subjects_opt_3: Int
  total_subjects_opt_4: Int
}

"""aggregate max on columns"""
type stream_max_fields {
  grade_number: Int
  id: Int
  tag: String
  total_subjects: Int
  total_subjects_opt_1: Int
  total_subjects_opt_2: Int
  total_subjects_opt_3: Int
  total_subjects_opt_4: Int
}

"""aggregate min on columns"""
type stream_min_fields {
  grade_number: Int
  id: Int
  tag: String
  total_subjects: Int
  total_subjects_opt_1: Int
  total_subjects_opt_2: Int
  total_subjects_opt_3: Int
  total_subjects_opt_4: Int
}

"""
response of any mutation on the table "stream"
"""
type stream_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [stream!]!
}

"""
input type for inserting object relation for remote table "stream"
"""
input stream_obj_rel_insert_input {
  data: stream_insert_input!

  """on conflict condition"""
  on_conflict: stream_on_conflict
}

"""
on conflict condition type for table "stream"
"""
input stream_on_conflict {
  constraint: stream_constraint!
  update_columns: [stream_update_column!]! = []
  where: stream_bool_exp
}

"""
columns and relationships of "stream_optional_subjects_1"
"""
type stream_optional_subjects_1 {
  id: Int!

  """An object relationship"""
  stream: stream!
  stream_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "stream_optional_subjects_1"
"""
type stream_optional_subjects_1_aggregate {
  aggregate: stream_optional_subjects_1_aggregate_fields
  nodes: [stream_optional_subjects_1!]!
}

"""
aggregate fields of "stream_optional_subjects_1"
"""
type stream_optional_subjects_1_aggregate_fields {
  avg: stream_optional_subjects_1_avg_fields
  count(columns: [stream_optional_subjects_1_select_column!], distinct: Boolean): Int!
  max: stream_optional_subjects_1_max_fields
  min: stream_optional_subjects_1_min_fields
  stddev: stream_optional_subjects_1_stddev_fields
  stddev_pop: stream_optional_subjects_1_stddev_pop_fields
  stddev_samp: stream_optional_subjects_1_stddev_samp_fields
  sum: stream_optional_subjects_1_sum_fields
  var_pop: stream_optional_subjects_1_var_pop_fields
  var_samp: stream_optional_subjects_1_var_samp_fields
  variance: stream_optional_subjects_1_variance_fields
}

"""
order by aggregate values of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_aggregate_order_by {
  avg: stream_optional_subjects_1_avg_order_by
  count: order_by
  max: stream_optional_subjects_1_max_order_by
  min: stream_optional_subjects_1_min_order_by
  stddev: stream_optional_subjects_1_stddev_order_by
  stddev_pop: stream_optional_subjects_1_stddev_pop_order_by
  stddev_samp: stream_optional_subjects_1_stddev_samp_order_by
  sum: stream_optional_subjects_1_sum_order_by
  var_pop: stream_optional_subjects_1_var_pop_order_by
  var_samp: stream_optional_subjects_1_var_samp_order_by
  variance: stream_optional_subjects_1_variance_order_by
}

"""
input type for inserting array relation for remote table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_arr_rel_insert_input {
  data: [stream_optional_subjects_1_insert_input!]!

  """on conflict condition"""
  on_conflict: stream_optional_subjects_1_on_conflict
}

"""aggregate avg on columns"""
type stream_optional_subjects_1_avg_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_avg_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "stream_optional_subjects_1". All fields are combined with a logical 'AND'.
"""
input stream_optional_subjects_1_bool_exp {
  _and: [stream_optional_subjects_1_bool_exp!]
  _not: stream_optional_subjects_1_bool_exp
  _or: [stream_optional_subjects_1_bool_exp!]
  id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "stream_optional_subjects_1"
"""
enum stream_optional_subjects_1_constraint {
  """unique or primary key constraint"""
  stream_optional_subjects_1_pkey

  """unique or primary key constraint"""
  stream_optional_subjects_1_stream_id_subject_id_fd5a86e1_uniq
}

"""
input type for incrementing numeric columns in table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_inc_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_insert_input {
  id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type stream_optional_subjects_1_max_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_max_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type stream_optional_subjects_1_min_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_min_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "stream_optional_subjects_1"
"""
type stream_optional_subjects_1_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [stream_optional_subjects_1!]!
}

"""
on conflict condition type for table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_on_conflict {
  constraint: stream_optional_subjects_1_constraint!
  update_columns: [stream_optional_subjects_1_update_column!]! = []
  where: stream_optional_subjects_1_bool_exp
}

"""
Ordering options when selecting data from "stream_optional_subjects_1".
"""
input stream_optional_subjects_1_order_by {
  id: order_by
  stream: stream_order_by
  stream_id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: stream_optional_subjects_1"""
input stream_optional_subjects_1_pk_columns_input {
  id: Int!
}

"""
select columns of table "stream_optional_subjects_1"
"""
enum stream_optional_subjects_1_select_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_set_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type stream_optional_subjects_1_stddev_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_stddev_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type stream_optional_subjects_1_stddev_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_stddev_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type stream_optional_subjects_1_stddev_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_stddev_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type stream_optional_subjects_1_sum_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_sum_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
update columns of table "stream_optional_subjects_1"
"""
enum stream_optional_subjects_1_update_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type stream_optional_subjects_1_var_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_var_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type stream_optional_subjects_1_var_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_var_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type stream_optional_subjects_1_variance_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "stream_optional_subjects_1"
"""
input stream_optional_subjects_1_variance_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
columns and relationships of "stream_optional_subjects_2"
"""
type stream_optional_subjects_2 {
  id: Int!

  """An object relationship"""
  stream: stream!
  stream_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "stream_optional_subjects_2"
"""
type stream_optional_subjects_2_aggregate {
  aggregate: stream_optional_subjects_2_aggregate_fields
  nodes: [stream_optional_subjects_2!]!
}

"""
aggregate fields of "stream_optional_subjects_2"
"""
type stream_optional_subjects_2_aggregate_fields {
  avg: stream_optional_subjects_2_avg_fields
  count(columns: [stream_optional_subjects_2_select_column!], distinct: Boolean): Int!
  max: stream_optional_subjects_2_max_fields
  min: stream_optional_subjects_2_min_fields
  stddev: stream_optional_subjects_2_stddev_fields
  stddev_pop: stream_optional_subjects_2_stddev_pop_fields
  stddev_samp: stream_optional_subjects_2_stddev_samp_fields
  sum: stream_optional_subjects_2_sum_fields
  var_pop: stream_optional_subjects_2_var_pop_fields
  var_samp: stream_optional_subjects_2_var_samp_fields
  variance: stream_optional_subjects_2_variance_fields
}

"""
order by aggregate values of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_aggregate_order_by {
  avg: stream_optional_subjects_2_avg_order_by
  count: order_by
  max: stream_optional_subjects_2_max_order_by
  min: stream_optional_subjects_2_min_order_by
  stddev: stream_optional_subjects_2_stddev_order_by
  stddev_pop: stream_optional_subjects_2_stddev_pop_order_by
  stddev_samp: stream_optional_subjects_2_stddev_samp_order_by
  sum: stream_optional_subjects_2_sum_order_by
  var_pop: stream_optional_subjects_2_var_pop_order_by
  var_samp: stream_optional_subjects_2_var_samp_order_by
  variance: stream_optional_subjects_2_variance_order_by
}

"""
input type for inserting array relation for remote table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_arr_rel_insert_input {
  data: [stream_optional_subjects_2_insert_input!]!

  """on conflict condition"""
  on_conflict: stream_optional_subjects_2_on_conflict
}

"""aggregate avg on columns"""
type stream_optional_subjects_2_avg_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_avg_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "stream_optional_subjects_2". All fields are combined with a logical 'AND'.
"""
input stream_optional_subjects_2_bool_exp {
  _and: [stream_optional_subjects_2_bool_exp!]
  _not: stream_optional_subjects_2_bool_exp
  _or: [stream_optional_subjects_2_bool_exp!]
  id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "stream_optional_subjects_2"
"""
enum stream_optional_subjects_2_constraint {
  """unique or primary key constraint"""
  stream_optional_subjects_2_pkey

  """unique or primary key constraint"""
  stream_optional_subjects_2_stream_id_subject_id_f8d9242a_uniq
}

"""
input type for incrementing numeric columns in table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_inc_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_insert_input {
  id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type stream_optional_subjects_2_max_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_max_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type stream_optional_subjects_2_min_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_min_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "stream_optional_subjects_2"
"""
type stream_optional_subjects_2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [stream_optional_subjects_2!]!
}

"""
on conflict condition type for table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_on_conflict {
  constraint: stream_optional_subjects_2_constraint!
  update_columns: [stream_optional_subjects_2_update_column!]! = []
  where: stream_optional_subjects_2_bool_exp
}

"""
Ordering options when selecting data from "stream_optional_subjects_2".
"""
input stream_optional_subjects_2_order_by {
  id: order_by
  stream: stream_order_by
  stream_id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: stream_optional_subjects_2"""
input stream_optional_subjects_2_pk_columns_input {
  id: Int!
}

"""
select columns of table "stream_optional_subjects_2"
"""
enum stream_optional_subjects_2_select_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_set_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type stream_optional_subjects_2_stddev_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_stddev_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type stream_optional_subjects_2_stddev_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_stddev_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type stream_optional_subjects_2_stddev_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_stddev_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type stream_optional_subjects_2_sum_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_sum_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
update columns of table "stream_optional_subjects_2"
"""
enum stream_optional_subjects_2_update_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type stream_optional_subjects_2_var_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_var_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type stream_optional_subjects_2_var_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_var_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type stream_optional_subjects_2_variance_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "stream_optional_subjects_2"
"""
input stream_optional_subjects_2_variance_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
columns and relationships of "stream_optional_subjects_3"
"""
type stream_optional_subjects_3 {
  id: Int!

  """An object relationship"""
  stream: stream!
  stream_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "stream_optional_subjects_3"
"""
type stream_optional_subjects_3_aggregate {
  aggregate: stream_optional_subjects_3_aggregate_fields
  nodes: [stream_optional_subjects_3!]!
}

"""
aggregate fields of "stream_optional_subjects_3"
"""
type stream_optional_subjects_3_aggregate_fields {
  avg: stream_optional_subjects_3_avg_fields
  count(columns: [stream_optional_subjects_3_select_column!], distinct: Boolean): Int!
  max: stream_optional_subjects_3_max_fields
  min: stream_optional_subjects_3_min_fields
  stddev: stream_optional_subjects_3_stddev_fields
  stddev_pop: stream_optional_subjects_3_stddev_pop_fields
  stddev_samp: stream_optional_subjects_3_stddev_samp_fields
  sum: stream_optional_subjects_3_sum_fields
  var_pop: stream_optional_subjects_3_var_pop_fields
  var_samp: stream_optional_subjects_3_var_samp_fields
  variance: stream_optional_subjects_3_variance_fields
}

"""
order by aggregate values of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_aggregate_order_by {
  avg: stream_optional_subjects_3_avg_order_by
  count: order_by
  max: stream_optional_subjects_3_max_order_by
  min: stream_optional_subjects_3_min_order_by
  stddev: stream_optional_subjects_3_stddev_order_by
  stddev_pop: stream_optional_subjects_3_stddev_pop_order_by
  stddev_samp: stream_optional_subjects_3_stddev_samp_order_by
  sum: stream_optional_subjects_3_sum_order_by
  var_pop: stream_optional_subjects_3_var_pop_order_by
  var_samp: stream_optional_subjects_3_var_samp_order_by
  variance: stream_optional_subjects_3_variance_order_by
}

"""
input type for inserting array relation for remote table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_arr_rel_insert_input {
  data: [stream_optional_subjects_3_insert_input!]!

  """on conflict condition"""
  on_conflict: stream_optional_subjects_3_on_conflict
}

"""aggregate avg on columns"""
type stream_optional_subjects_3_avg_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_avg_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "stream_optional_subjects_3". All fields are combined with a logical 'AND'.
"""
input stream_optional_subjects_3_bool_exp {
  _and: [stream_optional_subjects_3_bool_exp!]
  _not: stream_optional_subjects_3_bool_exp
  _or: [stream_optional_subjects_3_bool_exp!]
  id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "stream_optional_subjects_3"
"""
enum stream_optional_subjects_3_constraint {
  """unique or primary key constraint"""
  stream_optional_subjects_3_pkey

  """unique or primary key constraint"""
  stream_optional_subjects_3_stream_id_subject_id_62d65ad9_uniq
}

"""
input type for incrementing numeric columns in table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_inc_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_insert_input {
  id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type stream_optional_subjects_3_max_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_max_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type stream_optional_subjects_3_min_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_min_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "stream_optional_subjects_3"
"""
type stream_optional_subjects_3_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [stream_optional_subjects_3!]!
}

"""
on conflict condition type for table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_on_conflict {
  constraint: stream_optional_subjects_3_constraint!
  update_columns: [stream_optional_subjects_3_update_column!]! = []
  where: stream_optional_subjects_3_bool_exp
}

"""
Ordering options when selecting data from "stream_optional_subjects_3".
"""
input stream_optional_subjects_3_order_by {
  id: order_by
  stream: stream_order_by
  stream_id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: stream_optional_subjects_3"""
input stream_optional_subjects_3_pk_columns_input {
  id: Int!
}

"""
select columns of table "stream_optional_subjects_3"
"""
enum stream_optional_subjects_3_select_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_set_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type stream_optional_subjects_3_stddev_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_stddev_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type stream_optional_subjects_3_stddev_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_stddev_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type stream_optional_subjects_3_stddev_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_stddev_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type stream_optional_subjects_3_sum_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_sum_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
update columns of table "stream_optional_subjects_3"
"""
enum stream_optional_subjects_3_update_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type stream_optional_subjects_3_var_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_var_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type stream_optional_subjects_3_var_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_var_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type stream_optional_subjects_3_variance_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "stream_optional_subjects_3"
"""
input stream_optional_subjects_3_variance_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
columns and relationships of "stream_optional_subjects_4"
"""
type stream_optional_subjects_4 {
  id: Int!

  """An object relationship"""
  stream: stream!
  stream_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "stream_optional_subjects_4"
"""
type stream_optional_subjects_4_aggregate {
  aggregate: stream_optional_subjects_4_aggregate_fields
  nodes: [stream_optional_subjects_4!]!
}

"""
aggregate fields of "stream_optional_subjects_4"
"""
type stream_optional_subjects_4_aggregate_fields {
  avg: stream_optional_subjects_4_avg_fields
  count(columns: [stream_optional_subjects_4_select_column!], distinct: Boolean): Int!
  max: stream_optional_subjects_4_max_fields
  min: stream_optional_subjects_4_min_fields
  stddev: stream_optional_subjects_4_stddev_fields
  stddev_pop: stream_optional_subjects_4_stddev_pop_fields
  stddev_samp: stream_optional_subjects_4_stddev_samp_fields
  sum: stream_optional_subjects_4_sum_fields
  var_pop: stream_optional_subjects_4_var_pop_fields
  var_samp: stream_optional_subjects_4_var_samp_fields
  variance: stream_optional_subjects_4_variance_fields
}

"""
order by aggregate values of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_aggregate_order_by {
  avg: stream_optional_subjects_4_avg_order_by
  count: order_by
  max: stream_optional_subjects_4_max_order_by
  min: stream_optional_subjects_4_min_order_by
  stddev: stream_optional_subjects_4_stddev_order_by
  stddev_pop: stream_optional_subjects_4_stddev_pop_order_by
  stddev_samp: stream_optional_subjects_4_stddev_samp_order_by
  sum: stream_optional_subjects_4_sum_order_by
  var_pop: stream_optional_subjects_4_var_pop_order_by
  var_samp: stream_optional_subjects_4_var_samp_order_by
  variance: stream_optional_subjects_4_variance_order_by
}

"""
input type for inserting array relation for remote table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_arr_rel_insert_input {
  data: [stream_optional_subjects_4_insert_input!]!

  """on conflict condition"""
  on_conflict: stream_optional_subjects_4_on_conflict
}

"""aggregate avg on columns"""
type stream_optional_subjects_4_avg_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_avg_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "stream_optional_subjects_4". All fields are combined with a logical 'AND'.
"""
input stream_optional_subjects_4_bool_exp {
  _and: [stream_optional_subjects_4_bool_exp!]
  _not: stream_optional_subjects_4_bool_exp
  _or: [stream_optional_subjects_4_bool_exp!]
  id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "stream_optional_subjects_4"
"""
enum stream_optional_subjects_4_constraint {
  """unique or primary key constraint"""
  stream_optional_subjects_4_pkey

  """unique or primary key constraint"""
  stream_optional_subjects_4_stream_id_subject_id_ce0aac6e_uniq
}

"""
input type for incrementing numeric columns in table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_inc_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_insert_input {
  id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type stream_optional_subjects_4_max_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_max_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type stream_optional_subjects_4_min_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_min_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "stream_optional_subjects_4"
"""
type stream_optional_subjects_4_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [stream_optional_subjects_4!]!
}

"""
on conflict condition type for table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_on_conflict {
  constraint: stream_optional_subjects_4_constraint!
  update_columns: [stream_optional_subjects_4_update_column!]! = []
  where: stream_optional_subjects_4_bool_exp
}

"""
Ordering options when selecting data from "stream_optional_subjects_4".
"""
input stream_optional_subjects_4_order_by {
  id: order_by
  stream: stream_order_by
  stream_id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: stream_optional_subjects_4"""
input stream_optional_subjects_4_pk_columns_input {
  id: Int!
}

"""
select columns of table "stream_optional_subjects_4"
"""
enum stream_optional_subjects_4_select_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_set_input {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type stream_optional_subjects_4_stddev_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_stddev_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type stream_optional_subjects_4_stddev_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_stddev_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type stream_optional_subjects_4_stddev_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_stddev_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type stream_optional_subjects_4_sum_fields {
  id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_sum_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
update columns of table "stream_optional_subjects_4"
"""
enum stream_optional_subjects_4_update_column {
  """column name"""
  id

  """column name"""
  stream_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type stream_optional_subjects_4_var_pop_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_var_pop_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type stream_optional_subjects_4_var_samp_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_var_samp_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type stream_optional_subjects_4_variance_fields {
  id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "stream_optional_subjects_4"
"""
input stream_optional_subjects_4_variance_order_by {
  id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""Ordering options when selecting data from "stream"."""
input stream_order_by {
  assessment_streams_aggregate: assessment_stream_aggregate_order_by
  grade_assessments_aggregate: grade_assessment_aggregate_order_by
  grade_number: order_by
  grades_aggregate: grade_aggregate_order_by
  id: order_by
  stream_common_subjects_aggregate: stream_common_subject_aggregate_order_by
  stream_optional_subjects_1s_aggregate: stream_optional_subjects_1_aggregate_order_by
  stream_optional_subjects_2s_aggregate: stream_optional_subjects_2_aggregate_order_by
  stream_optional_subjects_3s_aggregate: stream_optional_subjects_3_aggregate_order_by
  stream_optional_subjects_4s_aggregate: stream_optional_subjects_4_aggregate_order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  subject_submissions_aggregate: subject_submission_aggregate_order_by
  tag: order_by
  total_subjects: order_by
  total_subjects_opt_1: order_by
  total_subjects_opt_2: order_by
  total_subjects_opt_3: order_by
  total_subjects_opt_4: order_by
}

"""primary key columns input for table: stream"""
input stream_pk_columns_input {
  id: Int!
}

"""
select columns of table "stream"
"""
enum stream_select_column {
  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  tag

  """column name"""
  total_subjects

  """column name"""
  total_subjects_opt_1

  """column name"""
  total_subjects_opt_2

  """column name"""
  total_subjects_opt_3

  """column name"""
  total_subjects_opt_4
}

"""
input type for updating data in table "stream"
"""
input stream_set_input {
  grade_number: Int
  id: Int
  tag: String
  total_subjects: Int
  total_subjects_opt_1: Int
  total_subjects_opt_2: Int
  total_subjects_opt_3: Int
  total_subjects_opt_4: Int
}

"""aggregate stddev on columns"""
type stream_stddev_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""aggregate stddev_pop on columns"""
type stream_stddev_pop_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""aggregate stddev_samp on columns"""
type stream_stddev_samp_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""aggregate sum on columns"""
type stream_sum_fields {
  grade_number: Int
  id: Int
  total_subjects: Int
  total_subjects_opt_1: Int
  total_subjects_opt_2: Int
  total_subjects_opt_3: Int
  total_subjects_opt_4: Int
}

"""
update columns of table "stream"
"""
enum stream_update_column {
  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  tag

  """column name"""
  total_subjects

  """column name"""
  total_subjects_opt_1

  """column name"""
  total_subjects_opt_2

  """column name"""
  total_subjects_opt_3

  """column name"""
  total_subjects_opt_4
}

"""aggregate var_pop on columns"""
type stream_var_pop_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""aggregate var_samp on columns"""
type stream_var_samp_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""aggregate variance on columns"""
type stream_variance_fields {
  grade_number: Float
  id: Float
  total_subjects: Float
  total_subjects_opt_1: Float
  total_subjects_opt_2: Float
  total_subjects_opt_3: Float
  total_subjects_opt_4: Float
}

"""
columns and relationships of "student"
"""
type student {
  admission_number: Int

  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!

  """An array relationship"""
  attendances(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): [attendance!]!

  """An aggregate relationship"""
  attendances_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): attendance_aggregate!
  category: String!
  created: timestamptz

  """An array relationship"""
  enrollments(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): [enrollment!]!

  """An aggregate relationship"""
  enrollments_aggregate(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): enrollment_aggregate!
  father_name: String
  gender: String!
  grade_number: Int!
  grade_year_mapping: _varchar
  id: Int!
  is_cwsn: Boolean!
  is_enabled: Boolean!
  mother_name: String
  name: String
  phone: bigint
  previous_acad_year: String!
  previous_grade: Int!
  roll: Int

  """An object relationship"""
  school: school
  school_id: Int
  section: String!

  """An array relationship"""
  sms(
    """distinct select on columns"""
    distinct_on: [sms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_order_by!]

    """filter the rows returned"""
    where: sms_bool_exp
  ): [sms!]!

  """An aggregate relationship"""
  sms_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_order_by!]

    """filter the rows returned"""
    where: sms_bool_exp
  ): sms_aggregate!
  stream_tag: String

  """An array relationship"""
  student_content_shares(
    """distinct select on columns"""
    distinct_on: [student_content_share_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_content_share_order_by!]

    """filter the rows returned"""
    where: student_content_share_bool_exp
  ): [student_content_share!]!

  """An aggregate relationship"""
  student_content_shares_aggregate(
    """distinct select on columns"""
    distinct_on: [student_content_share_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_content_share_order_by!]

    """filter the rows returned"""
    where: student_content_share_bool_exp
  ): student_content_share_aggregate!

  """An array relationship"""
  student_subjects(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): [student_subject!]!

  """An aggregate relationship"""
  student_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): student_subject_aggregate!

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An array relationship"""
  student_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """An aggregate relationship"""
  student_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "student"
"""
type student_aggregate {
  aggregate: student_aggregate_fields
  nodes: [student!]!
}

"""
aggregate fields of "student"
"""
type student_aggregate_fields {
  avg: student_avg_fields
  count(columns: [student_select_column!], distinct: Boolean): Int!
  max: student_max_fields
  min: student_min_fields
  stddev: student_stddev_fields
  stddev_pop: student_stddev_pop_fields
  stddev_samp: student_stddev_samp_fields
  sum: student_sum_fields
  var_pop: student_var_pop_fields
  var_samp: student_var_samp_fields
  variance: student_variance_fields
}

"""
order by aggregate values of table "student"
"""
input student_aggregate_order_by {
  avg: student_avg_order_by
  count: order_by
  max: student_max_order_by
  min: student_min_order_by
  stddev: student_stddev_order_by
  stddev_pop: student_stddev_pop_order_by
  stddev_samp: student_stddev_samp_order_by
  sum: student_sum_order_by
  var_pop: student_var_pop_order_by
  var_samp: student_var_samp_order_by
  variance: student_variance_order_by
}

"""
input type for inserting array relation for remote table "student"
"""
input student_arr_rel_insert_input {
  data: [student_insert_input!]!

  """on conflict condition"""
  on_conflict: student_on_conflict
}

"""aggregate avg on columns"""
type student_avg_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by avg() on columns of table "student"
"""
input student_avg_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "student". All fields are combined with a logical 'AND'.
"""
input student_bool_exp {
  _and: [student_bool_exp!]
  _not: student_bool_exp
  _or: [student_bool_exp!]
  admission_number: Int_comparison_exp
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  attendances: attendance_bool_exp
  category: String_comparison_exp
  created: timestamptz_comparison_exp
  enrollments: enrollment_bool_exp
  father_name: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  grade_year_mapping: _varchar_comparison_exp
  id: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  mother_name: String_comparison_exp
  name: String_comparison_exp
  phone: bigint_comparison_exp
  previous_acad_year: String_comparison_exp
  previous_grade: Int_comparison_exp
  roll: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  section: String_comparison_exp
  sms: sms_bool_exp
  stream_tag: String_comparison_exp
  student_content_shares: student_content_share_bool_exp
  student_subjects: student_subject_bool_exp
  student_submission_v2s: student_submission_v2_bool_exp
  student_submissions: student_submission_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student"
"""
enum student_constraint {
  """unique or primary key constraint"""
  Student_pkey
}

"""
columns and relationships of "student_content_share"
"""
type student_content_share {
  content_link: String!
  created_at: timestamptz
  grade_number: Int
  id: Int!
  phone_number: String!
  sms_status: String

  """An object relationship"""
  student: student
  student_id: Int
  student_name: String!
  subject: String
  updated_at: timestamptz
}

"""
aggregated selection of "student_content_share"
"""
type student_content_share_aggregate {
  aggregate: student_content_share_aggregate_fields
  nodes: [student_content_share!]!
}

"""
aggregate fields of "student_content_share"
"""
type student_content_share_aggregate_fields {
  avg: student_content_share_avg_fields
  count(columns: [student_content_share_select_column!], distinct: Boolean): Int!
  max: student_content_share_max_fields
  min: student_content_share_min_fields
  stddev: student_content_share_stddev_fields
  stddev_pop: student_content_share_stddev_pop_fields
  stddev_samp: student_content_share_stddev_samp_fields
  sum: student_content_share_sum_fields
  var_pop: student_content_share_var_pop_fields
  var_samp: student_content_share_var_samp_fields
  variance: student_content_share_variance_fields
}

"""
order by aggregate values of table "student_content_share"
"""
input student_content_share_aggregate_order_by {
  avg: student_content_share_avg_order_by
  count: order_by
  max: student_content_share_max_order_by
  min: student_content_share_min_order_by
  stddev: student_content_share_stddev_order_by
  stddev_pop: student_content_share_stddev_pop_order_by
  stddev_samp: student_content_share_stddev_samp_order_by
  sum: student_content_share_sum_order_by
  var_pop: student_content_share_var_pop_order_by
  var_samp: student_content_share_var_samp_order_by
  variance: student_content_share_variance_order_by
}

"""
input type for inserting array relation for remote table "student_content_share"
"""
input student_content_share_arr_rel_insert_input {
  data: [student_content_share_insert_input!]!

  """on conflict condition"""
  on_conflict: student_content_share_on_conflict
}

"""aggregate avg on columns"""
type student_content_share_avg_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by avg() on columns of table "student_content_share"
"""
input student_content_share_avg_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""
Boolean expression to filter rows from the table "student_content_share". All fields are combined with a logical 'AND'.
"""
input student_content_share_bool_exp {
  _and: [student_content_share_bool_exp!]
  _not: student_content_share_bool_exp
  _or: [student_content_share_bool_exp!]
  content_link: String_comparison_exp
  created_at: timestamptz_comparison_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  phone_number: String_comparison_exp
  sms_status: String_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  student_name: String_comparison_exp
  subject: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_content_share"
"""
enum student_content_share_constraint {
  """unique or primary key constraint"""
  student_content_share_pkey
}

"""
input type for incrementing numeric columns in table "student_content_share"
"""
input student_content_share_inc_input {
  grade_number: Int
  id: Int
  student_id: Int
}

"""
input type for inserting data into table "student_content_share"
"""
input student_content_share_insert_input {
  content_link: String
  created_at: timestamptz
  grade_number: Int
  id: Int
  phone_number: String
  sms_status: String
  student: student_obj_rel_insert_input
  student_id: Int
  student_name: String
  subject: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type student_content_share_max_fields {
  content_link: String
  created_at: timestamptz
  grade_number: Int
  id: Int
  phone_number: String
  sms_status: String
  student_id: Int
  student_name: String
  subject: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_content_share"
"""
input student_content_share_max_order_by {
  content_link: order_by
  created_at: order_by
  grade_number: order_by
  id: order_by
  phone_number: order_by
  sms_status: order_by
  student_id: order_by
  student_name: order_by
  subject: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_content_share_min_fields {
  content_link: String
  created_at: timestamptz
  grade_number: Int
  id: Int
  phone_number: String
  sms_status: String
  student_id: Int
  student_name: String
  subject: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_content_share"
"""
input student_content_share_min_order_by {
  content_link: order_by
  created_at: order_by
  grade_number: order_by
  id: order_by
  phone_number: order_by
  sms_status: order_by
  student_id: order_by
  student_name: order_by
  subject: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_content_share"
"""
type student_content_share_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_content_share!]!
}

"""
on conflict condition type for table "student_content_share"
"""
input student_content_share_on_conflict {
  constraint: student_content_share_constraint!
  update_columns: [student_content_share_update_column!]! = []
  where: student_content_share_bool_exp
}

"""Ordering options when selecting data from "student_content_share"."""
input student_content_share_order_by {
  content_link: order_by
  created_at: order_by
  grade_number: order_by
  id: order_by
  phone_number: order_by
  sms_status: order_by
  student: student_order_by
  student_id: order_by
  student_name: order_by
  subject: order_by
  updated_at: order_by
}

"""primary key columns input for table: student_content_share"""
input student_content_share_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_content_share"
"""
enum student_content_share_select_column {
  """column name"""
  content_link

  """column name"""
  created_at

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  phone_number

  """column name"""
  sms_status

  """column name"""
  student_id

  """column name"""
  student_name

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_content_share"
"""
input student_content_share_set_input {
  content_link: String
  created_at: timestamptz
  grade_number: Int
  id: Int
  phone_number: String
  sms_status: String
  student_id: Int
  student_name: String
  subject: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type student_content_share_stddev_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by stddev() on columns of table "student_content_share"
"""
input student_content_share_stddev_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_content_share_stddev_pop_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by stddev_pop() on columns of table "student_content_share"
"""
input student_content_share_stddev_pop_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_content_share_stddev_samp_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by stddev_samp() on columns of table "student_content_share"
"""
input student_content_share_stddev_samp_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""aggregate sum on columns"""
type student_content_share_sum_fields {
  grade_number: Int
  id: Int
  student_id: Int
}

"""
order by sum() on columns of table "student_content_share"
"""
input student_content_share_sum_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""
update columns of table "student_content_share"
"""
enum student_content_share_update_column {
  """column name"""
  content_link

  """column name"""
  created_at

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  phone_number

  """column name"""
  sms_status

  """column name"""
  student_id

  """column name"""
  student_name

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type student_content_share_var_pop_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by var_pop() on columns of table "student_content_share"
"""
input student_content_share_var_pop_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""aggregate var_samp on columns"""
type student_content_share_var_samp_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by var_samp() on columns of table "student_content_share"
"""
input student_content_share_var_samp_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""aggregate variance on columns"""
type student_content_share_variance_fields {
  grade_number: Float
  id: Float
  student_id: Float
}

"""
order by variance() on columns of table "student_content_share"
"""
input student_content_share_variance_order_by {
  grade_number: order_by
  id: order_by
  student_id: order_by
}

"""
input type for incrementing numeric columns in table "student"
"""
input student_inc_input {
  admission_number: Int
  grade_number: Int
  id: Int
  phone: bigint
  previous_grade: Int
  roll: Int
  school_id: Int
}

"""
input type for inserting data into table "student"
"""
input student_insert_input {
  admission_number: Int
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  attendances: attendance_arr_rel_insert_input
  category: String
  created: timestamptz
  enrollments: enrollment_arr_rel_insert_input
  father_name: String
  gender: String
  grade_number: Int
  grade_year_mapping: _varchar
  id: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  mother_name: String
  name: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school: school_obj_rel_insert_input
  school_id: Int
  section: String
  sms: sms_arr_rel_insert_input
  stream_tag: String
  student_content_shares: student_content_share_arr_rel_insert_input
  student_subjects: student_subject_arr_rel_insert_input
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  student_submissions: student_submission_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type student_max_fields {
  admission_number: Int
  category: String
  created: timestamptz
  father_name: String
  gender: String
  grade_number: Int
  id: Int
  mother_name: String
  name: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  stream_tag: String
  updated: timestamptz
}

"""
order by max() on columns of table "student"
"""
input student_max_order_by {
  admission_number: order_by
  category: order_by
  created: order_by
  father_name: order_by
  gender: order_by
  grade_number: order_by
  id: order_by
  mother_name: order_by
  name: order_by
  phone: order_by
  previous_acad_year: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
  section: order_by
  stream_tag: order_by
  updated: order_by
}

"""aggregate min on columns"""
type student_min_fields {
  admission_number: Int
  category: String
  created: timestamptz
  father_name: String
  gender: String
  grade_number: Int
  id: Int
  mother_name: String
  name: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  stream_tag: String
  updated: timestamptz
}

"""
order by min() on columns of table "student"
"""
input student_min_order_by {
  admission_number: order_by
  category: order_by
  created: order_by
  father_name: order_by
  gender: order_by
  grade_number: order_by
  id: order_by
  mother_name: order_by
  name: order_by
  phone: order_by
  previous_acad_year: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
  section: order_by
  stream_tag: order_by
  updated: order_by
}

"""
response of any mutation on the table "student"
"""
type student_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student!]!
}

"""
input type for inserting object relation for remote table "student"
"""
input student_obj_rel_insert_input {
  data: student_insert_input!

  """on conflict condition"""
  on_conflict: student_on_conflict
}

"""
on conflict condition type for table "student"
"""
input student_on_conflict {
  constraint: student_constraint!
  update_columns: [student_update_column!]! = []
  where: student_bool_exp
}

"""Ordering options when selecting data from "student"."""
input student_order_by {
  admission_number: order_by
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  attendances_aggregate: attendance_aggregate_order_by
  category: order_by
  created: order_by
  enrollments_aggregate: enrollment_aggregate_order_by
  father_name: order_by
  gender: order_by
  grade_number: order_by
  grade_year_mapping: order_by
  id: order_by
  is_cwsn: order_by
  is_enabled: order_by
  mother_name: order_by
  name: order_by
  phone: order_by
  previous_acad_year: order_by
  previous_grade: order_by
  roll: order_by
  school: school_order_by
  school_id: order_by
  section: order_by
  sms_aggregate: sms_aggregate_order_by
  stream_tag: order_by
  student_content_shares_aggregate: student_content_share_aggregate_order_by
  student_subjects_aggregate: student_subject_aggregate_order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  student_submissions_aggregate: student_submission_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: student"""
input student_pk_columns_input {
  id: Int!
}

"""
select columns of table "student"
"""
enum student_select_column {
  """column name"""
  admission_number

  """column name"""
  category

  """column name"""
  created

  """column name"""
  father_name

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  grade_year_mapping

  """column name"""
  id

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  mother_name

  """column name"""
  name

  """column name"""
  phone

  """column name"""
  previous_acad_year

  """column name"""
  previous_grade

  """column name"""
  roll

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  stream_tag

  """column name"""
  updated
}

"""
input type for updating data in table "student"
"""
input student_set_input {
  admission_number: Int
  category: String
  created: timestamptz
  father_name: String
  gender: String
  grade_number: Int
  grade_year_mapping: _varchar
  id: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  mother_name: String
  name: String
  phone: bigint
  previous_acad_year: String
  previous_grade: Int
  roll: Int
  school_id: Int
  section: String
  stream_tag: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type student_stddev_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by stddev() on columns of table "student"
"""
input student_stddev_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_stddev_pop_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "student"
"""
input student_stddev_pop_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_stddev_samp_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "student"
"""
input student_stddev_samp_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""
columns and relationships of "student_subject"
"""
type student_subject {
  id: Int!

  """An object relationship"""
  student: student!
  student_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
}

"""
aggregated selection of "student_subject"
"""
type student_subject_aggregate {
  aggregate: student_subject_aggregate_fields
  nodes: [student_subject!]!
}

"""
aggregate fields of "student_subject"
"""
type student_subject_aggregate_fields {
  avg: student_subject_avg_fields
  count(columns: [student_subject_select_column!], distinct: Boolean): Int!
  max: student_subject_max_fields
  min: student_subject_min_fields
  stddev: student_subject_stddev_fields
  stddev_pop: student_subject_stddev_pop_fields
  stddev_samp: student_subject_stddev_samp_fields
  sum: student_subject_sum_fields
  var_pop: student_subject_var_pop_fields
  var_samp: student_subject_var_samp_fields
  variance: student_subject_variance_fields
}

"""
order by aggregate values of table "student_subject"
"""
input student_subject_aggregate_order_by {
  avg: student_subject_avg_order_by
  count: order_by
  max: student_subject_max_order_by
  min: student_subject_min_order_by
  stddev: student_subject_stddev_order_by
  stddev_pop: student_subject_stddev_pop_order_by
  stddev_samp: student_subject_stddev_samp_order_by
  sum: student_subject_sum_order_by
  var_pop: student_subject_var_pop_order_by
  var_samp: student_subject_var_samp_order_by
  variance: student_subject_variance_order_by
}

"""
input type for inserting array relation for remote table "student_subject"
"""
input student_subject_arr_rel_insert_input {
  data: [student_subject_insert_input!]!

  """on conflict condition"""
  on_conflict: student_subject_on_conflict
}

"""aggregate avg on columns"""
type student_subject_avg_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "student_subject"
"""
input student_subject_avg_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "student_subject". All fields are combined with a logical 'AND'.
"""
input student_subject_bool_exp {
  _and: [student_subject_bool_exp!]
  _not: student_subject_bool_exp
  _or: [student_subject_bool_exp!]
  id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "student_subject"
"""
enum student_subject_constraint {
  """unique or primary key constraint"""
  student_subject_pkey

  """unique or primary key constraint"""
  student_subject_student_id_subject_id_cc31a1e6_uniq
}

"""
input type for incrementing numeric columns in table "student_subject"
"""
input student_subject_inc_input {
  id: Int
  student_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "student_subject"
"""
input student_subject_insert_input {
  id: Int
  student: student_obj_rel_insert_input
  student_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
}

"""aggregate max on columns"""
type student_subject_max_fields {
  id: Int
  student_id: Int
  subject_id: Int
}

"""
order by max() on columns of table "student_subject"
"""
input student_subject_max_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate min on columns"""
type student_subject_min_fields {
  id: Int
  student_id: Int
  subject_id: Int
}

"""
order by min() on columns of table "student_subject"
"""
input student_subject_min_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
response of any mutation on the table "student_subject"
"""
type student_subject_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_subject!]!
}

"""
on conflict condition type for table "student_subject"
"""
input student_subject_on_conflict {
  constraint: student_subject_constraint!
  update_columns: [student_subject_update_column!]! = []
  where: student_subject_bool_exp
}

"""Ordering options when selecting data from "student_subject"."""
input student_subject_order_by {
  id: order_by
  student: student_order_by
  student_id: order_by
  subject: subject_order_by
  subject_id: order_by
}

"""primary key columns input for table: student_subject"""
input student_subject_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_subject"
"""
enum student_subject_select_column {
  """column name"""
  id

  """column name"""
  student_id

  """column name"""
  subject_id
}

"""
input type for updating data in table "student_subject"
"""
input student_subject_set_input {
  id: Int
  student_id: Int
  subject_id: Int
}

"""aggregate stddev on columns"""
type student_subject_stddev_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "student_subject"
"""
input student_subject_stddev_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_subject_stddev_pop_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "student_subject"
"""
input student_subject_stddev_pop_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_subject_stddev_samp_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "student_subject"
"""
input student_subject_stddev_samp_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type student_subject_sum_fields {
  id: Int
  student_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "student_subject"
"""
input student_subject_sum_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
update columns of table "student_subject"
"""
enum student_subject_update_column {
  """column name"""
  id

  """column name"""
  student_id

  """column name"""
  subject_id
}

"""aggregate var_pop on columns"""
type student_subject_var_pop_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "student_subject"
"""
input student_subject_var_pop_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type student_subject_var_samp_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "student_subject"
"""
input student_subject_var_samp_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type student_subject_variance_fields {
  id: Float
  student_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "student_subject"
"""
input student_subject_variance_order_by {
  id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
columns and relationships of "student_submission"
"""
type student_submission {
  """An object relationship"""
  assessment: assessment!
  assessment_grade: String!
  assessment_id: Int!
  assessment_percent: float8
  created: timestamptz
  form_id: Int

  """An object relationship"""
  grade_assessment: grade_assessment
  grade_number: Int!
  id: Int!
  section: String!

  """An object relationship"""
  sm: sms
  sms_id: Int

  """An object relationship"""
  student: student!
  student_id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
  updated: timestamptz
}

"""
aggregated selection of "student_submission"
"""
type student_submission_aggregate {
  aggregate: student_submission_aggregate_fields
  nodes: [student_submission!]!
}

"""
aggregate fields of "student_submission"
"""
type student_submission_aggregate_fields {
  avg: student_submission_avg_fields
  count(columns: [student_submission_select_column!], distinct: Boolean): Int!
  max: student_submission_max_fields
  min: student_submission_min_fields
  stddev: student_submission_stddev_fields
  stddev_pop: student_submission_stddev_pop_fields
  stddev_samp: student_submission_stddev_samp_fields
  sum: student_submission_sum_fields
  var_pop: student_submission_var_pop_fields
  var_samp: student_submission_var_samp_fields
  variance: student_submission_variance_fields
}

"""
order by aggregate values of table "student_submission"
"""
input student_submission_aggregate_order_by {
  avg: student_submission_avg_order_by
  count: order_by
  max: student_submission_max_order_by
  min: student_submission_min_order_by
  stddev: student_submission_stddev_order_by
  stddev_pop: student_submission_stddev_pop_order_by
  stddev_samp: student_submission_stddev_samp_order_by
  sum: student_submission_sum_order_by
  var_pop: student_submission_var_pop_order_by
  var_samp: student_submission_var_samp_order_by
  variance: student_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "student_submission"
"""
input student_submission_arr_rel_insert_input {
  data: [student_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: student_submission_on_conflict
}

"""aggregate avg on columns"""
type student_submission_avg_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "student_submission"
"""
input student_submission_avg_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "student_submission". All fields are combined with a logical 'AND'.
"""
input student_submission_bool_exp {
  _and: [student_submission_bool_exp!]
  _not: student_submission_bool_exp
  _or: [student_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_grade: String_comparison_exp
  assessment_id: Int_comparison_exp
  assessment_percent: float8_comparison_exp
  created: timestamptz_comparison_exp
  form_id: Int_comparison_exp
  grade_assessment: grade_assessment_bool_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  section: String_comparison_exp
  sm: sms_bool_exp
  sms_id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_submission"
"""
enum student_submission_constraint {
  """unique or primary key constraint"""
  student_submission_pkey
}

"""
input type for incrementing numeric columns in table "student_submission"
"""
input student_submission_inc_input {
  assessment_id: Int
  assessment_percent: float8
  form_id: Int
  grade_number: Int
  id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "student_submission"
"""
input student_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_grade: String
  assessment_id: Int
  assessment_percent: float8
  created: timestamptz
  form_id: Int
  grade_assessment: grade_assessment_obj_rel_insert_input
  grade_number: Int
  id: Int
  section: String
  sm: sms_obj_rel_insert_input
  sms_id: Int
  student: student_obj_rel_insert_input
  student_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type student_submission_max_fields {
  assessment_grade: String
  assessment_id: Int
  assessment_percent: float8
  created: timestamptz
  form_id: Int
  grade_number: Int
  id: Int
  section: String
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "student_submission"
"""
input student_submission_max_order_by {
  assessment_grade: order_by
  assessment_id: order_by
  assessment_percent: order_by
  created: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  section: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type student_submission_min_fields {
  assessment_grade: String
  assessment_id: Int
  assessment_percent: float8
  created: timestamptz
  form_id: Int
  grade_number: Int
  id: Int
  section: String
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "student_submission"
"""
input student_submission_min_order_by {
  assessment_grade: order_by
  assessment_id: order_by
  assessment_percent: order_by
  created: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  section: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "student_submission"
"""
type student_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_submission!]!
}

"""
on conflict condition type for table "student_submission"
"""
input student_submission_on_conflict {
  constraint: student_submission_constraint!
  update_columns: [student_submission_update_column!]! = []
  where: student_submission_bool_exp
}

"""Ordering options when selecting data from "student_submission"."""
input student_submission_order_by {
  assessment: assessment_order_by
  assessment_grade: order_by
  assessment_id: order_by
  assessment_percent: order_by
  created: order_by
  form_id: order_by
  grade_assessment: grade_assessment_order_by
  grade_number: order_by
  id: order_by
  section: order_by
  sm: sms_order_by
  sms_id: order_by
  student: student_order_by
  student_id: order_by
  subject: subject_order_by
  subject_id: order_by
  updated: order_by
}

"""primary key columns input for table: student_submission"""
input student_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_submission"
"""
enum student_submission_select_column {
  """column name"""
  assessment_grade

  """column name"""
  assessment_id

  """column name"""
  assessment_percent

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  section

  """column name"""
  sms_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
input type for updating data in table "student_submission"
"""
input student_submission_set_input {
  assessment_grade: String
  assessment_id: Int
  assessment_percent: float8
  created: timestamptz
  form_id: Int
  grade_number: Int
  id: Int
  section: String
  sms_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type student_submission_stddev_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "student_submission"
"""
input student_submission_stddev_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_submission_stddev_pop_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "student_submission"
"""
input student_submission_stddev_pop_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_submission_stddev_samp_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "student_submission"
"""
input student_submission_stddev_samp_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type student_submission_sum_fields {
  assessment_id: Int
  assessment_percent: float8
  form_id: Int
  grade_number: Int
  id: Int
  sms_id: Int
  student_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "student_submission"
"""
input student_submission_sum_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
update columns of table "student_submission"
"""
enum student_submission_update_column {
  """column name"""
  assessment_grade

  """column name"""
  assessment_id

  """column name"""
  assessment_percent

  """column name"""
  created

  """column name"""
  form_id

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  section

  """column name"""
  sms_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
columns and relationships of "student_submission_v2"
"""
type student_submission_v2 {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!

  """An object relationship"""
  assessment_unit: assessment_unit
  assessment_unit_id: Int
  created: timestamptz

  """An object relationship"""
  grade: grade
  grade_id: Int
  grade_submissions_id: Int
  id: Int!

  """An object relationship"""
  mapping_submission: mapping_submission

  """An object relationship"""
  school: school
  school_id: Int

  """An object relationship"""
  stream: stream
  stream_id: Int

  """An object relationship"""
  student: student!
  student_id: Int!

  """An array relationship"""
  student_submission_v2_marks_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): [student_submission_v2_marks_submissions!]!

  """An aggregate relationship"""
  student_submission_v2_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): student_submission_v2_marks_submissions_aggregate!

  """An object relationship"""
  subject: subject!
  subject_id: Int!
  updated: timestamptz
}

"""
aggregated selection of "student_submission_v2"
"""
type student_submission_v2_aggregate {
  aggregate: student_submission_v2_aggregate_fields
  nodes: [student_submission_v2!]!
}

"""
aggregate fields of "student_submission_v2"
"""
type student_submission_v2_aggregate_fields {
  avg: student_submission_v2_avg_fields
  count(columns: [student_submission_v2_select_column!], distinct: Boolean): Int!
  max: student_submission_v2_max_fields
  min: student_submission_v2_min_fields
  stddev: student_submission_v2_stddev_fields
  stddev_pop: student_submission_v2_stddev_pop_fields
  stddev_samp: student_submission_v2_stddev_samp_fields
  sum: student_submission_v2_sum_fields
  var_pop: student_submission_v2_var_pop_fields
  var_samp: student_submission_v2_var_samp_fields
  variance: student_submission_v2_variance_fields
}

"""
order by aggregate values of table "student_submission_v2"
"""
input student_submission_v2_aggregate_order_by {
  avg: student_submission_v2_avg_order_by
  count: order_by
  max: student_submission_v2_max_order_by
  min: student_submission_v2_min_order_by
  stddev: student_submission_v2_stddev_order_by
  stddev_pop: student_submission_v2_stddev_pop_order_by
  stddev_samp: student_submission_v2_stddev_samp_order_by
  sum: student_submission_v2_sum_order_by
  var_pop: student_submission_v2_var_pop_order_by
  var_samp: student_submission_v2_var_samp_order_by
  variance: student_submission_v2_variance_order_by
}

"""
input type for inserting array relation for remote table "student_submission_v2"
"""
input student_submission_v2_arr_rel_insert_input {
  data: [student_submission_v2_insert_input!]!

  """on conflict condition"""
  on_conflict: student_submission_v2_on_conflict
}

"""aggregate avg on columns"""
type student_submission_v2_avg_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "student_submission_v2"
"""
input student_submission_v2_avg_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "student_submission_v2". All fields are combined with a logical 'AND'.
"""
input student_submission_v2_bool_exp {
  _and: [student_submission_v2_bool_exp!]
  _not: student_submission_v2_bool_exp
  _or: [student_submission_v2_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  assessment_unit: assessment_unit_bool_exp
  assessment_unit_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  grade_submissions_id: Int_comparison_exp
  id: Int_comparison_exp
  mapping_submission: mapping_submission_bool_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  student_submission_v2_marks_submissions: student_submission_v2_marks_submissions_bool_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_submission_v2"
"""
enum student_submission_v2_constraint {
  """unique or primary key constraint"""
  student_submission_v2_pkey
}

"""
input type for incrementing numeric columns in table "student_submission_v2"
"""
input student_submission_v2_inc_input {
  assessment_id: Int
  assessment_unit_id: Int
  grade_id: Int
  grade_submissions_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  student_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "student_submission_v2"
"""
input student_submission_v2_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  assessment_unit: assessment_unit_obj_rel_insert_input
  assessment_unit_id: Int
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  grade_submissions_id: Int
  id: Int
  mapping_submission: mapping_submission_obj_rel_insert_input
  school: school_obj_rel_insert_input
  school_id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  student: student_obj_rel_insert_input
  student_id: Int
  student_submission_v2_marks_submissions: student_submission_v2_marks_submissions_arr_rel_insert_input
  subject: subject_obj_rel_insert_input
  subject_id: Int
  updated: timestamptz
}

"""
columns and relationships of "student_submission_v2_marks_submissions"
"""
type student_submission_v2_marks_submissions {
  """An object relationship"""
  component_submission: component_submission!
  componentsubmission_id: Int!
  id: Int!

  """An object relationship"""
  student_submission_v2: student_submission_v2!
  studentsubmission_v2_id: Int!
}

"""
aggregated selection of "student_submission_v2_marks_submissions"
"""
type student_submission_v2_marks_submissions_aggregate {
  aggregate: student_submission_v2_marks_submissions_aggregate_fields
  nodes: [student_submission_v2_marks_submissions!]!
}

"""
aggregate fields of "student_submission_v2_marks_submissions"
"""
type student_submission_v2_marks_submissions_aggregate_fields {
  avg: student_submission_v2_marks_submissions_avg_fields
  count(columns: [student_submission_v2_marks_submissions_select_column!], distinct: Boolean): Int!
  max: student_submission_v2_marks_submissions_max_fields
  min: student_submission_v2_marks_submissions_min_fields
  stddev: student_submission_v2_marks_submissions_stddev_fields
  stddev_pop: student_submission_v2_marks_submissions_stddev_pop_fields
  stddev_samp: student_submission_v2_marks_submissions_stddev_samp_fields
  sum: student_submission_v2_marks_submissions_sum_fields
  var_pop: student_submission_v2_marks_submissions_var_pop_fields
  var_samp: student_submission_v2_marks_submissions_var_samp_fields
  variance: student_submission_v2_marks_submissions_variance_fields
}

"""
order by aggregate values of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_aggregate_order_by {
  avg: student_submission_v2_marks_submissions_avg_order_by
  count: order_by
  max: student_submission_v2_marks_submissions_max_order_by
  min: student_submission_v2_marks_submissions_min_order_by
  stddev: student_submission_v2_marks_submissions_stddev_order_by
  stddev_pop: student_submission_v2_marks_submissions_stddev_pop_order_by
  stddev_samp: student_submission_v2_marks_submissions_stddev_samp_order_by
  sum: student_submission_v2_marks_submissions_sum_order_by
  var_pop: student_submission_v2_marks_submissions_var_pop_order_by
  var_samp: student_submission_v2_marks_submissions_var_samp_order_by
  variance: student_submission_v2_marks_submissions_variance_order_by
}

"""
input type for inserting array relation for remote table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_arr_rel_insert_input {
  data: [student_submission_v2_marks_submissions_insert_input!]!

  """on conflict condition"""
  on_conflict: student_submission_v2_marks_submissions_on_conflict
}

"""aggregate avg on columns"""
type student_submission_v2_marks_submissions_avg_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by avg() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_avg_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""
Boolean expression to filter rows from the table "student_submission_v2_marks_submissions". All fields are combined with a logical 'AND'.
"""
input student_submission_v2_marks_submissions_bool_exp {
  _and: [student_submission_v2_marks_submissions_bool_exp!]
  _not: student_submission_v2_marks_submissions_bool_exp
  _or: [student_submission_v2_marks_submissions_bool_exp!]
  component_submission: component_submission_bool_exp
  componentsubmission_id: Int_comparison_exp
  id: Int_comparison_exp
  student_submission_v2: student_submission_v2_bool_exp
  studentsubmission_v2_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "student_submission_v2_marks_submissions"
"""
enum student_submission_v2_marks_submissions_constraint {
  """unique or primary key constraint"""
  student_submission_v2_ma_studentsubmission_v2_id__87a3f7fd_uniq

  """unique or primary key constraint"""
  student_submission_v2_marks_submissions_pkey
}

"""
input type for incrementing numeric columns in table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_inc_input {
  componentsubmission_id: Int
  id: Int
  studentsubmission_v2_id: Int
}

"""
input type for inserting data into table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_insert_input {
  component_submission: component_submission_obj_rel_insert_input
  componentsubmission_id: Int
  id: Int
  student_submission_v2: student_submission_v2_obj_rel_insert_input
  studentsubmission_v2_id: Int
}

"""aggregate max on columns"""
type student_submission_v2_marks_submissions_max_fields {
  componentsubmission_id: Int
  id: Int
  studentsubmission_v2_id: Int
}

"""
order by max() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_max_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate min on columns"""
type student_submission_v2_marks_submissions_min_fields {
  componentsubmission_id: Int
  id: Int
  studentsubmission_v2_id: Int
}

"""
order by min() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_min_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""
response of any mutation on the table "student_submission_v2_marks_submissions"
"""
type student_submission_v2_marks_submissions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_submission_v2_marks_submissions!]!
}

"""
on conflict condition type for table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_on_conflict {
  constraint: student_submission_v2_marks_submissions_constraint!
  update_columns: [student_submission_v2_marks_submissions_update_column!]! = []
  where: student_submission_v2_marks_submissions_bool_exp
}

"""
Ordering options when selecting data from "student_submission_v2_marks_submissions".
"""
input student_submission_v2_marks_submissions_order_by {
  component_submission: component_submission_order_by
  componentsubmission_id: order_by
  id: order_by
  student_submission_v2: student_submission_v2_order_by
  studentsubmission_v2_id: order_by
}

"""
primary key columns input for table: student_submission_v2_marks_submissions
"""
input student_submission_v2_marks_submissions_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_submission_v2_marks_submissions"
"""
enum student_submission_v2_marks_submissions_select_column {
  """column name"""
  componentsubmission_id

  """column name"""
  id

  """column name"""
  studentsubmission_v2_id
}

"""
input type for updating data in table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_set_input {
  componentsubmission_id: Int
  id: Int
  studentsubmission_v2_id: Int
}

"""aggregate stddev on columns"""
type student_submission_v2_marks_submissions_stddev_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by stddev() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_stddev_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_submission_v2_marks_submissions_stddev_pop_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by stddev_pop() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_stddev_pop_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_submission_v2_marks_submissions_stddev_samp_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by stddev_samp() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_stddev_samp_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate sum on columns"""
type student_submission_v2_marks_submissions_sum_fields {
  componentsubmission_id: Int
  id: Int
  studentsubmission_v2_id: Int
}

"""
order by sum() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_sum_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""
update columns of table "student_submission_v2_marks_submissions"
"""
enum student_submission_v2_marks_submissions_update_column {
  """column name"""
  componentsubmission_id

  """column name"""
  id

  """column name"""
  studentsubmission_v2_id
}

"""aggregate var_pop on columns"""
type student_submission_v2_marks_submissions_var_pop_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by var_pop() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_var_pop_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate var_samp on columns"""
type student_submission_v2_marks_submissions_var_samp_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by var_samp() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_var_samp_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate variance on columns"""
type student_submission_v2_marks_submissions_variance_fields {
  componentsubmission_id: Float
  id: Float
  studentsubmission_v2_id: Float
}

"""
order by variance() on columns of table "student_submission_v2_marks_submissions"
"""
input student_submission_v2_marks_submissions_variance_order_by {
  componentsubmission_id: order_by
  id: order_by
  studentsubmission_v2_id: order_by
}

"""aggregate max on columns"""
type student_submission_v2_max_fields {
  assessment_id: Int
  assessment_unit_id: Int
  created: timestamptz
  grade_id: Int
  grade_submissions_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "student_submission_v2"
"""
input student_submission_v2_max_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  created: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type student_submission_v2_min_fields {
  assessment_id: Int
  assessment_unit_id: Int
  created: timestamptz
  grade_id: Int
  grade_submissions_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "student_submission_v2"
"""
input student_submission_v2_min_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  created: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "student_submission_v2"
"""
type student_submission_v2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_submission_v2!]!
}

"""
input type for inserting object relation for remote table "student_submission_v2"
"""
input student_submission_v2_obj_rel_insert_input {
  data: student_submission_v2_insert_input!

  """on conflict condition"""
  on_conflict: student_submission_v2_on_conflict
}

"""
on conflict condition type for table "student_submission_v2"
"""
input student_submission_v2_on_conflict {
  constraint: student_submission_v2_constraint!
  update_columns: [student_submission_v2_update_column!]! = []
  where: student_submission_v2_bool_exp
}

"""Ordering options when selecting data from "student_submission_v2"."""
input student_submission_v2_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  assessment_unit: assessment_unit_order_by
  assessment_unit_id: order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  mapping_submission: mapping_submission_order_by
  school: school_order_by
  school_id: order_by
  stream: stream_order_by
  stream_id: order_by
  student: student_order_by
  student_id: order_by
  student_submission_v2_marks_submissions_aggregate: student_submission_v2_marks_submissions_aggregate_order_by
  subject: subject_order_by
  subject_id: order_by
  updated: order_by
}

"""primary key columns input for table: student_submission_v2"""
input student_submission_v2_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_submission_v2"
"""
enum student_submission_v2_select_column {
  """column name"""
  assessment_id

  """column name"""
  assessment_unit_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  grade_submissions_id

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  stream_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
input type for updating data in table "student_submission_v2"
"""
input student_submission_v2_set_input {
  assessment_id: Int
  assessment_unit_id: Int
  created: timestamptz
  grade_id: Int
  grade_submissions_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  student_id: Int
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type student_submission_v2_stddev_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "student_submission_v2"
"""
input student_submission_v2_stddev_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_submission_v2_stddev_pop_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "student_submission_v2"
"""
input student_submission_v2_stddev_pop_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_submission_v2_stddev_samp_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "student_submission_v2"
"""
input student_submission_v2_stddev_samp_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type student_submission_v2_sum_fields {
  assessment_id: Int
  assessment_unit_id: Int
  grade_id: Int
  grade_submissions_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  student_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "student_submission_v2"
"""
input student_submission_v2_sum_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""
update columns of table "student_submission_v2"
"""
enum student_submission_v2_update_column {
  """column name"""
  assessment_id

  """column name"""
  assessment_unit_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  grade_submissions_id

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  stream_id

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type student_submission_v2_var_pop_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "student_submission_v2"
"""
input student_submission_v2_var_pop_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type student_submission_v2_var_samp_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "student_submission_v2"
"""
input student_submission_v2_var_samp_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type student_submission_v2_variance_fields {
  assessment_id: Float
  assessment_unit_id: Float
  grade_id: Float
  grade_submissions_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "student_submission_v2"
"""
input student_submission_v2_variance_order_by {
  assessment_id: order_by
  assessment_unit_id: order_by
  grade_id: order_by
  grade_submissions_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate var_pop on columns"""
type student_submission_var_pop_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "student_submission"
"""
input student_submission_var_pop_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type student_submission_var_samp_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "student_submission"
"""
input student_submission_var_samp_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type student_submission_variance_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  id: Float
  sms_id: Float
  student_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "student_submission"
"""
input student_submission_variance_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  form_id: order_by
  grade_number: order_by
  id: order_by
  sms_id: order_by
  student_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type student_sum_fields {
  admission_number: Int
  grade_number: Int
  id: Int
  phone: bigint
  previous_grade: Int
  roll: Int
  school_id: Int
}

"""
order by sum() on columns of table "student"
"""
input student_sum_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""
columns and relationships of "student_table_higher"
"""
type student_table_higher {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""
columns and relationships of "student_table_higher_2"
"""
type student_table_higher_2 {
  Performance: String
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""
aggregated selection of "student_table_higher_2"
"""
type student_table_higher_2_aggregate {
  aggregate: student_table_higher_2_aggregate_fields
  nodes: [student_table_higher_2!]!
}

"""
aggregate fields of "student_table_higher_2"
"""
type student_table_higher_2_aggregate_fields {
  avg: student_table_higher_2_avg_fields
  count(columns: [student_table_higher_2_select_column!], distinct: Boolean): Int!
  max: student_table_higher_2_max_fields
  min: student_table_higher_2_min_fields
  stddev: student_table_higher_2_stddev_fields
  stddev_pop: student_table_higher_2_stddev_pop_fields
  stddev_samp: student_table_higher_2_stddev_samp_fields
  sum: student_table_higher_2_sum_fields
  var_pop: student_table_higher_2_var_pop_fields
  var_samp: student_table_higher_2_var_samp_fields
  variance: student_table_higher_2_variance_fields
}

"""aggregate avg on columns"""
type student_table_higher_2_avg_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "student_table_higher_2". All fields are combined with a logical 'AND'.
"""
input student_table_higher_2_bool_exp {
  Performance: String_comparison_exp
  _and: [student_table_higher_2_bool_exp!]
  _not: student_table_higher_2_bool_exp
  _or: [student_table_higher_2_bool_exp!]
  acad_year: String_comparison_exp
  assessment: String_comparison_exp
  avg: float8_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  school_id: Int_comparison_exp
  school_name: String_comparison_exp
  school_type: String_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "student_table_higher_2"
"""
input student_table_higher_2_inc_input {
  avg: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""
input type for inserting data into table "student_table_higher_2"
"""
input student_table_higher_2_insert_input {
  Performance: String
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate max on columns"""
type student_table_higher_2_max_fields {
  Performance: String
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate min on columns"""
type student_table_higher_2_min_fields {
  Performance: String
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""
response of any mutation on the table "student_table_higher_2"
"""
type student_table_higher_2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_table_higher_2!]!
}

"""Ordering options when selecting data from "student_table_higher_2"."""
input student_table_higher_2_order_by {
  Performance: order_by
  acad_year: order_by
  assessment: order_by
  avg: order_by
  block: order_by
  category: order_by
  cluster: order_by
  district: order_by
  gender: order_by
  grade_number: order_by
  is_cwsn: order_by
  is_enabled: order_by
  school_id: order_by
  school_name: order_by
  school_type: order_by
  section: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  udise: order_by
}

"""
select columns of table "student_table_higher_2"
"""
enum student_table_higher_2_select_column {
  """column name"""
  Performance

  """column name"""
  acad_year

  """column name"""
  assessment

  """column name"""
  avg

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  school_id

  """column name"""
  school_name

  """column name"""
  school_type

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  udise
}

"""
input type for updating data in table "student_table_higher_2"
"""
input student_table_higher_2_set_input {
  Performance: String
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate stddev on columns"""
type student_table_higher_2_stddev_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type student_table_higher_2_stddev_pop_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type student_table_higher_2_stddev_samp_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type student_table_higher_2_sum_fields {
  avg: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type student_table_higher_2_var_pop_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type student_table_higher_2_var_samp_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type student_table_higher_2_variance_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
aggregated selection of "student_table_higher"
"""
type student_table_higher_aggregate {
  aggregate: student_table_higher_aggregate_fields
  nodes: [student_table_higher!]!
}

"""
aggregate fields of "student_table_higher"
"""
type student_table_higher_aggregate_fields {
  avg: student_table_higher_avg_fields
  count(columns: [student_table_higher_select_column!], distinct: Boolean): Int!
  max: student_table_higher_max_fields
  min: student_table_higher_min_fields
  stddev: student_table_higher_stddev_fields
  stddev_pop: student_table_higher_stddev_pop_fields
  stddev_samp: student_table_higher_stddev_samp_fields
  sum: student_table_higher_sum_fields
  var_pop: student_table_higher_var_pop_fields
  var_samp: student_table_higher_var_samp_fields
  variance: student_table_higher_variance_fields
}

"""aggregate avg on columns"""
type student_table_higher_avg_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "student_table_higher". All fields are combined with a logical 'AND'.
"""
input student_table_higher_bool_exp {
  _and: [student_table_higher_bool_exp!]
  _not: student_table_higher_bool_exp
  _or: [student_table_higher_bool_exp!]
  acad_year: String_comparison_exp
  assessment: String_comparison_exp
  avg: float8_comparison_exp
  block: String_comparison_exp
  category: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  gender: String_comparison_exp
  grade_number: Int_comparison_exp
  is_cwsn: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  school_id: Int_comparison_exp
  school_name: String_comparison_exp
  school_type: String_comparison_exp
  section: String_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "student_table_higher"
"""
input student_table_higher_inc_input {
  avg: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""
input type for inserting data into table "student_table_higher"
"""
input student_table_higher_insert_input {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate max on columns"""
type student_table_higher_max_fields {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate min on columns"""
type student_table_higher_min_fields {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""
response of any mutation on the table "student_table_higher"
"""
type student_table_higher_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [student_table_higher!]!
}

"""Ordering options when selecting data from "student_table_higher"."""
input student_table_higher_order_by {
  acad_year: order_by
  assessment: order_by
  avg: order_by
  block: order_by
  category: order_by
  cluster: order_by
  district: order_by
  gender: order_by
  grade_number: order_by
  is_cwsn: order_by
  is_enabled: order_by
  school_id: order_by
  school_name: order_by
  school_type: order_by
  section: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  udise: order_by
}

"""
select columns of table "student_table_higher"
"""
enum student_table_higher_select_column {
  """column name"""
  acad_year

  """column name"""
  assessment

  """column name"""
  avg

  """column name"""
  block

  """column name"""
  category

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  school_id

  """column name"""
  school_name

  """column name"""
  school_type

  """column name"""
  section

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  udise
}

"""
input type for updating data in table "student_table_higher"
"""
input student_table_higher_set_input {
  acad_year: String
  assessment: String
  avg: float8
  block: String
  category: String
  cluster: String
  district: String
  gender: String
  grade_number: Int
  is_cwsn: Boolean
  is_enabled: Boolean
  school_id: Int
  school_name: String
  school_type: String
  section: String
  session: String
  stream_tag: String
  student_id: Int
  udise: Int
}

"""aggregate stddev on columns"""
type student_table_higher_stddev_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type student_table_higher_stddev_pop_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type student_table_higher_stddev_samp_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type student_table_higher_sum_fields {
  avg: float8
  grade_number: Int
  school_id: Int
  student_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type student_table_higher_var_pop_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type student_table_higher_var_samp_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type student_table_higher_variance_fields {
  avg: Float
  grade_number: Float
  school_id: Float
  student_id: Float
  udise: Float
}

"""
update columns of table "student"
"""
enum student_update_column {
  """column name"""
  admission_number

  """column name"""
  category

  """column name"""
  created

  """column name"""
  father_name

  """column name"""
  gender

  """column name"""
  grade_number

  """column name"""
  grade_year_mapping

  """column name"""
  id

  """column name"""
  is_cwsn

  """column name"""
  is_enabled

  """column name"""
  mother_name

  """column name"""
  name

  """column name"""
  phone

  """column name"""
  previous_acad_year

  """column name"""
  previous_grade

  """column name"""
  roll

  """column name"""
  school_id

  """column name"""
  section

  """column name"""
  stream_tag

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type student_var_pop_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "student"
"""
input student_var_pop_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type student_var_samp_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "student"
"""
input student_var_samp_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type student_variance_fields {
  admission_number: Float
  grade_number: Float
  id: Float
  phone: Float
  previous_grade: Float
  roll: Float
  school_id: Float
}

"""
order by variance() on columns of table "student"
"""
input student_variance_order_by {
  admission_number: order_by
  grade_number: order_by
  id: order_by
  phone: order_by
  previous_grade: order_by
  roll: order_by
  school_id: order_by
}

"""
columns and relationships of "studentprofiles_cg"
"""
type studentprofiles_cg {
  Lessthan2quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""
columns and relationships of "studentprofiles_cg_2"
"""
type studentprofiles_cg_2 {
  Lessthan5quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""
aggregated selection of "studentprofiles_cg_2"
"""
type studentprofiles_cg_2_aggregate {
  aggregate: studentprofiles_cg_2_aggregate_fields
  nodes: [studentprofiles_cg_2!]!
}

"""
aggregate fields of "studentprofiles_cg_2"
"""
type studentprofiles_cg_2_aggregate_fields {
  avg: studentprofiles_cg_2_avg_fields
  count(columns: [studentprofiles_cg_2_select_column!], distinct: Boolean): Int!
  max: studentprofiles_cg_2_max_fields
  min: studentprofiles_cg_2_min_fields
  stddev: studentprofiles_cg_2_stddev_fields
  stddev_pop: studentprofiles_cg_2_stddev_pop_fields
  stddev_samp: studentprofiles_cg_2_stddev_samp_fields
  sum: studentprofiles_cg_2_sum_fields
  var_pop: studentprofiles_cg_2_var_pop_fields
  var_samp: studentprofiles_cg_2_var_samp_fields
  variance: studentprofiles_cg_2_variance_fields
}

"""aggregate avg on columns"""
type studentprofiles_cg_2_avg_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "studentprofiles_cg_2". All fields are combined with a logical 'AND'.
"""
input studentprofiles_cg_2_bool_exp {
  Lessthan5quiztaken: String_comparison_exp
  _and: [studentprofiles_cg_2_bool_exp!]
  _not: studentprofiles_cg_2_bool_exp
  _or: [studentprofiles_cg_2_bool_exp!]
  block: String_comparison_exp
  district: String_comparison_exp
  duplicates: String_comparison_exp
  esamwadmatching: String_comparison_exp
  grade: String_comparison_exp
  id: Int_comparison_exp
  matchingteacherno: String_comparison_exp
  no_of_profiles: bigint_comparison_exp
  school_class_mismatch: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "studentprofiles_cg_2"
"""
input studentprofiles_cg_2_inc_input {
  id: Int
  no_of_profiles: bigint
  udise: Int
}

"""
input type for inserting data into table "studentprofiles_cg_2"
"""
input studentprofiles_cg_2_insert_input {
  Lessthan5quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""aggregate max on columns"""
type studentprofiles_cg_2_max_fields {
  Lessthan5quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""aggregate min on columns"""
type studentprofiles_cg_2_min_fields {
  Lessthan5quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""
response of any mutation on the table "studentprofiles_cg_2"
"""
type studentprofiles_cg_2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [studentprofiles_cg_2!]!
}

"""Ordering options when selecting data from "studentprofiles_cg_2"."""
input studentprofiles_cg_2_order_by {
  Lessthan5quiztaken: order_by
  block: order_by
  district: order_by
  duplicates: order_by
  esamwadmatching: order_by
  grade: order_by
  id: order_by
  matchingteacherno: order_by
  no_of_profiles: order_by
  school_class_mismatch: order_by
  udise: order_by
}

"""
select columns of table "studentprofiles_cg_2"
"""
enum studentprofiles_cg_2_select_column {
  """column name"""
  Lessthan5quiztaken

  """column name"""
  block

  """column name"""
  district

  """column name"""
  duplicates

  """column name"""
  esamwadmatching

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  matchingteacherno

  """column name"""
  no_of_profiles

  """column name"""
  school_class_mismatch

  """column name"""
  udise
}

"""
input type for updating data in table "studentprofiles_cg_2"
"""
input studentprofiles_cg_2_set_input {
  Lessthan5quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""aggregate stddev on columns"""
type studentprofiles_cg_2_stddev_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type studentprofiles_cg_2_stddev_pop_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type studentprofiles_cg_2_stddev_samp_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate sum on columns"""
type studentprofiles_cg_2_sum_fields {
  id: Int
  no_of_profiles: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type studentprofiles_cg_2_var_pop_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type studentprofiles_cg_2_var_samp_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate variance on columns"""
type studentprofiles_cg_2_variance_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""
aggregated selection of "studentprofiles_cg"
"""
type studentprofiles_cg_aggregate {
  aggregate: studentprofiles_cg_aggregate_fields
  nodes: [studentprofiles_cg!]!
}

"""
aggregate fields of "studentprofiles_cg"
"""
type studentprofiles_cg_aggregate_fields {
  avg: studentprofiles_cg_avg_fields
  count(columns: [studentprofiles_cg_select_column!], distinct: Boolean): Int!
  max: studentprofiles_cg_max_fields
  min: studentprofiles_cg_min_fields
  stddev: studentprofiles_cg_stddev_fields
  stddev_pop: studentprofiles_cg_stddev_pop_fields
  stddev_samp: studentprofiles_cg_stddev_samp_fields
  sum: studentprofiles_cg_sum_fields
  var_pop: studentprofiles_cg_var_pop_fields
  var_samp: studentprofiles_cg_var_samp_fields
  variance: studentprofiles_cg_variance_fields
}

"""aggregate avg on columns"""
type studentprofiles_cg_avg_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "studentprofiles_cg". All fields are combined with a logical 'AND'.
"""
input studentprofiles_cg_bool_exp {
  Lessthan2quiztaken: String_comparison_exp
  _and: [studentprofiles_cg_bool_exp!]
  _not: studentprofiles_cg_bool_exp
  _or: [studentprofiles_cg_bool_exp!]
  block: String_comparison_exp
  district: String_comparison_exp
  duplicates: String_comparison_exp
  esamwadmatching: String_comparison_exp
  grade: String_comparison_exp
  id: Int_comparison_exp
  matchingteacherno: String_comparison_exp
  no_of_profiles: bigint_comparison_exp
  school_class_mismatch: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "studentprofiles_cg"
"""
input studentprofiles_cg_inc_input {
  id: Int
  no_of_profiles: bigint
  udise: Int
}

"""
input type for inserting data into table "studentprofiles_cg"
"""
input studentprofiles_cg_insert_input {
  Lessthan2quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""aggregate max on columns"""
type studentprofiles_cg_max_fields {
  Lessthan2quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""aggregate min on columns"""
type studentprofiles_cg_min_fields {
  Lessthan2quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""
response of any mutation on the table "studentprofiles_cg"
"""
type studentprofiles_cg_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [studentprofiles_cg!]!
}

"""Ordering options when selecting data from "studentprofiles_cg"."""
input studentprofiles_cg_order_by {
  Lessthan2quiztaken: order_by
  block: order_by
  district: order_by
  duplicates: order_by
  esamwadmatching: order_by
  grade: order_by
  id: order_by
  matchingteacherno: order_by
  no_of_profiles: order_by
  school_class_mismatch: order_by
  udise: order_by
}

"""
select columns of table "studentprofiles_cg"
"""
enum studentprofiles_cg_select_column {
  """column name"""
  Lessthan2quiztaken

  """column name"""
  block

  """column name"""
  district

  """column name"""
  duplicates

  """column name"""
  esamwadmatching

  """column name"""
  grade

  """column name"""
  id

  """column name"""
  matchingteacherno

  """column name"""
  no_of_profiles

  """column name"""
  school_class_mismatch

  """column name"""
  udise
}

"""
input type for updating data in table "studentprofiles_cg"
"""
input studentprofiles_cg_set_input {
  Lessthan2quiztaken: String
  block: String
  district: String
  duplicates: String
  esamwadmatching: String
  grade: String
  id: Int
  matchingteacherno: String
  no_of_profiles: bigint
  school_class_mismatch: String
  udise: Int
}

"""aggregate stddev on columns"""
type studentprofiles_cg_stddev_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type studentprofiles_cg_stddev_pop_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type studentprofiles_cg_stddev_samp_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate sum on columns"""
type studentprofiles_cg_sum_fields {
  id: Int
  no_of_profiles: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type studentprofiles_cg_var_pop_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type studentprofiles_cg_var_samp_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""aggregate variance on columns"""
type studentprofiles_cg_variance_fields {
  id: Float
  no_of_profiles: Float
  udise: Float
}

"""
columns and relationships of "students_present"
"""
type students_present {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
  sub: String
}

"""
aggregated selection of "students_present"
"""
type students_present_aggregate {
  aggregate: students_present_aggregate_fields
  nodes: [students_present!]!
}

"""
aggregate fields of "students_present"
"""
type students_present_aggregate_fields {
  avg: students_present_avg_fields
  count(columns: [students_present_select_column!], distinct: Boolean): Int!
  max: students_present_max_fields
  min: students_present_min_fields
  stddev: students_present_stddev_fields
  stddev_pop: students_present_stddev_pop_fields
  stddev_samp: students_present_stddev_samp_fields
  sum: students_present_sum_fields
  var_pop: students_present_var_pop_fields
  var_samp: students_present_var_samp_fields
  variance: students_present_variance_fields
}

"""aggregate avg on columns"""
type students_present_avg_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""
Boolean expression to filter rows from the table "students_present". All fields are combined with a logical 'AND'.
"""
input students_present_bool_exp {
  _and: [students_present_bool_exp!]
  _not: students_present_bool_exp
  _or: [students_present_bool_exp!]
  assess_id: Int_comparison_exp
  grade_no: Int_comparison_exp
  scl_id: Int_comparison_exp
  students_present: bigint_comparison_exp
  sub: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "students_present"
"""
input students_present_inc_input {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
}

"""
input type for inserting data into table "students_present"
"""
input students_present_insert_input {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
  sub: String
}

"""aggregate max on columns"""
type students_present_max_fields {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
  sub: String
}

"""aggregate min on columns"""
type students_present_min_fields {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
  sub: String
}

"""
response of any mutation on the table "students_present"
"""
type students_present_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [students_present!]!
}

"""Ordering options when selecting data from "students_present"."""
input students_present_order_by {
  assess_id: order_by
  grade_no: order_by
  scl_id: order_by
  students_present: order_by
  sub: order_by
}

"""
select columns of table "students_present"
"""
enum students_present_select_column {
  """column name"""
  assess_id

  """column name"""
  grade_no

  """column name"""
  scl_id

  """column name"""
  students_present

  """column name"""
  sub
}

"""
input type for updating data in table "students_present"
"""
input students_present_set_input {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
  sub: String
}

"""aggregate stddev on columns"""
type students_present_stddev_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""aggregate stddev_pop on columns"""
type students_present_stddev_pop_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""aggregate stddev_samp on columns"""
type students_present_stddev_samp_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""aggregate sum on columns"""
type students_present_sum_fields {
  assess_id: Int
  grade_no: Int
  scl_id: Int
  students_present: bigint
}

"""aggregate var_pop on columns"""
type students_present_var_pop_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""aggregate var_samp on columns"""
type students_present_var_samp_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""aggregate variance on columns"""
type students_present_variance_fields {
  assess_id: Float
  grade_no: Float
  scl_id: Float
  students_present: Float
}

"""
columns and relationships of "subject"
"""
type subject {
  """An array relationship"""
  assessment_ep_grade_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """An aggregate relationship"""
  assessment_ep_grade_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """An array relationship"""
  assessment_ep_marks_submissions(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """An aggregate relationship"""
  assessment_ep_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!

  """An array relationship"""
  assessment_subjects(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): [assessment_subjects!]!

  """An aggregate relationship"""
  assessment_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): assessment_subjects_aggregate!

  """An array relationship"""
  assessment_units(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): [assessment_unit!]!

  """An aggregate relationship"""
  assessment_units_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): assessment_unit_aggregate!

  """An array relationship"""
  class_level_component_submissions(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): [class_level_component_submission!]!

  """An aggregate relationship"""
  class_level_component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): class_level_component_submission_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!

  """An array relationship"""
  component_subjects(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): [component_subjects!]!

  """An aggregate relationship"""
  component_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): component_subjects_aggregate!

  """An array relationship"""
  component_submissions(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): [component_submission!]!

  """An aggregate relationship"""
  component_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): component_submission_aggregate!
  grade_number: Int!
  id: Int!

  """An array relationship"""
  lo_v2s(
    """distinct select on columns"""
    distinct_on: [lo_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_v2_order_by!]

    """filter the rows returned"""
    where: lo_v2_bool_exp
  ): [lo_v2!]!

  """An aggregate relationship"""
  lo_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_v2_order_by!]

    """filter the rows returned"""
    where: lo_v2_bool_exp
  ): lo_v2_aggregate!

  """An array relationship"""
  los(
    """distinct select on columns"""
    distinct_on: [lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_order_by!]

    """filter the rows returned"""
    where: lo_bool_exp
  ): [lo!]!

  """An aggregate relationship"""
  los_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_order_by!]

    """filter the rows returned"""
    where: lo_bool_exp
  ): lo_aggregate!

  """An array relationship"""
  mapping_submissions(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): [mapping_submission!]!

  """An aggregate relationship"""
  mapping_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): mapping_submission_aggregate!
  name: String

  """An array relationship"""
  stream_common_subjects(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): [stream_common_subject!]!

  """An aggregate relationship"""
  stream_common_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): stream_common_subject_aggregate!

  """An array relationship"""
  stream_optional_subjects_1s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): [stream_optional_subjects_1!]!

  """An aggregate relationship"""
  stream_optional_subjects_1s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): stream_optional_subjects_1_aggregate!

  """An array relationship"""
  stream_optional_subjects_2s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): [stream_optional_subjects_2!]!

  """An aggregate relationship"""
  stream_optional_subjects_2s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): stream_optional_subjects_2_aggregate!

  """An array relationship"""
  stream_optional_subjects_3s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): [stream_optional_subjects_3!]!

  """An aggregate relationship"""
  stream_optional_subjects_3s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): stream_optional_subjects_3_aggregate!

  """An array relationship"""
  stream_optional_subjects_4s(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): [stream_optional_subjects_4!]!

  """An aggregate relationship"""
  stream_optional_subjects_4s_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): stream_optional_subjects_4_aggregate!

  """An array relationship"""
  student_subjects(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): [student_subject!]!

  """An aggregate relationship"""
  student_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): student_subject_aggregate!

  """An array relationship"""
  student_submission_v2s(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """An aggregate relationship"""
  student_submission_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """An array relationship"""
  student_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """An aggregate relationship"""
  student_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!

  """An array relationship"""
  subject_submissions(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """An aggregate relationship"""
  subject_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!

  """An array relationship"""
  teacher_subjects(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): [teacher_subjects!]!

  """An aggregate relationship"""
  teacher_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): teacher_subjects_aggregate!

  """An array relationship"""
  unit_v2s(
    """distinct select on columns"""
    distinct_on: [unit_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_v2_order_by!]

    """filter the rows returned"""
    where: unit_v2_bool_exp
  ): [unit_v2!]!

  """An aggregate relationship"""
  unit_v2s_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_v2_order_by!]

    """filter the rows returned"""
    where: unit_v2_bool_exp
  ): unit_v2_aggregate!
}

"""
aggregated selection of "subject"
"""
type subject_aggregate {
  aggregate: subject_aggregate_fields
  nodes: [subject!]!
}

"""
aggregate fields of "subject"
"""
type subject_aggregate_fields {
  avg: subject_avg_fields
  count(columns: [subject_select_column!], distinct: Boolean): Int!
  max: subject_max_fields
  min: subject_min_fields
  stddev: subject_stddev_fields
  stddev_pop: subject_stddev_pop_fields
  stddev_samp: subject_stddev_samp_fields
  sum: subject_sum_fields
  var_pop: subject_var_pop_fields
  var_samp: subject_var_samp_fields
  variance: subject_variance_fields
}

"""aggregate avg on columns"""
type subject_avg_fields {
  grade_number: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "subject". All fields are combined with a logical 'AND'.
"""
input subject_bool_exp {
  _and: [subject_bool_exp!]
  _not: subject_bool_exp
  _or: [subject_bool_exp!]
  assessment_ep_grade_submissions: assessment_ep_grade_submission_bool_exp
  assessment_ep_marks_submissions: assessment_ep_marks_submission_bool_exp
  assessment_subjects: assessment_subjects_bool_exp
  assessment_units: assessment_unit_bool_exp
  class_level_component_submissions: class_level_component_submission_bool_exp
  class_submissions: class_submission_bool_exp
  component_subjects: component_subjects_bool_exp
  component_submissions: component_submission_bool_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  lo_v2s: lo_v2_bool_exp
  los: lo_bool_exp
  mapping_submissions: mapping_submission_bool_exp
  name: String_comparison_exp
  stream_common_subjects: stream_common_subject_bool_exp
  stream_optional_subjects_1s: stream_optional_subjects_1_bool_exp
  stream_optional_subjects_2s: stream_optional_subjects_2_bool_exp
  stream_optional_subjects_3s: stream_optional_subjects_3_bool_exp
  stream_optional_subjects_4s: stream_optional_subjects_4_bool_exp
  student_subjects: student_subject_bool_exp
  student_submission_v2s: student_submission_v2_bool_exp
  student_submissions: student_submission_bool_exp
  subject_submissions: subject_submission_bool_exp
  teacher_subjects: teacher_subjects_bool_exp
  unit_v2s: unit_v2_bool_exp
}

"""
unique or primary key constraints on table "subject"
"""
enum subject_constraint {
  """unique or primary key constraint"""
  subject_name_grade_number_a273f33e_uniq

  """unique or primary key constraint"""
  subject_pkey
}

"""
input type for incrementing numeric columns in table "subject"
"""
input subject_inc_input {
  grade_number: Int
  id: Int
}

"""
input type for inserting data into table "subject"
"""
input subject_insert_input {
  assessment_ep_grade_submissions: assessment_ep_grade_submission_arr_rel_insert_input
  assessment_ep_marks_submissions: assessment_ep_marks_submission_arr_rel_insert_input
  assessment_subjects: assessment_subjects_arr_rel_insert_input
  assessment_units: assessment_unit_arr_rel_insert_input
  class_level_component_submissions: class_level_component_submission_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  component_subjects: component_subjects_arr_rel_insert_input
  component_submissions: component_submission_arr_rel_insert_input
  grade_number: Int
  id: Int
  lo_v2s: lo_v2_arr_rel_insert_input
  los: lo_arr_rel_insert_input
  mapping_submissions: mapping_submission_arr_rel_insert_input
  name: String
  stream_common_subjects: stream_common_subject_arr_rel_insert_input
  stream_optional_subjects_1s: stream_optional_subjects_1_arr_rel_insert_input
  stream_optional_subjects_2s: stream_optional_subjects_2_arr_rel_insert_input
  stream_optional_subjects_3s: stream_optional_subjects_3_arr_rel_insert_input
  stream_optional_subjects_4s: stream_optional_subjects_4_arr_rel_insert_input
  student_subjects: student_subject_arr_rel_insert_input
  student_submission_v2s: student_submission_v2_arr_rel_insert_input
  student_submissions: student_submission_arr_rel_insert_input
  subject_submissions: subject_submission_arr_rel_insert_input
  teacher_subjects: teacher_subjects_arr_rel_insert_input
  unit_v2s: unit_v2_arr_rel_insert_input
}

"""aggregate max on columns"""
type subject_max_fields {
  grade_number: Int
  id: Int
  name: String
}

"""aggregate min on columns"""
type subject_min_fields {
  grade_number: Int
  id: Int
  name: String
}

"""
response of any mutation on the table "subject"
"""
type subject_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [subject!]!
}

"""
input type for inserting object relation for remote table "subject"
"""
input subject_obj_rel_insert_input {
  data: subject_insert_input!

  """on conflict condition"""
  on_conflict: subject_on_conflict
}

"""
on conflict condition type for table "subject"
"""
input subject_on_conflict {
  constraint: subject_constraint!
  update_columns: [subject_update_column!]! = []
  where: subject_bool_exp
}

"""Ordering options when selecting data from "subject"."""
input subject_order_by {
  assessment_ep_grade_submissions_aggregate: assessment_ep_grade_submission_aggregate_order_by
  assessment_ep_marks_submissions_aggregate: assessment_ep_marks_submission_aggregate_order_by
  assessment_subjects_aggregate: assessment_subjects_aggregate_order_by
  assessment_units_aggregate: assessment_unit_aggregate_order_by
  class_level_component_submissions_aggregate: class_level_component_submission_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  component_subjects_aggregate: component_subjects_aggregate_order_by
  component_submissions_aggregate: component_submission_aggregate_order_by
  grade_number: order_by
  id: order_by
  lo_v2s_aggregate: lo_v2_aggregate_order_by
  los_aggregate: lo_aggregate_order_by
  mapping_submissions_aggregate: mapping_submission_aggregate_order_by
  name: order_by
  stream_common_subjects_aggregate: stream_common_subject_aggregate_order_by
  stream_optional_subjects_1s_aggregate: stream_optional_subjects_1_aggregate_order_by
  stream_optional_subjects_2s_aggregate: stream_optional_subjects_2_aggregate_order_by
  stream_optional_subjects_3s_aggregate: stream_optional_subjects_3_aggregate_order_by
  stream_optional_subjects_4s_aggregate: stream_optional_subjects_4_aggregate_order_by
  student_subjects_aggregate: student_subject_aggregate_order_by
  student_submission_v2s_aggregate: student_submission_v2_aggregate_order_by
  student_submissions_aggregate: student_submission_aggregate_order_by
  subject_submissions_aggregate: subject_submission_aggregate_order_by
  teacher_subjects_aggregate: teacher_subjects_aggregate_order_by
  unit_v2s_aggregate: unit_v2_aggregate_order_by
}

"""primary key columns input for table: subject"""
input subject_pk_columns_input {
  id: Int!
}

"""
select columns of table "subject"
"""
enum subject_select_column {
  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "subject"
"""
input subject_set_input {
  grade_number: Int
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type subject_stddev_fields {
  grade_number: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type subject_stddev_pop_fields {
  grade_number: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type subject_stddev_samp_fields {
  grade_number: Float
  id: Float
}

"""
columns and relationships of "subject_submission"
"""
type subject_submission {
  """An object relationship"""
  assessment: assessment!
  assessment_id: Int!
  created: timestamptz

  """An object relationship"""
  grade: grade
  grade_id: Int
  id: Int!

  """An object relationship"""
  school: school!
  school_id: Int!

  """An object relationship"""
  stream: stream
  stream_id: Int

  """An object relationship"""
  subject: subject!
  subject_id: Int!

  """An array relationship"""
  subject_submission_selected_los(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): [subject_submission_selected_lo!]!

  """An aggregate relationship"""
  subject_submission_selected_los_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): subject_submission_selected_lo_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "subject_submission"
"""
type subject_submission_aggregate {
  aggregate: subject_submission_aggregate_fields
  nodes: [subject_submission!]!
}

"""
aggregate fields of "subject_submission"
"""
type subject_submission_aggregate_fields {
  avg: subject_submission_avg_fields
  count(columns: [subject_submission_select_column!], distinct: Boolean): Int!
  max: subject_submission_max_fields
  min: subject_submission_min_fields
  stddev: subject_submission_stddev_fields
  stddev_pop: subject_submission_stddev_pop_fields
  stddev_samp: subject_submission_stddev_samp_fields
  sum: subject_submission_sum_fields
  var_pop: subject_submission_var_pop_fields
  var_samp: subject_submission_var_samp_fields
  variance: subject_submission_variance_fields
}

"""
order by aggregate values of table "subject_submission"
"""
input subject_submission_aggregate_order_by {
  avg: subject_submission_avg_order_by
  count: order_by
  max: subject_submission_max_order_by
  min: subject_submission_min_order_by
  stddev: subject_submission_stddev_order_by
  stddev_pop: subject_submission_stddev_pop_order_by
  stddev_samp: subject_submission_stddev_samp_order_by
  sum: subject_submission_sum_order_by
  var_pop: subject_submission_var_pop_order_by
  var_samp: subject_submission_var_samp_order_by
  variance: subject_submission_variance_order_by
}

"""
input type for inserting array relation for remote table "subject_submission"
"""
input subject_submission_arr_rel_insert_input {
  data: [subject_submission_insert_input!]!

  """on conflict condition"""
  on_conflict: subject_submission_on_conflict
}

"""aggregate avg on columns"""
type subject_submission_avg_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "subject_submission"
"""
input subject_submission_avg_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "subject_submission". All fields are combined with a logical 'AND'.
"""
input subject_submission_bool_exp {
  _and: [subject_submission_bool_exp!]
  _not: subject_submission_bool_exp
  _or: [subject_submission_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  created: timestamptz_comparison_exp
  grade: grade_bool_exp
  grade_id: Int_comparison_exp
  id: Int_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  stream: stream_bool_exp
  stream_id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  subject_submission_selected_los: subject_submission_selected_lo_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "subject_submission"
"""
enum subject_submission_constraint {
  """unique or primary key constraint"""
  subject_submission_pkey
}

"""
input type for incrementing numeric columns in table "subject_submission"
"""
input subject_submission_inc_input {
  assessment_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  subject_id: Int
}

"""
input type for inserting data into table "subject_submission"
"""
input subject_submission_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  created: timestamptz
  grade: grade_obj_rel_insert_input
  grade_id: Int
  id: Int
  school: school_obj_rel_insert_input
  school_id: Int
  stream: stream_obj_rel_insert_input
  stream_id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  subject_submission_selected_los: subject_submission_selected_lo_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type subject_submission_max_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "subject_submission"
"""
input subject_submission_max_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type subject_submission_min_fields {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "subject_submission"
"""
input subject_submission_min_order_by {
  assessment_id: order_by
  created: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "subject_submission"
"""
type subject_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [subject_submission!]!
}

"""
input type for inserting object relation for remote table "subject_submission"
"""
input subject_submission_obj_rel_insert_input {
  data: subject_submission_insert_input!

  """on conflict condition"""
  on_conflict: subject_submission_on_conflict
}

"""
on conflict condition type for table "subject_submission"
"""
input subject_submission_on_conflict {
  constraint: subject_submission_constraint!
  update_columns: [subject_submission_update_column!]! = []
  where: subject_submission_bool_exp
}

"""Ordering options when selecting data from "subject_submission"."""
input subject_submission_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  created: order_by
  grade: grade_order_by
  grade_id: order_by
  id: order_by
  school: school_order_by
  school_id: order_by
  stream: stream_order_by
  stream_id: order_by
  subject: subject_order_by
  subject_id: order_by
  subject_submission_selected_los_aggregate: subject_submission_selected_lo_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: subject_submission"""
input subject_submission_pk_columns_input {
  id: Int!
}

"""
select columns of table "subject_submission"
"""
enum subject_submission_select_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  stream_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
columns and relationships of "subject_submission_selected_lo"
"""
type subject_submission_selected_lo {
  id: Int!

  """An object relationship"""
  lo: lo!
  lo_id: Int!

  """An object relationship"""
  subject_submission: subject_submission!
  subjectsubmission_id: Int!
}

"""
aggregated selection of "subject_submission_selected_lo"
"""
type subject_submission_selected_lo_aggregate {
  aggregate: subject_submission_selected_lo_aggregate_fields
  nodes: [subject_submission_selected_lo!]!
}

"""
aggregate fields of "subject_submission_selected_lo"
"""
type subject_submission_selected_lo_aggregate_fields {
  avg: subject_submission_selected_lo_avg_fields
  count(columns: [subject_submission_selected_lo_select_column!], distinct: Boolean): Int!
  max: subject_submission_selected_lo_max_fields
  min: subject_submission_selected_lo_min_fields
  stddev: subject_submission_selected_lo_stddev_fields
  stddev_pop: subject_submission_selected_lo_stddev_pop_fields
  stddev_samp: subject_submission_selected_lo_stddev_samp_fields
  sum: subject_submission_selected_lo_sum_fields
  var_pop: subject_submission_selected_lo_var_pop_fields
  var_samp: subject_submission_selected_lo_var_samp_fields
  variance: subject_submission_selected_lo_variance_fields
}

"""
order by aggregate values of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_aggregate_order_by {
  avg: subject_submission_selected_lo_avg_order_by
  count: order_by
  max: subject_submission_selected_lo_max_order_by
  min: subject_submission_selected_lo_min_order_by
  stddev: subject_submission_selected_lo_stddev_order_by
  stddev_pop: subject_submission_selected_lo_stddev_pop_order_by
  stddev_samp: subject_submission_selected_lo_stddev_samp_order_by
  sum: subject_submission_selected_lo_sum_order_by
  var_pop: subject_submission_selected_lo_var_pop_order_by
  var_samp: subject_submission_selected_lo_var_samp_order_by
  variance: subject_submission_selected_lo_variance_order_by
}

"""
input type for inserting array relation for remote table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_arr_rel_insert_input {
  data: [subject_submission_selected_lo_insert_input!]!

  """on conflict condition"""
  on_conflict: subject_submission_selected_lo_on_conflict
}

"""aggregate avg on columns"""
type subject_submission_selected_lo_avg_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by avg() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_avg_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""
Boolean expression to filter rows from the table "subject_submission_selected_lo". All fields are combined with a logical 'AND'.
"""
input subject_submission_selected_lo_bool_exp {
  _and: [subject_submission_selected_lo_bool_exp!]
  _not: subject_submission_selected_lo_bool_exp
  _or: [subject_submission_selected_lo_bool_exp!]
  id: Int_comparison_exp
  lo: lo_bool_exp
  lo_id: Int_comparison_exp
  subject_submission: subject_submission_bool_exp
  subjectsubmission_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "subject_submission_selected_lo"
"""
enum subject_submission_selected_lo_constraint {
  """unique or primary key constraint"""
  subject_submission_selec_subjectsubmission_id_lo__28ea8eb6_uniq

  """unique or primary key constraint"""
  subject_submission_selected_lo_pkey
}

"""
input type for incrementing numeric columns in table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_inc_input {
  id: Int
  lo_id: Int
  subjectsubmission_id: Int
}

"""
input type for inserting data into table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_insert_input {
  id: Int
  lo: lo_obj_rel_insert_input
  lo_id: Int
  subject_submission: subject_submission_obj_rel_insert_input
  subjectsubmission_id: Int
}

"""aggregate max on columns"""
type subject_submission_selected_lo_max_fields {
  id: Int
  lo_id: Int
  subjectsubmission_id: Int
}

"""
order by max() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_max_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""aggregate min on columns"""
type subject_submission_selected_lo_min_fields {
  id: Int
  lo_id: Int
  subjectsubmission_id: Int
}

"""
order by min() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_min_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""
response of any mutation on the table "subject_submission_selected_lo"
"""
type subject_submission_selected_lo_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [subject_submission_selected_lo!]!
}

"""
on conflict condition type for table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_on_conflict {
  constraint: subject_submission_selected_lo_constraint!
  update_columns: [subject_submission_selected_lo_update_column!]! = []
  where: subject_submission_selected_lo_bool_exp
}

"""
Ordering options when selecting data from "subject_submission_selected_lo".
"""
input subject_submission_selected_lo_order_by {
  id: order_by
  lo: lo_order_by
  lo_id: order_by
  subject_submission: subject_submission_order_by
  subjectsubmission_id: order_by
}

"""primary key columns input for table: subject_submission_selected_lo"""
input subject_submission_selected_lo_pk_columns_input {
  id: Int!
}

"""
select columns of table "subject_submission_selected_lo"
"""
enum subject_submission_selected_lo_select_column {
  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  subjectsubmission_id
}

"""
input type for updating data in table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_set_input {
  id: Int
  lo_id: Int
  subjectsubmission_id: Int
}

"""aggregate stddev on columns"""
type subject_submission_selected_lo_stddev_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by stddev() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_stddev_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""aggregate stddev_pop on columns"""
type subject_submission_selected_lo_stddev_pop_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by stddev_pop() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_stddev_pop_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""aggregate stddev_samp on columns"""
type subject_submission_selected_lo_stddev_samp_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by stddev_samp() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_stddev_samp_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""aggregate sum on columns"""
type subject_submission_selected_lo_sum_fields {
  id: Int
  lo_id: Int
  subjectsubmission_id: Int
}

"""
order by sum() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_sum_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""
update columns of table "subject_submission_selected_lo"
"""
enum subject_submission_selected_lo_update_column {
  """column name"""
  id

  """column name"""
  lo_id

  """column name"""
  subjectsubmission_id
}

"""aggregate var_pop on columns"""
type subject_submission_selected_lo_var_pop_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by var_pop() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_var_pop_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""aggregate var_samp on columns"""
type subject_submission_selected_lo_var_samp_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by var_samp() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_var_samp_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""aggregate variance on columns"""
type subject_submission_selected_lo_variance_fields {
  id: Float
  lo_id: Float
  subjectsubmission_id: Float
}

"""
order by variance() on columns of table "subject_submission_selected_lo"
"""
input subject_submission_selected_lo_variance_order_by {
  id: order_by
  lo_id: order_by
  subjectsubmission_id: order_by
}

"""
input type for updating data in table "subject_submission"
"""
input subject_submission_set_input {
  assessment_id: Int
  created: timestamptz
  grade_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type subject_submission_stddev_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "subject_submission"
"""
input subject_submission_stddev_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type subject_submission_stddev_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "subject_submission"
"""
input subject_submission_stddev_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type subject_submission_stddev_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "subject_submission"
"""
input subject_submission_stddev_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type subject_submission_sum_fields {
  assessment_id: Int
  grade_id: Int
  id: Int
  school_id: Int
  stream_id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "subject_submission"
"""
input subject_submission_sum_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""
update columns of table "subject_submission"
"""
enum subject_submission_update_column {
  """column name"""
  assessment_id

  """column name"""
  created

  """column name"""
  grade_id

  """column name"""
  id

  """column name"""
  school_id

  """column name"""
  stream_id

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type subject_submission_var_pop_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "subject_submission"
"""
input subject_submission_var_pop_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type subject_submission_var_samp_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "subject_submission"
"""
input subject_submission_var_samp_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type subject_submission_variance_fields {
  assessment_id: Float
  grade_id: Float
  id: Float
  school_id: Float
  stream_id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "subject_submission"
"""
input subject_submission_variance_order_by {
  assessment_id: order_by
  grade_id: order_by
  id: order_by
  school_id: order_by
  stream_id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type subject_sum_fields {
  grade_number: Int
  id: Int
}

"""
update columns of table "subject"
"""
enum subject_update_column {
  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type subject_var_pop_fields {
  grade_number: Float
  id: Float
}

"""aggregate var_samp on columns"""
type subject_var_samp_fields {
  grade_number: Float
  id: Float
}

"""aggregate variance on columns"""
type subject_variance_fields {
  grade_number: Float
  id: Float
}

"""
columns and relationships of "submission_summary"
"""
type submission_summary {
  """An object relationship"""
  assessment: assessment
  assessment_id: Int
  id: Int!
  percentage: Int!
  school: Int!
  sms_status: Boolean!
}

"""
aggregated selection of "submission_summary"
"""
type submission_summary_aggregate {
  aggregate: submission_summary_aggregate_fields
  nodes: [submission_summary!]!
}

"""
aggregate fields of "submission_summary"
"""
type submission_summary_aggregate_fields {
  avg: submission_summary_avg_fields
  count(columns: [submission_summary_select_column!], distinct: Boolean): Int!
  max: submission_summary_max_fields
  min: submission_summary_min_fields
  stddev: submission_summary_stddev_fields
  stddev_pop: submission_summary_stddev_pop_fields
  stddev_samp: submission_summary_stddev_samp_fields
  sum: submission_summary_sum_fields
  var_pop: submission_summary_var_pop_fields
  var_samp: submission_summary_var_samp_fields
  variance: submission_summary_variance_fields
}

"""
order by aggregate values of table "submission_summary"
"""
input submission_summary_aggregate_order_by {
  avg: submission_summary_avg_order_by
  count: order_by
  max: submission_summary_max_order_by
  min: submission_summary_min_order_by
  stddev: submission_summary_stddev_order_by
  stddev_pop: submission_summary_stddev_pop_order_by
  stddev_samp: submission_summary_stddev_samp_order_by
  sum: submission_summary_sum_order_by
  var_pop: submission_summary_var_pop_order_by
  var_samp: submission_summary_var_samp_order_by
  variance: submission_summary_variance_order_by
}

"""
input type for inserting array relation for remote table "submission_summary"
"""
input submission_summary_arr_rel_insert_input {
  data: [submission_summary_insert_input!]!

  """on conflict condition"""
  on_conflict: submission_summary_on_conflict
}

"""aggregate avg on columns"""
type submission_summary_avg_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by avg() on columns of table "submission_summary"
"""
input submission_summary_avg_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""
Boolean expression to filter rows from the table "submission_summary". All fields are combined with a logical 'AND'.
"""
input submission_summary_bool_exp {
  _and: [submission_summary_bool_exp!]
  _not: submission_summary_bool_exp
  _or: [submission_summary_bool_exp!]
  assessment: assessment_bool_exp
  assessment_id: Int_comparison_exp
  id: Int_comparison_exp
  percentage: Int_comparison_exp
  school: Int_comparison_exp
  sms_status: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "submission_summary"
"""
enum submission_summary_constraint {
  """unique or primary key constraint"""
  submission_summary_pkey
}

"""
input type for incrementing numeric columns in table "submission_summary"
"""
input submission_summary_inc_input {
  assessment_id: Int
  id: Int
  percentage: Int
  school: Int
}

"""
input type for inserting data into table "submission_summary"
"""
input submission_summary_insert_input {
  assessment: assessment_obj_rel_insert_input
  assessment_id: Int
  id: Int
  percentage: Int
  school: Int
  sms_status: Boolean
}

"""aggregate max on columns"""
type submission_summary_max_fields {
  assessment_id: Int
  id: Int
  percentage: Int
  school: Int
}

"""
order by max() on columns of table "submission_summary"
"""
input submission_summary_max_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""aggregate min on columns"""
type submission_summary_min_fields {
  assessment_id: Int
  id: Int
  percentage: Int
  school: Int
}

"""
order by min() on columns of table "submission_summary"
"""
input submission_summary_min_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""
response of any mutation on the table "submission_summary"
"""
type submission_summary_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [submission_summary!]!
}

"""
on conflict condition type for table "submission_summary"
"""
input submission_summary_on_conflict {
  constraint: submission_summary_constraint!
  update_columns: [submission_summary_update_column!]! = []
  where: submission_summary_bool_exp
}

"""Ordering options when selecting data from "submission_summary"."""
input submission_summary_order_by {
  assessment: assessment_order_by
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
  sms_status: order_by
}

"""primary key columns input for table: submission_summary"""
input submission_summary_pk_columns_input {
  id: Int!
}

"""
select columns of table "submission_summary"
"""
enum submission_summary_select_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  percentage

  """column name"""
  school

  """column name"""
  sms_status
}

"""
input type for updating data in table "submission_summary"
"""
input submission_summary_set_input {
  assessment_id: Int
  id: Int
  percentage: Int
  school: Int
  sms_status: Boolean
}

"""aggregate stddev on columns"""
type submission_summary_stddev_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by stddev() on columns of table "submission_summary"
"""
input submission_summary_stddev_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""aggregate stddev_pop on columns"""
type submission_summary_stddev_pop_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by stddev_pop() on columns of table "submission_summary"
"""
input submission_summary_stddev_pop_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""aggregate stddev_samp on columns"""
type submission_summary_stddev_samp_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by stddev_samp() on columns of table "submission_summary"
"""
input submission_summary_stddev_samp_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""aggregate sum on columns"""
type submission_summary_sum_fields {
  assessment_id: Int
  id: Int
  percentage: Int
  school: Int
}

"""
order by sum() on columns of table "submission_summary"
"""
input submission_summary_sum_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""
update columns of table "submission_summary"
"""
enum submission_summary_update_column {
  """column name"""
  assessment_id

  """column name"""
  id

  """column name"""
  percentage

  """column name"""
  school

  """column name"""
  sms_status
}

"""aggregate var_pop on columns"""
type submission_summary_var_pop_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by var_pop() on columns of table "submission_summary"
"""
input submission_summary_var_pop_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""aggregate var_samp on columns"""
type submission_summary_var_samp_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by var_samp() on columns of table "submission_summary"
"""
input submission_summary_var_samp_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""aggregate variance on columns"""
type submission_summary_variance_fields {
  assessment_id: Float
  id: Float
  percentage: Float
  school: Float
}

"""
order by variance() on columns of table "submission_summary"
"""
input submission_summary_variance_order_by {
  assessment_id: order_by
  id: order_by
  percentage: order_by
  school: order_by
}

"""
columns and relationships of "submission_type"
"""
type submission_type {
  aggregation: String!

  """An array relationship"""
  assessments(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """An aggregate relationship"""
  assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!
  category: String!
  created: timestamptz
  id: Int!
  updated: timestamptz
}

"""
aggregated selection of "submission_type"
"""
type submission_type_aggregate {
  aggregate: submission_type_aggregate_fields
  nodes: [submission_type!]!
}

"""
aggregate fields of "submission_type"
"""
type submission_type_aggregate_fields {
  avg: submission_type_avg_fields
  count(columns: [submission_type_select_column!], distinct: Boolean): Int!
  max: submission_type_max_fields
  min: submission_type_min_fields
  stddev: submission_type_stddev_fields
  stddev_pop: submission_type_stddev_pop_fields
  stddev_samp: submission_type_stddev_samp_fields
  sum: submission_type_sum_fields
  var_pop: submission_type_var_pop_fields
  var_samp: submission_type_var_samp_fields
  variance: submission_type_variance_fields
}

"""aggregate avg on columns"""
type submission_type_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "submission_type". All fields are combined with a logical 'AND'.
"""
input submission_type_bool_exp {
  _and: [submission_type_bool_exp!]
  _not: submission_type_bool_exp
  _or: [submission_type_bool_exp!]
  aggregation: String_comparison_exp
  assessments: assessment_bool_exp
  category: String_comparison_exp
  created: timestamptz_comparison_exp
  id: Int_comparison_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "submission_type"
"""
enum submission_type_constraint {
  """unique or primary key constraint"""
  submission_type_pkey
}

"""
input type for incrementing numeric columns in table "submission_type"
"""
input submission_type_inc_input {
  id: Int
}

"""
input type for inserting data into table "submission_type"
"""
input submission_type_insert_input {
  aggregation: String
  assessments: assessment_arr_rel_insert_input
  category: String
  created: timestamptz
  id: Int
  updated: timestamptz
}

"""aggregate max on columns"""
type submission_type_max_fields {
  aggregation: String
  category: String
  created: timestamptz
  id: Int
  updated: timestamptz
}

"""aggregate min on columns"""
type submission_type_min_fields {
  aggregation: String
  category: String
  created: timestamptz
  id: Int
  updated: timestamptz
}

"""
response of any mutation on the table "submission_type"
"""
type submission_type_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [submission_type!]!
}

"""
input type for inserting object relation for remote table "submission_type"
"""
input submission_type_obj_rel_insert_input {
  data: submission_type_insert_input!

  """on conflict condition"""
  on_conflict: submission_type_on_conflict
}

"""
on conflict condition type for table "submission_type"
"""
input submission_type_on_conflict {
  constraint: submission_type_constraint!
  update_columns: [submission_type_update_column!]! = []
  where: submission_type_bool_exp
}

"""Ordering options when selecting data from "submission_type"."""
input submission_type_order_by {
  aggregation: order_by
  assessments_aggregate: assessment_aggregate_order_by
  category: order_by
  created: order_by
  id: order_by
  updated: order_by
}

"""primary key columns input for table: submission_type"""
input submission_type_pk_columns_input {
  id: Int!
}

"""
select columns of table "submission_type"
"""
enum submission_type_select_column {
  """column name"""
  aggregation

  """column name"""
  category

  """column name"""
  created

  """column name"""
  id

  """column name"""
  updated
}

"""
input type for updating data in table "submission_type"
"""
input submission_type_set_input {
  aggregation: String
  category: String
  created: timestamptz
  id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type submission_type_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type submission_type_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type submission_type_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type submission_type_sum_fields {
  id: Int
}

"""
update columns of table "submission_type"
"""
enum submission_type_update_column {
  """column name"""
  aggregation

  """column name"""
  category

  """column name"""
  created

  """column name"""
  id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type submission_type_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type submission_type_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type submission_type_variance_fields {
  id: Float
}

type subscription_root {
  """
  fetch data from the table: "Quiz_beforeWeek21"
  """
  Quiz_beforeWeek21(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_bool_exp
  ): [Quiz_beforeWeek21!]!

  """
  fetch data from the table: "Quiz_beforeWeek21_2"
  """
  Quiz_beforeWeek21_2(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_2_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_2_bool_exp
  ): [Quiz_beforeWeek21_2!]!

  """
  fetch aggregated fields from the table: "Quiz_beforeWeek21_2"
  """
  Quiz_beforeWeek21_2_aggregate(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_2_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_2_bool_exp
  ): Quiz_beforeWeek21_2_aggregate!

  """
  fetch aggregated fields from the table: "Quiz_beforeWeek21"
  """
  Quiz_beforeWeek21_aggregate(
    """distinct select on columns"""
    distinct_on: [Quiz_beforeWeek21_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Quiz_beforeWeek21_order_by!]

    """filter the rows returned"""
    where: Quiz_beforeWeek21_bool_exp
  ): Quiz_beforeWeek21_aggregate!

  """
  fetch data from the table: "activeusers2"
  """
  activeusers2(
    """distinct select on columns"""
    distinct_on: [activeusers2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [activeusers2_order_by!]

    """filter the rows returned"""
    where: activeusers2_bool_exp
  ): [activeusers2!]!

  """
  fetch aggregated fields from the table: "activeusers2"
  """
  activeusers2_aggregate(
    """distinct select on columns"""
    distinct_on: [activeusers2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [activeusers2_order_by!]

    """filter the rows returned"""
    where: activeusers2_bool_exp
  ): activeusers2_aggregate!

  """
  fetch data from the table: "assessment"
  """
  assessment(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): [assessment!]!

  """
  fetch aggregated fields from the table: "assessment"
  """
  assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_order_by!]

    """filter the rows returned"""
    where: assessment_bool_exp
  ): assessment_aggregate!

  """
  fetch data from the table: "assessment_au_lo_aggregate"
  """
  assessment_au_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): [assessment_au_lo_aggregate!]!

  """
  fetch aggregated fields from the table: "assessment_au_lo_aggregate"
  """
  assessment_au_lo_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_bool_exp
  ): assessment_au_lo_aggregate_aggregate!

  """
  fetch data from the table: "assessment_au_lo_aggregate" using primary key columns
  """
  assessment_au_lo_aggregate_by_pk(id: Int!): assessment_au_lo_aggregate

  """
  fetch data from the table: "assessment_au_lo_aggregate_submission"
  """
  assessment_au_lo_aggregate_submission(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): [assessment_au_lo_aggregate_submission!]!

  """
  fetch aggregated fields from the table: "assessment_au_lo_aggregate_submission"
  """
  assessment_au_lo_aggregate_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_lo_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_lo_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_lo_aggregate_submission_bool_exp
  ): assessment_au_lo_aggregate_submission_aggregate!

  """
  fetch data from the table: "assessment_au_lo_aggregate_submission" using primary key columns
  """
  assessment_au_lo_aggregate_submission_by_pk(id: Int!): assessment_au_lo_aggregate_submission

  """
  fetch data from the table: "assessment_au_question_aggregate"
  """
  assessment_au_question_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): [assessment_au_question_aggregate!]!

  """
  fetch aggregated fields from the table: "assessment_au_question_aggregate"
  """
  assessment_au_question_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_bool_exp
  ): assessment_au_question_aggregate_aggregate!

  """
  fetch data from the table: "assessment_au_question_aggregate" using primary key columns
  """
  assessment_au_question_aggregate_by_pk(id: Int!): assessment_au_question_aggregate

  """
  fetch data from the table: "assessment_au_question_aggregate_submission"
  """
  assessment_au_question_aggregate_submission(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): [assessment_au_question_aggregate_submission!]!

  """
  fetch aggregated fields from the table: "assessment_au_question_aggregate_submission"
  """
  assessment_au_question_aggregate_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_au_question_aggregate_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_au_question_aggregate_submission_order_by!]

    """filter the rows returned"""
    where: assessment_au_question_aggregate_submission_bool_exp
  ): assessment_au_question_aggregate_submission_aggregate!

  """
  fetch data from the table: "assessment_au_question_aggregate_submission" using primary key columns
  """
  assessment_au_question_aggregate_submission_by_pk(id: Int!): assessment_au_question_aggregate_submission

  """
  fetch data from the table: "assessment_builder"
  """
  assessment_builder(
    """distinct select on columns"""
    distinct_on: [assessment_builder_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_builder_order_by!]

    """filter the rows returned"""
    where: assessment_builder_bool_exp
  ): [assessment_builder!]!

  """
  fetch aggregated fields from the table: "assessment_builder"
  """
  assessment_builder_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_builder_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_builder_order_by!]

    """filter the rows returned"""
    where: assessment_builder_bool_exp
  ): assessment_builder_aggregate!

  """
  fetch data from the table: "assessment_builder" using primary key columns
  """
  assessment_builder_by_pk(id: Int!): assessment_builder

  """fetch data from the table: "assessment" using primary key columns"""
  assessment_by_pk(id: Int!): assessment

  """
  fetch data from the table: "assessment_cache"
  """
  assessment_cache(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): [assessment_cache!]!

  """
  fetch aggregated fields from the table: "assessment_cache"
  """
  assessment_cache_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_order_by!]

    """filter the rows returned"""
    where: assessment_cache_bool_exp
  ): assessment_cache_aggregate!

  """
  fetch data from the table: "assessment_cache" using primary key columns
  """
  assessment_cache_by_pk(id: Int!): assessment_cache

  """
  fetch data from the table: "assessment_cache_v5"
  """
  assessment_cache_v5(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): [assessment_cache_v5!]!

  """
  fetch aggregated fields from the table: "assessment_cache_v5"
  """
  assessment_cache_v5_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_cache_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_cache_v5_order_by!]

    """filter the rows returned"""
    where: assessment_cache_v5_bool_exp
  ): assessment_cache_v5_aggregate!

  """
  fetch data from the table: "assessment_cache_v5" using primary key columns
  """
  assessment_cache_v5_by_pk(assessment_id: Int!, school_id: Int!): assessment_cache_v5

  """
  fetch data from the table: "assessment_category"
  """
  assessment_category(
    """distinct select on columns"""
    distinct_on: [assessment_category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_category_order_by!]

    """filter the rows returned"""
    where: assessment_category_bool_exp
  ): [assessment_category!]!

  """
  fetch aggregated fields from the table: "assessment_category"
  """
  assessment_category_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_category_order_by!]

    """filter the rows returned"""
    where: assessment_category_bool_exp
  ): assessment_category_aggregate!

  """
  fetch data from the table: "assessment_category" using primary key columns
  """
  assessment_category_by_pk(id: Int!): assessment_category

  """
  fetch data from the table: "assessment_compliance_grade_aggregation"
  """
  assessment_compliance_grade_aggregation(
    """distinct select on columns"""
    distinct_on: [assessment_compliance_grade_aggregation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_compliance_grade_aggregation_order_by!]

    """filter the rows returned"""
    where: assessment_compliance_grade_aggregation_bool_exp
  ): [assessment_compliance_grade_aggregation!]!

  """
  fetch aggregated fields from the table: "assessment_compliance_grade_aggregation"
  """
  assessment_compliance_grade_aggregation_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_compliance_grade_aggregation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_compliance_grade_aggregation_order_by!]

    """filter the rows returned"""
    where: assessment_compliance_grade_aggregation_bool_exp
  ): assessment_compliance_grade_aggregation_aggregate!

  """An array relationship"""
  assessment_components(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): [assessment_components!]!

  """An aggregate relationship"""
  assessment_components_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_components_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_components_order_by!]

    """filter the rows returned"""
    where: assessment_components_bool_exp
  ): assessment_components_aggregate!

  """
  fetch data from the table: "assessment_components" using primary key columns
  """
  assessment_components_by_pk(id: Int!): assessment_components

  """
  fetch data from the table: "assessment_ep_grade"
  """
  assessment_ep_grade(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): [assessment_ep_grade!]!

  """
  fetch aggregated fields from the table: "assessment_ep_grade"
  """
  assessment_ep_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_bool_exp
  ): assessment_ep_grade_aggregate!

  """
  fetch data from the table: "assessment_ep_grade" using primary key columns
  """
  assessment_ep_grade_by_pk(id: Int!): assessment_ep_grade

  """
  fetch data from the table: "assessment_ep_grade_submission"
  """
  assessment_ep_grade_submission(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): [assessment_ep_grade_submission!]!

  """
  fetch aggregated fields from the table: "assessment_ep_grade_submission"
  """
  assessment_ep_grade_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_grade_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_grade_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_grade_submission_bool_exp
  ): assessment_ep_grade_submission_aggregate!

  """
  fetch data from the table: "assessment_ep_grade_submission" using primary key columns
  """
  assessment_ep_grade_submission_by_pk(id: Int!): assessment_ep_grade_submission

  """An array relationship"""
  assessment_ep_marks(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): [assessment_ep_marks!]!

  """An aggregate relationship"""
  assessment_ep_marks_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_bool_exp
  ): assessment_ep_marks_aggregate!

  """
  fetch data from the table: "assessment_ep_marks" using primary key columns
  """
  assessment_ep_marks_by_pk(id: Int!): assessment_ep_marks

  """
  fetch data from the table: "assessment_ep_marks_submission"
  """
  assessment_ep_marks_submission(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): [assessment_ep_marks_submission!]!

  """
  fetch aggregated fields from the table: "assessment_ep_marks_submission"
  """
  assessment_ep_marks_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_ep_marks_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_ep_marks_submission_order_by!]

    """filter the rows returned"""
    where: assessment_ep_marks_submission_bool_exp
  ): assessment_ep_marks_submission_aggregate!

  """
  fetch data from the table: "assessment_ep_marks_submission" using primary key columns
  """
  assessment_ep_marks_submission_by_pk(id: Int!): assessment_ep_marks_submission

  """
  fetch data from the table: "assessment_grade"
  """
  assessment_grade(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): [assessment_grade!]!

  """
  fetch aggregated fields from the table: "assessment_grade"
  """
  assessment_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_order_by!]

    """filter the rows returned"""
    where: assessment_grade_bool_exp
  ): assessment_grade_aggregate!

  """
  fetch data from the table: "assessment_grade" using primary key columns
  """
  assessment_grade_by_pk(id: Int!): assessment_grade

  """
  fetch data from the table: "assessment_grade_mapping"
  """
  assessment_grade_mapping(
    """distinct select on columns"""
    distinct_on: [assessment_grade_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_mapping_order_by!]

    """filter the rows returned"""
    where: assessment_grade_mapping_bool_exp
  ): [assessment_grade_mapping!]!

  """
  fetch aggregated fields from the table: "assessment_grade_mapping"
  """
  assessment_grade_mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_grade_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_grade_mapping_order_by!]

    """filter the rows returned"""
    where: assessment_grade_mapping_bool_exp
  ): assessment_grade_mapping_aggregate!

  """
  fetch data from the table: "assessment_grade_mapping" using primary key columns
  """
  assessment_grade_mapping_by_pk(id: Int!): assessment_grade_mapping

  """An array relationship"""
  assessment_lo_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): [assessment_lo_bundles!]!

  """An aggregate relationship"""
  assessment_lo_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_lo_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_lo_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_lo_bundles_bool_exp
  ): assessment_lo_bundles_aggregate!

  """
  fetch data from the table: "assessment_lo_bundles" using primary key columns
  """
  assessment_lo_bundles_by_pk(id: Int!): assessment_lo_bundles

  """An array relationship"""
  assessment_question_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): [assessment_question_bundles!]!

  """An aggregate relationship"""
  assessment_question_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_question_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_question_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_question_bundles_bool_exp
  ): assessment_question_bundles_aggregate!

  """
  fetch data from the table: "assessment_question_bundles" using primary key columns
  """
  assessment_question_bundles_by_pk(id: Int!): assessment_question_bundles

  """
  fetch data from the table: "assessment_result"
  """
  assessment_result(
    """distinct select on columns"""
    distinct_on: [assessment_result_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_result_order_by!]

    """filter the rows returned"""
    where: assessment_result_bool_exp
  ): [assessment_result!]!

  """
  fetch aggregated fields from the table: "assessment_result"
  """
  assessment_result_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_result_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_result_order_by!]

    """filter the rows returned"""
    where: assessment_result_bool_exp
  ): assessment_result_aggregate!

  """
  fetch data from the table: "assessment_result" using primary key columns
  """
  assessment_result_by_pk(id: Int!): assessment_result

  """
  fetch data from the table: "assessment_stream"
  """
  assessment_stream(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): [assessment_stream!]!

  """
  fetch aggregated fields from the table: "assessment_stream"
  """
  assessment_stream_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_stream_order_by!]

    """filter the rows returned"""
    where: assessment_stream_bool_exp
  ): assessment_stream_aggregate!

  """
  fetch data from the table: "assessment_stream" using primary key columns
  """
  assessment_stream_by_pk(id: Int!): assessment_stream

  """An array relationship"""
  assessment_subjects(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): [assessment_subjects!]!

  """An aggregate relationship"""
  assessment_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_subjects_order_by!]

    """filter the rows returned"""
    where: assessment_subjects_bool_exp
  ): assessment_subjects_aggregate!

  """
  fetch data from the table: "assessment_subjects" using primary key columns
  """
  assessment_subjects_by_pk(id: Int!): assessment_subjects

  """
  fetch data from the table: "assessment_type"
  """
  assessment_type(
    """distinct select on columns"""
    distinct_on: [assessment_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_type_order_by!]

    """filter the rows returned"""
    where: assessment_type_bool_exp
  ): [assessment_type!]!

  """
  fetch aggregated fields from the table: "assessment_type"
  """
  assessment_type_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_type_order_by!]

    """filter the rows returned"""
    where: assessment_type_bool_exp
  ): assessment_type_aggregate!

  """fetch data from the table: "assessment_type" using primary key columns"""
  assessment_type_by_pk(id: Int!): assessment_type

  """
  fetch data from the table: "assessment_unit"
  """
  assessment_unit(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): [assessment_unit!]!

  """
  fetch aggregated fields from the table: "assessment_unit"
  """
  assessment_unit_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bool_exp
  ): assessment_unit_aggregate!

  """An array relationship"""
  assessment_unit_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): [assessment_unit_bundles!]!

  """An aggregate relationship"""
  assessment_unit_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): assessment_unit_bundles_aggregate!

  """
  fetch data from the table: "assessment_unit_bundles" using primary key columns
  """
  assessment_unit_bundles_by_pk(id: Int!): assessment_unit_bundles

  """fetch data from the table: "assessment_unit" using primary key columns"""
  assessment_unit_by_pk(id: Int!): assessment_unit

  """
  fetch data from the table: "assessment_unit_selected_lo"
  """
  assessment_unit_selected_lo(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): [assessment_unit_selected_lo!]!

  """
  fetch aggregated fields from the table: "assessment_unit_selected_lo"
  """
  assessment_unit_selected_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_lo_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_lo_bool_exp
  ): assessment_unit_selected_lo_aggregate!

  """
  fetch data from the table: "assessment_unit_selected_lo" using primary key columns
  """
  assessment_unit_selected_lo_by_pk(id: Int!): assessment_unit_selected_lo

  """
  fetch data from the table: "assessment_unit_selected_question"
  """
  assessment_unit_selected_question(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): [assessment_unit_selected_question!]!

  """
  fetch aggregated fields from the table: "assessment_unit_selected_question"
  """
  assessment_unit_selected_question_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_question_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_question_bool_exp
  ): assessment_unit_selected_question_aggregate!

  """
  fetch data from the table: "assessment_unit_selected_question" using primary key columns
  """
  assessment_unit_selected_question_by_pk(id: Int!): assessment_unit_selected_question

  """
  fetch data from the table: "assessment_unit_selected_unit"
  """
  assessment_unit_selected_unit(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): [assessment_unit_selected_unit!]!

  """
  fetch aggregated fields from the table: "assessment_unit_selected_unit"
  """
  assessment_unit_selected_unit_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): assessment_unit_selected_unit_aggregate!

  """
  fetch data from the table: "assessment_unit_selected_unit" using primary key columns
  """
  assessment_unit_selected_unit_by_pk(id: Int!): assessment_unit_selected_unit

  """
  fetch data from the table: "attendance"
  """
  attendance(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): [attendance!]!

  """
  fetch aggregated fields from the table: "attendance"
  """
  attendance_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_order_by!]

    """filter the rows returned"""
    where: attendance_bool_exp
  ): attendance_aggregate!

  """fetch data from the table: "attendance" using primary key columns"""
  attendance_by_pk(id: Int!): attendance

  """
  fetch data from the table: "attendance_sms_logs"
  """
  attendance_sms_logs(
    """distinct select on columns"""
    distinct_on: [attendance_sms_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_sms_logs_order_by!]

    """filter the rows returned"""
    where: attendance_sms_logs_bool_exp
  ): [attendance_sms_logs!]!

  """
  fetch aggregated fields from the table: "attendance_sms_logs"
  """
  attendance_sms_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_sms_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_sms_logs_order_by!]

    """filter the rows returned"""
    where: attendance_sms_logs_bool_exp
  ): attendance_sms_logs_aggregate!

  """
  fetch data from the table: "attendance_sms_logs" using primary key columns
  """
  attendance_sms_logs_by_pk(id: Int!): attendance_sms_logs

  """
  fetch data from the table: "attendance_teacher"
  """
  attendance_teacher(
    """distinct select on columns"""
    distinct_on: [attendance_teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_teacher_order_by!]

    """filter the rows returned"""
    where: attendance_teacher_bool_exp
  ): [attendance_teacher!]!

  """
  fetch aggregated fields from the table: "attendance_teacher"
  """
  attendance_teacher_aggregate(
    """distinct select on columns"""
    distinct_on: [attendance_teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attendance_teacher_order_by!]

    """filter the rows returned"""
    where: attendance_teacher_bool_exp
  ): attendance_teacher_aggregate!

  """
  fetch data from the table: "attendance_teacher" using primary key columns
  """
  attendance_teacher_by_pk(id: Int!): attendance_teacher

  """
  fetch data from the table: "auth_group"
  """
  auth_group(
    """distinct select on columns"""
    distinct_on: [auth_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_order_by!]

    """filter the rows returned"""
    where: auth_group_bool_exp
  ): [auth_group!]!

  """
  fetch aggregated fields from the table: "auth_group"
  """
  auth_group_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_order_by!]

    """filter the rows returned"""
    where: auth_group_bool_exp
  ): auth_group_aggregate!

  """fetch data from the table: "auth_group" using primary key columns"""
  auth_group_by_pk(id: Int!): auth_group

  """An array relationship"""
  auth_group_permissions(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): [auth_group_permissions!]!

  """An aggregate relationship"""
  auth_group_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_group_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_group_permissions_order_by!]

    """filter the rows returned"""
    where: auth_group_permissions_bool_exp
  ): auth_group_permissions_aggregate!

  """
  fetch data from the table: "auth_group_permissions" using primary key columns
  """
  auth_group_permissions_by_pk(id: Int!): auth_group_permissions

  """
  fetch data from the table: "auth_permission"
  """
  auth_permission(
    """distinct select on columns"""
    distinct_on: [auth_permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_permission_order_by!]

    """filter the rows returned"""
    where: auth_permission_bool_exp
  ): [auth_permission!]!

  """
  fetch aggregated fields from the table: "auth_permission"
  """
  auth_permission_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_permission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_permission_order_by!]

    """filter the rows returned"""
    where: auth_permission_bool_exp
  ): auth_permission_aggregate!

  """fetch data from the table: "auth_permission" using primary key columns"""
  auth_permission_by_pk(id: Int!): auth_permission

  """
  fetch data from the table: "auth_user"
  """
  auth_user(
    """distinct select on columns"""
    distinct_on: [auth_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_order_by!]

    """filter the rows returned"""
    where: auth_user_bool_exp
  ): [auth_user!]!

  """
  fetch aggregated fields from the table: "auth_user"
  """
  auth_user_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_order_by!]

    """filter the rows returned"""
    where: auth_user_bool_exp
  ): auth_user_aggregate!

  """fetch data from the table: "auth_user" using primary key columns"""
  auth_user_by_pk(id: Int!): auth_user

  """An array relationship"""
  auth_user_groups(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): [auth_user_groups!]!

  """An aggregate relationship"""
  auth_user_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_groups_order_by!]

    """filter the rows returned"""
    where: auth_user_groups_bool_exp
  ): auth_user_groups_aggregate!

  """
  fetch data from the table: "auth_user_groups" using primary key columns
  """
  auth_user_groups_by_pk(id: Int!): auth_user_groups

  """An array relationship"""
  auth_user_user_permissions(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): [auth_user_user_permissions!]!

  """An aggregate relationship"""
  auth_user_user_permissions_aggregate(
    """distinct select on columns"""
    distinct_on: [auth_user_user_permissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auth_user_user_permissions_order_by!]

    """filter the rows returned"""
    where: auth_user_user_permissions_bool_exp
  ): auth_user_user_permissions_aggregate!

  """
  fetch data from the table: "auth_user_user_permissions" using primary key columns
  """
  auth_user_user_permissions_by_pk(id: Int!): auth_user_user_permissions

  """
  fetch data from the table: "bucketwiseenrolment"
  """
  bucketwiseenrolment(
    """distinct select on columns"""
    distinct_on: [bucketwiseenrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bucketwiseenrolment_order_by!]

    """filter the rows returned"""
    where: bucketwiseenrolment_bool_exp
  ): [bucketwiseenrolment!]!

  """
  fetch aggregated fields from the table: "bucketwiseenrolment"
  """
  bucketwiseenrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [bucketwiseenrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bucketwiseenrolment_order_by!]

    """filter the rows returned"""
    where: bucketwiseenrolment_bool_exp
  ): bucketwiseenrolment_aggregate!

  """
  fetch data from the table: "cdac_sms_input"
  """
  cdac_sms_input(
    """distinct select on columns"""
    distinct_on: [cdac_sms_input_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cdac_sms_input_order_by!]

    """filter the rows returned"""
    where: cdac_sms_input_bool_exp
  ): [cdac_sms_input!]!

  """
  fetch aggregated fields from the table: "cdac_sms_input"
  """
  cdac_sms_input_aggregate(
    """distinct select on columns"""
    distinct_on: [cdac_sms_input_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cdac_sms_input_order_by!]

    """filter the rows returned"""
    where: cdac_sms_input_bool_exp
  ): cdac_sms_input_aggregate!

  """fetch data from the table: "cdac_sms_input" using primary key columns"""
  cdac_sms_input_by_pk(id: Int!): cdac_sms_input

  """
  fetch data from the table: "celery_duplicate_remove"
  """
  celery_duplicate_remove(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): [celery_duplicate_remove!]!

  """
  fetch aggregated fields from the table: "celery_duplicate_remove"
  """
  celery_duplicate_remove_aggregate(
    """distinct select on columns"""
    distinct_on: [celery_duplicate_remove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [celery_duplicate_remove_order_by!]

    """filter the rows returned"""
    where: celery_duplicate_remove_bool_exp
  ): celery_duplicate_remove_aggregate!

  """
  fetch data from the table: "celery_duplicate_remove" using primary key columns
  """
  celery_duplicate_remove_by_pk(assessment_id: Int!, school_id: Int!): celery_duplicate_remove

  """
  fetch data from the table: "cg_hp_teacher_data"
  """
  cg_hp_teacher_data(
    """distinct select on columns"""
    distinct_on: [cg_hp_teacher_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_hp_teacher_data_order_by!]

    """filter the rows returned"""
    where: cg_hp_teacher_data_bool_exp
  ): [cg_hp_teacher_data!]!

  """
  fetch aggregated fields from the table: "cg_hp_teacher_data"
  """
  cg_hp_teacher_data_aggregate(
    """distinct select on columns"""
    distinct_on: [cg_hp_teacher_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_hp_teacher_data_order_by!]

    """filter the rows returned"""
    where: cg_hp_teacher_data_bool_exp
  ): cg_hp_teacher_data_aggregate!

  """
  fetch data from the table: "cg_to_state_list"
  """
  cg_to_state_list(
    """distinct select on columns"""
    distinct_on: [cg_to_state_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_to_state_list_order_by!]

    """filter the rows returned"""
    where: cg_to_state_list_bool_exp
  ): [cg_to_state_list!]!

  """
  fetch aggregated fields from the table: "cg_to_state_list"
  """
  cg_to_state_list_aggregate(
    """distinct select on columns"""
    distinct_on: [cg_to_state_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cg_to_state_list_order_by!]

    """filter the rows returned"""
    where: cg_to_state_list_bool_exp
  ): cg_to_state_list_aggregate!

  """
  fetch data from the table: "class_level_component_submission"
  """
  class_level_component_submission(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): [class_level_component_submission!]!

  """
  fetch aggregated fields from the table: "class_level_component_submission"
  """
  class_level_component_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [class_level_component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_level_component_submission_order_by!]

    """filter the rows returned"""
    where: class_level_component_submission_bool_exp
  ): class_level_component_submission_aggregate!

  """
  fetch data from the table: "class_level_component_submission" using primary key columns
  """
  class_level_component_submission_by_pk(id: Int!): class_level_component_submission

  """
  fetch data from the table: "class_submission"
  """
  class_submission(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """
  fetch aggregated fields from the table: "class_submission"
  """
  class_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!

  """
  fetch data from the table: "class_submission" using primary key columns
  """
  class_submission_by_pk(id: Int!): class_submission

  """
  fetch data from the table: "component"
  """
  component(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): [component!]!

  """
  fetch aggregated fields from the table: "component"
  """
  component_aggregate(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): component_aggregate!

  """fetch data from the table: "component" using primary key columns"""
  component_by_pk(id: Int!): component

  """An array relationship"""
  component_subjects(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): [component_subjects!]!

  """An aggregate relationship"""
  component_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [component_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_subjects_order_by!]

    """filter the rows returned"""
    where: component_subjects_bool_exp
  ): component_subjects_aggregate!

  """
  fetch data from the table: "component_subjects" using primary key columns
  """
  component_subjects_by_pk(id: Int!): component_subjects

  """
  fetch data from the table: "component_submission"
  """
  component_submission(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): [component_submission!]!

  """
  fetch aggregated fields from the table: "component_submission"
  """
  component_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [component_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_submission_order_by!]

    """filter the rows returned"""
    where: component_submission_bool_exp
  ): component_submission_aggregate!

  """
  fetch data from the table: "component_submission" using primary key columns
  """
  component_submission_by_pk(id: Int!): component_submission

  """
  fetch data from the table: "component_type"
  """
  component_type(
    """distinct select on columns"""
    distinct_on: [component_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_type_order_by!]

    """filter the rows returned"""
    where: component_type_bool_exp
  ): [component_type!]!

  """
  fetch aggregated fields from the table: "component_type"
  """
  component_type_aggregate(
    """distinct select on columns"""
    distinct_on: [component_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_type_order_by!]

    """filter the rows returned"""
    where: component_type_bool_exp
  ): component_type_aggregate!

  """fetch data from the table: "component_type" using primary key columns"""
  component_type_by_pk(id: Int!): component_type

  """An array relationship"""
  corporate_donor_devices(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): [corporate_donor_devices!]!

  """An aggregate relationship"""
  corporate_donor_devices_aggregate(
    """distinct select on columns"""
    distinct_on: [corporate_donor_devices_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [corporate_donor_devices_order_by!]

    """filter the rows returned"""
    where: corporate_donor_devices_bool_exp
  ): corporate_donor_devices_aggregate!

  """
  fetch data from the table: "corporate_donor_devices" using primary key columns
  """
  corporate_donor_devices_by_pk(id: Int!): corporate_donor_devices

  """
  fetch data from the table: "dashboard_role_access_config"
  """
  dashboard_role_access_config(
    """distinct select on columns"""
    distinct_on: [dashboard_role_access_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_role_access_config_order_by!]

    """filter the rows returned"""
    where: dashboard_role_access_config_bool_exp
  ): [dashboard_role_access_config!]!

  """
  fetch aggregated fields from the table: "dashboard_role_access_config"
  """
  dashboard_role_access_config_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_role_access_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_role_access_config_order_by!]

    """filter the rows returned"""
    where: dashboard_role_access_config_bool_exp
  ): dashboard_role_access_config_aggregate!

  """
  fetch data from the table: "dashboard_role_access_config" using primary key columns
  """
  dashboard_role_access_config_by_pk(id: uuid!): dashboard_role_access_config

  """
  fetch data from the table: "dashboard_userdashboardmodule"
  """
  dashboard_userdashboardmodule(
    """distinct select on columns"""
    distinct_on: [dashboard_userdashboardmodule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_userdashboardmodule_order_by!]

    """filter the rows returned"""
    where: dashboard_userdashboardmodule_bool_exp
  ): [dashboard_userdashboardmodule!]!

  """
  fetch aggregated fields from the table: "dashboard_userdashboardmodule"
  """
  dashboard_userdashboardmodule_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_userdashboardmodule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_userdashboardmodule_order_by!]

    """filter the rows returned"""
    where: dashboard_userdashboardmodule_bool_exp
  ): dashboard_userdashboardmodule_aggregate!

  """
  fetch data from the table: "dashboard_userdashboardmodule" using primary key columns
  """
  dashboard_userdashboardmodule_by_pk(id: Int!): dashboard_userdashboardmodule

  """
  fetch data from the table: "deadline"
  """
  deadline(
    """distinct select on columns"""
    distinct_on: [deadline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [deadline_order_by!]

    """filter the rows returned"""
    where: deadline_bool_exp
  ): [deadline!]!

  """
  fetch aggregated fields from the table: "deadline"
  """
  deadline_aggregate(
    """distinct select on columns"""
    distinct_on: [deadline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [deadline_order_by!]

    """filter the rows returned"""
    where: deadline_bool_exp
  ): deadline_aggregate!

  """fetch data from the table: "deadline" using primary key columns"""
  deadline_by_pk(id: Int!): deadline

  """
  fetch data from the table: "designation_scope_mapping"
  """
  designation_scope_mapping(
    """distinct select on columns"""
    distinct_on: [designation_scope_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [designation_scope_mapping_order_by!]

    """filter the rows returned"""
    where: designation_scope_mapping_bool_exp
  ): [designation_scope_mapping!]!

  """
  fetch aggregated fields from the table: "designation_scope_mapping"
  """
  designation_scope_mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [designation_scope_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [designation_scope_mapping_order_by!]

    """filter the rows returned"""
    where: designation_scope_mapping_bool_exp
  ): designation_scope_mapping_aggregate!

  """
  fetch data from the table: "designation_scope_mapping" using primary key columns
  """
  designation_scope_mapping_by_pk(id: uuid!): designation_scope_mapping

  """
  fetch data from the table: "device_demand_response"
  """
  device_demand_response(
    """distinct select on columns"""
    distinct_on: [device_demand_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_demand_response_order_by!]

    """filter the rows returned"""
    where: device_demand_response_bool_exp
  ): [device_demand_response!]!

  """
  fetch aggregated fields from the table: "device_demand_response"
  """
  device_demand_response_aggregate(
    """distinct select on columns"""
    distinct_on: [device_demand_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_demand_response_order_by!]

    """filter the rows returned"""
    where: device_demand_response_bool_exp
  ): device_demand_response_aggregate!

  """
  fetch data from the table: "device_demand_response" using primary key columns
  """
  device_demand_response_by_pk(id: Int!): device_demand_response

  """
  fetch data from the table: "device_donation_corporates"
  """
  device_donation_corporates(
    """distinct select on columns"""
    distinct_on: [device_donation_corporates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_corporates_order_by!]

    """filter the rows returned"""
    where: device_donation_corporates_bool_exp
  ): [device_donation_corporates!]!

  """
  fetch aggregated fields from the table: "device_donation_corporates"
  """
  device_donation_corporates_aggregate(
    """distinct select on columns"""
    distinct_on: [device_donation_corporates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_corporates_order_by!]

    """filter the rows returned"""
    where: device_donation_corporates_bool_exp
  ): device_donation_corporates_aggregate!

  """
  fetch data from the table: "device_donation_corporates" using primary key columns
  """
  device_donation_corporates_by_pk(company_id: String!): device_donation_corporates

  """
  fetch data from the table: "device_donation_donor"
  """
  device_donation_donor(
    """distinct select on columns"""
    distinct_on: [device_donation_donor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_donor_order_by!]

    """filter the rows returned"""
    where: device_donation_donor_bool_exp
  ): [device_donation_donor!]!

  """
  fetch aggregated fields from the table: "device_donation_donor"
  """
  device_donation_donor_aggregate(
    """distinct select on columns"""
    distinct_on: [device_donation_donor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_donation_donor_order_by!]

    """filter the rows returned"""
    where: device_donation_donor_bool_exp
  ): device_donation_donor_aggregate!

  """
  fetch data from the table: "device_donation_donor" using primary key columns
  """
  device_donation_donor_by_pk(id: Int!): device_donation_donor

  """An array relationship"""
  device_verification_records(
    """distinct select on columns"""
    distinct_on: [device_verification_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_verification_records_order_by!]

    """filter the rows returned"""
    where: device_verification_records_bool_exp
  ): [device_verification_records!]!

  """An aggregate relationship"""
  device_verification_records_aggregate(
    """distinct select on columns"""
    distinct_on: [device_verification_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [device_verification_records_order_by!]

    """filter the rows returned"""
    where: device_verification_records_bool_exp
  ): device_verification_records_aggregate!

  """
  fetch data from the table: "device_verification_records" using primary key columns
  """
  device_verification_records_by_pk(id: Int!): device_verification_records

  """
  fetch data from the table: "django_admin_log"
  """
  django_admin_log(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): [django_admin_log!]!

  """
  fetch aggregated fields from the table: "django_admin_log"
  """
  django_admin_log_aggregate(
    """distinct select on columns"""
    distinct_on: [django_admin_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_admin_log_order_by!]

    """filter the rows returned"""
    where: django_admin_log_bool_exp
  ): django_admin_log_aggregate!

  """
  fetch data from the table: "django_admin_log" using primary key columns
  """
  django_admin_log_by_pk(id: Int!): django_admin_log

  """
  fetch data from the table: "django_celery_results_chordcounter"
  """
  django_celery_results_chordcounter(
    """distinct select on columns"""
    distinct_on: [django_celery_results_chordcounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_chordcounter_order_by!]

    """filter the rows returned"""
    where: django_celery_results_chordcounter_bool_exp
  ): [django_celery_results_chordcounter!]!

  """
  fetch aggregated fields from the table: "django_celery_results_chordcounter"
  """
  django_celery_results_chordcounter_aggregate(
    """distinct select on columns"""
    distinct_on: [django_celery_results_chordcounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_chordcounter_order_by!]

    """filter the rows returned"""
    where: django_celery_results_chordcounter_bool_exp
  ): django_celery_results_chordcounter_aggregate!

  """
  fetch data from the table: "django_celery_results_chordcounter" using primary key columns
  """
  django_celery_results_chordcounter_by_pk(id: Int!): django_celery_results_chordcounter

  """
  fetch data from the table: "django_celery_results_groupresult"
  """
  django_celery_results_groupresult(
    """distinct select on columns"""
    distinct_on: [django_celery_results_groupresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_groupresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_groupresult_bool_exp
  ): [django_celery_results_groupresult!]!

  """
  fetch aggregated fields from the table: "django_celery_results_groupresult"
  """
  django_celery_results_groupresult_aggregate(
    """distinct select on columns"""
    distinct_on: [django_celery_results_groupresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_groupresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_groupresult_bool_exp
  ): django_celery_results_groupresult_aggregate!

  """
  fetch data from the table: "django_celery_results_groupresult" using primary key columns
  """
  django_celery_results_groupresult_by_pk(id: Int!): django_celery_results_groupresult

  """
  fetch data from the table: "django_celery_results_taskresult"
  """
  django_celery_results_taskresult(
    """distinct select on columns"""
    distinct_on: [django_celery_results_taskresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_taskresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_taskresult_bool_exp
  ): [django_celery_results_taskresult!]!

  """
  fetch aggregated fields from the table: "django_celery_results_taskresult"
  """
  django_celery_results_taskresult_aggregate(
    """distinct select on columns"""
    distinct_on: [django_celery_results_taskresult_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_celery_results_taskresult_order_by!]

    """filter the rows returned"""
    where: django_celery_results_taskresult_bool_exp
  ): django_celery_results_taskresult_aggregate!

  """
  fetch data from the table: "django_celery_results_taskresult" using primary key columns
  """
  django_celery_results_taskresult_by_pk(id: Int!): django_celery_results_taskresult

  """
  fetch data from the table: "django_content_type"
  """
  django_content_type(
    """distinct select on columns"""
    distinct_on: [django_content_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_content_type_order_by!]

    """filter the rows returned"""
    where: django_content_type_bool_exp
  ): [django_content_type!]!

  """
  fetch aggregated fields from the table: "django_content_type"
  """
  django_content_type_aggregate(
    """distinct select on columns"""
    distinct_on: [django_content_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_content_type_order_by!]

    """filter the rows returned"""
    where: django_content_type_bool_exp
  ): django_content_type_aggregate!

  """
  fetch data from the table: "django_content_type" using primary key columns
  """
  django_content_type_by_pk(id: Int!): django_content_type

  """
  fetch data from the table: "django_migrations"
  """
  django_migrations(
    """distinct select on columns"""
    distinct_on: [django_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_migrations_order_by!]

    """filter the rows returned"""
    where: django_migrations_bool_exp
  ): [django_migrations!]!

  """
  fetch aggregated fields from the table: "django_migrations"
  """
  django_migrations_aggregate(
    """distinct select on columns"""
    distinct_on: [django_migrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_migrations_order_by!]

    """filter the rows returned"""
    where: django_migrations_bool_exp
  ): django_migrations_aggregate!

  """
  fetch data from the table: "django_migrations" using primary key columns
  """
  django_migrations_by_pk(id: Int!): django_migrations

  """
  fetch data from the table: "django_session"
  """
  django_session(
    """distinct select on columns"""
    distinct_on: [django_session_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_session_order_by!]

    """filter the rows returned"""
    where: django_session_bool_exp
  ): [django_session!]!

  """
  fetch aggregated fields from the table: "django_session"
  """
  django_session_aggregate(
    """distinct select on columns"""
    distinct_on: [django_session_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [django_session_order_by!]

    """filter the rows returned"""
    where: django_session_bool_exp
  ): django_session_aggregate!

  """fetch data from the table: "django_session" using primary key columns"""
  django_session_by_pk(session_key: String!): django_session

  """
  fetch data from the table: "duplicates"
  """
  duplicates(
    """distinct select on columns"""
    distinct_on: [duplicates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [duplicates_order_by!]

    """filter the rows returned"""
    where: duplicates_bool_exp
  ): [duplicates!]!

  """
  fetch aggregated fields from the table: "duplicates"
  """
  duplicates_aggregate(
    """distinct select on columns"""
    distinct_on: [duplicates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [duplicates_order_by!]

    """filter the rows returned"""
    where: duplicates_bool_exp
  ): duplicates_aggregate!

  """
  fetch data from the table: "enroll_group"
  """
  enroll_group(
    """distinct select on columns"""
    distinct_on: [enroll_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enroll_group_order_by!]

    """filter the rows returned"""
    where: enroll_group_bool_exp
  ): [enroll_group!]!

  """
  fetch aggregated fields from the table: "enroll_group"
  """
  enroll_group_aggregate(
    """distinct select on columns"""
    distinct_on: [enroll_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enroll_group_order_by!]

    """filter the rows returned"""
    where: enroll_group_bool_exp
  ): enroll_group_aggregate!

  """
  fetch data from the table: "enrollment"
  """
  enrollment(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): [enrollment!]!

  """
  fetch aggregated fields from the table: "enrollment"
  """
  enrollment_aggregate(
    """distinct select on columns"""
    distinct_on: [enrollment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [enrollment_order_by!]

    """filter the rows returned"""
    where: enrollment_bool_exp
  ): enrollment_aggregate!

  """fetch data from the table: "enrollment" using primary key columns"""
  enrollment_by_pk(id: Int!): enrollment

  """
  fetch data from the table: "esamwadmatching"
  """
  esamwadmatching(
    """distinct select on columns"""
    distinct_on: [esamwadmatching_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [esamwadmatching_order_by!]

    """filter the rows returned"""
    where: esamwadmatching_bool_exp
  ): [esamwadmatching!]!

  """
  fetch aggregated fields from the table: "esamwadmatching"
  """
  esamwadmatching_aggregate(
    """distinct select on columns"""
    distinct_on: [esamwadmatching_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [esamwadmatching_order_by!]

    """filter the rows returned"""
    where: esamwadmatching_bool_exp
  ): esamwadmatching_aggregate!

  """
  fetch data from the table: "evaluation_param"
  """
  evaluation_param(
    """distinct select on columns"""
    distinct_on: [evaluation_param_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evaluation_param_order_by!]

    """filter the rows returned"""
    where: evaluation_param_bool_exp
  ): [evaluation_param!]!

  """
  fetch aggregated fields from the table: "evaluation_param"
  """
  evaluation_param_aggregate(
    """distinct select on columns"""
    distinct_on: [evaluation_param_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evaluation_param_order_by!]

    """filter the rows returned"""
    where: evaluation_param_bool_exp
  ): evaluation_param_aggregate!

  """
  fetch data from the table: "evaluation_param" using primary key columns
  """
  evaluation_param_by_pk(id: Int!): evaluation_param

  """
  fetch data from the table: "gender_cat_analysis"
  """
  gender_cat_analysis(
    """distinct select on columns"""
    distinct_on: [gender_cat_analysis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gender_cat_analysis_order_by!]

    """filter the rows returned"""
    where: gender_cat_analysis_bool_exp
  ): [gender_cat_analysis!]!

  """
  fetch aggregated fields from the table: "gender_cat_analysis"
  """
  gender_cat_analysis_aggregate(
    """distinct select on columns"""
    distinct_on: [gender_cat_analysis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gender_cat_analysis_order_by!]

    """filter the rows returned"""
    where: gender_cat_analysis_bool_exp
  ): gender_cat_analysis_aggregate!

  """
  fetch data from the table: "genuine_profiles"
  """
  genuine_profiles(
    """distinct select on columns"""
    distinct_on: [genuine_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [genuine_profiles_order_by!]

    """filter the rows returned"""
    where: genuine_profiles_bool_exp
  ): [genuine_profiles!]!

  """
  fetch aggregated fields from the table: "genuine_profiles"
  """
  genuine_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [genuine_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [genuine_profiles_order_by!]

    """filter the rows returned"""
    where: genuine_profiles_bool_exp
  ): genuine_profiles_aggregate!

  """
  fetch data from the table: "grade"
  """
  grade(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): [grade!]!

  """
  fetch aggregated fields from the table: "grade"
  """
  grade_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): grade_aggregate!

  """
  fetch data from the table: "grade_assessment"
  """
  grade_assessment(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): [grade_assessment!]!

  """
  fetch aggregated fields from the table: "grade_assessment"
  """
  grade_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_assessment_order_by!]

    """filter the rows returned"""
    where: grade_assessment_bool_exp
  ): grade_assessment_aggregate!

  """
  fetch data from the table: "grade_assessment" using primary key columns
  """
  grade_assessment_by_pk(id: Int!): grade_assessment

  """fetch data from the table: "grade" using primary key columns"""
  grade_by_pk(id: Int!): grade

  """
  fetch data from the table: "idb_attendance_by_date_aggregate"
  """
  idb_attendance_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_attendance_by_date_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_by_date_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_attendance_by_date_aggregate_bool_exp
  ): [idb_attendance_by_date_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_attendance_by_date_aggregate"
  """
  idb_attendance_by_date_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_attendance_by_date_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_by_date_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_attendance_by_date_aggregate_bool_exp
  ): idb_attendance_by_date_aggregate_aggregate!

  """
  fetch data from the table: "idb_attendance_district_enrolment_percentage"
  """
  idb_attendance_district_enrolment_percentage(
    """distinct select on columns"""
    distinct_on: [idb_attendance_district_enrolment_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_district_enrolment_percentage_order_by!]

    """filter the rows returned"""
    where: idb_attendance_district_enrolment_percentage_bool_exp
  ): [idb_attendance_district_enrolment_percentage!]!

  """
  fetch aggregated fields from the table: "idb_attendance_district_enrolment_percentage"
  """
  idb_attendance_district_enrolment_percentage_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_attendance_district_enrolment_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_attendance_district_enrolment_percentage_order_by!]

    """filter the rows returned"""
    where: idb_attendance_district_enrolment_percentage_bool_exp
  ): idb_attendance_district_enrolment_percentage_aggregate!

  """
  fetch data from the table: "idb_block_wise_student_enrolment"
  """
  idb_block_wise_student_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_block_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_block_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_block_wise_student_enrolment_bool_exp
  ): [idb_block_wise_student_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_block_wise_student_enrolment"
  """
  idb_block_wise_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_block_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_block_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_block_wise_student_enrolment_bool_exp
  ): idb_block_wise_student_enrolment_aggregate!

  """
  fetch data from the table: "idb_daily_enrolment_aggregate"
  """
  idb_daily_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_enrolment_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_enrolment_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_enrolment_aggregate_bool_exp
  ): [idb_daily_enrolment_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_daily_enrolment_aggregate"
  """
  idb_daily_enrolment_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_enrolment_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_enrolment_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_enrolment_aggregate_bool_exp
  ): idb_daily_enrolment_aggregate_aggregate!

  """
  fetch data from the table: "idb_daily_total_attendance_percent_aggregate"
  """
  idb_daily_total_attendance_percent_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percent_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percent_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percent_aggregate_bool_exp
  ): [idb_daily_total_attendance_percent_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_daily_total_attendance_percent_aggregate"
  """
  idb_daily_total_attendance_percent_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percent_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percent_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percent_aggregate_bool_exp
  ): idb_daily_total_attendance_percent_aggregate_aggregate!

  """
  fetch data from the table: "idb_daily_total_attendance_percentage"
  """
  idb_daily_total_attendance_percentage(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_bool_exp
  ): [idb_daily_total_attendance_percentage!]!

  """
  fetch aggregated fields from the table: "idb_daily_total_attendance_percentage"
  """
  idb_daily_total_attendance_percentage_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_bool_exp
  ): idb_daily_total_attendance_percentage_aggregate!

  """
  fetch data from the table: "idb_daily_total_attendance_percentage_mv"
  """
  idb_daily_total_attendance_percentage_mv(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_mv_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_mv_bool_exp
  ): [idb_daily_total_attendance_percentage_mv!]!

  """
  fetch aggregated fields from the table: "idb_daily_total_attendance_percentage_mv"
  """
  idb_daily_total_attendance_percentage_mv_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_daily_total_attendance_percentage_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_daily_total_attendance_percentage_mv_order_by!]

    """filter the rows returned"""
    where: idb_daily_total_attendance_percentage_mv_bool_exp
  ): idb_daily_total_attendance_percentage_mv_aggregate!

  """
  fetch data from the table: "idb_district_school_type_percentage"
  """
  idb_district_school_type_percentage(
    """distinct select on columns"""
    distinct_on: [idb_district_school_type_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_school_type_percentage_order_by!]

    """filter the rows returned"""
    where: idb_district_school_type_percentage_bool_exp
  ): [idb_district_school_type_percentage!]!

  """
  fetch aggregated fields from the table: "idb_district_school_type_percentage"
  """
  idb_district_school_type_percentage_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_district_school_type_percentage_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_school_type_percentage_order_by!]

    """filter the rows returned"""
    where: idb_district_school_type_percentage_bool_exp
  ): idb_district_school_type_percentage_aggregate!

  """
  fetch data from the table: "idb_district_wise_schools"
  """
  idb_district_wise_schools(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_schools_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_schools_bool_exp
  ): [idb_district_wise_schools!]!

  """
  fetch aggregated fields from the table: "idb_district_wise_schools"
  """
  idb_district_wise_schools_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_schools_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_schools_bool_exp
  ): idb_district_wise_schools_aggregate!

  """
  fetch data from the table: "idb_district_wise_student_enrolment"
  """
  idb_district_wise_student_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_student_enrolment_bool_exp
  ): [idb_district_wise_student_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_district_wise_student_enrolment"
  """
  idb_district_wise_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_district_wise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_district_wise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_district_wise_student_enrolment_bool_exp
  ): idb_district_wise_student_enrolment_aggregate!

  """
  fetch data from the table: "idb_enrolment_grade_wise_state"
  """
  idb_enrolment_grade_wise_state(
    """distinct select on columns"""
    distinct_on: [idb_enrolment_grade_wise_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_enrolment_grade_wise_state_order_by!]

    """filter the rows returned"""
    where: idb_enrolment_grade_wise_state_bool_exp
  ): [idb_enrolment_grade_wise_state!]!

  """
  fetch aggregated fields from the table: "idb_enrolment_grade_wise_state"
  """
  idb_enrolment_grade_wise_state_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_enrolment_grade_wise_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_enrolment_grade_wise_state_order_by!]

    """filter the rows returned"""
    where: idb_enrolment_grade_wise_state_bool_exp
  ): idb_enrolment_grade_wise_state_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  idb_student_attendance_attendance_final_by_date_grade(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_final_by_date_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_final_by_date_grade_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_final_by_date_grade_bool_exp
  ): [idb_student_attendance_attendance_final_by_date_grade!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_final_by_date_grade"
  """
  idb_student_attendance_attendance_final_by_date_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_final_by_date_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_final_by_date_grade_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_final_by_date_grade_bool_exp
  ): idb_student_attendance_attendance_final_by_date_grade_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_merged"
  """
  idb_student_attendance_attendance_merged(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_merged_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_merged_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_merged_bool_exp
  ): [idb_student_attendance_attendance_merged!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_merged"
  """
  idb_student_attendance_attendance_merged_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_merged_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_merged_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_merged_bool_exp
  ): idb_student_attendance_attendance_merged_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_present_aggregate"
  """
  idb_student_attendance_attendance_present_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_aggregate_bool_exp
  ): [idb_student_attendance_attendance_present_aggregate!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_present_aggregate"
  """
  idb_student_attendance_attendance_present_aggregate_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_aggregate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_aggregate_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_aggregate_bool_exp
  ): idb_student_attendance_attendance_present_aggregate_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  idb_student_attendance_attendance_present_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_marked_by_date_bool_exp
  ): [idb_student_attendance_attendance_present_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_present_marked_by_date"
  """
  idb_student_attendance_attendance_present_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_present_marked_by_date_bool_exp
  ): idb_student_attendance_attendance_present_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  idb_student_attendance_attendance_total_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_total_marked_by_date_bool_exp
  ): [idb_student_attendance_attendance_total_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_attendance_total_marked_by_date"
  """
  idb_student_attendance_attendance_total_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_attendance_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_attendance_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_attendance_total_marked_by_date_bool_exp
  ): idb_student_attendance_attendance_total_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_final"
  """
  idb_student_attendance_block_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_bool_exp
  ): [idb_student_attendance_block_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_final"
  """
  idb_student_attendance_block_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_bool_exp
  ): idb_student_attendance_block_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_final_enrolment"
  """
  idb_student_attendance_block_final_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_enrolment_bool_exp
  ): [idb_student_attendance_block_final_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_final_enrolment"
  """
  idb_student_attendance_block_final_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_final_enrolment_bool_exp
  ): idb_student_attendance_block_final_enrolment_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  idb_student_attendance_block_level_daily_present_marked(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_present_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_present_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_present_marked_bool_exp
  ): [idb_student_attendance_block_level_daily_present_marked!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_level_daily_present_marked"
  """
  idb_student_attendance_block_level_daily_present_marked_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_present_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_present_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_present_marked_bool_exp
  ): idb_student_attendance_block_level_daily_present_marked_aggregate!

  """
  fetch data from the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  idb_student_attendance_block_level_daily_total_marked(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_total_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_total_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_total_marked_bool_exp
  ): [idb_student_attendance_block_level_daily_total_marked!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_block_level_daily_total_marked"
  """
  idb_student_attendance_block_level_daily_total_marked_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_block_level_daily_total_marked_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_block_level_daily_total_marked_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_block_level_daily_total_marked_bool_exp
  ): idb_student_attendance_block_level_daily_total_marked_aggregate!

  """
  fetch data from the table: "idb_student_attendance_compliance_district_wise"
  """
  idb_student_attendance_compliance_district_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_bool_exp
  ): [idb_student_attendance_compliance_district_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_compliance_district_wise"
  """
  idb_student_attendance_compliance_district_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_bool_exp
  ): idb_student_attendance_compliance_district_wise_aggregate!

  """
  fetch data from the table: "idb_student_attendance_compliance_district_wise_final"
  """
  idb_student_attendance_compliance_district_wise_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_final_bool_exp
  ): [idb_student_attendance_compliance_district_wise_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_compliance_district_wise_final"
  """
  idb_student_attendance_compliance_district_wise_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_district_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_district_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_district_wise_final_bool_exp
  ): idb_student_attendance_compliance_district_wise_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_compliance_school_wise"
  """
  idb_student_attendance_compliance_school_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_school_wise_bool_exp
  ): [idb_student_attendance_compliance_school_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_compliance_school_wise"
  """
  idb_student_attendance_compliance_school_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_compliance_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_compliance_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_compliance_school_wise_bool_exp
  ): idb_student_attendance_compliance_school_wise_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_final"
  """
  idb_student_attendance_district_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_bool_exp
  ): [idb_student_attendance_district_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_final"
  """
  idb_student_attendance_district_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_bool_exp
  ): idb_student_attendance_district_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_final_enrolment"
  """
  idb_student_attendance_district_final_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_enrolment_bool_exp
  ): [idb_student_attendance_district_final_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_final_enrolment"
  """
  idb_student_attendance_district_final_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_final_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_final_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_final_enrolment_bool_exp
  ): idb_student_attendance_district_final_enrolment_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_present_marked_by_date"
  """
  idb_student_attendance_district_present_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_present_marked_by_date_bool_exp
  ): [idb_student_attendance_district_present_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_present_marked_by_date"
  """
  idb_student_attendance_district_present_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_present_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_present_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_present_marked_by_date_bool_exp
  ): idb_student_attendance_district_present_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_district_total_marked_by_date"
  """
  idb_student_attendance_district_total_marked_by_date(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_total_marked_by_date_bool_exp
  ): [idb_student_attendance_district_total_marked_by_date!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_district_total_marked_by_date"
  """
  idb_student_attendance_district_total_marked_by_date_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_district_total_marked_by_date_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_district_total_marked_by_date_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_district_total_marked_by_date_bool_exp
  ): idb_student_attendance_district_total_marked_by_date_aggregate!

  """
  fetch data from the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  idb_student_attendance_final_grade_wise_with_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_final_grade_wise_with_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_final_grade_wise_with_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp
  ): [idb_student_attendance_final_grade_wise_with_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_final_grade_wise_with_enrolment"
  """
  idb_student_attendance_final_grade_wise_with_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_final_grade_wise_with_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_final_grade_wise_with_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_final_grade_wise_with_enrolment_bool_exp
  ): idb_student_attendance_final_grade_wise_with_enrolment_aggregate!

  """
  fetch data from the table: "idb_student_attendance_present_school_wise"
  """
  idb_student_attendance_present_school_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_present_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_present_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_present_school_wise_bool_exp
  ): [idb_student_attendance_present_school_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_present_school_wise"
  """
  idb_student_attendance_present_school_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_present_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_present_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_present_school_wise_bool_exp
  ): idb_student_attendance_present_school_wise_aggregate!

  """
  fetch data from the table: "idb_student_attendance_school_wise_final"
  """
  idb_student_attendance_school_wise_final(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_school_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_school_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_school_wise_final_bool_exp
  ): [idb_student_attendance_school_wise_final!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_school_wise_final"
  """
  idb_student_attendance_school_wise_final_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_school_wise_final_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_school_wise_final_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_school_wise_final_bool_exp
  ): idb_student_attendance_school_wise_final_aggregate!

  """
  fetch data from the table: "idb_student_attendance_total_school_wise"
  """
  idb_student_attendance_total_school_wise(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_total_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_total_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_total_school_wise_bool_exp
  ): [idb_student_attendance_total_school_wise!]!

  """
  fetch aggregated fields from the table: "idb_student_attendance_total_school_wise"
  """
  idb_student_attendance_total_school_wise_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_student_attendance_total_school_wise_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_student_attendance_total_school_wise_order_by!]

    """filter the rows returned"""
    where: idb_student_attendance_total_school_wise_bool_exp
  ): idb_student_attendance_total_school_wise_aggregate!

  """
  fetch data from the table: "idb_total_state_student_enrolment"
  """
  idb_total_state_student_enrolment(
    """distinct select on columns"""
    distinct_on: [idb_total_state_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_total_state_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_total_state_student_enrolment_bool_exp
  ): [idb_total_state_student_enrolment!]!

  """
  fetch aggregated fields from the table: "idb_total_state_student_enrolment"
  """
  idb_total_state_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [idb_total_state_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [idb_total_state_student_enrolment_order_by!]

    """filter the rows returned"""
    where: idb_total_state_student_enrolment_bool_exp
  ): idb_total_state_student_enrolment_aggregate!

  """
  fetch data from the table: "jet_bookmark"
  """
  jet_bookmark(
    """distinct select on columns"""
    distinct_on: [jet_bookmark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_bookmark_order_by!]

    """filter the rows returned"""
    where: jet_bookmark_bool_exp
  ): [jet_bookmark!]!

  """
  fetch aggregated fields from the table: "jet_bookmark"
  """
  jet_bookmark_aggregate(
    """distinct select on columns"""
    distinct_on: [jet_bookmark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_bookmark_order_by!]

    """filter the rows returned"""
    where: jet_bookmark_bool_exp
  ): jet_bookmark_aggregate!

  """fetch data from the table: "jet_bookmark" using primary key columns"""
  jet_bookmark_by_pk(id: Int!): jet_bookmark

  """
  fetch data from the table: "jet_pinnedapplication"
  """
  jet_pinnedapplication(
    """distinct select on columns"""
    distinct_on: [jet_pinnedapplication_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_pinnedapplication_order_by!]

    """filter the rows returned"""
    where: jet_pinnedapplication_bool_exp
  ): [jet_pinnedapplication!]!

  """
  fetch aggregated fields from the table: "jet_pinnedapplication"
  """
  jet_pinnedapplication_aggregate(
    """distinct select on columns"""
    distinct_on: [jet_pinnedapplication_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [jet_pinnedapplication_order_by!]

    """filter the rows returned"""
    where: jet_pinnedapplication_bool_exp
  ): jet_pinnedapplication_aggregate!

  """
  fetch data from the table: "jet_pinnedapplication" using primary key columns
  """
  jet_pinnedapplication_by_pk(id: Int!): jet_pinnedapplication

  """
  fetch data from the table: "lo"
  """
  lo(
    """distinct select on columns"""
    distinct_on: [lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_order_by!]

    """filter the rows returned"""
    where: lo_bool_exp
  ): [lo!]!

  """
  fetch aggregated fields from the table: "lo"
  """
  lo_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_order_by!]

    """filter the rows returned"""
    where: lo_bool_exp
  ): lo_aggregate!

  """
  fetch data from the table: "lo_assessment"
  """
  lo_assessment(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): [lo_assessment!]!

  """
  fetch aggregated fields from the table: "lo_assessment"
  """
  lo_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_assessment_order_by!]

    """filter the rows returned"""
    where: lo_assessment_bool_exp
  ): lo_assessment_aggregate!

  """fetch data from the table: "lo_assessment" using primary key columns"""
  lo_assessment_by_pk(id: Int!): lo_assessment

  """
  fetch data from the table: "lo_bundle"
  """
  lo_bundle(
    """distinct select on columns"""
    distinct_on: [lo_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_order_by!]

    """filter the rows returned"""
    where: lo_bundle_bool_exp
  ): [lo_bundle!]!

  """
  fetch aggregated fields from the table: "lo_bundle"
  """
  lo_bundle_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_order_by!]

    """filter the rows returned"""
    where: lo_bundle_bool_exp
  ): lo_bundle_aggregate!

  """fetch data from the table: "lo_bundle" using primary key columns"""
  lo_bundle_by_pk(id: Int!): lo_bundle

  """An array relationship"""
  lo_bundle_los(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): [lo_bundle_los!]!

  """An aggregate relationship"""
  lo_bundle_los_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_bundle_los_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_bundle_los_order_by!]

    """filter the rows returned"""
    where: lo_bundle_los_bool_exp
  ): lo_bundle_los_aggregate!

  """fetch data from the table: "lo_bundle_los" using primary key columns"""
  lo_bundle_los_by_pk(id: Int!): lo_bundle_los

  """fetch data from the table: "lo" using primary key columns"""
  lo_by_pk(id: Int!): lo

  """
  fetch data from the table: "lo_submission"
  """
  lo_submission(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): [lo_submission!]!

  """
  fetch aggregated fields from the table: "lo_submission"
  """
  lo_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_submission_order_by!]

    """filter the rows returned"""
    where: lo_submission_bool_exp
  ): lo_submission_aggregate!

  """fetch data from the table: "lo_submission" using primary key columns"""
  lo_submission_by_pk(id: Int!): lo_submission

  """
  fetch data from the table: "lo_table"
  """
  lo_table(
    """distinct select on columns"""
    distinct_on: [lo_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table_order_by!]

    """filter the rows returned"""
    where: lo_table_bool_exp
  ): [lo_table!]!

  """
  fetch data from the table: "lo_table2"
  """
  lo_table2(
    """distinct select on columns"""
    distinct_on: [lo_table2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table2_order_by!]

    """filter the rows returned"""
    where: lo_table2_bool_exp
  ): [lo_table2!]!

  """
  fetch aggregated fields from the table: "lo_table2"
  """
  lo_table2_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_table2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table2_order_by!]

    """filter the rows returned"""
    where: lo_table2_bool_exp
  ): lo_table2_aggregate!

  """
  fetch aggregated fields from the table: "lo_table"
  """
  lo_table_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_table_order_by!]

    """filter the rows returned"""
    where: lo_table_bool_exp
  ): lo_table_aggregate!

  """
  fetch data from the table: "lo_v2"
  """
  lo_v2(
    """distinct select on columns"""
    distinct_on: [lo_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_v2_order_by!]

    """filter the rows returned"""
    where: lo_v2_bool_exp
  ): [lo_v2!]!

  """
  fetch aggregated fields from the table: "lo_v2"
  """
  lo_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_v2_order_by!]

    """filter the rows returned"""
    where: lo_v2_bool_exp
  ): lo_v2_aggregate!

  """fetch data from the table: "lo_v2" using primary key columns"""
  lo_v2_by_pk(id: Int!): lo_v2

  """
  fetch data from the table: "location"
  """
  location(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): [location!]!

  """
  fetch aggregated fields from the table: "location"
  """
  location_aggregate(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): location_aggregate!

  """fetch data from the table: "location" using primary key columns"""
  location_by_pk(id: Int!): location

  """
  fetch data from the table: "mapping"
  """
  mapping(
    """distinct select on columns"""
    distinct_on: [mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_order_by!]

    """filter the rows returned"""
    where: mapping_bool_exp
  ): [mapping!]!

  """
  fetch aggregated fields from the table: "mapping"
  """
  mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_order_by!]

    """filter the rows returned"""
    where: mapping_bool_exp
  ): mapping_aggregate!

  """fetch data from the table: "mapping" using primary key columns"""
  mapping_by_pk(id: Int!): mapping

  """
  fetch data from the table: "mapping_details"
  """
  mapping_details(
    """distinct select on columns"""
    distinct_on: [mapping_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_details_order_by!]

    """filter the rows returned"""
    where: mapping_details_bool_exp
  ): [mapping_details!]!

  """
  fetch aggregated fields from the table: "mapping_details"
  """
  mapping_details_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_details_order_by!]

    """filter the rows returned"""
    where: mapping_details_bool_exp
  ): mapping_details_aggregate!

  """fetch data from the table: "mapping_details" using primary key columns"""
  mapping_details_by_pk(id: Int!): mapping_details

  """
  fetch data from the table: "mapping_submission"
  """
  mapping_submission(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): [mapping_submission!]!

  """
  fetch aggregated fields from the table: "mapping_submission"
  """
  mapping_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [mapping_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mapping_submission_order_by!]

    """filter the rows returned"""
    where: mapping_submission_bool_exp
  ): mapping_submission_aggregate!

  """
  fetch data from the table: "mapping_submission" using primary key columns
  """
  mapping_submission_by_pk(id: Int!): mapping_submission

  """
  fetch data from the table: "master_attendance"
  """
  master_attendance(
    """distinct select on columns"""
    distinct_on: [master_attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_attendance_order_by!]

    """filter the rows returned"""
    where: master_attendance_bool_exp
  ): [master_attendance!]!

  """
  fetch aggregated fields from the table: "master_attendance"
  """
  master_attendance_aggregate(
    """distinct select on columns"""
    distinct_on: [master_attendance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_attendance_order_by!]

    """filter the rows returned"""
    where: master_attendance_bool_exp
  ): master_attendance_aggregate!

  """
  fetch data from the table: "master_presentstudents"
  """
  master_presentstudents(
    """distinct select on columns"""
    distinct_on: [master_presentstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents_order_by!]

    """filter the rows returned"""
    where: master_presentstudents_bool_exp
  ): [master_presentstudents!]!

  """
  fetch data from the table: "master_presentstudents1"
  """
  master_presentstudents1(
    """distinct select on columns"""
    distinct_on: [master_presentstudents1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents1_order_by!]

    """filter the rows returned"""
    where: master_presentstudents1_bool_exp
  ): [master_presentstudents1!]!

  """
  fetch aggregated fields from the table: "master_presentstudents1"
  """
  master_presentstudents1_aggregate(
    """distinct select on columns"""
    distinct_on: [master_presentstudents1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents1_order_by!]

    """filter the rows returned"""
    where: master_presentstudents1_bool_exp
  ): master_presentstudents1_aggregate!

  """
  fetch aggregated fields from the table: "master_presentstudents"
  """
  master_presentstudents_aggregate(
    """distinct select on columns"""
    distinct_on: [master_presentstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_presentstudents_order_by!]

    """filter the rows returned"""
    where: master_presentstudents_bool_exp
  ): master_presentstudents_aggregate!

  """
  fetch data from the table: "master_students"
  """
  master_students(
    """distinct select on columns"""
    distinct_on: [master_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_students_order_by!]

    """filter the rows returned"""
    where: master_students_bool_exp
  ): [master_students!]!

  """
  fetch aggregated fields from the table: "master_students"
  """
  master_students_aggregate(
    """distinct select on columns"""
    distinct_on: [master_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_students_order_by!]

    """filter the rows returned"""
    where: master_students_bool_exp
  ): master_students_aggregate!

  """
  fetch data from the table: "master_table"
  """
  master_table(
    """distinct select on columns"""
    distinct_on: [master_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_order_by!]

    """filter the rows returned"""
    where: master_table_bool_exp
  ): [master_table!]!

  """
  fetch aggregated fields from the table: "master_table"
  """
  master_table_aggregate(
    """distinct select on columns"""
    distinct_on: [master_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_order_by!]

    """filter the rows returned"""
    where: master_table_bool_exp
  ): master_table_aggregate!

  """
  fetch data from the table: "master_table_higher2"
  """
  master_table_higher2(
    """distinct select on columns"""
    distinct_on: [master_table_higher2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_higher2_order_by!]

    """filter the rows returned"""
    where: master_table_higher2_bool_exp
  ): [master_table_higher2!]!

  """
  fetch aggregated fields from the table: "master_table_higher2"
  """
  master_table_higher2_aggregate(
    """distinct select on columns"""
    distinct_on: [master_table_higher2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [master_table_higher2_order_by!]

    """filter the rows returned"""
    where: master_table_higher2_bool_exp
  ): master_table_higher2_aggregate!

  """
  fetch data from the table: "masterstudents"
  """
  masterstudents(
    """distinct select on columns"""
    distinct_on: [masterstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [masterstudents_order_by!]

    """filter the rows returned"""
    where: masterstudents_bool_exp
  ): [masterstudents!]!

  """
  fetch aggregated fields from the table: "masterstudents"
  """
  masterstudents_aggregate(
    """distinct select on columns"""
    distinct_on: [masterstudents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [masterstudents_order_by!]

    """filter the rows returned"""
    where: masterstudents_bool_exp
  ): masterstudents_aggregate!

  """
  fetch data from the table: "matchingteachernos"
  """
  matchingteachernos(
    """distinct select on columns"""
    distinct_on: [matchingteachernos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [matchingteachernos_order_by!]

    """filter the rows returned"""
    where: matchingteachernos_bool_exp
  ): [matchingteachernos!]!

  """
  fetch aggregated fields from the table: "matchingteachernos"
  """
  matchingteachernos_aggregate(
    """distinct select on columns"""
    distinct_on: [matchingteachernos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [matchingteachernos_order_by!]

    """filter the rows returned"""
    where: matchingteachernos_bool_exp
  ): matchingteachernos_aggregate!

  """
  fetch data from the table: "mvintegrateddb_totalschools"
  """
  mvintegrateddb_totalschools(
    """distinct select on columns"""
    distinct_on: [mvintegrateddb_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mvintegrateddb_totalschools_order_by!]

    """filter the rows returned"""
    where: mvintegrateddb_totalschools_bool_exp
  ): [mvintegrateddb_totalschools!]!

  """
  fetch aggregated fields from the table: "mvintegrateddb_totalschools"
  """
  mvintegrateddb_totalschools_aggregate(
    """distinct select on columns"""
    distinct_on: [mvintegrateddb_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mvintegrateddb_totalschools_order_by!]

    """filter the rows returned"""
    where: mvintegrateddb_totalschools_bool_exp
  ): mvintegrateddb_totalschools_aggregate!

  """
  fetch data from the table: "mystudent_testperformance"
  """
  mystudent_testperformance(
    """distinct select on columns"""
    distinct_on: [mystudent_testperformance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mystudent_testperformance_order_by!]

    """filter the rows returned"""
    where: mystudent_testperformance_bool_exp
  ): [mystudent_testperformance!]!

  """
  fetch aggregated fields from the table: "mystudent_testperformance"
  """
  mystudent_testperformance_aggregate(
    """distinct select on columns"""
    distinct_on: [mystudent_testperformance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mystudent_testperformance_order_by!]

    """filter the rows returned"""
    where: mystudent_testperformance_bool_exp
  ): mystudent_testperformance_aggregate!

  """
  fetch data from the table: "mystudent_testperformance" using primary key columns
  """
  mystudent_testperformance_by_pk(p_key: Int!): mystudent_testperformance

  """
  fetch data from the table: "no_of_profiles"
  """
  no_of_profiles(
    """distinct select on columns"""
    distinct_on: [no_of_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [no_of_profiles_order_by!]

    """filter the rows returned"""
    where: no_of_profiles_bool_exp
  ): [no_of_profiles!]!

  """
  fetch aggregated fields from the table: "no_of_profiles"
  """
  no_of_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [no_of_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [no_of_profiles_order_by!]

    """filter the rows returned"""
    where: no_of_profiles_bool_exp
  ): no_of_profiles_aggregate!

  """
  fetch data from the table: "notification"
  """
  notification(
    """distinct select on columns"""
    distinct_on: [notification_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [notification_order_by!]

    """filter the rows returned"""
    where: notification_bool_exp
  ): [notification!]!

  """
  fetch aggregated fields from the table: "notification"
  """
  notification_aggregate(
    """distinct select on columns"""
    distinct_on: [notification_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [notification_order_by!]

    """filter the rows returned"""
    where: notification_bool_exp
  ): notification_aggregate!

  """fetch data from the table: "notification" using primary key columns"""
  notification_by_pk(id: Int!): notification

  """
  fetch data from the table: "number_of_highschools"
  """
  number_of_highschools(
    """distinct select on columns"""
    distinct_on: [number_of_highschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_highschools_order_by!]

    """filter the rows returned"""
    where: number_of_highschools_bool_exp
  ): [number_of_highschools!]!

  """
  fetch aggregated fields from the table: "number_of_highschools"
  """
  number_of_highschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_highschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_highschools_order_by!]

    """filter the rows returned"""
    where: number_of_highschools_bool_exp
  ): number_of_highschools_aggregate!

  """
  fetch data from the table: "number_of_middleschools"
  """
  number_of_middleschools(
    """distinct select on columns"""
    distinct_on: [number_of_middleschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_middleschools_order_by!]

    """filter the rows returned"""
    where: number_of_middleschools_bool_exp
  ): [number_of_middleschools!]!

  """
  fetch aggregated fields from the table: "number_of_middleschools"
  """
  number_of_middleschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_middleschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_middleschools_order_by!]

    """filter the rows returned"""
    where: number_of_middleschools_bool_exp
  ): number_of_middleschools_aggregate!

  """
  fetch data from the table: "number_of_primaryschools"
  """
  number_of_primaryschools(
    """distinct select on columns"""
    distinct_on: [number_of_primaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_primaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_primaryschools_bool_exp
  ): [number_of_primaryschools!]!

  """
  fetch aggregated fields from the table: "number_of_primaryschools"
  """
  number_of_primaryschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_primaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_primaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_primaryschools_bool_exp
  ): number_of_primaryschools_aggregate!

  """
  fetch data from the table: "number_of_secondaryschools"
  """
  number_of_secondaryschools(
    """distinct select on columns"""
    distinct_on: [number_of_secondaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_secondaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_secondaryschools_bool_exp
  ): [number_of_secondaryschools!]!

  """
  fetch aggregated fields from the table: "number_of_secondaryschools"
  """
  number_of_secondaryschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_secondaryschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_secondaryschools_order_by!]

    """filter the rows returned"""
    where: number_of_secondaryschools_bool_exp
  ): number_of_secondaryschools_aggregate!

  """
  fetch data from the table: "number_of_totalschools"
  """
  number_of_totalschools(
    """distinct select on columns"""
    distinct_on: [number_of_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_totalschools_order_by!]

    """filter the rows returned"""
    where: number_of_totalschools_bool_exp
  ): [number_of_totalschools!]!

  """
  fetch aggregated fields from the table: "number_of_totalschools"
  """
  number_of_totalschools_aggregate(
    """distinct select on columns"""
    distinct_on: [number_of_totalschools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [number_of_totalschools_order_by!]

    """filter the rows returned"""
    where: number_of_totalschools_bool_exp
  ): number_of_totalschools_aggregate!

  """
  fetch data from the table: "odk_submission"
  """
  odk_submission(
    """distinct select on columns"""
    distinct_on: [odk_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [odk_submission_order_by!]

    """filter the rows returned"""
    where: odk_submission_bool_exp
  ): [odk_submission!]!

  """
  fetch aggregated fields from the table: "odk_submission"
  """
  odk_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [odk_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [odk_submission_order_by!]

    """filter the rows returned"""
    where: odk_submission_bool_exp
  ): odk_submission_aggregate!

  """fetch data from the table: "odk_submission" using primary key columns"""
  odk_submission_by_pk(id: Int!): odk_submission

  """
  fetch data from the table: "old_assessment"
  """
  old_assessment(
    """distinct select on columns"""
    distinct_on: [old_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_assessment_order_by!]

    """filter the rows returned"""
    where: old_assessment_bool_exp
  ): [old_assessment!]!

  """
  fetch aggregated fields from the table: "old_assessment"
  """
  old_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [old_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_assessment_order_by!]

    """filter the rows returned"""
    where: old_assessment_bool_exp
  ): old_assessment_aggregate!

  """fetch data from the table: "old_assessment" using primary key columns"""
  old_assessment_by_pk(id: Int!): old_assessment

  """
  fetch data from the table: "old_lo_master"
  """
  old_lo_master(
    """distinct select on columns"""
    distinct_on: [old_lo_master_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_master_order_by!]

    """filter the rows returned"""
    where: old_lo_master_bool_exp
  ): [old_lo_master!]!

  """
  fetch aggregated fields from the table: "old_lo_master"
  """
  old_lo_master_aggregate(
    """distinct select on columns"""
    distinct_on: [old_lo_master_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_master_order_by!]

    """filter the rows returned"""
    where: old_lo_master_bool_exp
  ): old_lo_master_aggregate!

  """fetch data from the table: "old_lo_master" using primary key columns"""
  old_lo_master_by_pk(id: Int!): old_lo_master

  """
  fetch data from the table: "old_lo_submissions"
  """
  old_lo_submissions(
    """distinct select on columns"""
    distinct_on: [old_lo_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_submissions_order_by!]

    """filter the rows returned"""
    where: old_lo_submissions_bool_exp
  ): [old_lo_submissions!]!

  """
  fetch aggregated fields from the table: "old_lo_submissions"
  """
  old_lo_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [old_lo_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_lo_submissions_order_by!]

    """filter the rows returned"""
    where: old_lo_submissions_bool_exp
  ): old_lo_submissions_aggregate!

  """
  fetch data from the table: "old_lo_submissions" using primary key columns
  """
  old_lo_submissions_by_pk(id: Int!): old_lo_submissions

  """
  fetch data from the table: "old_schools"
  """
  old_schools(
    """distinct select on columns"""
    distinct_on: [old_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_schools_order_by!]

    """filter the rows returned"""
    where: old_schools_bool_exp
  ): [old_schools!]!

  """
  fetch aggregated fields from the table: "old_schools"
  """
  old_schools_aggregate(
    """distinct select on columns"""
    distinct_on: [old_schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [old_schools_order_by!]

    """filter the rows returned"""
    where: old_schools_bool_exp
  ): old_schools_aggregate!

  """fetch data from the table: "old_schools" using primary key columns"""
  old_schools_by_pk(id: Int!): old_schools

  """
  fetch data from the table: "pg_stat_statements"
  """
  pg_stat_statements(
    """distinct select on columns"""
    distinct_on: [pg_stat_statements_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pg_stat_statements_order_by!]

    """filter the rows returned"""
    where: pg_stat_statements_bool_exp
  ): [pg_stat_statements!]!

  """
  fetch aggregated fields from the table: "pg_stat_statements"
  """
  pg_stat_statements_aggregate(
    """distinct select on columns"""
    distinct_on: [pg_stat_statements_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pg_stat_statements_order_by!]

    """filter the rows returned"""
    where: pg_stat_statements_bool_exp
  ): pg_stat_statements_aggregate!

  """
  fetch data from the table: "pgbench_accounts"
  """
  pgbench_accounts(
    """distinct select on columns"""
    distinct_on: [pgbench_accounts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_accounts_order_by!]

    """filter the rows returned"""
    where: pgbench_accounts_bool_exp
  ): [pgbench_accounts!]!

  """
  fetch aggregated fields from the table: "pgbench_accounts"
  """
  pgbench_accounts_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_accounts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_accounts_order_by!]

    """filter the rows returned"""
    where: pgbench_accounts_bool_exp
  ): pgbench_accounts_aggregate!

  """
  fetch data from the table: "pgbench_accounts" using primary key columns
  """
  pgbench_accounts_by_pk(aid: Int!): pgbench_accounts

  """
  fetch data from the table: "pgbench_branches"
  """
  pgbench_branches(
    """distinct select on columns"""
    distinct_on: [pgbench_branches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_branches_order_by!]

    """filter the rows returned"""
    where: pgbench_branches_bool_exp
  ): [pgbench_branches!]!

  """
  fetch aggregated fields from the table: "pgbench_branches"
  """
  pgbench_branches_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_branches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_branches_order_by!]

    """filter the rows returned"""
    where: pgbench_branches_bool_exp
  ): pgbench_branches_aggregate!

  """
  fetch data from the table: "pgbench_branches" using primary key columns
  """
  pgbench_branches_by_pk(bid: Int!): pgbench_branches

  """
  fetch data from the table: "pgbench_history"
  """
  pgbench_history(
    """distinct select on columns"""
    distinct_on: [pgbench_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_history_order_by!]

    """filter the rows returned"""
    where: pgbench_history_bool_exp
  ): [pgbench_history!]!

  """
  fetch aggregated fields from the table: "pgbench_history"
  """
  pgbench_history_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_history_order_by!]

    """filter the rows returned"""
    where: pgbench_history_bool_exp
  ): pgbench_history_aggregate!

  """
  fetch data from the table: "pgbench_tellers"
  """
  pgbench_tellers(
    """distinct select on columns"""
    distinct_on: [pgbench_tellers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_tellers_order_by!]

    """filter the rows returned"""
    where: pgbench_tellers_bool_exp
  ): [pgbench_tellers!]!

  """
  fetch aggregated fields from the table: "pgbench_tellers"
  """
  pgbench_tellers_aggregate(
    """distinct select on columns"""
    distinct_on: [pgbench_tellers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pgbench_tellers_order_by!]

    """filter the rows returned"""
    where: pgbench_tellers_bool_exp
  ): pgbench_tellers_aggregate!

  """fetch data from the table: "pgbench_tellers" using primary key columns"""
  pgbench_tellers_by_pk(tid: Int!): pgbench_tellers

  """
  fetch data from the table: "preboard_results_2021"
  """
  preboard_results_2021(
    """distinct select on columns"""
    distinct_on: [preboard_results_2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_results_2021_order_by!]

    """filter the rows returned"""
    where: preboard_results_2021_bool_exp
  ): [preboard_results_2021!]!

  """
  fetch aggregated fields from the table: "preboard_results_2021"
  """
  preboard_results_2021_aggregate(
    """distinct select on columns"""
    distinct_on: [preboard_results_2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_results_2021_order_by!]

    """filter the rows returned"""
    where: preboard_results_2021_bool_exp
  ): preboard_results_2021_aggregate!

  """
  fetch data from the table: "preboard_student_table2021"
  """
  preboard_student_table2021(
    """distinct select on columns"""
    distinct_on: [preboard_student_table2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_student_table2021_order_by!]

    """filter the rows returned"""
    where: preboard_student_table2021_bool_exp
  ): [preboard_student_table2021!]!

  """
  fetch aggregated fields from the table: "preboard_student_table2021"
  """
  preboard_student_table2021_aggregate(
    """distinct select on columns"""
    distinct_on: [preboard_student_table2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preboard_student_table2021_order_by!]

    """filter the rows returned"""
    where: preboard_student_table2021_bool_exp
  ): preboard_student_table2021_aggregate!

  """
  fetch data from the table: "question"
  """
  question(
    """distinct select on columns"""
    distinct_on: [question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_order_by!]

    """filter the rows returned"""
    where: question_bool_exp
  ): [question!]!

  """
  fetch aggregated fields from the table: "question"
  """
  question_aggregate(
    """distinct select on columns"""
    distinct_on: [question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_order_by!]

    """filter the rows returned"""
    where: question_bool_exp
  ): question_aggregate!

  """
  fetch data from the table: "question_assessment"
  """
  question_assessment(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): [question_assessment!]!

  """
  fetch aggregated fields from the table: "question_assessment"
  """
  question_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [question_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_assessment_order_by!]

    """filter the rows returned"""
    where: question_assessment_bool_exp
  ): question_assessment_aggregate!

  """
  fetch data from the table: "question_assessment" using primary key columns
  """
  question_assessment_by_pk(id: Int!): question_assessment

  """
  fetch data from the table: "question_bundle"
  """
  question_bundle(
    """distinct select on columns"""
    distinct_on: [question_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_order_by!]

    """filter the rows returned"""
    where: question_bundle_bool_exp
  ): [question_bundle!]!

  """
  fetch aggregated fields from the table: "question_bundle"
  """
  question_bundle_aggregate(
    """distinct select on columns"""
    distinct_on: [question_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_order_by!]

    """filter the rows returned"""
    where: question_bundle_bool_exp
  ): question_bundle_aggregate!

  """fetch data from the table: "question_bundle" using primary key columns"""
  question_bundle_by_pk(id: Int!): question_bundle

  """An array relationship"""
  question_bundle_questions(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): [question_bundle_questions!]!

  """An aggregate relationship"""
  question_bundle_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [question_bundle_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_bundle_questions_order_by!]

    """filter the rows returned"""
    where: question_bundle_questions_bool_exp
  ): question_bundle_questions_aggregate!

  """
  fetch data from the table: "question_bundle_questions" using primary key columns
  """
  question_bundle_questions_by_pk(id: Int!): question_bundle_questions

  """fetch data from the table: "question" using primary key columns"""
  question_by_pk(id: Int!): question

  """
  fetch data from the table: "question_submission"
  """
  question_submission(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): [question_submission!]!

  """
  fetch aggregated fields from the table: "question_submission"
  """
  question_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [question_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_submission_order_by!]

    """filter the rows returned"""
    where: question_submission_bool_exp
  ): question_submission_aggregate!

  """
  fetch data from the table: "question_submission" using primary key columns
  """
  question_submission_by_pk(id: Int!): question_submission

  """
  fetch data from the table: "question_v2"
  """
  question_v2(
    """distinct select on columns"""
    distinct_on: [question_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_v2_order_by!]

    """filter the rows returned"""
    where: question_v2_bool_exp
  ): [question_v2!]!

  """
  fetch aggregated fields from the table: "question_v2"
  """
  question_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [question_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_v2_order_by!]

    """filter the rows returned"""
    where: question_v2_bool_exp
  ): question_v2_aggregate!

  """fetch data from the table: "question_v2" using primary key columns"""
  question_v2_by_pk(id: Int!): question_v2

  """
  fetch data from the table: "questions_submission_expanded"
  """
  questions_submission_expanded(
    """distinct select on columns"""
    distinct_on: [questions_submission_expanded_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_submission_expanded_order_by!]

    """filter the rows returned"""
    where: questions_submission_expanded_bool_exp
  ): [questions_submission_expanded!]!

  """
  fetch aggregated fields from the table: "questions_submission_expanded"
  """
  questions_submission_expanded_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_submission_expanded_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_submission_expanded_order_by!]

    """filter the rows returned"""
    where: questions_submission_expanded_bool_exp
  ): questions_submission_expanded_aggregate!

  """
  fetch data from the table: "questions_submission_expanded" using primary key columns
  """
  questions_submission_expanded_by_pk(id: Int!): questions_submission_expanded

  """
  fetch data from the table: "sample_test"
  """
  sample_test(
    """distinct select on columns"""
    distinct_on: [sample_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sample_test_order_by!]

    """filter the rows returned"""
    where: sample_test_bool_exp
  ): [sample_test!]!

  """
  fetch aggregated fields from the table: "sample_test"
  """
  sample_test_aggregate(
    """distinct select on columns"""
    distinct_on: [sample_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sample_test_order_by!]

    """filter the rows returned"""
    where: sample_test_bool_exp
  ): sample_test_aggregate!

  """fetch data from the table: "sample_test" using primary key columns"""
  sample_test_by_pk(id: Int!): sample_test

  """
  fetch data from the table: "school"
  """
  school(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): [school!]!

  """
  fetch aggregated fields from the table: "school"
  """
  school_aggregate(
    """distinct select on columns"""
    distinct_on: [school_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_order_by!]

    """filter the rows returned"""
    where: school_bool_exp
  ): school_aggregate!

  """fetch data from the table: "school" using primary key columns"""
  school_by_pk(id: Int!): school

  """
  fetch data from the table: "school_cache"
  """
  school_cache(
    """distinct select on columns"""
    distinct_on: [school_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_cache_order_by!]

    """filter the rows returned"""
    where: school_cache_bool_exp
  ): [school_cache!]!

  """
  fetch aggregated fields from the table: "school_cache"
  """
  school_cache_aggregate(
    """distinct select on columns"""
    distinct_on: [school_cache_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_cache_order_by!]

    """filter the rows returned"""
    where: school_cache_bool_exp
  ): school_cache_aggregate!

  """fetch data from the table: "school_cache" using primary key columns"""
  school_cache_by_pk(id: Int!): school_cache

  """
  fetch data from the table: "school_class_mismatch"
  """
  school_class_mismatch(
    """distinct select on columns"""
    distinct_on: [school_class_mismatch_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_class_mismatch_order_by!]

    """filter the rows returned"""
    where: school_class_mismatch_bool_exp
  ): [school_class_mismatch!]!

  """
  fetch aggregated fields from the table: "school_class_mismatch"
  """
  school_class_mismatch_aggregate(
    """distinct select on columns"""
    distinct_on: [school_class_mismatch_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_class_mismatch_order_by!]

    """filter the rows returned"""
    where: school_class_mismatch_bool_exp
  ): school_class_mismatch_aggregate!

  """
  fetch data from the table: "school_grade"
  """
  school_grade(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): [school_grade!]!

  """
  fetch aggregated fields from the table: "school_grade"
  """
  school_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [school_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_grade_order_by!]

    """filter the rows returned"""
    where: school_grade_bool_exp
  ): school_grade_aggregate!

  """fetch data from the table: "school_grade" using primary key columns"""
  school_grade_by_pk(id: Int!): school_grade

  """
  fetch data from the table: "school_location_mapping"
  """
  school_location_mapping(
    """distinct select on columns"""
    distinct_on: [school_location_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_location_mapping_order_by!]

    """filter the rows returned"""
    where: school_location_mapping_bool_exp
  ): [school_location_mapping!]!

  """
  fetch aggregated fields from the table: "school_location_mapping"
  """
  school_location_mapping_aggregate(
    """distinct select on columns"""
    distinct_on: [school_location_mapping_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_location_mapping_order_by!]

    """filter the rows returned"""
    where: school_location_mapping_bool_exp
  ): school_location_mapping_aggregate!

  """
  fetch data from the table: "school_location_mapping" using primary key columns
  """
  school_location_mapping_by_pk(id: Int!): school_location_mapping

  """
  fetch data from the table: "school_type_enrolment"
  """
  school_type_enrolment(
    """distinct select on columns"""
    distinct_on: [school_type_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_enrolment_bool_exp
  ): [school_type_enrolment!]!

  """
  fetch aggregated fields from the table: "school_type_enrolment"
  """
  school_type_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [school_type_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_enrolment_bool_exp
  ): school_type_enrolment_aggregate!

  """
  fetch data from the table: "school_type_udise_enrolment"
  """
  school_type_udise_enrolment(
    """distinct select on columns"""
    distinct_on: [school_type_udise_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_udise_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_udise_enrolment_bool_exp
  ): [school_type_udise_enrolment!]!

  """
  fetch aggregated fields from the table: "school_type_udise_enrolment"
  """
  school_type_udise_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [school_type_udise_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_type_udise_enrolment_order_by!]

    """filter the rows returned"""
    where: school_type_udise_enrolment_bool_exp
  ): school_type_udise_enrolment_aggregate!

  """
  fetch data from the table: "school_wise_daily_enrolment"
  """
  school_wise_daily_enrolment(
    """distinct select on columns"""
    distinct_on: [school_wise_daily_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_wise_daily_enrolment_order_by!]

    """filter the rows returned"""
    where: school_wise_daily_enrolment_bool_exp
  ): [school_wise_daily_enrolment!]!

  """
  fetch aggregated fields from the table: "school_wise_daily_enrolment"
  """
  school_wise_daily_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [school_wise_daily_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_wise_daily_enrolment_order_by!]

    """filter the rows returned"""
    where: school_wise_daily_enrolment_bool_exp
  ): school_wise_daily_enrolment_aggregate!

  """
  fetch data from the table: "school_wise_daily_enrolment" using primary key columns
  """
  school_wise_daily_enrolment_by_pk(id: bigint!): school_wise_daily_enrolment

  """
  fetch data from the table: "schoolwise_student_enrolment"
  """
  schoolwise_student_enrolment(
    """distinct select on columns"""
    distinct_on: [schoolwise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolwise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: schoolwise_student_enrolment_bool_exp
  ): [schoolwise_student_enrolment!]!

  """
  fetch aggregated fields from the table: "schoolwise_student_enrolment"
  """
  schoolwise_student_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [schoolwise_student_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schoolwise_student_enrolment_order_by!]

    """filter the rows returned"""
    where: schoolwise_student_enrolment_bool_exp
  ): schoolwise_student_enrolment_aggregate!

  """
  fetch data from the table: "server_logroup"
  """
  server_logroup(
    """distinct select on columns"""
    distinct_on: [server_logroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_order_by!]

    """filter the rows returned"""
    where: server_logroup_bool_exp
  ): [server_logroup!]!

  """
  fetch aggregated fields from the table: "server_logroup"
  """
  server_logroup_aggregate(
    """distinct select on columns"""
    distinct_on: [server_logroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_order_by!]

    """filter the rows returned"""
    where: server_logroup_bool_exp
  ): server_logroup_aggregate!

  """fetch data from the table: "server_logroup" using primary key columns"""
  server_logroup_by_pk(id: Int!): server_logroup

  """
  fetch data from the table: "server_logroup_lo"
  """
  server_logroup_lo(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): [server_logroup_lo!]!

  """
  fetch aggregated fields from the table: "server_logroup_lo"
  """
  server_logroup_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [server_logroup_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_logroup_lo_order_by!]

    """filter the rows returned"""
    where: server_logroup_lo_bool_exp
  ): server_logroup_lo_aggregate!

  """
  fetch data from the table: "server_logroup_lo" using primary key columns
  """
  server_logroup_lo_by_pk(id: Int!): server_logroup_lo

  """
  fetch data from the table: "server_marksrange"
  """
  server_marksrange(
    """distinct select on columns"""
    distinct_on: [server_marksrange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_marksrange_order_by!]

    """filter the rows returned"""
    where: server_marksrange_bool_exp
  ): [server_marksrange!]!

  """
  fetch aggregated fields from the table: "server_marksrange"
  """
  server_marksrange_aggregate(
    """distinct select on columns"""
    distinct_on: [server_marksrange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_marksrange_order_by!]

    """filter the rows returned"""
    where: server_marksrange_bool_exp
  ): server_marksrange_aggregate!

  """
  fetch data from the table: "server_marksrange" using primary key columns
  """
  server_marksrange_by_pk(id: Int!): server_marksrange

  """
  fetch data from the table: "server_questiongroup"
  """
  server_questiongroup(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_bool_exp
  ): [server_questiongroup!]!

  """
  fetch aggregated fields from the table: "server_questiongroup"
  """
  server_questiongroup_aggregate(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_bool_exp
  ): server_questiongroup_aggregate!

  """
  fetch data from the table: "server_questiongroup" using primary key columns
  """
  server_questiongroup_by_pk(id: Int!): server_questiongroup

  """
  fetch data from the table: "server_questiongroup_question"
  """
  server_questiongroup_question(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): [server_questiongroup_question!]!

  """
  fetch aggregated fields from the table: "server_questiongroup_question"
  """
  server_questiongroup_question_aggregate(
    """distinct select on columns"""
    distinct_on: [server_questiongroup_question_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [server_questiongroup_question_order_by!]

    """filter the rows returned"""
    where: server_questiongroup_question_bool_exp
  ): server_questiongroup_question_aggregate!

  """
  fetch data from the table: "server_questiongroup_question" using primary key columns
  """
  server_questiongroup_question_by_pk(id: Int!): server_questiongroup_question

  """
  fetch data from the table: "silk_profile"
  """
  silk_profile(
    """distinct select on columns"""
    distinct_on: [silk_profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_order_by!]

    """filter the rows returned"""
    where: silk_profile_bool_exp
  ): [silk_profile!]!

  """
  fetch aggregated fields from the table: "silk_profile"
  """
  silk_profile_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_order_by!]

    """filter the rows returned"""
    where: silk_profile_bool_exp
  ): silk_profile_aggregate!

  """fetch data from the table: "silk_profile" using primary key columns"""
  silk_profile_by_pk(id: Int!): silk_profile

  """An array relationship"""
  silk_profile_queries(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): [silk_profile_queries!]!

  """An aggregate relationship"""
  silk_profile_queries_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_profile_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_profile_queries_order_by!]

    """filter the rows returned"""
    where: silk_profile_queries_bool_exp
  ): silk_profile_queries_aggregate!

  """
  fetch data from the table: "silk_profile_queries" using primary key columns
  """
  silk_profile_queries_by_pk(id: Int!): silk_profile_queries

  """
  fetch data from the table: "silk_request"
  """
  silk_request(
    """distinct select on columns"""
    distinct_on: [silk_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_request_order_by!]

    """filter the rows returned"""
    where: silk_request_bool_exp
  ): [silk_request!]!

  """
  fetch aggregated fields from the table: "silk_request"
  """
  silk_request_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_request_order_by!]

    """filter the rows returned"""
    where: silk_request_bool_exp
  ): silk_request_aggregate!

  """fetch data from the table: "silk_request" using primary key columns"""
  silk_request_by_pk(id: String!): silk_request

  """
  fetch data from the table: "silk_response"
  """
  silk_response(
    """distinct select on columns"""
    distinct_on: [silk_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_response_order_by!]

    """filter the rows returned"""
    where: silk_response_bool_exp
  ): [silk_response!]!

  """
  fetch aggregated fields from the table: "silk_response"
  """
  silk_response_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_response_order_by!]

    """filter the rows returned"""
    where: silk_response_bool_exp
  ): silk_response_aggregate!

  """fetch data from the table: "silk_response" using primary key columns"""
  silk_response_by_pk(id: String!): silk_response

  """
  fetch data from the table: "silk_sqlquery"
  """
  silk_sqlquery(
    """distinct select on columns"""
    distinct_on: [silk_sqlquery_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_sqlquery_order_by!]

    """filter the rows returned"""
    where: silk_sqlquery_bool_exp
  ): [silk_sqlquery!]!

  """
  fetch aggregated fields from the table: "silk_sqlquery"
  """
  silk_sqlquery_aggregate(
    """distinct select on columns"""
    distinct_on: [silk_sqlquery_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [silk_sqlquery_order_by!]

    """filter the rows returned"""
    where: silk_sqlquery_bool_exp
  ): silk_sqlquery_aggregate!

  """fetch data from the table: "silk_sqlquery" using primary key columns"""
  silk_sqlquery_by_pk(id: Int!): silk_sqlquery

  """An array relationship"""
  sms(
    """distinct select on columns"""
    distinct_on: [sms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_order_by!]

    """filter the rows returned"""
    where: sms_bool_exp
  ): [sms!]!

  """An aggregate relationship"""
  sms_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_order_by!]

    """filter the rows returned"""
    where: sms_bool_exp
  ): sms_aggregate!

  """fetch data from the table: "sms" using primary key columns"""
  sms_by_pk(id: Int!): sms

  """
  fetch data from the table: "sms_dag_reports"
  """
  sms_dag_reports(
    """distinct select on columns"""
    distinct_on: [sms_dag_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_dag_reports_order_by!]

    """filter the rows returned"""
    where: sms_dag_reports_bool_exp
  ): [sms_dag_reports!]!

  """
  fetch aggregated fields from the table: "sms_dag_reports"
  """
  sms_dag_reports_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_dag_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_dag_reports_order_by!]

    """filter the rows returned"""
    where: sms_dag_reports_bool_exp
  ): sms_dag_reports_aggregate!

  """fetch data from the table: "sms_dag_reports" using primary key columns"""
  sms_dag_reports_by_pk(id: Int!): sms_dag_reports

  """
  fetch data from the table: "sms_student_attendance_mv"
  """
  sms_student_attendance_mv(
    """distinct select on columns"""
    distinct_on: [sms_student_attendance_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_student_attendance_mv_order_by!]

    """filter the rows returned"""
    where: sms_student_attendance_mv_bool_exp
  ): [sms_student_attendance_mv!]!

  """
  fetch aggregated fields from the table: "sms_student_attendance_mv"
  """
  sms_student_attendance_mv_aggregate(
    """distinct select on columns"""
    distinct_on: [sms_student_attendance_mv_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sms_student_attendance_mv_order_by!]

    """filter the rows returned"""
    where: sms_student_attendance_mv_bool_exp
  ): sms_student_attendance_mv_aggregate!

  """An array relationship"""
  ss_school_allocation_data(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): [ss_school_allocation_data!]!

  """An aggregate relationship"""
  ss_school_allocation_data_aggregate(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_data_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_data_bool_exp
  ): ss_school_allocation_data_aggregate!

  """
  fetch data from the table: "ss_school_allocation_data" using primary key columns
  """
  ss_school_allocation_data_by_pk(id: Int!): ss_school_allocation_data

  """
  fetch data from the table: "ss_school_allocation_quarter"
  """
  ss_school_allocation_quarter(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_quarter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_quarter_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_quarter_bool_exp
  ): [ss_school_allocation_quarter!]!

  """
  fetch aggregated fields from the table: "ss_school_allocation_quarter"
  """
  ss_school_allocation_quarter_aggregate(
    """distinct select on columns"""
    distinct_on: [ss_school_allocation_quarter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ss_school_allocation_quarter_order_by!]

    """filter the rows returned"""
    where: ss_school_allocation_quarter_bool_exp
  ): ss_school_allocation_quarter_aggregate!

  """
  fetch data from the table: "ss_school_allocation_quarter" using primary key columns
  """
  ss_school_allocation_quarter_by_pk(id: Int!): ss_school_allocation_quarter

  """
  fetch data from the table: "state_edu_enrolment"
  """
  state_edu_enrolment(
    """distinct select on columns"""
    distinct_on: [state_edu_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_edu_enrolment_order_by!]

    """filter the rows returned"""
    where: state_edu_enrolment_bool_exp
  ): [state_edu_enrolment!]!

  """
  fetch aggregated fields from the table: "state_edu_enrolment"
  """
  state_edu_enrolment_aggregate(
    """distinct select on columns"""
    distinct_on: [state_edu_enrolment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_edu_enrolment_order_by!]

    """filter the rows returned"""
    where: state_edu_enrolment_bool_exp
  ): state_edu_enrolment_aggregate!

  """
  fetch data from the table: "state_lo_list"
  """
  state_lo_list(
    """distinct select on columns"""
    distinct_on: [state_lo_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_lo_list_order_by!]

    """filter the rows returned"""
    where: state_lo_list_bool_exp
  ): [state_lo_list!]!

  """
  fetch aggregated fields from the table: "state_lo_list"
  """
  state_lo_list_aggregate(
    """distinct select on columns"""
    distinct_on: [state_lo_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_lo_list_order_by!]

    """filter the rows returned"""
    where: state_lo_list_bool_exp
  ): state_lo_list_aggregate!

  """
  fetch data from the table: "static"
  """
  static(
    """distinct select on columns"""
    distinct_on: [static_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [static_order_by!]

    """filter the rows returned"""
    where: static_bool_exp
  ): [static!]!

  """
  fetch aggregated fields from the table: "static"
  """
  static_aggregate(
    """distinct select on columns"""
    distinct_on: [static_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [static_order_by!]

    """filter the rows returned"""
    where: static_bool_exp
  ): static_aggregate!

  """fetch data from the table: "static" using primary key columns"""
  static_by_pk(id: Int!): static

  """
  fetch data from the table: "stream"
  """
  stream(
    """distinct select on columns"""
    distinct_on: [stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_order_by!]

    """filter the rows returned"""
    where: stream_bool_exp
  ): [stream!]!

  """
  fetch aggregated fields from the table: "stream"
  """
  stream_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_order_by!]

    """filter the rows returned"""
    where: stream_bool_exp
  ): stream_aggregate!

  """fetch data from the table: "stream" using primary key columns"""
  stream_by_pk(id: Int!): stream

  """
  fetch data from the table: "stream_common_subject"
  """
  stream_common_subject(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): [stream_common_subject!]!

  """
  fetch aggregated fields from the table: "stream_common_subject"
  """
  stream_common_subject_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_common_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_common_subject_order_by!]

    """filter the rows returned"""
    where: stream_common_subject_bool_exp
  ): stream_common_subject_aggregate!

  """
  fetch data from the table: "stream_common_subject" using primary key columns
  """
  stream_common_subject_by_pk(id: Int!): stream_common_subject

  """
  fetch data from the table: "stream_optional_subjects_1"
  """
  stream_optional_subjects_1(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): [stream_optional_subjects_1!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_1"
  """
  stream_optional_subjects_1_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_1_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_1_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_1_bool_exp
  ): stream_optional_subjects_1_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_1" using primary key columns
  """
  stream_optional_subjects_1_by_pk(id: Int!): stream_optional_subjects_1

  """
  fetch data from the table: "stream_optional_subjects_2"
  """
  stream_optional_subjects_2(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): [stream_optional_subjects_2!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_2"
  """
  stream_optional_subjects_2_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_2_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_2_bool_exp
  ): stream_optional_subjects_2_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_2" using primary key columns
  """
  stream_optional_subjects_2_by_pk(id: Int!): stream_optional_subjects_2

  """
  fetch data from the table: "stream_optional_subjects_3"
  """
  stream_optional_subjects_3(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): [stream_optional_subjects_3!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_3"
  """
  stream_optional_subjects_3_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_3_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_3_bool_exp
  ): stream_optional_subjects_3_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_3" using primary key columns
  """
  stream_optional_subjects_3_by_pk(id: Int!): stream_optional_subjects_3

  """
  fetch data from the table: "stream_optional_subjects_4"
  """
  stream_optional_subjects_4(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): [stream_optional_subjects_4!]!

  """
  fetch aggregated fields from the table: "stream_optional_subjects_4"
  """
  stream_optional_subjects_4_aggregate(
    """distinct select on columns"""
    distinct_on: [stream_optional_subjects_4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stream_optional_subjects_4_order_by!]

    """filter the rows returned"""
    where: stream_optional_subjects_4_bool_exp
  ): stream_optional_subjects_4_aggregate!

  """
  fetch data from the table: "stream_optional_subjects_4" using primary key columns
  """
  stream_optional_subjects_4_by_pk(id: Int!): stream_optional_subjects_4

  """
  fetch data from the table: "student"
  """
  student(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """
  fetch aggregated fields from the table: "student"
  """
  student_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!

  """fetch data from the table: "student" using primary key columns"""
  student_by_pk(id: Int!): student

  """
  fetch data from the table: "student_content_share"
  """
  student_content_share(
    """distinct select on columns"""
    distinct_on: [student_content_share_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_content_share_order_by!]

    """filter the rows returned"""
    where: student_content_share_bool_exp
  ): [student_content_share!]!

  """
  fetch aggregated fields from the table: "student_content_share"
  """
  student_content_share_aggregate(
    """distinct select on columns"""
    distinct_on: [student_content_share_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_content_share_order_by!]

    """filter the rows returned"""
    where: student_content_share_bool_exp
  ): student_content_share_aggregate!

  """
  fetch data from the table: "student_content_share" using primary key columns
  """
  student_content_share_by_pk(id: Int!): student_content_share

  """
  fetch data from the table: "student_subject"
  """
  student_subject(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): [student_subject!]!

  """
  fetch aggregated fields from the table: "student_subject"
  """
  student_subject_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subject_order_by!]

    """filter the rows returned"""
    where: student_subject_bool_exp
  ): student_subject_aggregate!

  """fetch data from the table: "student_subject" using primary key columns"""
  student_subject_by_pk(id: Int!): student_subject

  """
  fetch data from the table: "student_submission"
  """
  student_submission(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): [student_submission!]!

  """
  fetch aggregated fields from the table: "student_submission"
  """
  student_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_order_by!]

    """filter the rows returned"""
    where: student_submission_bool_exp
  ): student_submission_aggregate!

  """
  fetch data from the table: "student_submission" using primary key columns
  """
  student_submission_by_pk(id: Int!): student_submission

  """
  fetch data from the table: "student_submission_v2"
  """
  student_submission_v2(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): [student_submission_v2!]!

  """
  fetch aggregated fields from the table: "student_submission_v2"
  """
  student_submission_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_bool_exp
  ): student_submission_v2_aggregate!

  """
  fetch data from the table: "student_submission_v2" using primary key columns
  """
  student_submission_v2_by_pk(id: Int!): student_submission_v2

  """An array relationship"""
  student_submission_v2_marks_submissions(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): [student_submission_v2_marks_submissions!]!

  """An aggregate relationship"""
  student_submission_v2_marks_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_submission_v2_marks_submissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_submission_v2_marks_submissions_order_by!]

    """filter the rows returned"""
    where: student_submission_v2_marks_submissions_bool_exp
  ): student_submission_v2_marks_submissions_aggregate!

  """
  fetch data from the table: "student_submission_v2_marks_submissions" using primary key columns
  """
  student_submission_v2_marks_submissions_by_pk(id: Int!): student_submission_v2_marks_submissions

  """
  fetch data from the table: "student_table_higher"
  """
  student_table_higher(
    """distinct select on columns"""
    distinct_on: [student_table_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_order_by!]

    """filter the rows returned"""
    where: student_table_higher_bool_exp
  ): [student_table_higher!]!

  """
  fetch data from the table: "student_table_higher_2"
  """
  student_table_higher_2(
    """distinct select on columns"""
    distinct_on: [student_table_higher_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_2_order_by!]

    """filter the rows returned"""
    where: student_table_higher_2_bool_exp
  ): [student_table_higher_2!]!

  """
  fetch aggregated fields from the table: "student_table_higher_2"
  """
  student_table_higher_2_aggregate(
    """distinct select on columns"""
    distinct_on: [student_table_higher_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_2_order_by!]

    """filter the rows returned"""
    where: student_table_higher_2_bool_exp
  ): student_table_higher_2_aggregate!

  """
  fetch aggregated fields from the table: "student_table_higher"
  """
  student_table_higher_aggregate(
    """distinct select on columns"""
    distinct_on: [student_table_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_table_higher_order_by!]

    """filter the rows returned"""
    where: student_table_higher_bool_exp
  ): student_table_higher_aggregate!

  """
  fetch data from the table: "studentprofiles_cg"
  """
  studentprofiles_cg(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_bool_exp
  ): [studentprofiles_cg!]!

  """
  fetch data from the table: "studentprofiles_cg_2"
  """
  studentprofiles_cg_2(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_2_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_2_bool_exp
  ): [studentprofiles_cg_2!]!

  """
  fetch aggregated fields from the table: "studentprofiles_cg_2"
  """
  studentprofiles_cg_2_aggregate(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_2_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_2_bool_exp
  ): studentprofiles_cg_2_aggregate!

  """
  fetch aggregated fields from the table: "studentprofiles_cg"
  """
  studentprofiles_cg_aggregate(
    """distinct select on columns"""
    distinct_on: [studentprofiles_cg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [studentprofiles_cg_order_by!]

    """filter the rows returned"""
    where: studentprofiles_cg_bool_exp
  ): studentprofiles_cg_aggregate!

  """
  fetch data from the table: "students_present"
  """
  students_present(
    """distinct select on columns"""
    distinct_on: [students_present_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_present_order_by!]

    """filter the rows returned"""
    where: students_present_bool_exp
  ): [students_present!]!

  """
  fetch aggregated fields from the table: "students_present"
  """
  students_present_aggregate(
    """distinct select on columns"""
    distinct_on: [students_present_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_present_order_by!]

    """filter the rows returned"""
    where: students_present_bool_exp
  ): students_present_aggregate!

  """
  fetch data from the table: "subject"
  """
  subject(
    """distinct select on columns"""
    distinct_on: [subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_order_by!]

    """filter the rows returned"""
    where: subject_bool_exp
  ): [subject!]!

  """
  fetch aggregated fields from the table: "subject"
  """
  subject_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_order_by!]

    """filter the rows returned"""
    where: subject_bool_exp
  ): subject_aggregate!

  """fetch data from the table: "subject" using primary key columns"""
  subject_by_pk(id: Int!): subject

  """
  fetch data from the table: "subject_submission"
  """
  subject_submission(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): [subject_submission!]!

  """
  fetch aggregated fields from the table: "subject_submission"
  """
  subject_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_order_by!]

    """filter the rows returned"""
    where: subject_submission_bool_exp
  ): subject_submission_aggregate!

  """
  fetch data from the table: "subject_submission" using primary key columns
  """
  subject_submission_by_pk(id: Int!): subject_submission

  """
  fetch data from the table: "subject_submission_selected_lo"
  """
  subject_submission_selected_lo(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): [subject_submission_selected_lo!]!

  """
  fetch aggregated fields from the table: "subject_submission_selected_lo"
  """
  subject_submission_selected_lo_aggregate(
    """distinct select on columns"""
    distinct_on: [subject_submission_selected_lo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [subject_submission_selected_lo_order_by!]

    """filter the rows returned"""
    where: subject_submission_selected_lo_bool_exp
  ): subject_submission_selected_lo_aggregate!

  """
  fetch data from the table: "subject_submission_selected_lo" using primary key columns
  """
  subject_submission_selected_lo_by_pk(id: Int!): subject_submission_selected_lo

  """
  fetch data from the table: "submission_summary"
  """
  submission_summary(
    """distinct select on columns"""
    distinct_on: [submission_summary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_summary_order_by!]

    """filter the rows returned"""
    where: submission_summary_bool_exp
  ): [submission_summary!]!

  """
  fetch aggregated fields from the table: "submission_summary"
  """
  submission_summary_aggregate(
    """distinct select on columns"""
    distinct_on: [submission_summary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_summary_order_by!]

    """filter the rows returned"""
    where: submission_summary_bool_exp
  ): submission_summary_aggregate!

  """
  fetch data from the table: "submission_summary" using primary key columns
  """
  submission_summary_by_pk(id: Int!): submission_summary

  """
  fetch data from the table: "submission_type"
  """
  submission_type(
    """distinct select on columns"""
    distinct_on: [submission_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_type_order_by!]

    """filter the rows returned"""
    where: submission_type_bool_exp
  ): [submission_type!]!

  """
  fetch aggregated fields from the table: "submission_type"
  """
  submission_type_aggregate(
    """distinct select on columns"""
    distinct_on: [submission_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [submission_type_order_by!]

    """filter the rows returned"""
    where: submission_type_bool_exp
  ): submission_type_aggregate!

  """fetch data from the table: "submission_type" using primary key columns"""
  submission_type_by_pk(id: Int!): submission_type

  """
  fetch data from the table: "teacher"
  """
  teacher(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): [teacher!]!

  """
  fetch aggregated fields from the table: "teacher"
  """
  teacher_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): teacher_aggregate!

  """
  fetch data from the table: "teacher_attendance_status"
  """
  teacher_attendance_status(
    """distinct select on columns"""
    distinct_on: [teacher_attendance_status_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_attendance_status_order_by!]

    """filter the rows returned"""
    where: teacher_attendance_status_bool_exp
  ): [teacher_attendance_status!]!

  """
  fetch aggregated fields from the table: "teacher_attendance_status"
  """
  teacher_attendance_status_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_attendance_status_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_attendance_status_order_by!]

    """filter the rows returned"""
    where: teacher_attendance_status_bool_exp
  ): teacher_attendance_status_aggregate!

  """
  fetch data from the table: "teacher_attendance_status" using primary key columns
  """
  teacher_attendance_status_by_pk(value: String!): teacher_attendance_status

  """fetch data from the table: "teacher" using primary key columns"""
  teacher_by_pk(id: Int!): teacher

  """
  fetch data from the table: "teacher_registration_compliance"
  """
  teacher_registration_compliance(
    """distinct select on columns"""
    distinct_on: [teacher_registration_compliance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_registration_compliance_order_by!]

    """filter the rows returned"""
    where: teacher_registration_compliance_bool_exp
  ): [teacher_registration_compliance!]!

  """
  fetch aggregated fields from the table: "teacher_registration_compliance"
  """
  teacher_registration_compliance_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_registration_compliance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_registration_compliance_order_by!]

    """filter the rows returned"""
    where: teacher_registration_compliance_bool_exp
  ): teacher_registration_compliance_aggregate!

  """
  fetch data from the table: "teacher_registration_compliance" using primary key columns
  """
  teacher_registration_compliance_by_pk(id: Int!, udise: Int!): teacher_registration_compliance

  """An array relationship"""
  teacher_subjects(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): [teacher_subjects!]!

  """An aggregate relationship"""
  teacher_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): teacher_subjects_aggregate!

  """
  fetch data from the table: "teacher_subjects" using primary key columns
  """
  teacher_subjects_by_pk(id: Int!): teacher_subjects

  """
  fetch data from the table: "term1results2021"
  """
  term1results2021(
    """distinct select on columns"""
    distinct_on: [term1results2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021_order_by!]

    """filter the rows returned"""
    where: term1results2021_bool_exp
  ): [term1results2021!]!

  """
  fetch aggregated fields from the table: "term1results2021"
  """
  term1results2021_aggregate(
    """distinct select on columns"""
    distinct_on: [term1results2021_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021_order_by!]

    """filter the rows returned"""
    where: term1results2021_bool_exp
  ): term1results2021_aggregate!

  """
  fetch data from the table: "term1results2021stream"
  """
  term1results2021stream(
    """distinct select on columns"""
    distinct_on: [term1results2021stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021stream_order_by!]

    """filter the rows returned"""
    where: term1results2021stream_bool_exp
  ): [term1results2021stream!]!

  """
  fetch aggregated fields from the table: "term1results2021stream"
  """
  term1results2021stream_aggregate(
    """distinct select on columns"""
    distinct_on: [term1results2021stream_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [term1results2021stream_order_by!]

    """filter the rows returned"""
    where: term1results2021stream_bool_exp
  ): term1results2021stream_aggregate!

  """
  fetch data from the table: "test_ku"
  """
  test_ku(
    """distinct select on columns"""
    distinct_on: [test_ku_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_ku_order_by!]

    """filter the rows returned"""
    where: test_ku_bool_exp
  ): [test_ku!]!

  """
  fetch aggregated fields from the table: "test_ku"
  """
  test_ku_aggregate(
    """distinct select on columns"""
    distinct_on: [test_ku_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_ku_order_by!]

    """filter the rows returned"""
    where: test_ku_bool_exp
  ): test_ku_aggregate!

  """fetch data from the table: "test_ku" using primary key columns"""
  test_ku_by_pk(sss: Int!): test_ku

  """
  fetch data from the table: "test_telemetry"
  """
  test_telemetry(
    """distinct select on columns"""
    distinct_on: [test_telemetry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_telemetry_order_by!]

    """filter the rows returned"""
    where: test_telemetry_bool_exp
  ): [test_telemetry!]!

  """
  fetch aggregated fields from the table: "test_telemetry"
  """
  test_telemetry_aggregate(
    """distinct select on columns"""
    distinct_on: [test_telemetry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [test_telemetry_order_by!]

    """filter the rows returned"""
    where: test_telemetry_bool_exp
  ): test_telemetry_aggregate!

  """fetch data from the table: "test_telemetry" using primary key columns"""
  test_telemetry_by_pk(id: Int!): test_telemetry

  """
  fetch data from the table: "tracking_elem"
  """
  tracking_elem(
    """distinct select on columns"""
    distinct_on: [tracking_elem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_elem_order_by!]

    """filter the rows returned"""
    where: tracking_elem_bool_exp
  ): [tracking_elem!]!

  """
  fetch aggregated fields from the table: "tracking_elem"
  """
  tracking_elem_aggregate(
    """distinct select on columns"""
    distinct_on: [tracking_elem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_elem_order_by!]

    """filter the rows returned"""
    where: tracking_elem_bool_exp
  ): tracking_elem_aggregate!

  """
  fetch data from the table: "tracking_higher"
  """
  tracking_higher(
    """distinct select on columns"""
    distinct_on: [tracking_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_higher_order_by!]

    """filter the rows returned"""
    where: tracking_higher_bool_exp
  ): [tracking_higher!]!

  """
  fetch aggregated fields from the table: "tracking_higher"
  """
  tracking_higher_aggregate(
    """distinct select on columns"""
    distinct_on: [tracking_higher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tracking_higher_order_by!]

    """filter the rows returned"""
    where: tracking_higher_bool_exp
  ): tracking_higher_aggregate!

  """
  fetch data from the table: "unit_bundle"
  """
  unit_bundle(
    """distinct select on columns"""
    distinct_on: [unit_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_order_by!]

    """filter the rows returned"""
    where: unit_bundle_bool_exp
  ): [unit_bundle!]!

  """
  fetch aggregated fields from the table: "unit_bundle"
  """
  unit_bundle_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_bundle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_order_by!]

    """filter the rows returned"""
    where: unit_bundle_bool_exp
  ): unit_bundle_aggregate!

  """fetch data from the table: "unit_bundle" using primary key columns"""
  unit_bundle_by_pk(id: Int!): unit_bundle

  """An array relationship"""
  unit_bundle_units(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): [unit_bundle_units!]!

  """An aggregate relationship"""
  unit_bundle_units_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): unit_bundle_units_aggregate!

  """
  fetch data from the table: "unit_bundle_units" using primary key columns
  """
  unit_bundle_units_by_pk(id: Int!): unit_bundle_units

  """
  fetch data from the table: "unit_submission"
  """
  unit_submission(
    """distinct select on columns"""
    distinct_on: [unit_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_submission_order_by!]

    """filter the rows returned"""
    where: unit_submission_bool_exp
  ): [unit_submission!]!

  """
  fetch aggregated fields from the table: "unit_submission"
  """
  unit_submission_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_submission_order_by!]

    """filter the rows returned"""
    where: unit_submission_bool_exp
  ): unit_submission_aggregate!

  """
  fetch data from the table: "unit_v2"
  """
  unit_v2(
    """distinct select on columns"""
    distinct_on: [unit_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_v2_order_by!]

    """filter the rows returned"""
    where: unit_v2_bool_exp
  ): [unit_v2!]!

  """
  fetch aggregated fields from the table: "unit_v2"
  """
  unit_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_v2_order_by!]

    """filter the rows returned"""
    where: unit_v2_bool_exp
  ): unit_v2_aggregate!

  """fetch data from the table: "unit_v2" using primary key columns"""
  unit_v2_by_pk(id: Int!): unit_v2

  """
  fetch data from the table: "Week 17-24"
  """
  week_17_24(
    """distinct select on columns"""
    distinct_on: [week_17_24_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_17_24_order_by!]

    """filter the rows returned"""
    where: week_17_24_bool_exp
  ): [week_17_24!]!

  """
  fetch aggregated fields from the table: "Week 17-24"
  """
  week_17_24_aggregate(
    """distinct select on columns"""
    distinct_on: [week_17_24_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_17_24_order_by!]

    """filter the rows returned"""
    where: week_17_24_bool_exp
  ): week_17_24_aggregate!

  """
  fetch data from the table: "Week 1-8"
  """
  week_1_8(
    """distinct select on columns"""
    distinct_on: [week_1_8_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_1_8_order_by!]

    """filter the rows returned"""
    where: week_1_8_bool_exp
  ): [week_1_8!]!

  """
  fetch aggregated fields from the table: "Week 1-8"
  """
  week_1_8_aggregate(
    """distinct select on columns"""
    distinct_on: [week_1_8_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_1_8_order_by!]

    """filter the rows returned"""
    where: week_1_8_bool_exp
  ): week_1_8_aggregate!

  """
  fetch data from the table: "Week 9-16"
  """
  week_9_16(
    """distinct select on columns"""
    distinct_on: [week_9_16_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_9_16_order_by!]

    """filter the rows returned"""
    where: week_9_16_bool_exp
  ): [week_9_16!]!

  """
  fetch aggregated fields from the table: "Week 9-16"
  """
  week_9_16_aggregate(
    """distinct select on columns"""
    distinct_on: [week_9_16_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [week_9_16_order_by!]

    """filter the rows returned"""
    where: week_9_16_bool_exp
  ): week_9_16_aggregate!
}

"""
columns and relationships of "system_configuration"
"""
type system_configuration {
  """"""
  data: String!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  report_timezone: String!
}

"""
aggregated selection of "system_configuration"
"""
type system_configuration_aggregate {
  """"""
  aggregate: system_configuration_aggregate_fields

  """"""
  nodes: [system_configuration!]!
}

"""
aggregate fields of "system_configuration"
"""
type system_configuration_aggregate_fields {
  """"""
  avg: system_configuration_avg_fields

  """"""
  count(columns: [system_configuration_select_column!], distinct: Boolean): Int!

  """"""
  max: system_configuration_max_fields

  """"""
  min: system_configuration_min_fields

  """"""
  stddev: system_configuration_stddev_fields

  """"""
  stddev_pop: system_configuration_stddev_pop_fields

  """"""
  stddev_samp: system_configuration_stddev_samp_fields

  """"""
  sum: system_configuration_sum_fields

  """"""
  var_pop: system_configuration_var_pop_fields

  """"""
  var_samp: system_configuration_var_samp_fields

  """"""
  variance: system_configuration_variance_fields
}

"""aggregate avg on columns"""
type system_configuration_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
Boolean expression to filter rows from the table "system_configuration". All fields are combined with a logical 'AND'.
"""
input system_configuration_bool_exp {
  """"""
  _and: [system_configuration_bool_exp!]

  """"""
  _not: system_configuration_bool_exp

  """"""
  _or: [system_configuration_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  report_timezone: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "system_configuration"
"""
input system_configuration_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "system_configuration"
"""
input system_configuration_insert_input {
  """"""
  data: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  report_timezone: String
}

"""aggregate max on columns"""
type system_configuration_max_fields {
  """"""
  data: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  report_timezone: String
}

"""aggregate min on columns"""
type system_configuration_min_fields {
  """"""
  data: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  report_timezone: String
}

"""
response of any mutation on the table "system_configuration"
"""
type system_configuration_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [system_configuration!]!
}

"""Ordering options when selecting data from "system_configuration"."""
input system_configuration_order_by {
  """"""
  data: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  report_timezone: order_by
}

"""
select columns of table "system_configuration"
"""
enum system_configuration_select_column {
  """column name"""
  data

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  report_timezone
}

"""
input type for updating data in table "system_configuration"
"""
input system_configuration_set_input {
  """"""
  data: String

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  report_timezone: String
}

"""aggregate stddev on columns"""
type system_configuration_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_pop on columns"""
type system_configuration_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_samp on columns"""
type system_configuration_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate sum on columns"""
type system_configuration_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""aggregate var_pop on columns"""
type system_configuration_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate var_samp on columns"""
type system_configuration_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate variance on columns"""
type system_configuration_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
columns and relationships of "teacher"
"""
type teacher {
  account_status: String!
  cadre: String!
  created: timestamptz
  deactivation_reason: String
  designation: String
  employment: String
  id: Int!
  joining_date: date
  parent_id: Int
  role: String!

  """An object relationship"""
  school: school
  school_id: Int

  """An object relationship"""
  teacher: teacher

  """An array relationship"""
  teacher_subjects(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): [teacher_subjects!]!

  """An aggregate relationship"""
  teacher_subjects_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_subjects_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_subjects_order_by!]

    """filter the rows returned"""
    where: teacher_subjects_bool_exp
  ): teacher_subjects_aggregate!

  """An array relationship"""
  teachers(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): [teacher!]!

  """An aggregate relationship"""
  teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_order_by!]

    """filter the rows returned"""
    where: teacher_bool_exp
  ): teacher_aggregate!
  updated: timestamptz
  user: users
  user_id: uuid!
}

"""
aggregated selection of "teacher"
"""
type teacher_aggregate {
  aggregate: teacher_aggregate_fields
  nodes: [teacher!]!
}

"""
aggregate fields of "teacher"
"""
type teacher_aggregate_fields {
  avg: teacher_avg_fields
  count(columns: [teacher_select_column!], distinct: Boolean): Int!
  max: teacher_max_fields
  min: teacher_min_fields
  stddev: teacher_stddev_fields
  stddev_pop: teacher_stddev_pop_fields
  stddev_samp: teacher_stddev_samp_fields
  sum: teacher_sum_fields
  var_pop: teacher_var_pop_fields
  var_samp: teacher_var_samp_fields
  variance: teacher_variance_fields
}

"""
order by aggregate values of table "teacher"
"""
input teacher_aggregate_order_by {
  avg: teacher_avg_order_by
  count: order_by
  max: teacher_max_order_by
  min: teacher_min_order_by
  stddev: teacher_stddev_order_by
  stddev_pop: teacher_stddev_pop_order_by
  stddev_samp: teacher_stddev_samp_order_by
  sum: teacher_sum_order_by
  var_pop: teacher_var_pop_order_by
  var_samp: teacher_var_samp_order_by
  variance: teacher_variance_order_by
}

"""
input type for inserting array relation for remote table "teacher"
"""
input teacher_arr_rel_insert_input {
  data: [teacher_insert_input!]!

  """on conflict condition"""
  on_conflict: teacher_on_conflict
}

"""
columns and relationships of "teacher_attendance_status"
"""
type teacher_attendance_status {
  is_present: Int!
  label: String!
  name: String!
  reason_required: Boolean!
  value: String!
}

"""
aggregated selection of "teacher_attendance_status"
"""
type teacher_attendance_status_aggregate {
  aggregate: teacher_attendance_status_aggregate_fields
  nodes: [teacher_attendance_status!]!
}

"""
aggregate fields of "teacher_attendance_status"
"""
type teacher_attendance_status_aggregate_fields {
  avg: teacher_attendance_status_avg_fields
  count(columns: [teacher_attendance_status_select_column!], distinct: Boolean): Int!
  max: teacher_attendance_status_max_fields
  min: teacher_attendance_status_min_fields
  stddev: teacher_attendance_status_stddev_fields
  stddev_pop: teacher_attendance_status_stddev_pop_fields
  stddev_samp: teacher_attendance_status_stddev_samp_fields
  sum: teacher_attendance_status_sum_fields
  var_pop: teacher_attendance_status_var_pop_fields
  var_samp: teacher_attendance_status_var_samp_fields
  variance: teacher_attendance_status_variance_fields
}

"""aggregate avg on columns"""
type teacher_attendance_status_avg_fields {
  is_present: Float
}

"""
Boolean expression to filter rows from the table "teacher_attendance_status". All fields are combined with a logical 'AND'.
"""
input teacher_attendance_status_bool_exp {
  _and: [teacher_attendance_status_bool_exp!]
  _not: teacher_attendance_status_bool_exp
  _or: [teacher_attendance_status_bool_exp!]
  is_present: Int_comparison_exp
  label: String_comparison_exp
  name: String_comparison_exp
  reason_required: Boolean_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "teacher_attendance_status"
"""
enum teacher_attendance_status_constraint {
  """unique or primary key constraint"""
  teacher_attendance_status_pkey
}

"""
input type for incrementing numeric columns in table "teacher_attendance_status"
"""
input teacher_attendance_status_inc_input {
  is_present: Int
}

"""
input type for inserting data into table "teacher_attendance_status"
"""
input teacher_attendance_status_insert_input {
  is_present: Int
  label: String
  name: String
  reason_required: Boolean
  value: String
}

"""aggregate max on columns"""
type teacher_attendance_status_max_fields {
  is_present: Int
  label: String
  name: String
  value: String
}

"""aggregate min on columns"""
type teacher_attendance_status_min_fields {
  is_present: Int
  label: String
  name: String
  value: String
}

"""
response of any mutation on the table "teacher_attendance_status"
"""
type teacher_attendance_status_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [teacher_attendance_status!]!
}

"""
on conflict condition type for table "teacher_attendance_status"
"""
input teacher_attendance_status_on_conflict {
  constraint: teacher_attendance_status_constraint!
  update_columns: [teacher_attendance_status_update_column!]! = []
  where: teacher_attendance_status_bool_exp
}

"""Ordering options when selecting data from "teacher_attendance_status"."""
input teacher_attendance_status_order_by {
  is_present: order_by
  label: order_by
  name: order_by
  reason_required: order_by
  value: order_by
}

"""primary key columns input for table: teacher_attendance_status"""
input teacher_attendance_status_pk_columns_input {
  value: String!
}

"""
select columns of table "teacher_attendance_status"
"""
enum teacher_attendance_status_select_column {
  """column name"""
  is_present

  """column name"""
  label

  """column name"""
  name

  """column name"""
  reason_required

  """column name"""
  value
}

"""
input type for updating data in table "teacher_attendance_status"
"""
input teacher_attendance_status_set_input {
  is_present: Int
  label: String
  name: String
  reason_required: Boolean
  value: String
}

"""aggregate stddev on columns"""
type teacher_attendance_status_stddev_fields {
  is_present: Float
}

"""aggregate stddev_pop on columns"""
type teacher_attendance_status_stddev_pop_fields {
  is_present: Float
}

"""aggregate stddev_samp on columns"""
type teacher_attendance_status_stddev_samp_fields {
  is_present: Float
}

"""aggregate sum on columns"""
type teacher_attendance_status_sum_fields {
  is_present: Int
}

"""
update columns of table "teacher_attendance_status"
"""
enum teacher_attendance_status_update_column {
  """column name"""
  is_present

  """column name"""
  label

  """column name"""
  name

  """column name"""
  reason_required

  """column name"""
  value
}

"""aggregate var_pop on columns"""
type teacher_attendance_status_var_pop_fields {
  is_present: Float
}

"""aggregate var_samp on columns"""
type teacher_attendance_status_var_samp_fields {
  is_present: Float
}

"""aggregate variance on columns"""
type teacher_attendance_status_variance_fields {
  is_present: Float
}

"""aggregate avg on columns"""
type teacher_avg_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by avg() on columns of table "teacher"
"""
input teacher_avg_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "teacher". All fields are combined with a logical 'AND'.
"""
input teacher_bool_exp {
  _and: [teacher_bool_exp!]
  _not: teacher_bool_exp
  _or: [teacher_bool_exp!]
  account_status: String_comparison_exp
  cadre: String_comparison_exp
  created: timestamptz_comparison_exp
  deactivation_reason: String_comparison_exp
  designation: String_comparison_exp
  employment: String_comparison_exp
  id: Int_comparison_exp
  joining_date: date_comparison_exp
  parent_id: Int_comparison_exp
  role: String_comparison_exp
  school: school_bool_exp
  school_id: Int_comparison_exp
  teacher: teacher_bool_exp
  teacher_subjects: teacher_subjects_bool_exp
  teachers: teacher_bool_exp
  updated: timestamptz_comparison_exp
  user_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "teacher"
"""
enum teacher_constraint {
  """unique or primary key constraint"""
  server_teacher_pkey
}

"""
input type for incrementing numeric columns in table "teacher"
"""
input teacher_inc_input {
  id: Int
  parent_id: Int
  school_id: Int
}

"""
input type for inserting data into table "teacher"
"""
input teacher_insert_input {
  account_status: String
  cadre: String
  created: timestamptz
  deactivation_reason: String
  designation: String
  employment: String
  id: Int
  joining_date: date
  parent_id: Int
  role: String
  school: school_obj_rel_insert_input
  school_id: Int
  teacher: teacher_obj_rel_insert_input
  teacher_subjects: teacher_subjects_arr_rel_insert_input
  teachers: teacher_arr_rel_insert_input
  updated: timestamptz
  user_id: uuid
}

"""aggregate max on columns"""
type teacher_max_fields {
  account_status: String
  cadre: String
  created: timestamptz
  deactivation_reason: String
  designation: String
  employment: String
  id: Int
  joining_date: date
  parent_id: Int
  role: String
  school_id: Int
  updated: timestamptz
  user_id: uuid
}

"""
order by max() on columns of table "teacher"
"""
input teacher_max_order_by {
  account_status: order_by
  cadre: order_by
  created: order_by
  deactivation_reason: order_by
  designation: order_by
  employment: order_by
  id: order_by
  joining_date: order_by
  parent_id: order_by
  role: order_by
  school_id: order_by
  updated: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type teacher_min_fields {
  account_status: String
  cadre: String
  created: timestamptz
  deactivation_reason: String
  designation: String
  employment: String
  id: Int
  joining_date: date
  parent_id: Int
  role: String
  school_id: Int
  updated: timestamptz
  user_id: uuid
}

"""
order by min() on columns of table "teacher"
"""
input teacher_min_order_by {
  account_status: order_by
  cadre: order_by
  created: order_by
  deactivation_reason: order_by
  designation: order_by
  employment: order_by
  id: order_by
  joining_date: order_by
  parent_id: order_by
  role: order_by
  school_id: order_by
  updated: order_by
  user_id: order_by
}

"""
response of any mutation on the table "teacher"
"""
type teacher_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [teacher!]!
}

"""
input type for inserting object relation for remote table "teacher"
"""
input teacher_obj_rel_insert_input {
  data: teacher_insert_input!

  """on conflict condition"""
  on_conflict: teacher_on_conflict
}

"""
on conflict condition type for table "teacher"
"""
input teacher_on_conflict {
  constraint: teacher_constraint!
  update_columns: [teacher_update_column!]! = []
  where: teacher_bool_exp
}

"""Ordering options when selecting data from "teacher"."""
input teacher_order_by {
  account_status: order_by
  cadre: order_by
  created: order_by
  deactivation_reason: order_by
  designation: order_by
  employment: order_by
  id: order_by
  joining_date: order_by
  parent_id: order_by
  role: order_by
  school: school_order_by
  school_id: order_by
  teacher: teacher_order_by
  teacher_subjects_aggregate: teacher_subjects_aggregate_order_by
  teachers_aggregate: teacher_aggregate_order_by
  updated: order_by
  user_id: order_by
}

"""primary key columns input for table: teacher"""
input teacher_pk_columns_input {
  id: Int!
}

"""
columns and relationships of "teacher_registration_compliance"
"""
type teacher_registration_compliance {
  id: Int!

  """An object relationship"""
  school: school!
  teachercount: Int!
  udise: Int!
}

"""
aggregated selection of "teacher_registration_compliance"
"""
type teacher_registration_compliance_aggregate {
  aggregate: teacher_registration_compliance_aggregate_fields
  nodes: [teacher_registration_compliance!]!
}

"""
aggregate fields of "teacher_registration_compliance"
"""
type teacher_registration_compliance_aggregate_fields {
  avg: teacher_registration_compliance_avg_fields
  count(columns: [teacher_registration_compliance_select_column!], distinct: Boolean): Int!
  max: teacher_registration_compliance_max_fields
  min: teacher_registration_compliance_min_fields
  stddev: teacher_registration_compliance_stddev_fields
  stddev_pop: teacher_registration_compliance_stddev_pop_fields
  stddev_samp: teacher_registration_compliance_stddev_samp_fields
  sum: teacher_registration_compliance_sum_fields
  var_pop: teacher_registration_compliance_var_pop_fields
  var_samp: teacher_registration_compliance_var_samp_fields
  variance: teacher_registration_compliance_variance_fields
}

"""
order by aggregate values of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_aggregate_order_by {
  avg: teacher_registration_compliance_avg_order_by
  count: order_by
  max: teacher_registration_compliance_max_order_by
  min: teacher_registration_compliance_min_order_by
  stddev: teacher_registration_compliance_stddev_order_by
  stddev_pop: teacher_registration_compliance_stddev_pop_order_by
  stddev_samp: teacher_registration_compliance_stddev_samp_order_by
  sum: teacher_registration_compliance_sum_order_by
  var_pop: teacher_registration_compliance_var_pop_order_by
  var_samp: teacher_registration_compliance_var_samp_order_by
  variance: teacher_registration_compliance_variance_order_by
}

"""
input type for inserting array relation for remote table "teacher_registration_compliance"
"""
input teacher_registration_compliance_arr_rel_insert_input {
  data: [teacher_registration_compliance_insert_input!]!

  """on conflict condition"""
  on_conflict: teacher_registration_compliance_on_conflict
}

"""aggregate avg on columns"""
type teacher_registration_compliance_avg_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by avg() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_avg_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""
Boolean expression to filter rows from the table "teacher_registration_compliance". All fields are combined with a logical 'AND'.
"""
input teacher_registration_compliance_bool_exp {
  _and: [teacher_registration_compliance_bool_exp!]
  _not: teacher_registration_compliance_bool_exp
  _or: [teacher_registration_compliance_bool_exp!]
  id: Int_comparison_exp
  school: school_bool_exp
  teachercount: Int_comparison_exp
  udise: Int_comparison_exp
}

"""
unique or primary key constraints on table "teacher_registration_compliance"
"""
enum teacher_registration_compliance_constraint {
  """unique or primary key constraint"""
  teacher_registration_compliance_pkey
}

"""
input type for incrementing numeric columns in table "teacher_registration_compliance"
"""
input teacher_registration_compliance_inc_input {
  id: Int
  teachercount: Int
  udise: Int
}

"""
input type for inserting data into table "teacher_registration_compliance"
"""
input teacher_registration_compliance_insert_input {
  id: Int
  school: school_obj_rel_insert_input
  teachercount: Int
  udise: Int
}

"""aggregate max on columns"""
type teacher_registration_compliance_max_fields {
  id: Int
  teachercount: Int
  udise: Int
}

"""
order by max() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_max_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""aggregate min on columns"""
type teacher_registration_compliance_min_fields {
  id: Int
  teachercount: Int
  udise: Int
}

"""
order by min() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_min_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""
response of any mutation on the table "teacher_registration_compliance"
"""
type teacher_registration_compliance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [teacher_registration_compliance!]!
}

"""
on conflict condition type for table "teacher_registration_compliance"
"""
input teacher_registration_compliance_on_conflict {
  constraint: teacher_registration_compliance_constraint!
  update_columns: [teacher_registration_compliance_update_column!]! = []
  where: teacher_registration_compliance_bool_exp
}

"""
Ordering options when selecting data from "teacher_registration_compliance".
"""
input teacher_registration_compliance_order_by {
  id: order_by
  school: school_order_by
  teachercount: order_by
  udise: order_by
}

"""primary key columns input for table: teacher_registration_compliance"""
input teacher_registration_compliance_pk_columns_input {
  id: Int!
  udise: Int!
}

"""
select columns of table "teacher_registration_compliance"
"""
enum teacher_registration_compliance_select_column {
  """column name"""
  id

  """column name"""
  teachercount

  """column name"""
  udise
}

"""
input type for updating data in table "teacher_registration_compliance"
"""
input teacher_registration_compliance_set_input {
  id: Int
  teachercount: Int
  udise: Int
}

"""aggregate stddev on columns"""
type teacher_registration_compliance_stddev_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by stddev() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_stddev_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""aggregate stddev_pop on columns"""
type teacher_registration_compliance_stddev_pop_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by stddev_pop() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_stddev_pop_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""aggregate stddev_samp on columns"""
type teacher_registration_compliance_stddev_samp_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by stddev_samp() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_stddev_samp_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""aggregate sum on columns"""
type teacher_registration_compliance_sum_fields {
  id: Int
  teachercount: Int
  udise: Int
}

"""
order by sum() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_sum_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""
update columns of table "teacher_registration_compliance"
"""
enum teacher_registration_compliance_update_column {
  """column name"""
  id

  """column name"""
  teachercount

  """column name"""
  udise
}

"""aggregate var_pop on columns"""
type teacher_registration_compliance_var_pop_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by var_pop() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_var_pop_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""aggregate var_samp on columns"""
type teacher_registration_compliance_var_samp_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by var_samp() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_var_samp_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""aggregate variance on columns"""
type teacher_registration_compliance_variance_fields {
  id: Float
  teachercount: Float
  udise: Float
}

"""
order by variance() on columns of table "teacher_registration_compliance"
"""
input teacher_registration_compliance_variance_order_by {
  id: order_by
  teachercount: order_by
  udise: order_by
}

"""
select columns of table "teacher"
"""
enum teacher_select_column {
  """column name"""
  account_status

  """column name"""
  cadre

  """column name"""
  created

  """column name"""
  deactivation_reason

  """column name"""
  designation

  """column name"""
  employment

  """column name"""
  id

  """column name"""
  joining_date

  """column name"""
  parent_id

  """column name"""
  role

  """column name"""
  school_id

  """column name"""
  updated

  """column name"""
  user_id
}

"""
input type for updating data in table "teacher"
"""
input teacher_set_input {
  account_status: String
  cadre: String
  created: timestamptz
  deactivation_reason: String
  designation: String
  employment: String
  id: Int
  joining_date: date
  parent_id: Int
  role: String
  school_id: Int
  updated: timestamptz
  user_id: uuid
}

"""aggregate stddev on columns"""
type teacher_stddev_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by stddev() on columns of table "teacher"
"""
input teacher_stddev_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type teacher_stddev_pop_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "teacher"
"""
input teacher_stddev_pop_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type teacher_stddev_samp_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "teacher"
"""
input teacher_stddev_samp_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""
columns and relationships of "teacher_subjects"
"""
type teacher_subjects {
  id: Int!

  """An object relationship"""
  subject: subject!
  subject_id: Int!

  """An object relationship"""
  teacher: teacher!
  teacher_id: Int!
}

"""
aggregated selection of "teacher_subjects"
"""
type teacher_subjects_aggregate {
  aggregate: teacher_subjects_aggregate_fields
  nodes: [teacher_subjects!]!
}

"""
aggregate fields of "teacher_subjects"
"""
type teacher_subjects_aggregate_fields {
  avg: teacher_subjects_avg_fields
  count(columns: [teacher_subjects_select_column!], distinct: Boolean): Int!
  max: teacher_subjects_max_fields
  min: teacher_subjects_min_fields
  stddev: teacher_subjects_stddev_fields
  stddev_pop: teacher_subjects_stddev_pop_fields
  stddev_samp: teacher_subjects_stddev_samp_fields
  sum: teacher_subjects_sum_fields
  var_pop: teacher_subjects_var_pop_fields
  var_samp: teacher_subjects_var_samp_fields
  variance: teacher_subjects_variance_fields
}

"""
order by aggregate values of table "teacher_subjects"
"""
input teacher_subjects_aggregate_order_by {
  avg: teacher_subjects_avg_order_by
  count: order_by
  max: teacher_subjects_max_order_by
  min: teacher_subjects_min_order_by
  stddev: teacher_subjects_stddev_order_by
  stddev_pop: teacher_subjects_stddev_pop_order_by
  stddev_samp: teacher_subjects_stddev_samp_order_by
  sum: teacher_subjects_sum_order_by
  var_pop: teacher_subjects_var_pop_order_by
  var_samp: teacher_subjects_var_samp_order_by
  variance: teacher_subjects_variance_order_by
}

"""
input type for inserting array relation for remote table "teacher_subjects"
"""
input teacher_subjects_arr_rel_insert_input {
  data: [teacher_subjects_insert_input!]!

  """on conflict condition"""
  on_conflict: teacher_subjects_on_conflict
}

"""aggregate avg on columns"""
type teacher_subjects_avg_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by avg() on columns of table "teacher_subjects"
"""
input teacher_subjects_avg_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""
Boolean expression to filter rows from the table "teacher_subjects". All fields are combined with a logical 'AND'.
"""
input teacher_subjects_bool_exp {
  _and: [teacher_subjects_bool_exp!]
  _not: teacher_subjects_bool_exp
  _or: [teacher_subjects_bool_exp!]
  id: Int_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  teacher: teacher_bool_exp
  teacher_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "teacher_subjects"
"""
enum teacher_subjects_constraint {
  """unique or primary key constraint"""
  server_teacher_subjects_pkey

  """unique or primary key constraint"""
  server_teacher_subjects_teacher_id_subject_id_3e14a2f9_uniq
}

"""
input type for incrementing numeric columns in table "teacher_subjects"
"""
input teacher_subjects_inc_input {
  id: Int
  subject_id: Int
  teacher_id: Int
}

"""
input type for inserting data into table "teacher_subjects"
"""
input teacher_subjects_insert_input {
  id: Int
  subject: subject_obj_rel_insert_input
  subject_id: Int
  teacher: teacher_obj_rel_insert_input
  teacher_id: Int
}

"""aggregate max on columns"""
type teacher_subjects_max_fields {
  id: Int
  subject_id: Int
  teacher_id: Int
}

"""
order by max() on columns of table "teacher_subjects"
"""
input teacher_subjects_max_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate min on columns"""
type teacher_subjects_min_fields {
  id: Int
  subject_id: Int
  teacher_id: Int
}

"""
order by min() on columns of table "teacher_subjects"
"""
input teacher_subjects_min_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""
response of any mutation on the table "teacher_subjects"
"""
type teacher_subjects_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [teacher_subjects!]!
}

"""
on conflict condition type for table "teacher_subjects"
"""
input teacher_subjects_on_conflict {
  constraint: teacher_subjects_constraint!
  update_columns: [teacher_subjects_update_column!]! = []
  where: teacher_subjects_bool_exp
}

"""Ordering options when selecting data from "teacher_subjects"."""
input teacher_subjects_order_by {
  id: order_by
  subject: subject_order_by
  subject_id: order_by
  teacher: teacher_order_by
  teacher_id: order_by
}

"""primary key columns input for table: teacher_subjects"""
input teacher_subjects_pk_columns_input {
  id: Int!
}

"""
select columns of table "teacher_subjects"
"""
enum teacher_subjects_select_column {
  """column name"""
  id

  """column name"""
  subject_id

  """column name"""
  teacher_id
}

"""
input type for updating data in table "teacher_subjects"
"""
input teacher_subjects_set_input {
  id: Int
  subject_id: Int
  teacher_id: Int
}

"""aggregate stddev on columns"""
type teacher_subjects_stddev_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by stddev() on columns of table "teacher_subjects"
"""
input teacher_subjects_stddev_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate stddev_pop on columns"""
type teacher_subjects_stddev_pop_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by stddev_pop() on columns of table "teacher_subjects"
"""
input teacher_subjects_stddev_pop_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate stddev_samp on columns"""
type teacher_subjects_stddev_samp_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by stddev_samp() on columns of table "teacher_subjects"
"""
input teacher_subjects_stddev_samp_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate sum on columns"""
type teacher_subjects_sum_fields {
  id: Int
  subject_id: Int
  teacher_id: Int
}

"""
order by sum() on columns of table "teacher_subjects"
"""
input teacher_subjects_sum_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""
update columns of table "teacher_subjects"
"""
enum teacher_subjects_update_column {
  """column name"""
  id

  """column name"""
  subject_id

  """column name"""
  teacher_id
}

"""aggregate var_pop on columns"""
type teacher_subjects_var_pop_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by var_pop() on columns of table "teacher_subjects"
"""
input teacher_subjects_var_pop_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate var_samp on columns"""
type teacher_subjects_var_samp_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by var_samp() on columns of table "teacher_subjects"
"""
input teacher_subjects_var_samp_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate variance on columns"""
type teacher_subjects_variance_fields {
  id: Float
  subject_id: Float
  teacher_id: Float
}

"""
order by variance() on columns of table "teacher_subjects"
"""
input teacher_subjects_variance_order_by {
  id: order_by
  subject_id: order_by
  teacher_id: order_by
}

"""aggregate sum on columns"""
type teacher_sum_fields {
  id: Int
  parent_id: Int
  school_id: Int
}

"""
order by sum() on columns of table "teacher"
"""
input teacher_sum_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""
update columns of table "teacher"
"""
enum teacher_update_column {
  """column name"""
  account_status

  """column name"""
  cadre

  """column name"""
  created

  """column name"""
  deactivation_reason

  """column name"""
  designation

  """column name"""
  employment

  """column name"""
  id

  """column name"""
  joining_date

  """column name"""
  parent_id

  """column name"""
  role

  """column name"""
  school_id

  """column name"""
  updated

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type teacher_var_pop_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "teacher"
"""
input teacher_var_pop_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type teacher_var_samp_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "teacher"
"""
input teacher_var_samp_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type teacher_variance_fields {
  id: Float
  parent_id: Float
  school_id: Float
}

"""
order by variance() on columns of table "teacher"
"""
input teacher_variance_order_by {
  id: order_by
  parent_id: order_by
  school_id: order_by
}

"""
columns and relationships of "tenants"
"""
type tenants {
  """"""
  access_token_signing_keys_id: uuid!

  """An array relationship"""
  applications(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): [applications!]!

  """An aggregate relationship"""
  applications_aggregate(
    """distinct select on columns"""
    distinct_on: [applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [applications_order_by!]

    """filter the rows returned"""
    where: applications_bool_exp
  ): applications_aggregate!

  """An array relationship"""
  authentication_keys(
    """distinct select on columns"""
    distinct_on: [authentication_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [authentication_keys_order_by!]

    """filter the rows returned"""
    where: authentication_keys_bool_exp
  ): [authentication_keys!]!

  """An aggregate relationship"""
  authentication_keys_aggregate(
    """distinct select on columns"""
    distinct_on: [authentication_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [authentication_keys_order_by!]

    """filter the rows returned"""
    where: authentication_keys_bool_exp
  ): authentication_keys_aggregate!

  """An array relationship"""
  breached_password_metrics(
    """distinct select on columns"""
    distinct_on: [breached_password_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [breached_password_metrics_order_by!]

    """filter the rows returned"""
    where: breached_password_metrics_bool_exp
  ): [breached_password_metrics!]!

  """An aggregate relationship"""
  breached_password_metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [breached_password_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [breached_password_metrics_order_by!]

    """filter the rows returned"""
    where: breached_password_metrics_bool_exp
  ): breached_password_metrics_aggregate!

  """"""
  confirm_child_email_template_id: uuid

  """An array relationship"""
  connectors_tenants(
    """distinct select on columns"""
    distinct_on: [connectors_tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_tenants_order_by!]

    """filter the rows returned"""
    where: connectors_tenants_bool_exp
  ): [connectors_tenants!]!

  """An aggregate relationship"""
  connectors_tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [connectors_tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [connectors_tenants_order_by!]

    """filter the rows returned"""
    where: connectors_tenants_bool_exp
  ): connectors_tenants_aggregate!

  """"""
  data: String

  """An object relationship"""
  emailTemplateByConfirmChildEmailTemplateId: email_templates!

  """An object relationship"""
  emailTemplateByFamilyRequestEmailTemplateId: email_templates!

  """An object relationship"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateByParentRegistrationEmailTemplateId: email_templates!

  """An object relationship"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateByVerificationEmailTemplatesId: email_templates!

  """An object relationship"""
  email_template: email_templates!

  """An array relationship"""
  external_identifiers(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): [external_identifiers!]!

  """An aggregate relationship"""
  external_identifiers_aggregate(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): external_identifiers_aggregate!

  """"""
  failed_authentication_user_actions_id: uuid

  """An array relationship"""
  failed_logins(
    """distinct select on columns"""
    distinct_on: [failed_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [failed_logins_order_by!]

    """filter the rows returned"""
    where: failed_logins_bool_exp
  ): [failed_logins!]!

  """An aggregate relationship"""
  failed_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [failed_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [failed_logins_order_by!]

    """filter the rows returned"""
    where: failed_logins_bool_exp
  ): failed_logins_aggregate!

  """"""
  family_request_email_template_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """An array relationship"""
  groups(
    """distinct select on columns"""
    distinct_on: [groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [groups_order_by!]

    """filter the rows returned"""
    where: groups_bool_exp
  ): [groups!]!

  """An aggregate relationship"""
  groups_aggregate(
    """distinct select on columns"""
    distinct_on: [groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [groups_order_by!]

    """filter the rows returned"""
    where: groups_bool_exp
  ): groups_aggregate!

  """"""
  id: uuid!

  """"""
  id_token_signing_keys_id: uuid!

  """An array relationship"""
  identities(
    """distinct select on columns"""
    distinct_on: [identities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identities_order_by!]

    """filter the rows returned"""
    where: identities_bool_exp
  ): [identities!]!

  """An aggregate relationship"""
  identities_aggregate(
    """distinct select on columns"""
    distinct_on: [identities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identities_order_by!]

    """filter the rows returned"""
    where: identities_bool_exp
  ): identities_aggregate!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  key: keys!

  """An object relationship"""
  keyByIdTokenSigningKeysId: keys!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """"""
  parent_registration_email_template_id: uuid

  """"""
  passwordless_email_templates_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """An object relationship"""
  theme: themes!

  """"""
  themes_id: uuid!

  """An object relationship"""
  user_action: user_actions!

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """An aggregate relationship"""
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """"""
  verification_email_templates_id: uuid
}

"""
aggregated selection of "tenants"
"""
type tenants_aggregate {
  """"""
  aggregate: tenants_aggregate_fields

  """"""
  nodes: [tenants!]!
}

"""
aggregate fields of "tenants"
"""
type tenants_aggregate_fields {
  """"""
  avg: tenants_avg_fields

  """"""
  count(columns: [tenants_select_column!], distinct: Boolean): Int!

  """"""
  max: tenants_max_fields

  """"""
  min: tenants_min_fields

  """"""
  stddev: tenants_stddev_fields

  """"""
  stddev_pop: tenants_stddev_pop_fields

  """"""
  stddev_samp: tenants_stddev_samp_fields

  """"""
  sum: tenants_sum_fields

  """"""
  var_pop: tenants_var_pop_fields

  """"""
  var_samp: tenants_var_samp_fields

  """"""
  variance: tenants_variance_fields
}

"""
order by aggregate values of table "tenants"
"""
input tenants_aggregate_order_by {
  """"""
  avg: tenants_avg_order_by

  """"""
  count: order_by

  """"""
  max: tenants_max_order_by

  """"""
  min: tenants_min_order_by

  """"""
  stddev: tenants_stddev_order_by

  """"""
  stddev_pop: tenants_stddev_pop_order_by

  """"""
  stddev_samp: tenants_stddev_samp_order_by

  """"""
  sum: tenants_sum_order_by

  """"""
  var_pop: tenants_var_pop_order_by

  """"""
  var_samp: tenants_var_samp_order_by

  """"""
  variance: tenants_variance_order_by
}

"""
input type for inserting array relation for remote table "tenants"
"""
input tenants_arr_rel_insert_input {
  """"""
  data: [tenants_insert_input!]!

  """on conflict condition"""
  on_conflict: tenants_on_conflict
}

"""aggregate avg on columns"""
type tenants_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "tenants"
"""
input tenants_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "tenants". All fields are combined with a logical 'AND'.
"""
input tenants_bool_exp {
  """"""
  _and: [tenants_bool_exp!]

  """"""
  _not: tenants_bool_exp

  """"""
  _or: [tenants_bool_exp!]

  """"""
  access_token_signing_keys_id: uuid_comparison_exp

  """"""
  applications: applications_bool_exp

  """"""
  authentication_keys: authentication_keys_bool_exp

  """"""
  breached_password_metrics: breached_password_metrics_bool_exp

  """"""
  confirm_child_email_template_id: uuid_comparison_exp

  """"""
  connectors_tenants: connectors_tenants_bool_exp

  """"""
  data: String_comparison_exp

  """"""
  emailTemplateByConfirmChildEmailTemplateId: email_templates_bool_exp

  """"""
  emailTemplateByFamilyRequestEmailTemplateId: email_templates_bool_exp

  """"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateByParentRegistrationEmailTemplateId: email_templates_bool_exp

  """"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateByVerificationEmailTemplatesId: email_templates_bool_exp

  """"""
  email_template: email_templates_bool_exp

  """"""
  external_identifiers: external_identifiers_bool_exp

  """"""
  failed_authentication_user_actions_id: uuid_comparison_exp

  """"""
  failed_logins: failed_logins_bool_exp

  """"""
  family_request_email_template_id: uuid_comparison_exp

  """"""
  forgot_password_email_templates_id: uuid_comparison_exp

  """"""
  groups: groups_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  id_token_signing_keys_id: uuid_comparison_exp

  """"""
  identities: identities_bool_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  key: keys_bool_exp

  """"""
  keyByIdTokenSigningKeysId: keys_bool_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  parent_registration_email_template_id: uuid_comparison_exp

  """"""
  passwordless_email_templates_id: uuid_comparison_exp

  """"""
  set_password_email_templates_id: uuid_comparison_exp

  """"""
  theme: themes_bool_exp

  """"""
  themes_id: uuid_comparison_exp

  """"""
  user_action: user_actions_bool_exp

  """"""
  users: users_bool_exp

  """"""
  verification_email_templates_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "tenants"
"""
enum tenants_constraint {
  """unique or primary key constraint"""
  tenants_pkey

  """unique or primary key constraint"""
  tenants_uk_1
}

"""
input type for incrementing numeric columns in table "tenants"
"""
input tenants_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "tenants"
"""
input tenants_insert_input {
  """"""
  access_token_signing_keys_id: uuid

  """"""
  applications: applications_arr_rel_insert_input

  """"""
  authentication_keys: authentication_keys_arr_rel_insert_input

  """"""
  breached_password_metrics: breached_password_metrics_arr_rel_insert_input

  """"""
  confirm_child_email_template_id: uuid

  """"""
  connectors_tenants: connectors_tenants_arr_rel_insert_input

  """"""
  data: String

  """"""
  emailTemplateByConfirmChildEmailTemplateId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByFamilyRequestEmailTemplateId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByParentRegistrationEmailTemplateId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByVerificationEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  email_template: email_templates_obj_rel_insert_input

  """"""
  external_identifiers: external_identifiers_arr_rel_insert_input

  """"""
  failed_authentication_user_actions_id: uuid

  """"""
  failed_logins: failed_logins_arr_rel_insert_input

  """"""
  family_request_email_template_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  groups: groups_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  identities: identities_arr_rel_insert_input

  """"""
  insert_instant: bigint

  """"""
  key: keys_obj_rel_insert_input

  """"""
  keyByIdTokenSigningKeysId: keys_obj_rel_insert_input

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  parent_registration_email_template_id: uuid

  """"""
  passwordless_email_templates_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  theme: themes_obj_rel_insert_input

  """"""
  themes_id: uuid

  """"""
  user_action: user_actions_obj_rel_insert_input

  """"""
  users: users_arr_rel_insert_input

  """"""
  verification_email_templates_id: uuid
}

"""aggregate max on columns"""
type tenants_max_fields {
  """"""
  access_token_signing_keys_id: uuid

  """"""
  confirm_child_email_template_id: uuid

  """"""
  data: String

  """"""
  failed_authentication_user_actions_id: uuid

  """"""
  family_request_email_template_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  parent_registration_email_template_id: uuid

  """"""
  passwordless_email_templates_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  themes_id: uuid

  """"""
  verification_email_templates_id: uuid
}

"""
order by max() on columns of table "tenants"
"""
input tenants_max_order_by {
  """"""
  access_token_signing_keys_id: order_by

  """"""
  confirm_child_email_template_id: order_by

  """"""
  data: order_by

  """"""
  failed_authentication_user_actions_id: order_by

  """"""
  family_request_email_template_id: order_by

  """"""
  forgot_password_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  id_token_signing_keys_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  parent_registration_email_template_id: order_by

  """"""
  passwordless_email_templates_id: order_by

  """"""
  set_password_email_templates_id: order_by

  """"""
  themes_id: order_by

  """"""
  verification_email_templates_id: order_by
}

"""aggregate min on columns"""
type tenants_min_fields {
  """"""
  access_token_signing_keys_id: uuid

  """"""
  confirm_child_email_template_id: uuid

  """"""
  data: String

  """"""
  failed_authentication_user_actions_id: uuid

  """"""
  family_request_email_template_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  parent_registration_email_template_id: uuid

  """"""
  passwordless_email_templates_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  themes_id: uuid

  """"""
  verification_email_templates_id: uuid
}

"""
order by min() on columns of table "tenants"
"""
input tenants_min_order_by {
  """"""
  access_token_signing_keys_id: order_by

  """"""
  confirm_child_email_template_id: order_by

  """"""
  data: order_by

  """"""
  failed_authentication_user_actions_id: order_by

  """"""
  family_request_email_template_id: order_by

  """"""
  forgot_password_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  id_token_signing_keys_id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  parent_registration_email_template_id: order_by

  """"""
  passwordless_email_templates_id: order_by

  """"""
  set_password_email_templates_id: order_by

  """"""
  themes_id: order_by

  """"""
  verification_email_templates_id: order_by
}

"""
response of any mutation on the table "tenants"
"""
type tenants_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [tenants!]!
}

"""
input type for inserting object relation for remote table "tenants"
"""
input tenants_obj_rel_insert_input {
  """"""
  data: tenants_insert_input!

  """on conflict condition"""
  on_conflict: tenants_on_conflict
}

"""
on conflict condition type for table "tenants"
"""
input tenants_on_conflict {
  """"""
  constraint: tenants_constraint!

  """"""
  update_columns: [tenants_update_column!]!

  """"""
  where: tenants_bool_exp
}

"""Ordering options when selecting data from "tenants"."""
input tenants_order_by {
  """"""
  access_token_signing_keys_id: order_by

  """"""
  applications_aggregate: applications_aggregate_order_by

  """"""
  authentication_keys_aggregate: authentication_keys_aggregate_order_by

  """"""
  breached_password_metrics_aggregate: breached_password_metrics_aggregate_order_by

  """"""
  confirm_child_email_template_id: order_by

  """"""
  connectors_tenants_aggregate: connectors_tenants_aggregate_order_by

  """"""
  data: order_by

  """"""
  emailTemplateByConfirmChildEmailTemplateId: email_templates_order_by

  """"""
  emailTemplateByFamilyRequestEmailTemplateId: email_templates_order_by

  """"""
  emailTemplateByForgotPasswordEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateByParentRegistrationEmailTemplateId: email_templates_order_by

  """"""
  emailTemplateBySetPasswordEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateByVerificationEmailTemplatesId: email_templates_order_by

  """"""
  email_template: email_templates_order_by

  """"""
  external_identifiers_aggregate: external_identifiers_aggregate_order_by

  """"""
  failed_authentication_user_actions_id: order_by

  """"""
  failed_logins_aggregate: failed_logins_aggregate_order_by

  """"""
  family_request_email_template_id: order_by

  """"""
  forgot_password_email_templates_id: order_by

  """"""
  groups_aggregate: groups_aggregate_order_by

  """"""
  id: order_by

  """"""
  id_token_signing_keys_id: order_by

  """"""
  identities_aggregate: identities_aggregate_order_by

  """"""
  insert_instant: order_by

  """"""
  key: keys_order_by

  """"""
  keyByIdTokenSigningKeysId: keys_order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  parent_registration_email_template_id: order_by

  """"""
  passwordless_email_templates_id: order_by

  """"""
  set_password_email_templates_id: order_by

  """"""
  theme: themes_order_by

  """"""
  themes_id: order_by

  """"""
  user_action: user_actions_order_by

  """"""
  users_aggregate: users_aggregate_order_by

  """"""
  verification_email_templates_id: order_by
}

"""primary key columns input for table: tenants"""
input tenants_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "tenants"
"""
enum tenants_select_column {
  """column name"""
  access_token_signing_keys_id

  """column name"""
  confirm_child_email_template_id

  """column name"""
  data

  """column name"""
  failed_authentication_user_actions_id

  """column name"""
  family_request_email_template_id

  """column name"""
  forgot_password_email_templates_id

  """column name"""
  id

  """column name"""
  id_token_signing_keys_id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  parent_registration_email_template_id

  """column name"""
  passwordless_email_templates_id

  """column name"""
  set_password_email_templates_id

  """column name"""
  themes_id

  """column name"""
  verification_email_templates_id
}

"""
input type for updating data in table "tenants"
"""
input tenants_set_input {
  """"""
  access_token_signing_keys_id: uuid

  """"""
  confirm_child_email_template_id: uuid

  """"""
  data: String

  """"""
  failed_authentication_user_actions_id: uuid

  """"""
  family_request_email_template_id: uuid

  """"""
  forgot_password_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  id_token_signing_keys_id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  parent_registration_email_template_id: uuid

  """"""
  passwordless_email_templates_id: uuid

  """"""
  set_password_email_templates_id: uuid

  """"""
  themes_id: uuid

  """"""
  verification_email_templates_id: uuid
}

"""aggregate stddev on columns"""
type tenants_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "tenants"
"""
input tenants_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type tenants_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "tenants"
"""
input tenants_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type tenants_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "tenants"
"""
input tenants_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type tenants_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "tenants"
"""
input tenants_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "tenants"
"""
enum tenants_update_column {
  """column name"""
  access_token_signing_keys_id

  """column name"""
  confirm_child_email_template_id

  """column name"""
  data

  """column name"""
  failed_authentication_user_actions_id

  """column name"""
  family_request_email_template_id

  """column name"""
  forgot_password_email_templates_id

  """column name"""
  id

  """column name"""
  id_token_signing_keys_id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name

  """column name"""
  parent_registration_email_template_id

  """column name"""
  passwordless_email_templates_id

  """column name"""
  set_password_email_templates_id

  """column name"""
  themes_id

  """column name"""
  verification_email_templates_id
}

"""aggregate var_pop on columns"""
type tenants_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "tenants"
"""
input tenants_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type tenants_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "tenants"
"""
input tenants_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type tenants_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "tenants"
"""
input tenants_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "term1results2021"
"""
type term1results2021 {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  is_active: Boolean
  is_enabled: Boolean
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  session: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""
aggregated selection of "term1results2021"
"""
type term1results2021_aggregate {
  aggregate: term1results2021_aggregate_fields
  nodes: [term1results2021!]!
}

"""
aggregate fields of "term1results2021"
"""
type term1results2021_aggregate_fields {
  avg: term1results2021_avg_fields
  count(columns: [term1results2021_select_column!], distinct: Boolean): Int!
  max: term1results2021_max_fields
  min: term1results2021_min_fields
  stddev: term1results2021_stddev_fields
  stddev_pop: term1results2021_stddev_pop_fields
  stddev_samp: term1results2021_stddev_samp_fields
  sum: term1results2021_sum_fields
  var_pop: term1results2021_var_pop_fields
  var_samp: term1results2021_var_samp_fields
  variance: term1results2021_variance_fields
}

"""aggregate avg on columns"""
type term1results2021_avg_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "term1results2021". All fields are combined with a logical 'AND'.
"""
input term1results2021_bool_exp {
  _and: [term1results2021_bool_exp!]
  _not: term1results2021_bool_exp
  _or: [term1results2021_bool_exp!]
  assessment_id: Int_comparison_exp
  assessment_percent: float8_comparison_exp
  block: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  form_id: Int_comparison_exp
  grade_number: Int_comparison_exp
  grade_number_2: Int_comparison_exp
  grade_number_3: Int_comparison_exp
  id: Int_comparison_exp
  id_2: Int_comparison_exp
  id_3: Int_comparison_exp
  id_4: Int_comparison_exp
  id_5: Int_comparison_exp
  is_active: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  location_id: Int_comparison_exp
  name: String_comparison_exp
  name_2: String_comparison_exp
  school_id: Int_comparison_exp
  session: String_comparison_exp
  student_id: Int_comparison_exp
  subject_id: Int_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "term1results2021"
"""
input term1results2021_inc_input {
  assessment_id: Int
  assessment_percent: float8
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  school_id: Int
  student_id: Int
  subject_id: Int
  udise: Int
}

"""
input type for inserting data into table "term1results2021"
"""
input term1results2021_insert_input {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  is_active: Boolean
  is_enabled: Boolean
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  session: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""aggregate max on columns"""
type term1results2021_max_fields {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  session: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""aggregate min on columns"""
type term1results2021_min_fields {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  session: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""
response of any mutation on the table "term1results2021"
"""
type term1results2021_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [term1results2021!]!
}

"""Ordering options when selecting data from "term1results2021"."""
input term1results2021_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  block: order_by
  cluster: order_by
  district: order_by
  form_id: order_by
  grade_number: order_by
  grade_number_2: order_by
  grade_number_3: order_by
  id: order_by
  id_2: order_by
  id_3: order_by
  id_4: order_by
  id_5: order_by
  is_active: order_by
  is_enabled: order_by
  location_id: order_by
  name: order_by
  name_2: order_by
  school_id: order_by
  session: order_by
  student_id: order_by
  subject_id: order_by
  type: order_by
  udise: order_by
}

"""
select columns of table "term1results2021"
"""
enum term1results2021_select_column {
  """column name"""
  assessment_id

  """column name"""
  assessment_percent

  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  form_id

  """column name"""
  grade_number

  """column name"""
  grade_number_2

  """column name"""
  grade_number_3

  """column name"""
  id

  """column name"""
  id_2

  """column name"""
  id_3

  """column name"""
  id_4

  """column name"""
  id_5

  """column name"""
  is_active

  """column name"""
  is_enabled

  """column name"""
  location_id

  """column name"""
  name

  """column name"""
  name_2

  """column name"""
  school_id

  """column name"""
  session

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "term1results2021"
"""
input term1results2021_set_input {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  is_active: Boolean
  is_enabled: Boolean
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  session: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type term1results2021_stddev_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type term1results2021_stddev_pop_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type term1results2021_stddev_samp_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type term1results2021_sum_fields {
  assessment_id: Int
  assessment_percent: float8
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  school_id: Int
  student_id: Int
  subject_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type term1results2021_var_pop_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type term1results2021_var_samp_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type term1results2021_variance_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""
columns and relationships of "term1results2021stream"
"""
type term1results2021stream {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  is_active: Boolean
  is_enabled: Boolean
  is_enabled_2: Boolean
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  school_id_2: Int
  session: String
  stream_tag: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""
aggregated selection of "term1results2021stream"
"""
type term1results2021stream_aggregate {
  aggregate: term1results2021stream_aggregate_fields
  nodes: [term1results2021stream!]!
}

"""
aggregate fields of "term1results2021stream"
"""
type term1results2021stream_aggregate_fields {
  avg: term1results2021stream_avg_fields
  count(columns: [term1results2021stream_select_column!], distinct: Boolean): Int!
  max: term1results2021stream_max_fields
  min: term1results2021stream_min_fields
  stddev: term1results2021stream_stddev_fields
  stddev_pop: term1results2021stream_stddev_pop_fields
  stddev_samp: term1results2021stream_stddev_samp_fields
  sum: term1results2021stream_sum_fields
  var_pop: term1results2021stream_var_pop_fields
  var_samp: term1results2021stream_var_samp_fields
  variance: term1results2021stream_variance_fields
}

"""aggregate avg on columns"""
type term1results2021stream_avg_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "term1results2021stream". All fields are combined with a logical 'AND'.
"""
input term1results2021stream_bool_exp {
  _and: [term1results2021stream_bool_exp!]
  _not: term1results2021stream_bool_exp
  _or: [term1results2021stream_bool_exp!]
  assessment_id: Int_comparison_exp
  assessment_percent: float8_comparison_exp
  block: String_comparison_exp
  cluster: String_comparison_exp
  district: String_comparison_exp
  form_id: Int_comparison_exp
  grade_number: Int_comparison_exp
  grade_number_2: Int_comparison_exp
  grade_number_2_2: Int_comparison_exp
  grade_number_3: Int_comparison_exp
  id: Int_comparison_exp
  id_2: Int_comparison_exp
  id_2_2: Int_comparison_exp
  id_3: Int_comparison_exp
  id_4: Int_comparison_exp
  id_5: Int_comparison_exp
  is_active: Boolean_comparison_exp
  is_enabled: Boolean_comparison_exp
  is_enabled_2: Boolean_comparison_exp
  location_id: Int_comparison_exp
  name: String_comparison_exp
  name_2: String_comparison_exp
  school_id: Int_comparison_exp
  school_id_2: Int_comparison_exp
  session: String_comparison_exp
  stream_tag: String_comparison_exp
  student_id: Int_comparison_exp
  subject_id: Int_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "term1results2021stream"
"""
input term1results2021stream_inc_input {
  assessment_id: Int
  assessment_percent: float8
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  school_id: Int
  school_id_2: Int
  student_id: Int
  subject_id: Int
  udise: Int
}

"""
input type for inserting data into table "term1results2021stream"
"""
input term1results2021stream_insert_input {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  is_active: Boolean
  is_enabled: Boolean
  is_enabled_2: Boolean
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  school_id_2: Int
  session: String
  stream_tag: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""aggregate max on columns"""
type term1results2021stream_max_fields {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  school_id_2: Int
  session: String
  stream_tag: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""aggregate min on columns"""
type term1results2021stream_min_fields {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  school_id_2: Int
  session: String
  stream_tag: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""
response of any mutation on the table "term1results2021stream"
"""
type term1results2021stream_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [term1results2021stream!]!
}

"""Ordering options when selecting data from "term1results2021stream"."""
input term1results2021stream_order_by {
  assessment_id: order_by
  assessment_percent: order_by
  block: order_by
  cluster: order_by
  district: order_by
  form_id: order_by
  grade_number: order_by
  grade_number_2: order_by
  grade_number_2_2: order_by
  grade_number_3: order_by
  id: order_by
  id_2: order_by
  id_2_2: order_by
  id_3: order_by
  id_4: order_by
  id_5: order_by
  is_active: order_by
  is_enabled: order_by
  is_enabled_2: order_by
  location_id: order_by
  name: order_by
  name_2: order_by
  school_id: order_by
  school_id_2: order_by
  session: order_by
  stream_tag: order_by
  student_id: order_by
  subject_id: order_by
  type: order_by
  udise: order_by
}

"""
select columns of table "term1results2021stream"
"""
enum term1results2021stream_select_column {
  """column name"""
  assessment_id

  """column name"""
  assessment_percent

  """column name"""
  block

  """column name"""
  cluster

  """column name"""
  district

  """column name"""
  form_id

  """column name"""
  grade_number

  """column name"""
  grade_number_2

  """column name"""
  grade_number_2_2

  """column name"""
  grade_number_3

  """column name"""
  id

  """column name"""
  id_2

  """column name"""
  id_2_2

  """column name"""
  id_3

  """column name"""
  id_4

  """column name"""
  id_5

  """column name"""
  is_active

  """column name"""
  is_enabled

  """column name"""
  is_enabled_2

  """column name"""
  location_id

  """column name"""
  name

  """column name"""
  name_2

  """column name"""
  school_id

  """column name"""
  school_id_2

  """column name"""
  session

  """column name"""
  stream_tag

  """column name"""
  student_id

  """column name"""
  subject_id

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "term1results2021stream"
"""
input term1results2021stream_set_input {
  assessment_id: Int
  assessment_percent: float8
  block: String
  cluster: String
  district: String
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  is_active: Boolean
  is_enabled: Boolean
  is_enabled_2: Boolean
  location_id: Int
  name: String
  name_2: String
  school_id: Int
  school_id_2: Int
  session: String
  stream_tag: String
  student_id: Int
  subject_id: Int
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type term1results2021stream_stddev_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type term1results2021stream_stddev_pop_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type term1results2021stream_stddev_samp_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate sum on columns"""
type term1results2021stream_sum_fields {
  assessment_id: Int
  assessment_percent: float8
  form_id: Int
  grade_number: Int
  grade_number_2: Int
  grade_number_2_2: Int
  grade_number_3: Int
  id: Int
  id_2: Int
  id_2_2: Int
  id_3: Int
  id_4: Int
  id_5: Int
  location_id: Int
  school_id: Int
  school_id_2: Int
  student_id: Int
  subject_id: Int
  udise: Int
}

"""aggregate var_pop on columns"""
type term1results2021stream_var_pop_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type term1results2021stream_var_samp_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""aggregate variance on columns"""
type term1results2021stream_variance_fields {
  assessment_id: Float
  assessment_percent: Float
  form_id: Float
  grade_number: Float
  grade_number_2: Float
  grade_number_2_2: Float
  grade_number_3: Float
  id: Float
  id_2: Float
  id_2_2: Float
  id_3: Float
  id_4: Float
  id_5: Float
  location_id: Float
  school_id: Float
  school_id_2: Float
  student_id: Float
  subject_id: Float
  udise: Float
}

"""
columns and relationships of "test_ku"
"""
type test_ku {
  sss: Int!
}

"""
aggregated selection of "test_ku"
"""
type test_ku_aggregate {
  aggregate: test_ku_aggregate_fields
  nodes: [test_ku!]!
}

"""
aggregate fields of "test_ku"
"""
type test_ku_aggregate_fields {
  avg: test_ku_avg_fields
  count(columns: [test_ku_select_column!], distinct: Boolean): Int!
  max: test_ku_max_fields
  min: test_ku_min_fields
  stddev: test_ku_stddev_fields
  stddev_pop: test_ku_stddev_pop_fields
  stddev_samp: test_ku_stddev_samp_fields
  sum: test_ku_sum_fields
  var_pop: test_ku_var_pop_fields
  var_samp: test_ku_var_samp_fields
  variance: test_ku_variance_fields
}

"""aggregate avg on columns"""
type test_ku_avg_fields {
  sss: Float
}

"""
Boolean expression to filter rows from the table "test_ku". All fields are combined with a logical 'AND'.
"""
input test_ku_bool_exp {
  _and: [test_ku_bool_exp!]
  _not: test_ku_bool_exp
  _or: [test_ku_bool_exp!]
  sss: Int_comparison_exp
}

"""
unique or primary key constraints on table "test_ku"
"""
enum test_ku_constraint {
  """unique or primary key constraint"""
  test_ku_pkey
}

"""
input type for incrementing numeric columns in table "test_ku"
"""
input test_ku_inc_input {
  sss: Int
}

"""
input type for inserting data into table "test_ku"
"""
input test_ku_insert_input {
  sss: Int
}

"""aggregate max on columns"""
type test_ku_max_fields {
  sss: Int
}

"""aggregate min on columns"""
type test_ku_min_fields {
  sss: Int
}

"""
response of any mutation on the table "test_ku"
"""
type test_ku_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [test_ku!]!
}

"""
on conflict condition type for table "test_ku"
"""
input test_ku_on_conflict {
  constraint: test_ku_constraint!
  update_columns: [test_ku_update_column!]! = []
  where: test_ku_bool_exp
}

"""Ordering options when selecting data from "test_ku"."""
input test_ku_order_by {
  sss: order_by
}

"""primary key columns input for table: test_ku"""
input test_ku_pk_columns_input {
  sss: Int!
}

"""
select columns of table "test_ku"
"""
enum test_ku_select_column {
  """column name"""
  sss
}

"""
input type for updating data in table "test_ku"
"""
input test_ku_set_input {
  sss: Int
}

"""aggregate stddev on columns"""
type test_ku_stddev_fields {
  sss: Float
}

"""aggregate stddev_pop on columns"""
type test_ku_stddev_pop_fields {
  sss: Float
}

"""aggregate stddev_samp on columns"""
type test_ku_stddev_samp_fields {
  sss: Float
}

"""aggregate sum on columns"""
type test_ku_sum_fields {
  sss: Int
}

"""
update columns of table "test_ku"
"""
enum test_ku_update_column {
  """column name"""
  sss
}

"""aggregate var_pop on columns"""
type test_ku_var_pop_fields {
  sss: Float
}

"""aggregate var_samp on columns"""
type test_ku_var_samp_fields {
  sss: Float
}

"""aggregate variance on columns"""
type test_ku_variance_fields {
  sss: Float
}

"""
columns and relationships of "test_telemetry"
"""
type test_telemetry {
  id: Int!
  telemetry_object(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
aggregated selection of "test_telemetry"
"""
type test_telemetry_aggregate {
  aggregate: test_telemetry_aggregate_fields
  nodes: [test_telemetry!]!
}

"""
aggregate fields of "test_telemetry"
"""
type test_telemetry_aggregate_fields {
  avg: test_telemetry_avg_fields
  count(columns: [test_telemetry_select_column!], distinct: Boolean): Int!
  max: test_telemetry_max_fields
  min: test_telemetry_min_fields
  stddev: test_telemetry_stddev_fields
  stddev_pop: test_telemetry_stddev_pop_fields
  stddev_samp: test_telemetry_stddev_samp_fields
  sum: test_telemetry_sum_fields
  var_pop: test_telemetry_var_pop_fields
  var_samp: test_telemetry_var_samp_fields
  variance: test_telemetry_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input test_telemetry_append_input {
  telemetry_object: jsonb
}

"""aggregate avg on columns"""
type test_telemetry_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "test_telemetry". All fields are combined with a logical 'AND'.
"""
input test_telemetry_bool_exp {
  _and: [test_telemetry_bool_exp!]
  _not: test_telemetry_bool_exp
  _or: [test_telemetry_bool_exp!]
  id: Int_comparison_exp
  telemetry_object: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "test_telemetry"
"""
enum test_telemetry_constraint {
  """unique or primary key constraint"""
  test_telemetry_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input test_telemetry_delete_at_path_input {
  telemetry_object: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input test_telemetry_delete_elem_input {
  telemetry_object: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input test_telemetry_delete_key_input {
  telemetry_object: String
}

"""
input type for incrementing numeric columns in table "test_telemetry"
"""
input test_telemetry_inc_input {
  id: Int
}

"""
input type for inserting data into table "test_telemetry"
"""
input test_telemetry_insert_input {
  id: Int
  telemetry_object: jsonb
}

"""aggregate max on columns"""
type test_telemetry_max_fields {
  id: Int
}

"""aggregate min on columns"""
type test_telemetry_min_fields {
  id: Int
}

"""
response of any mutation on the table "test_telemetry"
"""
type test_telemetry_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [test_telemetry!]!
}

"""
on conflict condition type for table "test_telemetry"
"""
input test_telemetry_on_conflict {
  constraint: test_telemetry_constraint!
  update_columns: [test_telemetry_update_column!]! = []
  where: test_telemetry_bool_exp
}

"""Ordering options when selecting data from "test_telemetry"."""
input test_telemetry_order_by {
  id: order_by
  telemetry_object: order_by
}

"""primary key columns input for table: test_telemetry"""
input test_telemetry_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input test_telemetry_prepend_input {
  telemetry_object: jsonb
}

"""
select columns of table "test_telemetry"
"""
enum test_telemetry_select_column {
  """column name"""
  id

  """column name"""
  telemetry_object
}

"""
input type for updating data in table "test_telemetry"
"""
input test_telemetry_set_input {
  id: Int
  telemetry_object: jsonb
}

"""aggregate stddev on columns"""
type test_telemetry_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type test_telemetry_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type test_telemetry_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type test_telemetry_sum_fields {
  id: Int
}

"""
update columns of table "test_telemetry"
"""
enum test_telemetry_update_column {
  """column name"""
  id

  """column name"""
  telemetry_object
}

"""aggregate var_pop on columns"""
type test_telemetry_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type test_telemetry_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type test_telemetry_variance_fields {
  id: Float
}

"""
columns and relationships of "themes"
"""
type themes {
  """"""
  data: String!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  name: String!

  """An array relationship"""
  tenants(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!
}

"""
aggregated selection of "themes"
"""
type themes_aggregate {
  """"""
  aggregate: themes_aggregate_fields

  """"""
  nodes: [themes!]!
}

"""
aggregate fields of "themes"
"""
type themes_aggregate_fields {
  """"""
  avg: themes_avg_fields

  """"""
  count(columns: [themes_select_column!], distinct: Boolean): Int!

  """"""
  max: themes_max_fields

  """"""
  min: themes_min_fields

  """"""
  stddev: themes_stddev_fields

  """"""
  stddev_pop: themes_stddev_pop_fields

  """"""
  stddev_samp: themes_stddev_samp_fields

  """"""
  sum: themes_sum_fields

  """"""
  var_pop: themes_var_pop_fields

  """"""
  var_samp: themes_var_samp_fields

  """"""
  variance: themes_variance_fields
}

"""aggregate avg on columns"""
type themes_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
Boolean expression to filter rows from the table "themes". All fields are combined with a logical 'AND'.
"""
input themes_bool_exp {
  """"""
  _and: [themes_bool_exp!]

  """"""
  _not: themes_bool_exp

  """"""
  _or: [themes_bool_exp!]

  """"""
  data: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  tenants: tenants_bool_exp
}

"""
unique or primary key constraints on table "themes"
"""
enum themes_constraint {
  """unique or primary key constraint"""
  themes_pkey

  """unique or primary key constraint"""
  themes_uk_1
}

"""
input type for incrementing numeric columns in table "themes"
"""
input themes_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "themes"
"""
input themes_insert_input {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String

  """"""
  tenants: tenants_arr_rel_insert_input
}

"""aggregate max on columns"""
type themes_max_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate min on columns"""
type themes_min_fields {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""
response of any mutation on the table "themes"
"""
type themes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [themes!]!
}

"""
input type for inserting object relation for remote table "themes"
"""
input themes_obj_rel_insert_input {
  """"""
  data: themes_insert_input!

  """on conflict condition"""
  on_conflict: themes_on_conflict
}

"""
on conflict condition type for table "themes"
"""
input themes_on_conflict {
  """"""
  constraint: themes_constraint!

  """"""
  update_columns: [themes_update_column!]!

  """"""
  where: themes_bool_exp
}

"""Ordering options when selecting data from "themes"."""
input themes_order_by {
  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  name: order_by

  """"""
  tenants_aggregate: tenants_aggregate_order_by
}

"""primary key columns input for table: themes"""
input themes_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "themes"
"""
enum themes_select_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""
input type for updating data in table "themes"
"""
input themes_set_input {
  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  name: String
}

"""aggregate stddev on columns"""
type themes_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_pop on columns"""
type themes_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_samp on columns"""
type themes_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate sum on columns"""
type themes_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
update columns of table "themes"
"""
enum themes_update_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type themes_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate var_samp on columns"""
type themes_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate variance on columns"""
type themes_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "tracking_elem"
"""
type tracking_elem {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""
aggregated selection of "tracking_elem"
"""
type tracking_elem_aggregate {
  aggregate: tracking_elem_aggregate_fields
  nodes: [tracking_elem!]!
}

"""
aggregate fields of "tracking_elem"
"""
type tracking_elem_aggregate_fields {
  avg: tracking_elem_avg_fields
  count(columns: [tracking_elem_select_column!], distinct: Boolean): Int!
  max: tracking_elem_max_fields
  min: tracking_elem_min_fields
  stddev: tracking_elem_stddev_fields
  stddev_pop: tracking_elem_stddev_pop_fields
  stddev_samp: tracking_elem_stddev_samp_fields
  sum: tracking_elem_sum_fields
  var_pop: tracking_elem_var_pop_fields
  var_samp: tracking_elem_var_samp_fields
  variance: tracking_elem_variance_fields
}

"""aggregate avg on columns"""
type tracking_elem_avg_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "tracking_elem". All fields are combined with a logical 'AND'.
"""
input tracking_elem_bool_exp {
  _and: [tracking_elem_bool_exp!]
  _not: tracking_elem_bool_exp
  _or: [tracking_elem_bool_exp!]
  school_id: Int_comparison_exp
  submitted_elem: float8_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "tracking_elem"
"""
input tracking_elem_inc_input {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""
input type for inserting data into table "tracking_elem"
"""
input tracking_elem_insert_input {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""aggregate max on columns"""
type tracking_elem_max_fields {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""aggregate min on columns"""
type tracking_elem_min_fields {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""
response of any mutation on the table "tracking_elem"
"""
type tracking_elem_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [tracking_elem!]!
}

"""Ordering options when selecting data from "tracking_elem"."""
input tracking_elem_order_by {
  school_id: order_by
  submitted_elem: order_by
  udise: order_by
}

"""
select columns of table "tracking_elem"
"""
enum tracking_elem_select_column {
  """column name"""
  school_id

  """column name"""
  submitted_elem

  """column name"""
  udise
}

"""
input type for updating data in table "tracking_elem"
"""
input tracking_elem_set_input {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""aggregate stddev on columns"""
type tracking_elem_stddev_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type tracking_elem_stddev_pop_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type tracking_elem_stddev_samp_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""aggregate sum on columns"""
type tracking_elem_sum_fields {
  school_id: Int
  submitted_elem: float8
  udise: Int
}

"""aggregate var_pop on columns"""
type tracking_elem_var_pop_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type tracking_elem_var_samp_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""aggregate variance on columns"""
type tracking_elem_variance_fields {
  school_id: Float
  submitted_elem: Float
  udise: Float
}

"""
columns and relationships of "tracking_higher"
"""
type tracking_higher {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""
aggregated selection of "tracking_higher"
"""
type tracking_higher_aggregate {
  aggregate: tracking_higher_aggregate_fields
  nodes: [tracking_higher!]!
}

"""
aggregate fields of "tracking_higher"
"""
type tracking_higher_aggregate_fields {
  avg: tracking_higher_avg_fields
  count(columns: [tracking_higher_select_column!], distinct: Boolean): Int!
  max: tracking_higher_max_fields
  min: tracking_higher_min_fields
  stddev: tracking_higher_stddev_fields
  stddev_pop: tracking_higher_stddev_pop_fields
  stddev_samp: tracking_higher_stddev_samp_fields
  sum: tracking_higher_sum_fields
  var_pop: tracking_higher_var_pop_fields
  var_samp: tracking_higher_var_samp_fields
  variance: tracking_higher_variance_fields
}

"""aggregate avg on columns"""
type tracking_higher_avg_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "tracking_higher". All fields are combined with a logical 'AND'.
"""
input tracking_higher_bool_exp {
  _and: [tracking_higher_bool_exp!]
  _not: tracking_higher_bool_exp
  _or: [tracking_higher_bool_exp!]
  school_id: Int_comparison_exp
  submitted_higher: float8_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "tracking_higher"
"""
input tracking_higher_inc_input {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""
input type for inserting data into table "tracking_higher"
"""
input tracking_higher_insert_input {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""aggregate max on columns"""
type tracking_higher_max_fields {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""aggregate min on columns"""
type tracking_higher_min_fields {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""
response of any mutation on the table "tracking_higher"
"""
type tracking_higher_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [tracking_higher!]!
}

"""Ordering options when selecting data from "tracking_higher"."""
input tracking_higher_order_by {
  school_id: order_by
  submitted_higher: order_by
  udise: order_by
}

"""
select columns of table "tracking_higher"
"""
enum tracking_higher_select_column {
  """column name"""
  school_id

  """column name"""
  submitted_higher

  """column name"""
  udise
}

"""
input type for updating data in table "tracking_higher"
"""
input tracking_higher_set_input {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""aggregate stddev on columns"""
type tracking_higher_stddev_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type tracking_higher_stddev_pop_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type tracking_higher_stddev_samp_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""aggregate sum on columns"""
type tracking_higher_sum_fields {
  school_id: Int
  submitted_higher: float8
  udise: Int
}

"""aggregate var_pop on columns"""
type tracking_higher_var_pop_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type tracking_higher_var_samp_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""aggregate variance on columns"""
type tracking_higher_variance_fields {
  school_id: Float
  submitted_higher: Float
  udise: Float
}

"""
columns and relationships of "unit_bundle"
"""
type unit_bundle {
  """An array relationship"""
  assessment_unit_bundles(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): [assessment_unit_bundles!]!

  """An aggregate relationship"""
  assessment_unit_bundles_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_bundles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_bundles_order_by!]

    """filter the rows returned"""
    where: assessment_unit_bundles_bool_exp
  ): assessment_unit_bundles_aggregate!
  cache(
    """JSON select path"""
    path: String
  ): jsonb
  created: timestamptz
  desc: String!
  id: Int!
  name: String!

  """An array relationship"""
  unit_bundle_units(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): [unit_bundle_units!]!

  """An aggregate relationship"""
  unit_bundle_units_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): unit_bundle_units_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "unit_bundle"
"""
type unit_bundle_aggregate {
  aggregate: unit_bundle_aggregate_fields
  nodes: [unit_bundle!]!
}

"""
aggregate fields of "unit_bundle"
"""
type unit_bundle_aggregate_fields {
  avg: unit_bundle_avg_fields
  count(columns: [unit_bundle_select_column!], distinct: Boolean): Int!
  max: unit_bundle_max_fields
  min: unit_bundle_min_fields
  stddev: unit_bundle_stddev_fields
  stddev_pop: unit_bundle_stddev_pop_fields
  stddev_samp: unit_bundle_stddev_samp_fields
  sum: unit_bundle_sum_fields
  var_pop: unit_bundle_var_pop_fields
  var_samp: unit_bundle_var_samp_fields
  variance: unit_bundle_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input unit_bundle_append_input {
  cache: jsonb
}

"""aggregate avg on columns"""
type unit_bundle_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "unit_bundle". All fields are combined with a logical 'AND'.
"""
input unit_bundle_bool_exp {
  _and: [unit_bundle_bool_exp!]
  _not: unit_bundle_bool_exp
  _or: [unit_bundle_bool_exp!]
  assessment_unit_bundles: assessment_unit_bundles_bool_exp
  cache: jsonb_comparison_exp
  created: timestamptz_comparison_exp
  desc: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  unit_bundle_units: unit_bundle_units_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "unit_bundle"
"""
enum unit_bundle_constraint {
  """unique or primary key constraint"""
  unit_bundle_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input unit_bundle_delete_at_path_input {
  cache: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input unit_bundle_delete_elem_input {
  cache: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input unit_bundle_delete_key_input {
  cache: String
}

"""
input type for incrementing numeric columns in table "unit_bundle"
"""
input unit_bundle_inc_input {
  id: Int
}

"""
input type for inserting data into table "unit_bundle"
"""
input unit_bundle_insert_input {
  assessment_unit_bundles: assessment_unit_bundles_arr_rel_insert_input
  cache: jsonb
  created: timestamptz
  desc: String
  id: Int
  name: String
  unit_bundle_units: unit_bundle_units_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type unit_bundle_max_fields {
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate min on columns"""
type unit_bundle_min_fields {
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""
response of any mutation on the table "unit_bundle"
"""
type unit_bundle_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [unit_bundle!]!
}

"""
input type for inserting object relation for remote table "unit_bundle"
"""
input unit_bundle_obj_rel_insert_input {
  data: unit_bundle_insert_input!

  """on conflict condition"""
  on_conflict: unit_bundle_on_conflict
}

"""
on conflict condition type for table "unit_bundle"
"""
input unit_bundle_on_conflict {
  constraint: unit_bundle_constraint!
  update_columns: [unit_bundle_update_column!]! = []
  where: unit_bundle_bool_exp
}

"""Ordering options when selecting data from "unit_bundle"."""
input unit_bundle_order_by {
  assessment_unit_bundles_aggregate: assessment_unit_bundles_aggregate_order_by
  cache: order_by
  created: order_by
  desc: order_by
  id: order_by
  name: order_by
  unit_bundle_units_aggregate: unit_bundle_units_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: unit_bundle"""
input unit_bundle_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input unit_bundle_prepend_input {
  cache: jsonb
}

"""
select columns of table "unit_bundle"
"""
enum unit_bundle_select_column {
  """column name"""
  cache

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""
input type for updating data in table "unit_bundle"
"""
input unit_bundle_set_input {
  cache: jsonb
  created: timestamptz
  desc: String
  id: Int
  name: String
  updated: timestamptz
}

"""aggregate stddev on columns"""
type unit_bundle_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type unit_bundle_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type unit_bundle_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type unit_bundle_sum_fields {
  id: Int
}

"""
columns and relationships of "unit_bundle_units"
"""
type unit_bundle_units {
  id: Int!

  """An object relationship"""
  unit_bundle: unit_bundle!

  """An object relationship"""
  unit_v2: unit_v2!
  unit_v2_id: Int!
  unitbundle_id: Int!
}

"""
aggregated selection of "unit_bundle_units"
"""
type unit_bundle_units_aggregate {
  aggregate: unit_bundle_units_aggregate_fields
  nodes: [unit_bundle_units!]!
}

"""
aggregate fields of "unit_bundle_units"
"""
type unit_bundle_units_aggregate_fields {
  avg: unit_bundle_units_avg_fields
  count(columns: [unit_bundle_units_select_column!], distinct: Boolean): Int!
  max: unit_bundle_units_max_fields
  min: unit_bundle_units_min_fields
  stddev: unit_bundle_units_stddev_fields
  stddev_pop: unit_bundle_units_stddev_pop_fields
  stddev_samp: unit_bundle_units_stddev_samp_fields
  sum: unit_bundle_units_sum_fields
  var_pop: unit_bundle_units_var_pop_fields
  var_samp: unit_bundle_units_var_samp_fields
  variance: unit_bundle_units_variance_fields
}

"""
order by aggregate values of table "unit_bundle_units"
"""
input unit_bundle_units_aggregate_order_by {
  avg: unit_bundle_units_avg_order_by
  count: order_by
  max: unit_bundle_units_max_order_by
  min: unit_bundle_units_min_order_by
  stddev: unit_bundle_units_stddev_order_by
  stddev_pop: unit_bundle_units_stddev_pop_order_by
  stddev_samp: unit_bundle_units_stddev_samp_order_by
  sum: unit_bundle_units_sum_order_by
  var_pop: unit_bundle_units_var_pop_order_by
  var_samp: unit_bundle_units_var_samp_order_by
  variance: unit_bundle_units_variance_order_by
}

"""
input type for inserting array relation for remote table "unit_bundle_units"
"""
input unit_bundle_units_arr_rel_insert_input {
  data: [unit_bundle_units_insert_input!]!

  """on conflict condition"""
  on_conflict: unit_bundle_units_on_conflict
}

"""aggregate avg on columns"""
type unit_bundle_units_avg_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by avg() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_avg_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""
Boolean expression to filter rows from the table "unit_bundle_units". All fields are combined with a logical 'AND'.
"""
input unit_bundle_units_bool_exp {
  _and: [unit_bundle_units_bool_exp!]
  _not: unit_bundle_units_bool_exp
  _or: [unit_bundle_units_bool_exp!]
  id: Int_comparison_exp
  unit_bundle: unit_bundle_bool_exp
  unit_v2: unit_v2_bool_exp
  unit_v2_id: Int_comparison_exp
  unitbundle_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "unit_bundle_units"
"""
enum unit_bundle_units_constraint {
  """unique or primary key constraint"""
  unit_bundle_unit_pkey

  """unique or primary key constraint"""
  unit_bundle_unit_unitbundle_id_unit_v2_id_0a1b44f9_uniq
}

"""
input type for incrementing numeric columns in table "unit_bundle_units"
"""
input unit_bundle_units_inc_input {
  id: Int
  unit_v2_id: Int
  unitbundle_id: Int
}

"""
input type for inserting data into table "unit_bundle_units"
"""
input unit_bundle_units_insert_input {
  id: Int
  unit_bundle: unit_bundle_obj_rel_insert_input
  unit_v2: unit_v2_obj_rel_insert_input
  unit_v2_id: Int
  unitbundle_id: Int
}

"""aggregate max on columns"""
type unit_bundle_units_max_fields {
  id: Int
  unit_v2_id: Int
  unitbundle_id: Int
}

"""
order by max() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_max_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""aggregate min on columns"""
type unit_bundle_units_min_fields {
  id: Int
  unit_v2_id: Int
  unitbundle_id: Int
}

"""
order by min() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_min_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""
response of any mutation on the table "unit_bundle_units"
"""
type unit_bundle_units_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [unit_bundle_units!]!
}

"""
on conflict condition type for table "unit_bundle_units"
"""
input unit_bundle_units_on_conflict {
  constraint: unit_bundle_units_constraint!
  update_columns: [unit_bundle_units_update_column!]! = []
  where: unit_bundle_units_bool_exp
}

"""Ordering options when selecting data from "unit_bundle_units"."""
input unit_bundle_units_order_by {
  id: order_by
  unit_bundle: unit_bundle_order_by
  unit_v2: unit_v2_order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""primary key columns input for table: unit_bundle_units"""
input unit_bundle_units_pk_columns_input {
  id: Int!
}

"""
select columns of table "unit_bundle_units"
"""
enum unit_bundle_units_select_column {
  """column name"""
  id

  """column name"""
  unit_v2_id

  """column name"""
  unitbundle_id
}

"""
input type for updating data in table "unit_bundle_units"
"""
input unit_bundle_units_set_input {
  id: Int
  unit_v2_id: Int
  unitbundle_id: Int
}

"""aggregate stddev on columns"""
type unit_bundle_units_stddev_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by stddev() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_stddev_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""aggregate stddev_pop on columns"""
type unit_bundle_units_stddev_pop_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by stddev_pop() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_stddev_pop_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""aggregate stddev_samp on columns"""
type unit_bundle_units_stddev_samp_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by stddev_samp() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_stddev_samp_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""aggregate sum on columns"""
type unit_bundle_units_sum_fields {
  id: Int
  unit_v2_id: Int
  unitbundle_id: Int
}

"""
order by sum() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_sum_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""
update columns of table "unit_bundle_units"
"""
enum unit_bundle_units_update_column {
  """column name"""
  id

  """column name"""
  unit_v2_id

  """column name"""
  unitbundle_id
}

"""aggregate var_pop on columns"""
type unit_bundle_units_var_pop_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by var_pop() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_var_pop_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""aggregate var_samp on columns"""
type unit_bundle_units_var_samp_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by var_samp() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_var_samp_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""aggregate variance on columns"""
type unit_bundle_units_variance_fields {
  id: Float
  unit_v2_id: Float
  unitbundle_id: Float
}

"""
order by variance() on columns of table "unit_bundle_units"
"""
input unit_bundle_units_variance_order_by {
  id: order_by
  unit_v2_id: order_by
  unitbundle_id: order_by
}

"""
update columns of table "unit_bundle"
"""
enum unit_bundle_update_column {
  """column name"""
  cache

  """column name"""
  created

  """column name"""
  desc

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type unit_bundle_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type unit_bundle_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type unit_bundle_variance_fields {
  id: Float
}

"""
columns and relationships of "unit_submission"
"""
type unit_submission {
  Achievement_Level: float8
  Class: Int
  School_Name: String
  Subject: String
  Unit: String
  acad_year: String
  assessment: String
  block: String
  code: String
  district: String
  lo_id: Int
  session: String
  students_cleared: Int
  students_present: bigint
  type: String
  udise: Int
}

"""
aggregated selection of "unit_submission"
"""
type unit_submission_aggregate {
  aggregate: unit_submission_aggregate_fields
  nodes: [unit_submission!]!
}

"""
aggregate fields of "unit_submission"
"""
type unit_submission_aggregate_fields {
  avg: unit_submission_avg_fields
  count(columns: [unit_submission_select_column!], distinct: Boolean): Int!
  max: unit_submission_max_fields
  min: unit_submission_min_fields
  stddev: unit_submission_stddev_fields
  stddev_pop: unit_submission_stddev_pop_fields
  stddev_samp: unit_submission_stddev_samp_fields
  sum: unit_submission_sum_fields
  var_pop: unit_submission_var_pop_fields
  var_samp: unit_submission_var_samp_fields
  variance: unit_submission_variance_fields
}

"""aggregate avg on columns"""
type unit_submission_avg_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""
Boolean expression to filter rows from the table "unit_submission". All fields are combined with a logical 'AND'.
"""
input unit_submission_bool_exp {
  Achievement_Level: float8_comparison_exp
  Class: Int_comparison_exp
  School_Name: String_comparison_exp
  Subject: String_comparison_exp
  Unit: String_comparison_exp
  _and: [unit_submission_bool_exp!]
  _not: unit_submission_bool_exp
  _or: [unit_submission_bool_exp!]
  acad_year: String_comparison_exp
  assessment: String_comparison_exp
  block: String_comparison_exp
  code: String_comparison_exp
  district: String_comparison_exp
  lo_id: Int_comparison_exp
  session: String_comparison_exp
  students_cleared: Int_comparison_exp
  students_present: bigint_comparison_exp
  type: String_comparison_exp
  udise: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "unit_submission"
"""
input unit_submission_inc_input {
  Achievement_Level: float8
  Class: Int
  lo_id: Int
  students_cleared: Int
  students_present: bigint
  udise: Int
}

"""
input type for inserting data into table "unit_submission"
"""
input unit_submission_insert_input {
  Achievement_Level: float8
  Class: Int
  School_Name: String
  Subject: String
  Unit: String
  acad_year: String
  assessment: String
  block: String
  code: String
  district: String
  lo_id: Int
  session: String
  students_cleared: Int
  students_present: bigint
  type: String
  udise: Int
}

"""aggregate max on columns"""
type unit_submission_max_fields {
  Achievement_Level: float8
  Class: Int
  School_Name: String
  Subject: String
  Unit: String
  acad_year: String
  assessment: String
  block: String
  code: String
  district: String
  lo_id: Int
  session: String
  students_cleared: Int
  students_present: bigint
  type: String
  udise: Int
}

"""aggregate min on columns"""
type unit_submission_min_fields {
  Achievement_Level: float8
  Class: Int
  School_Name: String
  Subject: String
  Unit: String
  acad_year: String
  assessment: String
  block: String
  code: String
  district: String
  lo_id: Int
  session: String
  students_cleared: Int
  students_present: bigint
  type: String
  udise: Int
}

"""
response of any mutation on the table "unit_submission"
"""
type unit_submission_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [unit_submission!]!
}

"""Ordering options when selecting data from "unit_submission"."""
input unit_submission_order_by {
  Achievement_Level: order_by
  Class: order_by
  School_Name: order_by
  Subject: order_by
  Unit: order_by
  acad_year: order_by
  assessment: order_by
  block: order_by
  code: order_by
  district: order_by
  lo_id: order_by
  session: order_by
  students_cleared: order_by
  students_present: order_by
  type: order_by
  udise: order_by
}

"""
select columns of table "unit_submission"
"""
enum unit_submission_select_column {
  """column name"""
  Achievement_Level

  """column name"""
  Class

  """column name"""
  School_Name

  """column name"""
  Subject

  """column name"""
  Unit

  """column name"""
  acad_year

  """column name"""
  assessment

  """column name"""
  block

  """column name"""
  code

  """column name"""
  district

  """column name"""
  lo_id

  """column name"""
  session

  """column name"""
  students_cleared

  """column name"""
  students_present

  """column name"""
  type

  """column name"""
  udise
}

"""
input type for updating data in table "unit_submission"
"""
input unit_submission_set_input {
  Achievement_Level: float8
  Class: Int
  School_Name: String
  Subject: String
  Unit: String
  acad_year: String
  assessment: String
  block: String
  code: String
  district: String
  lo_id: Int
  session: String
  students_cleared: Int
  students_present: bigint
  type: String
  udise: Int
}

"""aggregate stddev on columns"""
type unit_submission_stddev_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""aggregate stddev_pop on columns"""
type unit_submission_stddev_pop_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""aggregate stddev_samp on columns"""
type unit_submission_stddev_samp_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""aggregate sum on columns"""
type unit_submission_sum_fields {
  Achievement_Level: float8
  Class: Int
  lo_id: Int
  students_cleared: Int
  students_present: bigint
  udise: Int
}

"""aggregate var_pop on columns"""
type unit_submission_var_pop_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""aggregate var_samp on columns"""
type unit_submission_var_samp_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""aggregate variance on columns"""
type unit_submission_variance_fields {
  Achievement_Level: Float
  Class: Float
  lo_id: Float
  students_cleared: Float
  students_present: Float
  udise: Float
}

"""
columns and relationships of "unit_v2"
"""
type unit_v2 {
  """An array relationship"""
  assessment_unit_selected_units(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): [assessment_unit_selected_unit!]!

  """An aggregate relationship"""
  assessment_unit_selected_units_aggregate(
    """distinct select on columns"""
    distinct_on: [assessment_unit_selected_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assessment_unit_selected_unit_order_by!]

    """filter the rows returned"""
    where: assessment_unit_selected_unit_bool_exp
  ): assessment_unit_selected_unit_aggregate!

  """An array relationship"""
  class_submissions(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): [class_submission!]!

  """An aggregate relationship"""
  class_submissions_aggregate(
    """distinct select on columns"""
    distinct_on: [class_submission_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_submission_order_by!]

    """filter the rows returned"""
    where: class_submission_bool_exp
  ): class_submission_aggregate!
  code: String
  created: timestamptz
  grade_number: Int!
  id: Int!
  is_unit: Boolean!
  name: String!

  """An object relationship"""
  subject: subject
  subject_id: Int

  """An array relationship"""
  unit_bundle_units(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): [unit_bundle_units!]!

  """An aggregate relationship"""
  unit_bundle_units_aggregate(
    """distinct select on columns"""
    distinct_on: [unit_bundle_units_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unit_bundle_units_order_by!]

    """filter the rows returned"""
    where: unit_bundle_units_bool_exp
  ): unit_bundle_units_aggregate!
  updated: timestamptz
}

"""
aggregated selection of "unit_v2"
"""
type unit_v2_aggregate {
  aggregate: unit_v2_aggregate_fields
  nodes: [unit_v2!]!
}

"""
aggregate fields of "unit_v2"
"""
type unit_v2_aggregate_fields {
  avg: unit_v2_avg_fields
  count(columns: [unit_v2_select_column!], distinct: Boolean): Int!
  max: unit_v2_max_fields
  min: unit_v2_min_fields
  stddev: unit_v2_stddev_fields
  stddev_pop: unit_v2_stddev_pop_fields
  stddev_samp: unit_v2_stddev_samp_fields
  sum: unit_v2_sum_fields
  var_pop: unit_v2_var_pop_fields
  var_samp: unit_v2_var_samp_fields
  variance: unit_v2_variance_fields
}

"""
order by aggregate values of table "unit_v2"
"""
input unit_v2_aggregate_order_by {
  avg: unit_v2_avg_order_by
  count: order_by
  max: unit_v2_max_order_by
  min: unit_v2_min_order_by
  stddev: unit_v2_stddev_order_by
  stddev_pop: unit_v2_stddev_pop_order_by
  stddev_samp: unit_v2_stddev_samp_order_by
  sum: unit_v2_sum_order_by
  var_pop: unit_v2_var_pop_order_by
  var_samp: unit_v2_var_samp_order_by
  variance: unit_v2_variance_order_by
}

"""
input type for inserting array relation for remote table "unit_v2"
"""
input unit_v2_arr_rel_insert_input {
  data: [unit_v2_insert_input!]!

  """on conflict condition"""
  on_conflict: unit_v2_on_conflict
}

"""aggregate avg on columns"""
type unit_v2_avg_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by avg() on columns of table "unit_v2"
"""
input unit_v2_avg_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
Boolean expression to filter rows from the table "unit_v2". All fields are combined with a logical 'AND'.
"""
input unit_v2_bool_exp {
  _and: [unit_v2_bool_exp!]
  _not: unit_v2_bool_exp
  _or: [unit_v2_bool_exp!]
  assessment_unit_selected_units: assessment_unit_selected_unit_bool_exp
  class_submissions: class_submission_bool_exp
  code: String_comparison_exp
  created: timestamptz_comparison_exp
  grade_number: Int_comparison_exp
  id: Int_comparison_exp
  is_unit: Boolean_comparison_exp
  name: String_comparison_exp
  subject: subject_bool_exp
  subject_id: Int_comparison_exp
  unit_bundle_units: unit_bundle_units_bool_exp
  updated: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "unit_v2"
"""
enum unit_v2_constraint {
  """unique or primary key constraint"""
  unit_v2_pkey
}

"""
input type for incrementing numeric columns in table "unit_v2"
"""
input unit_v2_inc_input {
  grade_number: Int
  id: Int
  subject_id: Int
}

"""
input type for inserting data into table "unit_v2"
"""
input unit_v2_insert_input {
  assessment_unit_selected_units: assessment_unit_selected_unit_arr_rel_insert_input
  class_submissions: class_submission_arr_rel_insert_input
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  is_unit: Boolean
  name: String
  subject: subject_obj_rel_insert_input
  subject_id: Int
  unit_bundle_units: unit_bundle_units_arr_rel_insert_input
  updated: timestamptz
}

"""aggregate max on columns"""
type unit_v2_max_fields {
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  name: String
  subject_id: Int
  updated: timestamptz
}

"""
order by max() on columns of table "unit_v2"
"""
input unit_v2_max_order_by {
  code: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  name: order_by
  subject_id: order_by
  updated: order_by
}

"""aggregate min on columns"""
type unit_v2_min_fields {
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  name: String
  subject_id: Int
  updated: timestamptz
}

"""
order by min() on columns of table "unit_v2"
"""
input unit_v2_min_order_by {
  code: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  name: order_by
  subject_id: order_by
  updated: order_by
}

"""
response of any mutation on the table "unit_v2"
"""
type unit_v2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [unit_v2!]!
}

"""
input type for inserting object relation for remote table "unit_v2"
"""
input unit_v2_obj_rel_insert_input {
  data: unit_v2_insert_input!

  """on conflict condition"""
  on_conflict: unit_v2_on_conflict
}

"""
on conflict condition type for table "unit_v2"
"""
input unit_v2_on_conflict {
  constraint: unit_v2_constraint!
  update_columns: [unit_v2_update_column!]! = []
  where: unit_v2_bool_exp
}

"""Ordering options when selecting data from "unit_v2"."""
input unit_v2_order_by {
  assessment_unit_selected_units_aggregate: assessment_unit_selected_unit_aggregate_order_by
  class_submissions_aggregate: class_submission_aggregate_order_by
  code: order_by
  created: order_by
  grade_number: order_by
  id: order_by
  is_unit: order_by
  name: order_by
  subject: subject_order_by
  subject_id: order_by
  unit_bundle_units_aggregate: unit_bundle_units_aggregate_order_by
  updated: order_by
}

"""primary key columns input for table: unit_v2"""
input unit_v2_pk_columns_input {
  id: Int!
}

"""
select columns of table "unit_v2"
"""
enum unit_v2_select_column {
  """column name"""
  code

  """column name"""
  created

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  is_unit

  """column name"""
  name

  """column name"""
  subject_id

  """column name"""
  updated
}

"""
input type for updating data in table "unit_v2"
"""
input unit_v2_set_input {
  code: String
  created: timestamptz
  grade_number: Int
  id: Int
  is_unit: Boolean
  name: String
  subject_id: Int
  updated: timestamptz
}

"""aggregate stddev on columns"""
type unit_v2_stddev_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev() on columns of table "unit_v2"
"""
input unit_v2_stddev_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_pop on columns"""
type unit_v2_stddev_pop_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_pop() on columns of table "unit_v2"
"""
input unit_v2_stddev_pop_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate stddev_samp on columns"""
type unit_v2_stddev_samp_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by stddev_samp() on columns of table "unit_v2"
"""
input unit_v2_stddev_samp_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate sum on columns"""
type unit_v2_sum_fields {
  grade_number: Int
  id: Int
  subject_id: Int
}

"""
order by sum() on columns of table "unit_v2"
"""
input unit_v2_sum_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
update columns of table "unit_v2"
"""
enum unit_v2_update_column {
  """column name"""
  code

  """column name"""
  created

  """column name"""
  grade_number

  """column name"""
  id

  """column name"""
  is_unit

  """column name"""
  name

  """column name"""
  subject_id

  """column name"""
  updated
}

"""aggregate var_pop on columns"""
type unit_v2_var_pop_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by var_pop() on columns of table "unit_v2"
"""
input unit_v2_var_pop_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate var_samp on columns"""
type unit_v2_var_samp_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by var_samp() on columns of table "unit_v2"
"""
input unit_v2_var_samp_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""aggregate variance on columns"""
type unit_v2_variance_fields {
  grade_number: Float
  id: Float
  subject_id: Float
}

"""
order by variance() on columns of table "unit_v2"
"""
input unit_v2_variance_order_by {
  grade_number: order_by
  id: order_by
  subject_id: order_by
}

"""
columns and relationships of "user_action_logs"
"""
type user_action_logs {
  """"""
  actionee_users_id: uuid!

  """"""
  actioner_users_id: uuid

  """"""
  comment: String

  """"""
  email_user_on_end: Boolean!

  """"""
  end_event_sent: Boolean

  """"""
  expiry: bigint

  """"""
  history: String

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  localized_name: String

  """"""
  localized_option: String

  """"""
  localized_reason: String

  """"""
  name: String

  """"""
  notify_user_on_end: Boolean!

  """"""
  option_name: String

  """"""
  reason: String

  """"""
  reason_code: String

  """An object relationship"""
  user: users!

  """An object relationship"""
  userByActionerUsersId: users!

  """An object relationship"""
  user_action: user_actions!

  """An array relationship"""
  user_action_logs_applications(
    """distinct select on columns"""
    distinct_on: [user_action_logs_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_applications_order_by!]

    """filter the rows returned"""
    where: user_action_logs_applications_bool_exp
  ): [user_action_logs_applications!]!

  """An aggregate relationship"""
  user_action_logs_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_applications_order_by!]

    """filter the rows returned"""
    where: user_action_logs_applications_bool_exp
  ): user_action_logs_applications_aggregate!

  """"""
  user_actions_id: uuid!
}

"""
aggregated selection of "user_action_logs"
"""
type user_action_logs_aggregate {
  """"""
  aggregate: user_action_logs_aggregate_fields

  """"""
  nodes: [user_action_logs!]!
}

"""
aggregate fields of "user_action_logs"
"""
type user_action_logs_aggregate_fields {
  """"""
  avg: user_action_logs_avg_fields

  """"""
  count(columns: [user_action_logs_select_column!], distinct: Boolean): Int!

  """"""
  max: user_action_logs_max_fields

  """"""
  min: user_action_logs_min_fields

  """"""
  stddev: user_action_logs_stddev_fields

  """"""
  stddev_pop: user_action_logs_stddev_pop_fields

  """"""
  stddev_samp: user_action_logs_stddev_samp_fields

  """"""
  sum: user_action_logs_sum_fields

  """"""
  var_pop: user_action_logs_var_pop_fields

  """"""
  var_samp: user_action_logs_var_samp_fields

  """"""
  variance: user_action_logs_variance_fields
}

"""
order by aggregate values of table "user_action_logs"
"""
input user_action_logs_aggregate_order_by {
  """"""
  avg: user_action_logs_avg_order_by

  """"""
  count: order_by

  """"""
  max: user_action_logs_max_order_by

  """"""
  min: user_action_logs_min_order_by

  """"""
  stddev: user_action_logs_stddev_order_by

  """"""
  stddev_pop: user_action_logs_stddev_pop_order_by

  """"""
  stddev_samp: user_action_logs_stddev_samp_order_by

  """"""
  sum: user_action_logs_sum_order_by

  """"""
  var_pop: user_action_logs_var_pop_order_by

  """"""
  var_samp: user_action_logs_var_samp_order_by

  """"""
  variance: user_action_logs_variance_order_by
}

"""
columns and relationships of "user_action_logs_applications"
"""
type user_action_logs_applications {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """An object relationship"""
  user_action_log: user_action_logs!

  """"""
  user_action_logs_id: uuid!
}

"""
aggregated selection of "user_action_logs_applications"
"""
type user_action_logs_applications_aggregate {
  """"""
  aggregate: user_action_logs_applications_aggregate_fields

  """"""
  nodes: [user_action_logs_applications!]!
}

"""
aggregate fields of "user_action_logs_applications"
"""
type user_action_logs_applications_aggregate_fields {
  """"""
  count(columns: [user_action_logs_applications_select_column!], distinct: Boolean): Int!

  """"""
  max: user_action_logs_applications_max_fields

  """"""
  min: user_action_logs_applications_min_fields
}

"""
order by aggregate values of table "user_action_logs_applications"
"""
input user_action_logs_applications_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: user_action_logs_applications_max_order_by

  """"""
  min: user_action_logs_applications_min_order_by
}

"""
input type for inserting array relation for remote table "user_action_logs_applications"
"""
input user_action_logs_applications_arr_rel_insert_input {
  """"""
  data: [user_action_logs_applications_insert_input!]!
}

"""
Boolean expression to filter rows from the table
"user_action_logs_applications". All fields are combined with a logical 'AND'.
"""
input user_action_logs_applications_bool_exp {
  """"""
  _and: [user_action_logs_applications_bool_exp!]

  """"""
  _not: user_action_logs_applications_bool_exp

  """"""
  _or: [user_action_logs_applications_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  user_action_log: user_action_logs_bool_exp

  """"""
  user_action_logs_id: uuid_comparison_exp
}

"""
input type for inserting data into table "user_action_logs_applications"
"""
input user_action_logs_applications_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  user_action_log: user_action_logs_obj_rel_insert_input

  """"""
  user_action_logs_id: uuid
}

"""aggregate max on columns"""
type user_action_logs_applications_max_fields {
  """"""
  applications_id: uuid

  """"""
  user_action_logs_id: uuid
}

"""
order by max() on columns of table "user_action_logs_applications"
"""
input user_action_logs_applications_max_order_by {
  """"""
  applications_id: order_by

  """"""
  user_action_logs_id: order_by
}

"""aggregate min on columns"""
type user_action_logs_applications_min_fields {
  """"""
  applications_id: uuid

  """"""
  user_action_logs_id: uuid
}

"""
order by min() on columns of table "user_action_logs_applications"
"""
input user_action_logs_applications_min_order_by {
  """"""
  applications_id: order_by

  """"""
  user_action_logs_id: order_by
}

"""
response of any mutation on the table "user_action_logs_applications"
"""
type user_action_logs_applications_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_action_logs_applications!]!
}

"""
Ordering options when selecting data from "user_action_logs_applications".
"""
input user_action_logs_applications_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  user_action_log: user_action_logs_order_by

  """"""
  user_action_logs_id: order_by
}

"""
select columns of table "user_action_logs_applications"
"""
enum user_action_logs_applications_select_column {
  """column name"""
  applications_id

  """column name"""
  user_action_logs_id
}

"""
input type for updating data in table "user_action_logs_applications"
"""
input user_action_logs_applications_set_input {
  """"""
  applications_id: uuid

  """"""
  user_action_logs_id: uuid
}

"""
input type for inserting array relation for remote table "user_action_logs"
"""
input user_action_logs_arr_rel_insert_input {
  """"""
  data: [user_action_logs_insert_input!]!

  """on conflict condition"""
  on_conflict: user_action_logs_on_conflict
}

"""aggregate avg on columns"""
type user_action_logs_avg_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by avg() on columns of table "user_action_logs"
"""
input user_action_logs_avg_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""
Boolean expression to filter rows from the table "user_action_logs". All fields are combined with a logical 'AND'.
"""
input user_action_logs_bool_exp {
  """"""
  _and: [user_action_logs_bool_exp!]

  """"""
  _not: user_action_logs_bool_exp

  """"""
  _or: [user_action_logs_bool_exp!]

  """"""
  actionee_users_id: uuid_comparison_exp

  """"""
  actioner_users_id: uuid_comparison_exp

  """"""
  comment: String_comparison_exp

  """"""
  email_user_on_end: Boolean_comparison_exp

  """"""
  end_event_sent: Boolean_comparison_exp

  """"""
  expiry: bigint_comparison_exp

  """"""
  history: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  localized_name: String_comparison_exp

  """"""
  localized_option: String_comparison_exp

  """"""
  localized_reason: String_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  notify_user_on_end: Boolean_comparison_exp

  """"""
  option_name: String_comparison_exp

  """"""
  reason: String_comparison_exp

  """"""
  reason_code: String_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  userByActionerUsersId: users_bool_exp

  """"""
  user_action: user_actions_bool_exp

  """"""
  user_action_logs_applications: user_action_logs_applications_bool_exp

  """"""
  user_actions_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "user_action_logs"
"""
enum user_action_logs_constraint {
  """unique or primary key constraint"""
  user_action_logs_pkey
}

"""
input type for incrementing numeric columns in table "user_action_logs"
"""
input user_action_logs_inc_input {
  """"""
  expiry: bigint

  """"""
  insert_instant: bigint
}

"""
input type for inserting data into table "user_action_logs"
"""
input user_action_logs_insert_input {
  """"""
  actionee_users_id: uuid

  """"""
  actioner_users_id: uuid

  """"""
  comment: String

  """"""
  email_user_on_end: Boolean

  """"""
  end_event_sent: Boolean

  """"""
  expiry: bigint

  """"""
  history: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  localized_name: String

  """"""
  localized_option: String

  """"""
  localized_reason: String

  """"""
  name: String

  """"""
  notify_user_on_end: Boolean

  """"""
  option_name: String

  """"""
  reason: String

  """"""
  reason_code: String

  """"""
  user: users_obj_rel_insert_input

  """"""
  userByActionerUsersId: users_obj_rel_insert_input

  """"""
  user_action: user_actions_obj_rel_insert_input

  """"""
  user_action_logs_applications: user_action_logs_applications_arr_rel_insert_input

  """"""
  user_actions_id: uuid
}

"""aggregate max on columns"""
type user_action_logs_max_fields {
  """"""
  actionee_users_id: uuid

  """"""
  actioner_users_id: uuid

  """"""
  comment: String

  """"""
  expiry: bigint

  """"""
  history: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  localized_name: String

  """"""
  localized_option: String

  """"""
  localized_reason: String

  """"""
  name: String

  """"""
  option_name: String

  """"""
  reason: String

  """"""
  reason_code: String

  """"""
  user_actions_id: uuid
}

"""
order by max() on columns of table "user_action_logs"
"""
input user_action_logs_max_order_by {
  """"""
  actionee_users_id: order_by

  """"""
  actioner_users_id: order_by

  """"""
  comment: order_by

  """"""
  expiry: order_by

  """"""
  history: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  localized_name: order_by

  """"""
  localized_option: order_by

  """"""
  localized_reason: order_by

  """"""
  name: order_by

  """"""
  option_name: order_by

  """"""
  reason: order_by

  """"""
  reason_code: order_by

  """"""
  user_actions_id: order_by
}

"""aggregate min on columns"""
type user_action_logs_min_fields {
  """"""
  actionee_users_id: uuid

  """"""
  actioner_users_id: uuid

  """"""
  comment: String

  """"""
  expiry: bigint

  """"""
  history: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  localized_name: String

  """"""
  localized_option: String

  """"""
  localized_reason: String

  """"""
  name: String

  """"""
  option_name: String

  """"""
  reason: String

  """"""
  reason_code: String

  """"""
  user_actions_id: uuid
}

"""
order by min() on columns of table "user_action_logs"
"""
input user_action_logs_min_order_by {
  """"""
  actionee_users_id: order_by

  """"""
  actioner_users_id: order_by

  """"""
  comment: order_by

  """"""
  expiry: order_by

  """"""
  history: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  localized_name: order_by

  """"""
  localized_option: order_by

  """"""
  localized_reason: order_by

  """"""
  name: order_by

  """"""
  option_name: order_by

  """"""
  reason: order_by

  """"""
  reason_code: order_by

  """"""
  user_actions_id: order_by
}

"""
response of any mutation on the table "user_action_logs"
"""
type user_action_logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_action_logs!]!
}

"""
input type for inserting object relation for remote table "user_action_logs"
"""
input user_action_logs_obj_rel_insert_input {
  """"""
  data: user_action_logs_insert_input!

  """on conflict condition"""
  on_conflict: user_action_logs_on_conflict
}

"""
on conflict condition type for table "user_action_logs"
"""
input user_action_logs_on_conflict {
  """"""
  constraint: user_action_logs_constraint!

  """"""
  update_columns: [user_action_logs_update_column!]!

  """"""
  where: user_action_logs_bool_exp
}

"""Ordering options when selecting data from "user_action_logs"."""
input user_action_logs_order_by {
  """"""
  actionee_users_id: order_by

  """"""
  actioner_users_id: order_by

  """"""
  comment: order_by

  """"""
  email_user_on_end: order_by

  """"""
  end_event_sent: order_by

  """"""
  expiry: order_by

  """"""
  history: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  localized_name: order_by

  """"""
  localized_option: order_by

  """"""
  localized_reason: order_by

  """"""
  name: order_by

  """"""
  notify_user_on_end: order_by

  """"""
  option_name: order_by

  """"""
  reason: order_by

  """"""
  reason_code: order_by

  """"""
  user: users_order_by

  """"""
  userByActionerUsersId: users_order_by

  """"""
  user_action: user_actions_order_by

  """"""
  user_action_logs_applications_aggregate: user_action_logs_applications_aggregate_order_by

  """"""
  user_actions_id: order_by
}

"""primary key columns input for table: user_action_logs"""
input user_action_logs_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "user_action_logs"
"""
enum user_action_logs_select_column {
  """column name"""
  actionee_users_id

  """column name"""
  actioner_users_id

  """column name"""
  comment

  """column name"""
  email_user_on_end

  """column name"""
  end_event_sent

  """column name"""
  expiry

  """column name"""
  history

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  localized_name

  """column name"""
  localized_option

  """column name"""
  localized_reason

  """column name"""
  name

  """column name"""
  notify_user_on_end

  """column name"""
  option_name

  """column name"""
  reason

  """column name"""
  reason_code

  """column name"""
  user_actions_id
}

"""
input type for updating data in table "user_action_logs"
"""
input user_action_logs_set_input {
  """"""
  actionee_users_id: uuid

  """"""
  actioner_users_id: uuid

  """"""
  comment: String

  """"""
  email_user_on_end: Boolean

  """"""
  end_event_sent: Boolean

  """"""
  expiry: bigint

  """"""
  history: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  localized_name: String

  """"""
  localized_option: String

  """"""
  localized_reason: String

  """"""
  name: String

  """"""
  notify_user_on_end: Boolean

  """"""
  option_name: String

  """"""
  reason: String

  """"""
  reason_code: String

  """"""
  user_actions_id: uuid
}

"""aggregate stddev on columns"""
type user_action_logs_stddev_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by stddev() on columns of table "user_action_logs"
"""
input user_action_logs_stddev_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""aggregate stddev_pop on columns"""
type user_action_logs_stddev_pop_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by stddev_pop() on columns of table "user_action_logs"
"""
input user_action_logs_stddev_pop_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""aggregate stddev_samp on columns"""
type user_action_logs_stddev_samp_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by stddev_samp() on columns of table "user_action_logs"
"""
input user_action_logs_stddev_samp_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""aggregate sum on columns"""
type user_action_logs_sum_fields {
  """"""
  expiry: bigint

  """"""
  insert_instant: bigint
}

"""
order by sum() on columns of table "user_action_logs"
"""
input user_action_logs_sum_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""
update columns of table "user_action_logs"
"""
enum user_action_logs_update_column {
  """column name"""
  actionee_users_id

  """column name"""
  actioner_users_id

  """column name"""
  comment

  """column name"""
  email_user_on_end

  """column name"""
  end_event_sent

  """column name"""
  expiry

  """column name"""
  history

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  localized_name

  """column name"""
  localized_option

  """column name"""
  localized_reason

  """column name"""
  name

  """column name"""
  notify_user_on_end

  """column name"""
  option_name

  """column name"""
  reason

  """column name"""
  reason_code

  """column name"""
  user_actions_id
}

"""aggregate var_pop on columns"""
type user_action_logs_var_pop_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by var_pop() on columns of table "user_action_logs"
"""
input user_action_logs_var_pop_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""aggregate var_samp on columns"""
type user_action_logs_var_samp_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by var_samp() on columns of table "user_action_logs"
"""
input user_action_logs_var_samp_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""aggregate variance on columns"""
type user_action_logs_variance_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float
}

"""
order by variance() on columns of table "user_action_logs"
"""
input user_action_logs_variance_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by
}

"""
columns and relationships of "user_action_reasons"
"""
type user_action_reasons {
  """"""
  code: String!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  localized_texts: String

  """"""
  text: String!
}

"""
aggregated selection of "user_action_reasons"
"""
type user_action_reasons_aggregate {
  """"""
  aggregate: user_action_reasons_aggregate_fields

  """"""
  nodes: [user_action_reasons!]!
}

"""
aggregate fields of "user_action_reasons"
"""
type user_action_reasons_aggregate_fields {
  """"""
  avg: user_action_reasons_avg_fields

  """"""
  count(columns: [user_action_reasons_select_column!], distinct: Boolean): Int!

  """"""
  max: user_action_reasons_max_fields

  """"""
  min: user_action_reasons_min_fields

  """"""
  stddev: user_action_reasons_stddev_fields

  """"""
  stddev_pop: user_action_reasons_stddev_pop_fields

  """"""
  stddev_samp: user_action_reasons_stddev_samp_fields

  """"""
  sum: user_action_reasons_sum_fields

  """"""
  var_pop: user_action_reasons_var_pop_fields

  """"""
  var_samp: user_action_reasons_var_samp_fields

  """"""
  variance: user_action_reasons_variance_fields
}

"""aggregate avg on columns"""
type user_action_reasons_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
Boolean expression to filter rows from the table "user_action_reasons". All fields are combined with a logical 'AND'.
"""
input user_action_reasons_bool_exp {
  """"""
  _and: [user_action_reasons_bool_exp!]

  """"""
  _not: user_action_reasons_bool_exp

  """"""
  _or: [user_action_reasons_bool_exp!]

  """"""
  code: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  localized_texts: String_comparison_exp

  """"""
  text: String_comparison_exp
}

"""
unique or primary key constraints on table "user_action_reasons"
"""
enum user_action_reasons_constraint {
  """unique or primary key constraint"""
  user_action_reasons_pkey

  """unique or primary key constraint"""
  user_action_reasons_uk_1

  """unique or primary key constraint"""
  user_action_reasons_uk_2
}

"""
input type for incrementing numeric columns in table "user_action_reasons"
"""
input user_action_reasons_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "user_action_reasons"
"""
input user_action_reasons_insert_input {
  """"""
  code: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_texts: String

  """"""
  text: String
}

"""aggregate max on columns"""
type user_action_reasons_max_fields {
  """"""
  code: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_texts: String

  """"""
  text: String
}

"""aggregate min on columns"""
type user_action_reasons_min_fields {
  """"""
  code: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_texts: String

  """"""
  text: String
}

"""
response of any mutation on the table "user_action_reasons"
"""
type user_action_reasons_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_action_reasons!]!
}

"""
on conflict condition type for table "user_action_reasons"
"""
input user_action_reasons_on_conflict {
  """"""
  constraint: user_action_reasons_constraint!

  """"""
  update_columns: [user_action_reasons_update_column!]!

  """"""
  where: user_action_reasons_bool_exp
}

"""Ordering options when selecting data from "user_action_reasons"."""
input user_action_reasons_order_by {
  """"""
  code: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  localized_texts: order_by

  """"""
  text: order_by
}

"""primary key columns input for table: user_action_reasons"""
input user_action_reasons_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "user_action_reasons"
"""
enum user_action_reasons_select_column {
  """column name"""
  code

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  localized_texts

  """column name"""
  text
}

"""
input type for updating data in table "user_action_reasons"
"""
input user_action_reasons_set_input {
  """"""
  code: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_texts: String

  """"""
  text: String
}

"""aggregate stddev on columns"""
type user_action_reasons_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_pop on columns"""
type user_action_reasons_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate stddev_samp on columns"""
type user_action_reasons_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate sum on columns"""
type user_action_reasons_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
update columns of table "user_action_reasons"
"""
enum user_action_reasons_update_column {
  """column name"""
  code

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  localized_texts

  """column name"""
  text
}

"""aggregate var_pop on columns"""
type user_action_reasons_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate var_samp on columns"""
type user_action_reasons_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""aggregate variance on columns"""
type user_action_reasons_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
columns and relationships of "user_actions"
"""
type user_actions {
  """"""
  active: Boolean!

  """"""
  cancel_email_templates_id: uuid

  """An object relationship"""
  emailTemplateByCancelEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateByEndEmailTemplatesId: email_templates!

  """An object relationship"""
  emailTemplateByModifyEmailTemplatesId: email_templates!

  """An object relationship"""
  email_template: email_templates!

  """"""
  end_email_templates_id: uuid

  """"""
  id: uuid!

  """"""
  include_email_in_event_json: Boolean!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  localized_names: String

  """"""
  modify_email_templates_id: uuid

  """"""
  name: String!

  """"""
  options: String

  """"""
  prevent_login: Boolean!

  """"""
  send_end_event: Boolean!

  """"""
  start_email_templates_id: uuid

  """"""
  temporal: Boolean!

  """An array relationship"""
  tenants(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): [tenants!]!

  """An aggregate relationship"""
  tenants_aggregate(
    """distinct select on columns"""
    distinct_on: [tenants_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tenants_order_by!]

    """filter the rows returned"""
    where: tenants_bool_exp
  ): tenants_aggregate!

  """"""
  transaction_type: smallint!

  """An array relationship"""
  user_action_logs(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): [user_action_logs!]!

  """An aggregate relationship"""
  user_action_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): user_action_logs_aggregate!

  """"""
  user_emailing_enabled: Boolean!

  """"""
  user_notifications_enabled: Boolean!
}

"""
aggregated selection of "user_actions"
"""
type user_actions_aggregate {
  """"""
  aggregate: user_actions_aggregate_fields

  """"""
  nodes: [user_actions!]!
}

"""
aggregate fields of "user_actions"
"""
type user_actions_aggregate_fields {
  """"""
  avg: user_actions_avg_fields

  """"""
  count(columns: [user_actions_select_column!], distinct: Boolean): Int!

  """"""
  max: user_actions_max_fields

  """"""
  min: user_actions_min_fields

  """"""
  stddev: user_actions_stddev_fields

  """"""
  stddev_pop: user_actions_stddev_pop_fields

  """"""
  stddev_samp: user_actions_stddev_samp_fields

  """"""
  sum: user_actions_sum_fields

  """"""
  var_pop: user_actions_var_pop_fields

  """"""
  var_samp: user_actions_var_samp_fields

  """"""
  variance: user_actions_variance_fields
}

"""
order by aggregate values of table "user_actions"
"""
input user_actions_aggregate_order_by {
  """"""
  avg: user_actions_avg_order_by

  """"""
  count: order_by

  """"""
  max: user_actions_max_order_by

  """"""
  min: user_actions_min_order_by

  """"""
  stddev: user_actions_stddev_order_by

  """"""
  stddev_pop: user_actions_stddev_pop_order_by

  """"""
  stddev_samp: user_actions_stddev_samp_order_by

  """"""
  sum: user_actions_sum_order_by

  """"""
  var_pop: user_actions_var_pop_order_by

  """"""
  var_samp: user_actions_var_samp_order_by

  """"""
  variance: user_actions_variance_order_by
}

"""
input type for inserting array relation for remote table "user_actions"
"""
input user_actions_arr_rel_insert_input {
  """"""
  data: [user_actions_insert_input!]!

  """on conflict condition"""
  on_conflict: user_actions_on_conflict
}

"""aggregate avg on columns"""
type user_actions_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by avg() on columns of table "user_actions"
"""
input user_actions_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""
Boolean expression to filter rows from the table "user_actions". All fields are combined with a logical 'AND'.
"""
input user_actions_bool_exp {
  """"""
  _and: [user_actions_bool_exp!]

  """"""
  _not: user_actions_bool_exp

  """"""
  _or: [user_actions_bool_exp!]

  """"""
  active: Boolean_comparison_exp

  """"""
  cancel_email_templates_id: uuid_comparison_exp

  """"""
  emailTemplateByCancelEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateByEndEmailTemplatesId: email_templates_bool_exp

  """"""
  emailTemplateByModifyEmailTemplatesId: email_templates_bool_exp

  """"""
  email_template: email_templates_bool_exp

  """"""
  end_email_templates_id: uuid_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  include_email_in_event_json: Boolean_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  localized_names: String_comparison_exp

  """"""
  modify_email_templates_id: uuid_comparison_exp

  """"""
  name: String_comparison_exp

  """"""
  options: String_comparison_exp

  """"""
  prevent_login: Boolean_comparison_exp

  """"""
  send_end_event: Boolean_comparison_exp

  """"""
  start_email_templates_id: uuid_comparison_exp

  """"""
  temporal: Boolean_comparison_exp

  """"""
  tenants: tenants_bool_exp

  """"""
  transaction_type: smallint_comparison_exp

  """"""
  user_action_logs: user_action_logs_bool_exp

  """"""
  user_emailing_enabled: Boolean_comparison_exp

  """"""
  user_notifications_enabled: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "user_actions"
"""
enum user_actions_constraint {
  """unique or primary key constraint"""
  user_actions_pkey

  """unique or primary key constraint"""
  user_actions_uk_1
}

"""
input type for incrementing numeric columns in table "user_actions"
"""
input user_actions_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  transaction_type: smallint
}

"""
input type for inserting data into table "user_actions"
"""
input user_actions_insert_input {
  """"""
  active: Boolean

  """"""
  cancel_email_templates_id: uuid

  """"""
  emailTemplateByCancelEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByEndEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  emailTemplateByModifyEmailTemplatesId: email_templates_obj_rel_insert_input

  """"""
  email_template: email_templates_obj_rel_insert_input

  """"""
  end_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  include_email_in_event_json: Boolean

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_names: String

  """"""
  modify_email_templates_id: uuid

  """"""
  name: String

  """"""
  options: String

  """"""
  prevent_login: Boolean

  """"""
  send_end_event: Boolean

  """"""
  start_email_templates_id: uuid

  """"""
  temporal: Boolean

  """"""
  tenants: tenants_arr_rel_insert_input

  """"""
  transaction_type: smallint

  """"""
  user_action_logs: user_action_logs_arr_rel_insert_input

  """"""
  user_emailing_enabled: Boolean

  """"""
  user_notifications_enabled: Boolean
}

"""aggregate max on columns"""
type user_actions_max_fields {
  """"""
  cancel_email_templates_id: uuid

  """"""
  end_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_names: String

  """"""
  modify_email_templates_id: uuid

  """"""
  name: String

  """"""
  options: String

  """"""
  start_email_templates_id: uuid

  """"""
  transaction_type: smallint
}

"""
order by max() on columns of table "user_actions"
"""
input user_actions_max_order_by {
  """"""
  cancel_email_templates_id: order_by

  """"""
  end_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  localized_names: order_by

  """"""
  modify_email_templates_id: order_by

  """"""
  name: order_by

  """"""
  options: order_by

  """"""
  start_email_templates_id: order_by

  """"""
  transaction_type: order_by
}

"""aggregate min on columns"""
type user_actions_min_fields {
  """"""
  cancel_email_templates_id: uuid

  """"""
  end_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_names: String

  """"""
  modify_email_templates_id: uuid

  """"""
  name: String

  """"""
  options: String

  """"""
  start_email_templates_id: uuid

  """"""
  transaction_type: smallint
}

"""
order by min() on columns of table "user_actions"
"""
input user_actions_min_order_by {
  """"""
  cancel_email_templates_id: order_by

  """"""
  end_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  localized_names: order_by

  """"""
  modify_email_templates_id: order_by

  """"""
  name: order_by

  """"""
  options: order_by

  """"""
  start_email_templates_id: order_by

  """"""
  transaction_type: order_by
}

"""
response of any mutation on the table "user_actions"
"""
type user_actions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_actions!]!
}

"""
input type for inserting object relation for remote table "user_actions"
"""
input user_actions_obj_rel_insert_input {
  """"""
  data: user_actions_insert_input!

  """on conflict condition"""
  on_conflict: user_actions_on_conflict
}

"""
on conflict condition type for table "user_actions"
"""
input user_actions_on_conflict {
  """"""
  constraint: user_actions_constraint!

  """"""
  update_columns: [user_actions_update_column!]!

  """"""
  where: user_actions_bool_exp
}

"""Ordering options when selecting data from "user_actions"."""
input user_actions_order_by {
  """"""
  active: order_by

  """"""
  cancel_email_templates_id: order_by

  """"""
  emailTemplateByCancelEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateByEndEmailTemplatesId: email_templates_order_by

  """"""
  emailTemplateByModifyEmailTemplatesId: email_templates_order_by

  """"""
  email_template: email_templates_order_by

  """"""
  end_email_templates_id: order_by

  """"""
  id: order_by

  """"""
  include_email_in_event_json: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  localized_names: order_by

  """"""
  modify_email_templates_id: order_by

  """"""
  name: order_by

  """"""
  options: order_by

  """"""
  prevent_login: order_by

  """"""
  send_end_event: order_by

  """"""
  start_email_templates_id: order_by

  """"""
  temporal: order_by

  """"""
  tenants_aggregate: tenants_aggregate_order_by

  """"""
  transaction_type: order_by

  """"""
  user_action_logs_aggregate: user_action_logs_aggregate_order_by

  """"""
  user_emailing_enabled: order_by

  """"""
  user_notifications_enabled: order_by
}

"""primary key columns input for table: user_actions"""
input user_actions_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "user_actions"
"""
enum user_actions_select_column {
  """column name"""
  active

  """column name"""
  cancel_email_templates_id

  """column name"""
  end_email_templates_id

  """column name"""
  id

  """column name"""
  include_email_in_event_json

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  localized_names

  """column name"""
  modify_email_templates_id

  """column name"""
  name

  """column name"""
  options

  """column name"""
  prevent_login

  """column name"""
  send_end_event

  """column name"""
  start_email_templates_id

  """column name"""
  temporal

  """column name"""
  transaction_type

  """column name"""
  user_emailing_enabled

  """column name"""
  user_notifications_enabled
}

"""
input type for updating data in table "user_actions"
"""
input user_actions_set_input {
  """"""
  active: Boolean

  """"""
  cancel_email_templates_id: uuid

  """"""
  end_email_templates_id: uuid

  """"""
  id: uuid

  """"""
  include_email_in_event_json: Boolean

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  localized_names: String

  """"""
  modify_email_templates_id: uuid

  """"""
  name: String

  """"""
  options: String

  """"""
  prevent_login: Boolean

  """"""
  send_end_event: Boolean

  """"""
  start_email_templates_id: uuid

  """"""
  temporal: Boolean

  """"""
  transaction_type: smallint

  """"""
  user_emailing_enabled: Boolean

  """"""
  user_notifications_enabled: Boolean
}

"""aggregate stddev on columns"""
type user_actions_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by stddev() on columns of table "user_actions"
"""
input user_actions_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""aggregate stddev_pop on columns"""
type user_actions_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by stddev_pop() on columns of table "user_actions"
"""
input user_actions_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""aggregate stddev_samp on columns"""
type user_actions_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by stddev_samp() on columns of table "user_actions"
"""
input user_actions_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""aggregate sum on columns"""
type user_actions_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  transaction_type: smallint
}

"""
order by sum() on columns of table "user_actions"
"""
input user_actions_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""
update columns of table "user_actions"
"""
enum user_actions_update_column {
  """column name"""
  active

  """column name"""
  cancel_email_templates_id

  """column name"""
  end_email_templates_id

  """column name"""
  id

  """column name"""
  include_email_in_event_json

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  localized_names

  """column name"""
  modify_email_templates_id

  """column name"""
  name

  """column name"""
  options

  """column name"""
  prevent_login

  """column name"""
  send_end_event

  """column name"""
  start_email_templates_id

  """column name"""
  temporal

  """column name"""
  transaction_type

  """column name"""
  user_emailing_enabled

  """column name"""
  user_notifications_enabled
}

"""aggregate var_pop on columns"""
type user_actions_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by var_pop() on columns of table "user_actions"
"""
input user_actions_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""aggregate var_samp on columns"""
type user_actions_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by var_samp() on columns of table "user_actions"
"""
input user_actions_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""aggregate variance on columns"""
type user_actions_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  transaction_type: Float
}

"""
order by variance() on columns of table "user_actions"
"""
input user_actions_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  transaction_type: order_by
}

"""
columns and relationships of "user_comments"
"""
type user_comments {
  """"""
  comment: String

  """"""
  commenter_id: uuid!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """An object relationship"""
  user: users!

  """An object relationship"""
  userByUsersId: users!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "user_comments"
"""
type user_comments_aggregate {
  """"""
  aggregate: user_comments_aggregate_fields

  """"""
  nodes: [user_comments!]!
}

"""
aggregate fields of "user_comments"
"""
type user_comments_aggregate_fields {
  """"""
  avg: user_comments_avg_fields

  """"""
  count(columns: [user_comments_select_column!], distinct: Boolean): Int!

  """"""
  max: user_comments_max_fields

  """"""
  min: user_comments_min_fields

  """"""
  stddev: user_comments_stddev_fields

  """"""
  stddev_pop: user_comments_stddev_pop_fields

  """"""
  stddev_samp: user_comments_stddev_samp_fields

  """"""
  sum: user_comments_sum_fields

  """"""
  var_pop: user_comments_var_pop_fields

  """"""
  var_samp: user_comments_var_samp_fields

  """"""
  variance: user_comments_variance_fields
}

"""
order by aggregate values of table "user_comments"
"""
input user_comments_aggregate_order_by {
  """"""
  avg: user_comments_avg_order_by

  """"""
  count: order_by

  """"""
  max: user_comments_max_order_by

  """"""
  min: user_comments_min_order_by

  """"""
  stddev: user_comments_stddev_order_by

  """"""
  stddev_pop: user_comments_stddev_pop_order_by

  """"""
  stddev_samp: user_comments_stddev_samp_order_by

  """"""
  sum: user_comments_sum_order_by

  """"""
  var_pop: user_comments_var_pop_order_by

  """"""
  var_samp: user_comments_var_samp_order_by

  """"""
  variance: user_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "user_comments"
"""
input user_comments_arr_rel_insert_input {
  """"""
  data: [user_comments_insert_input!]!

  """on conflict condition"""
  on_conflict: user_comments_on_conflict
}

"""aggregate avg on columns"""
type user_comments_avg_fields {
  """"""
  insert_instant: Float
}

"""
order by avg() on columns of table "user_comments"
"""
input user_comments_avg_order_by {
  """"""
  insert_instant: order_by
}

"""
Boolean expression to filter rows from the table "user_comments". All fields are combined with a logical 'AND'.
"""
input user_comments_bool_exp {
  """"""
  _and: [user_comments_bool_exp!]

  """"""
  _not: user_comments_bool_exp

  """"""
  _or: [user_comments_bool_exp!]

  """"""
  comment: String_comparison_exp

  """"""
  commenter_id: uuid_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  userByUsersId: users_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "user_comments"
"""
enum user_comments_constraint {
  """unique or primary key constraint"""
  user_comments_pkey
}

"""
input type for incrementing numeric columns in table "user_comments"
"""
input user_comments_inc_input {
  """"""
  insert_instant: bigint
}

"""
input type for inserting data into table "user_comments"
"""
input user_comments_insert_input {
  """"""
  comment: String

  """"""
  commenter_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  user: users_obj_rel_insert_input

  """"""
  userByUsersId: users_obj_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type user_comments_max_fields {
  """"""
  comment: String

  """"""
  commenter_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "user_comments"
"""
input user_comments_max_order_by {
  """"""
  comment: order_by

  """"""
  commenter_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type user_comments_min_fields {
  """"""
  comment: String

  """"""
  commenter_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "user_comments"
"""
input user_comments_min_order_by {
  """"""
  comment: order_by

  """"""
  commenter_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "user_comments"
"""
type user_comments_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_comments!]!
}

"""
on conflict condition type for table "user_comments"
"""
input user_comments_on_conflict {
  """"""
  constraint: user_comments_constraint!

  """"""
  update_columns: [user_comments_update_column!]!

  """"""
  where: user_comments_bool_exp
}

"""Ordering options when selecting data from "user_comments"."""
input user_comments_order_by {
  """"""
  comment: order_by

  """"""
  commenter_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  user: users_order_by

  """"""
  userByUsersId: users_order_by

  """"""
  users_id: order_by
}

"""primary key columns input for table: user_comments"""
input user_comments_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "user_comments"
"""
enum user_comments_select_column {
  """column name"""
  comment

  """column name"""
  commenter_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  users_id
}

"""
input type for updating data in table "user_comments"
"""
input user_comments_set_input {
  """"""
  comment: String

  """"""
  commenter_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type user_comments_stddev_fields {
  """"""
  insert_instant: Float
}

"""
order by stddev() on columns of table "user_comments"
"""
input user_comments_stddev_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate stddev_pop on columns"""
type user_comments_stddev_pop_fields {
  """"""
  insert_instant: Float
}

"""
order by stddev_pop() on columns of table "user_comments"
"""
input user_comments_stddev_pop_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate stddev_samp on columns"""
type user_comments_stddev_samp_fields {
  """"""
  insert_instant: Float
}

"""
order by stddev_samp() on columns of table "user_comments"
"""
input user_comments_stddev_samp_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate sum on columns"""
type user_comments_sum_fields {
  """"""
  insert_instant: bigint
}

"""
order by sum() on columns of table "user_comments"
"""
input user_comments_sum_order_by {
  """"""
  insert_instant: order_by
}

"""
update columns of table "user_comments"
"""
enum user_comments_update_column {
  """column name"""
  comment

  """column name"""
  commenter_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type user_comments_var_pop_fields {
  """"""
  insert_instant: Float
}

"""
order by var_pop() on columns of table "user_comments"
"""
input user_comments_var_pop_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate var_samp on columns"""
type user_comments_var_samp_fields {
  """"""
  insert_instant: Float
}

"""
order by var_samp() on columns of table "user_comments"
"""
input user_comments_var_samp_order_by {
  """"""
  insert_instant: order_by
}

"""aggregate variance on columns"""
type user_comments_variance_fields {
  """"""
  insert_instant: Float
}

"""
order by variance() on columns of table "user_comments"
"""
input user_comments_variance_order_by {
  """"""
  insert_instant: order_by
}

"""
columns and relationships of "user_consents"
"""
type user_consents {
  """An object relationship"""
  consent: consents!

  """"""
  consents_id: uuid!

  """"""
  data: String

  """"""
  giver_users_id: uuid!

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """An object relationship"""
  user: users!

  """An object relationship"""
  userByUsersId: users!

  """An array relationship"""
  user_consents_email_plus(
    """distinct select on columns"""
    distinct_on: [user_consents_email_plus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_email_plus_order_by!]

    """filter the rows returned"""
    where: user_consents_email_plus_bool_exp
  ): [user_consents_email_plus!]!

  """An aggregate relationship"""
  user_consents_email_plus_aggregate(
    """distinct select on columns"""
    distinct_on: [user_consents_email_plus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_email_plus_order_by!]

    """filter the rows returned"""
    where: user_consents_email_plus_bool_exp
  ): user_consents_email_plus_aggregate!

  """"""
  users_id: uuid!
}

"""
aggregated selection of "user_consents"
"""
type user_consents_aggregate {
  """"""
  aggregate: user_consents_aggregate_fields

  """"""
  nodes: [user_consents!]!
}

"""
aggregate fields of "user_consents"
"""
type user_consents_aggregate_fields {
  """"""
  avg: user_consents_avg_fields

  """"""
  count(columns: [user_consents_select_column!], distinct: Boolean): Int!

  """"""
  max: user_consents_max_fields

  """"""
  min: user_consents_min_fields

  """"""
  stddev: user_consents_stddev_fields

  """"""
  stddev_pop: user_consents_stddev_pop_fields

  """"""
  stddev_samp: user_consents_stddev_samp_fields

  """"""
  sum: user_consents_sum_fields

  """"""
  var_pop: user_consents_var_pop_fields

  """"""
  var_samp: user_consents_var_samp_fields

  """"""
  variance: user_consents_variance_fields
}

"""
order by aggregate values of table "user_consents"
"""
input user_consents_aggregate_order_by {
  """"""
  avg: user_consents_avg_order_by

  """"""
  count: order_by

  """"""
  max: user_consents_max_order_by

  """"""
  min: user_consents_min_order_by

  """"""
  stddev: user_consents_stddev_order_by

  """"""
  stddev_pop: user_consents_stddev_pop_order_by

  """"""
  stddev_samp: user_consents_stddev_samp_order_by

  """"""
  sum: user_consents_sum_order_by

  """"""
  var_pop: user_consents_var_pop_order_by

  """"""
  var_samp: user_consents_var_samp_order_by

  """"""
  variance: user_consents_variance_order_by
}

"""
input type for inserting array relation for remote table "user_consents"
"""
input user_consents_arr_rel_insert_input {
  """"""
  data: [user_consents_insert_input!]!

  """on conflict condition"""
  on_conflict: user_consents_on_conflict
}

"""aggregate avg on columns"""
type user_consents_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "user_consents"
"""
input user_consents_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "user_consents". All fields are combined with a logical 'AND'.
"""
input user_consents_bool_exp {
  """"""
  _and: [user_consents_bool_exp!]

  """"""
  _not: user_consents_bool_exp

  """"""
  _or: [user_consents_bool_exp!]

  """"""
  consent: consents_bool_exp

  """"""
  consents_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  giver_users_id: uuid_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  userByUsersId: users_bool_exp

  """"""
  user_consents_email_plus: user_consents_email_plus_bool_exp

  """"""
  users_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "user_consents"
"""
enum user_consents_constraint {
  """unique or primary key constraint"""
  user_consents_pkey
}

"""
columns and relationships of "user_consents_email_plus"
"""
type user_consents_email_plus {
  """"""
  id: bigint!

  """"""
  next_email_instant: bigint!

  """An object relationship"""
  user_consent: user_consents!

  """"""
  user_consents_id: uuid!
}

"""
aggregated selection of "user_consents_email_plus"
"""
type user_consents_email_plus_aggregate {
  """"""
  aggregate: user_consents_email_plus_aggregate_fields

  """"""
  nodes: [user_consents_email_plus!]!
}

"""
aggregate fields of "user_consents_email_plus"
"""
type user_consents_email_plus_aggregate_fields {
  """"""
  avg: user_consents_email_plus_avg_fields

  """"""
  count(columns: [user_consents_email_plus_select_column!], distinct: Boolean): Int!

  """"""
  max: user_consents_email_plus_max_fields

  """"""
  min: user_consents_email_plus_min_fields

  """"""
  stddev: user_consents_email_plus_stddev_fields

  """"""
  stddev_pop: user_consents_email_plus_stddev_pop_fields

  """"""
  stddev_samp: user_consents_email_plus_stddev_samp_fields

  """"""
  sum: user_consents_email_plus_sum_fields

  """"""
  var_pop: user_consents_email_plus_var_pop_fields

  """"""
  var_samp: user_consents_email_plus_var_samp_fields

  """"""
  variance: user_consents_email_plus_variance_fields
}

"""
order by aggregate values of table "user_consents_email_plus"
"""
input user_consents_email_plus_aggregate_order_by {
  """"""
  avg: user_consents_email_plus_avg_order_by

  """"""
  count: order_by

  """"""
  max: user_consents_email_plus_max_order_by

  """"""
  min: user_consents_email_plus_min_order_by

  """"""
  stddev: user_consents_email_plus_stddev_order_by

  """"""
  stddev_pop: user_consents_email_plus_stddev_pop_order_by

  """"""
  stddev_samp: user_consents_email_plus_stddev_samp_order_by

  """"""
  sum: user_consents_email_plus_sum_order_by

  """"""
  var_pop: user_consents_email_plus_var_pop_order_by

  """"""
  var_samp: user_consents_email_plus_var_samp_order_by

  """"""
  variance: user_consents_email_plus_variance_order_by
}

"""
input type for inserting array relation for remote table "user_consents_email_plus"
"""
input user_consents_email_plus_arr_rel_insert_input {
  """"""
  data: [user_consents_email_plus_insert_input!]!

  """on conflict condition"""
  on_conflict: user_consents_email_plus_on_conflict
}

"""aggregate avg on columns"""
type user_consents_email_plus_avg_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by avg() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_avg_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""
Boolean expression to filter rows from the table "user_consents_email_plus". All fields are combined with a logical 'AND'.
"""
input user_consents_email_plus_bool_exp {
  """"""
  _and: [user_consents_email_plus_bool_exp!]

  """"""
  _not: user_consents_email_plus_bool_exp

  """"""
  _or: [user_consents_email_plus_bool_exp!]

  """"""
  id: bigint_comparison_exp

  """"""
  next_email_instant: bigint_comparison_exp

  """"""
  user_consent: user_consents_bool_exp

  """"""
  user_consents_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "user_consents_email_plus"
"""
enum user_consents_email_plus_constraint {
  """unique or primary key constraint"""
  user_consents_email_plus_pkey
}

"""
input type for incrementing numeric columns in table "user_consents_email_plus"
"""
input user_consents_email_plus_inc_input {
  """"""
  id: bigint

  """"""
  next_email_instant: bigint
}

"""
input type for inserting data into table "user_consents_email_plus"
"""
input user_consents_email_plus_insert_input {
  """"""
  id: bigint

  """"""
  next_email_instant: bigint

  """"""
  user_consent: user_consents_obj_rel_insert_input

  """"""
  user_consents_id: uuid
}

"""aggregate max on columns"""
type user_consents_email_plus_max_fields {
  """"""
  id: bigint

  """"""
  next_email_instant: bigint

  """"""
  user_consents_id: uuid
}

"""
order by max() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_max_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by

  """"""
  user_consents_id: order_by
}

"""aggregate min on columns"""
type user_consents_email_plus_min_fields {
  """"""
  id: bigint

  """"""
  next_email_instant: bigint

  """"""
  user_consents_id: uuid
}

"""
order by min() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_min_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by

  """"""
  user_consents_id: order_by
}

"""
response of any mutation on the table "user_consents_email_plus"
"""
type user_consents_email_plus_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_consents_email_plus!]!
}

"""
on conflict condition type for table "user_consents_email_plus"
"""
input user_consents_email_plus_on_conflict {
  """"""
  constraint: user_consents_email_plus_constraint!

  """"""
  update_columns: [user_consents_email_plus_update_column!]!

  """"""
  where: user_consents_email_plus_bool_exp
}

"""Ordering options when selecting data from "user_consents_email_plus"."""
input user_consents_email_plus_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by

  """"""
  user_consent: user_consents_order_by

  """"""
  user_consents_id: order_by
}

"""primary key columns input for table: user_consents_email_plus"""
input user_consents_email_plus_pk_columns_input {
  """"""
  id: bigint!
}

"""
select columns of table "user_consents_email_plus"
"""
enum user_consents_email_plus_select_column {
  """column name"""
  id

  """column name"""
  next_email_instant

  """column name"""
  user_consents_id
}

"""
input type for updating data in table "user_consents_email_plus"
"""
input user_consents_email_plus_set_input {
  """"""
  id: bigint

  """"""
  next_email_instant: bigint

  """"""
  user_consents_id: uuid
}

"""aggregate stddev on columns"""
type user_consents_email_plus_stddev_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by stddev() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_stddev_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""aggregate stddev_pop on columns"""
type user_consents_email_plus_stddev_pop_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by stddev_pop() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_stddev_pop_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""aggregate stddev_samp on columns"""
type user_consents_email_plus_stddev_samp_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by stddev_samp() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_stddev_samp_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""aggregate sum on columns"""
type user_consents_email_plus_sum_fields {
  """"""
  id: bigint

  """"""
  next_email_instant: bigint
}

"""
order by sum() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_sum_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""
update columns of table "user_consents_email_plus"
"""
enum user_consents_email_plus_update_column {
  """column name"""
  id

  """column name"""
  next_email_instant

  """column name"""
  user_consents_id
}

"""aggregate var_pop on columns"""
type user_consents_email_plus_var_pop_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by var_pop() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_var_pop_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""aggregate var_samp on columns"""
type user_consents_email_plus_var_samp_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by var_samp() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_var_samp_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""aggregate variance on columns"""
type user_consents_email_plus_variance_fields {
  """"""
  id: Float

  """"""
  next_email_instant: Float
}

"""
order by variance() on columns of table "user_consents_email_plus"
"""
input user_consents_email_plus_variance_order_by {
  """"""
  id: order_by

  """"""
  next_email_instant: order_by
}

"""
input type for incrementing numeric columns in table "user_consents"
"""
input user_consents_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "user_consents"
"""
input user_consents_insert_input {
  """"""
  consent: consents_obj_rel_insert_input

  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  giver_users_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  user: users_obj_rel_insert_input

  """"""
  userByUsersId: users_obj_rel_insert_input

  """"""
  user_consents_email_plus: user_consents_email_plus_arr_rel_insert_input

  """"""
  users_id: uuid
}

"""aggregate max on columns"""
type user_consents_max_fields {
  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  giver_users_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "user_consents"
"""
input user_consents_max_order_by {
  """"""
  consents_id: order_by

  """"""
  data: order_by

  """"""
  giver_users_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type user_consents_min_fields {
  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  giver_users_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "user_consents"
"""
input user_consents_min_order_by {
  """"""
  consents_id: order_by

  """"""
  data: order_by

  """"""
  giver_users_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "user_consents"
"""
type user_consents_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_consents!]!
}

"""
input type for inserting object relation for remote table "user_consents"
"""
input user_consents_obj_rel_insert_input {
  """"""
  data: user_consents_insert_input!

  """on conflict condition"""
  on_conflict: user_consents_on_conflict
}

"""
on conflict condition type for table "user_consents"
"""
input user_consents_on_conflict {
  """"""
  constraint: user_consents_constraint!

  """"""
  update_columns: [user_consents_update_column!]!

  """"""
  where: user_consents_bool_exp
}

"""Ordering options when selecting data from "user_consents"."""
input user_consents_order_by {
  """"""
  consent: consents_order_by

  """"""
  consents_id: order_by

  """"""
  data: order_by

  """"""
  giver_users_id: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  user: users_order_by

  """"""
  userByUsersId: users_order_by

  """"""
  user_consents_email_plus_aggregate: user_consents_email_plus_aggregate_order_by

  """"""
  users_id: order_by
}

"""primary key columns input for table: user_consents"""
input user_consents_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "user_consents"
"""
enum user_consents_select_column {
  """column name"""
  consents_id

  """column name"""
  data

  """column name"""
  giver_users_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  users_id
}

"""
input type for updating data in table "user_consents"
"""
input user_consents_set_input {
  """"""
  consents_id: uuid

  """"""
  data: String

  """"""
  giver_users_id: uuid

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  users_id: uuid
}

"""aggregate stddev on columns"""
type user_consents_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "user_consents"
"""
input user_consents_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type user_consents_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "user_consents"
"""
input user_consents_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type user_consents_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "user_consents"
"""
input user_consents_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type user_consents_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "user_consents"
"""
input user_consents_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "user_consents"
"""
enum user_consents_update_column {
  """column name"""
  consents_id

  """column name"""
  data

  """column name"""
  giver_users_id

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  users_id
}

"""aggregate var_pop on columns"""
type user_consents_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "user_consents"
"""
input user_consents_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type user_consents_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "user_consents"
"""
input user_consents_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type user_consents_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "user_consents"
"""
input user_consents_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
columns and relationships of "user_registrations"
"""
type user_registrations {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """"""
  authentication_token: String

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint!

  """"""
  timezone: String

  """An object relationship"""
  user: users!

  """An array relationship"""
  user_registrations_application_roles(
    """distinct select on columns"""
    distinct_on: [user_registrations_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_application_roles_order_by!]

    """filter the rows returned"""
    where: user_registrations_application_roles_bool_exp
  ): [user_registrations_application_roles!]!

  """An aggregate relationship"""
  user_registrations_application_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_registrations_application_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_application_roles_order_by!]

    """filter the rows returned"""
    where: user_registrations_application_roles_bool_exp
  ): user_registrations_application_roles_aggregate!

  """"""
  username: String

  """"""
  username_status: smallint!

  """"""
  users_id: uuid!

  """"""
  verified: Boolean!
}

"""
aggregated selection of "user_registrations"
"""
type user_registrations_aggregate {
  """"""
  aggregate: user_registrations_aggregate_fields

  """"""
  nodes: [user_registrations!]!
}

"""
aggregate fields of "user_registrations"
"""
type user_registrations_aggregate_fields {
  """"""
  avg: user_registrations_avg_fields

  """"""
  count(columns: [user_registrations_select_column!], distinct: Boolean): Int!

  """"""
  max: user_registrations_max_fields

  """"""
  min: user_registrations_min_fields

  """"""
  stddev: user_registrations_stddev_fields

  """"""
  stddev_pop: user_registrations_stddev_pop_fields

  """"""
  stddev_samp: user_registrations_stddev_samp_fields

  """"""
  sum: user_registrations_sum_fields

  """"""
  var_pop: user_registrations_var_pop_fields

  """"""
  var_samp: user_registrations_var_samp_fields

  """"""
  variance: user_registrations_variance_fields
}

"""
order by aggregate values of table "user_registrations"
"""
input user_registrations_aggregate_order_by {
  """"""
  avg: user_registrations_avg_order_by

  """"""
  count: order_by

  """"""
  max: user_registrations_max_order_by

  """"""
  min: user_registrations_min_order_by

  """"""
  stddev: user_registrations_stddev_order_by

  """"""
  stddev_pop: user_registrations_stddev_pop_order_by

  """"""
  stddev_samp: user_registrations_stddev_samp_order_by

  """"""
  sum: user_registrations_sum_order_by

  """"""
  var_pop: user_registrations_var_pop_order_by

  """"""
  var_samp: user_registrations_var_samp_order_by

  """"""
  variance: user_registrations_variance_order_by
}

"""
columns and relationships of "user_registrations_application_roles"
"""
type user_registrations_application_roles {
  """An object relationship"""
  application_role: application_roles!

  """"""
  application_roles_id: uuid!

  """An object relationship"""
  user_registration: user_registrations!

  """"""
  user_registrations_id: uuid!
}

"""
aggregated selection of "user_registrations_application_roles"
"""
type user_registrations_application_roles_aggregate {
  """"""
  aggregate: user_registrations_application_roles_aggregate_fields

  """"""
  nodes: [user_registrations_application_roles!]!
}

"""
aggregate fields of "user_registrations_application_roles"
"""
type user_registrations_application_roles_aggregate_fields {
  """"""
  count(columns: [user_registrations_application_roles_select_column!], distinct: Boolean): Int!

  """"""
  max: user_registrations_application_roles_max_fields

  """"""
  min: user_registrations_application_roles_min_fields
}

"""
order by aggregate values of table "user_registrations_application_roles"
"""
input user_registrations_application_roles_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: user_registrations_application_roles_max_order_by

  """"""
  min: user_registrations_application_roles_min_order_by
}

"""
input type for inserting array relation for remote table "user_registrations_application_roles"
"""
input user_registrations_application_roles_arr_rel_insert_input {
  """"""
  data: [user_registrations_application_roles_insert_input!]!

  """on conflict condition"""
  on_conflict: user_registrations_application_roles_on_conflict
}

"""
Boolean expression to filter rows from the table
"user_registrations_application_roles". All fields are combined with a logical 'AND'.
"""
input user_registrations_application_roles_bool_exp {
  """"""
  _and: [user_registrations_application_roles_bool_exp!]

  """"""
  _not: user_registrations_application_roles_bool_exp

  """"""
  _or: [user_registrations_application_roles_bool_exp!]

  """"""
  application_role: application_roles_bool_exp

  """"""
  application_roles_id: uuid_comparison_exp

  """"""
  user_registration: user_registrations_bool_exp

  """"""
  user_registrations_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "user_registrations_application_roles"
"""
enum user_registrations_application_roles_constraint {
  """unique or primary key constraint"""
  user_registrations_application_roles_uk_1
}

"""
input type for inserting data into table "user_registrations_application_roles"
"""
input user_registrations_application_roles_insert_input {
  """"""
  application_role: application_roles_obj_rel_insert_input

  """"""
  application_roles_id: uuid

  """"""
  user_registration: user_registrations_obj_rel_insert_input

  """"""
  user_registrations_id: uuid
}

"""aggregate max on columns"""
type user_registrations_application_roles_max_fields {
  """"""
  application_roles_id: uuid

  """"""
  user_registrations_id: uuid
}

"""
order by max() on columns of table "user_registrations_application_roles"
"""
input user_registrations_application_roles_max_order_by {
  """"""
  application_roles_id: order_by

  """"""
  user_registrations_id: order_by
}

"""aggregate min on columns"""
type user_registrations_application_roles_min_fields {
  """"""
  application_roles_id: uuid

  """"""
  user_registrations_id: uuid
}

"""
order by min() on columns of table "user_registrations_application_roles"
"""
input user_registrations_application_roles_min_order_by {
  """"""
  application_roles_id: order_by

  """"""
  user_registrations_id: order_by
}

"""
response of any mutation on the table "user_registrations_application_roles"
"""
type user_registrations_application_roles_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_registrations_application_roles!]!
}

"""
on conflict condition type for table "user_registrations_application_roles"
"""
input user_registrations_application_roles_on_conflict {
  """"""
  constraint: user_registrations_application_roles_constraint!

  """"""
  update_columns: [user_registrations_application_roles_update_column!]!

  """"""
  where: user_registrations_application_roles_bool_exp
}

"""
Ordering options when selecting data from "user_registrations_application_roles".
"""
input user_registrations_application_roles_order_by {
  """"""
  application_role: application_roles_order_by

  """"""
  application_roles_id: order_by

  """"""
  user_registration: user_registrations_order_by

  """"""
  user_registrations_id: order_by
}

"""
select columns of table "user_registrations_application_roles"
"""
enum user_registrations_application_roles_select_column {
  """column name"""
  application_roles_id

  """column name"""
  user_registrations_id
}

"""
input type for updating data in table "user_registrations_application_roles"
"""
input user_registrations_application_roles_set_input {
  """"""
  application_roles_id: uuid

  """"""
  user_registrations_id: uuid
}

"""
update columns of table "user_registrations_application_roles"
"""
enum user_registrations_application_roles_update_column {
  """column name"""
  application_roles_id

  """column name"""
  user_registrations_id
}

"""
input type for inserting array relation for remote table "user_registrations"
"""
input user_registrations_arr_rel_insert_input {
  """"""
  data: [user_registrations_insert_input!]!

  """on conflict condition"""
  on_conflict: user_registrations_on_conflict
}

"""aggregate avg on columns"""
type user_registrations_avg_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by avg() on columns of table "user_registrations"
"""
input user_registrations_avg_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""
Boolean expression to filter rows from the table "user_registrations". All fields are combined with a logical 'AND'.
"""
input user_registrations_bool_exp {
  """"""
  _and: [user_registrations_bool_exp!]

  """"""
  _not: user_registrations_bool_exp

  """"""
  _or: [user_registrations_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  authentication_token: String_comparison_exp

  """"""
  clean_speak_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_login_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  timezone: String_comparison_exp

  """"""
  user: users_bool_exp

  """"""
  user_registrations_application_roles: user_registrations_application_roles_bool_exp

  """"""
  username: String_comparison_exp

  """"""
  username_status: smallint_comparison_exp

  """"""
  users_id: uuid_comparison_exp

  """"""
  verified: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "user_registrations"
"""
enum user_registrations_constraint {
  """unique or primary key constraint"""
  user_registrations_pkey

  """unique or primary key constraint"""
  user_registrations_uk_1
}

"""
input type for incrementing numeric columns in table "user_registrations"
"""
input user_registrations_inc_input {
  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  username_status: smallint
}

"""
input type for inserting data into table "user_registrations"
"""
input user_registrations_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  authentication_token: String

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  timezone: String

  """"""
  user: users_obj_rel_insert_input

  """"""
  user_registrations_application_roles: user_registrations_application_roles_arr_rel_insert_input

  """"""
  username: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid

  """"""
  verified: Boolean
}

"""aggregate max on columns"""
type user_registrations_max_fields {
  """"""
  applications_id: uuid

  """"""
  authentication_token: String

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  timezone: String

  """"""
  username: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid
}

"""
order by max() on columns of table "user_registrations"
"""
input user_registrations_max_order_by {
  """"""
  applications_id: order_by

  """"""
  authentication_token: order_by

  """"""
  clean_speak_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  timezone: order_by

  """"""
  username: order_by

  """"""
  username_status: order_by

  """"""
  users_id: order_by
}

"""aggregate min on columns"""
type user_registrations_min_fields {
  """"""
  applications_id: uuid

  """"""
  authentication_token: String

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  timezone: String

  """"""
  username: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid
}

"""
order by min() on columns of table "user_registrations"
"""
input user_registrations_min_order_by {
  """"""
  applications_id: order_by

  """"""
  authentication_token: order_by

  """"""
  clean_speak_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  timezone: order_by

  """"""
  username: order_by

  """"""
  username_status: order_by

  """"""
  users_id: order_by
}

"""
response of any mutation on the table "user_registrations"
"""
type user_registrations_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_registrations!]!
}

"""
input type for inserting object relation for remote table "user_registrations"
"""
input user_registrations_obj_rel_insert_input {
  """"""
  data: user_registrations_insert_input!

  """on conflict condition"""
  on_conflict: user_registrations_on_conflict
}

"""
on conflict condition type for table "user_registrations"
"""
input user_registrations_on_conflict {
  """"""
  constraint: user_registrations_constraint!

  """"""
  update_columns: [user_registrations_update_column!]!

  """"""
  where: user_registrations_bool_exp
}

"""Ordering options when selecting data from "user_registrations"."""
input user_registrations_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  authentication_token: order_by

  """"""
  clean_speak_id: order_by

  """"""
  data: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  timezone: order_by

  """"""
  user: users_order_by

  """"""
  user_registrations_application_roles_aggregate: user_registrations_application_roles_aggregate_order_by

  """"""
  username: order_by

  """"""
  username_status: order_by

  """"""
  users_id: order_by

  """"""
  verified: order_by
}

"""primary key columns input for table: user_registrations"""
input user_registrations_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "user_registrations"
"""
enum user_registrations_select_column {
  """column name"""
  applications_id

  """column name"""
  authentication_token

  """column name"""
  clean_speak_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_login_instant

  """column name"""
  last_update_instant

  """column name"""
  timezone

  """column name"""
  username

  """column name"""
  username_status

  """column name"""
  users_id

  """column name"""
  verified
}

"""
input type for updating data in table "user_registrations"
"""
input user_registrations_set_input {
  """"""
  applications_id: uuid

  """"""
  authentication_token: String

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  timezone: String

  """"""
  username: String

  """"""
  username_status: smallint

  """"""
  users_id: uuid

  """"""
  verified: Boolean
}

"""aggregate stddev on columns"""
type user_registrations_stddev_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by stddev() on columns of table "user_registrations"
"""
input user_registrations_stddev_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""aggregate stddev_pop on columns"""
type user_registrations_stddev_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by stddev_pop() on columns of table "user_registrations"
"""
input user_registrations_stddev_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""aggregate stddev_samp on columns"""
type user_registrations_stddev_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by stddev_samp() on columns of table "user_registrations"
"""
input user_registrations_stddev_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""aggregate sum on columns"""
type user_registrations_sum_fields {
  """"""
  insert_instant: bigint

  """"""
  last_login_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  username_status: smallint
}

"""
order by sum() on columns of table "user_registrations"
"""
input user_registrations_sum_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""
update columns of table "user_registrations"
"""
enum user_registrations_update_column {
  """column name"""
  applications_id

  """column name"""
  authentication_token

  """column name"""
  clean_speak_id

  """column name"""
  data

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_login_instant

  """column name"""
  last_update_instant

  """column name"""
  timezone

  """column name"""
  username

  """column name"""
  username_status

  """column name"""
  users_id

  """column name"""
  verified
}

"""aggregate var_pop on columns"""
type user_registrations_var_pop_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by var_pop() on columns of table "user_registrations"
"""
input user_registrations_var_pop_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""aggregate var_samp on columns"""
type user_registrations_var_samp_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by var_samp() on columns of table "user_registrations"
"""
input user_registrations_var_samp_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""aggregate variance on columns"""
type user_registrations_variance_fields {
  """"""
  insert_instant: Float

  """"""
  last_login_instant: Float

  """"""
  last_update_instant: Float

  """"""
  username_status: Float
}

"""
order by variance() on columns of table "user_registrations"
"""
input user_registrations_variance_order_by {
  """"""
  insert_instant: order_by

  """"""
  last_login_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  username_status: order_by
}

"""
columns and relationships of "users"
"""
type users {
  """"""
  active: Boolean!

  """"""
  birth_date: bpchar

  """"""
  clean_speak_id: uuid

  """"""
  customData: JSON

  """"""
  data: String

  """"""
  device: JSON

  """"""
  expiry: bigint

  """"""
  externalIds: JSON

  """An array relationship"""
  external_identifiers(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): [external_identifiers!]!

  """An aggregate relationship"""
  external_identifiers_aggregate(
    """distinct select on columns"""
    distinct_on: [external_identifiers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [external_identifiers_order_by!]

    """filter the rows returned"""
    where: external_identifiers_bool_exp
  ): external_identifiers_aggregate!

  """An object relationship"""
  failed_login: failed_logins

  """An array relationship"""
  families(
    """distinct select on columns"""
    distinct_on: [families_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [families_order_by!]

    """filter the rows returned"""
    where: families_bool_exp
  ): [families!]!

  """An aggregate relationship"""
  families_aggregate(
    """distinct select on columns"""
    distinct_on: [families_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [families_order_by!]

    """filter the rows returned"""
    where: families_bool_exp
  ): families_aggregate!

  """"""
  firstName: String

  """"""
  first_name: String

  """"""
  framework: JSON

  """"""
  full_name: String

  """An array relationship"""
  group_members(
    """distinct select on columns"""
    distinct_on: [group_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_members_order_by!]

    """filter the rows returned"""
    where: group_members_bool_exp
  ): [group_members!]!

  """An aggregate relationship"""
  group_members_aggregate(
    """distinct select on columns"""
    distinct_on: [group_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [group_members_order_by!]

    """filter the rows returned"""
    where: group_members_bool_exp
  ): group_members_aggregate!

  """"""
  id: uuid!

  """An array relationship"""
  identities(
    """distinct select on columns"""
    distinct_on: [identities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identities_order_by!]

    """filter the rows returned"""
    where: identities_bool_exp
  ): [identities!]!

  """An aggregate relationship"""
  identities_aggregate(
    """distinct select on columns"""
    distinct_on: [identities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identities_order_by!]

    """filter the rows returned"""
    where: identities_bool_exp
  ): identities_aggregate!

  """"""
  image_url: String

  """"""
  insert_instant: bigint!

  """"""
  jdata: JSON

  """"""
  lastName: String

  """"""
  last_name: String

  """"""
  last_update_instant: bigint!

  """"""
  middle_name: String

  """"""
  mobilePhone: String

  """"""
  mobile_phone: String

  """"""
  parent_email: String

  """An array relationship"""
  previous_passwords(
    """distinct select on columns"""
    distinct_on: [previous_passwords_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [previous_passwords_order_by!]

    """filter the rows returned"""
    where: previous_passwords_bool_exp
  ): [previous_passwords!]!

  """An aggregate relationship"""
  previous_passwords_aggregate(
    """distinct select on columns"""
    distinct_on: [previous_passwords_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [previous_passwords_order_by!]

    """filter the rows returned"""
    where: previous_passwords_bool_exp
  ): previous_passwords_aggregate!

  """An array relationship"""
  raw_logins(
    """distinct select on columns"""
    distinct_on: [raw_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_logins_order_by!]

    """filter the rows returned"""
    where: raw_logins_bool_exp
  ): [raw_logins!]!

  """An aggregate relationship"""
  raw_logins_aggregate(
    """distinct select on columns"""
    distinct_on: [raw_logins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [raw_logins_order_by!]

    """filter the rows returned"""
    where: raw_logins_bool_exp
  ): raw_logins_aggregate!

  """An array relationship"""
  refresh_tokens(
    """distinct select on columns"""
    distinct_on: [refresh_tokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_tokens_order_by!]

    """filter the rows returned"""
    where: refresh_tokens_bool_exp
  ): [refresh_tokens!]!

  """An aggregate relationship"""
  refresh_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [refresh_tokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_tokens_order_by!]

    """filter the rows returned"""
    where: refresh_tokens_bool_exp
  ): refresh_tokens_aggregate!

  """"""
  roles: JSON

  """"""
  rootOrgId: String

  """An object relationship"""
  tenant: tenants!

  """"""
  tenants_id: uuid!

  """"""
  timezone: String

  """An array relationship"""
  userActionLogsByActioneeUsersId(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): [user_action_logs!]!

  """An aggregate relationship"""
  userActionLogsByActioneeUsersId_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): user_action_logs_aggregate!

  """An array relationship"""
  userCommentsByCommenterId(
    """distinct select on columns"""
    distinct_on: [user_comments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_comments_order_by!]

    """filter the rows returned"""
    where: user_comments_bool_exp
  ): [user_comments!]!

  """An aggregate relationship"""
  userCommentsByCommenterId_aggregate(
    """distinct select on columns"""
    distinct_on: [user_comments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_comments_order_by!]

    """filter the rows returned"""
    where: user_comments_bool_exp
  ): user_comments_aggregate!

  """An array relationship"""
  userConsentsByUsersId(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): [user_consents!]!

  """An aggregate relationship"""
  userConsentsByUsersId_aggregate(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): user_consents_aggregate!

  """"""
  userLocation: JSON

  """"""
  userType: JSON

  """An array relationship"""
  user_action_logs(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): [user_action_logs!]!

  """An aggregate relationship"""
  user_action_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [user_action_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_action_logs_order_by!]

    """filter the rows returned"""
    where: user_action_logs_bool_exp
  ): user_action_logs_aggregate!

  """An array relationship"""
  user_comments(
    """distinct select on columns"""
    distinct_on: [user_comments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_comments_order_by!]

    """filter the rows returned"""
    where: user_comments_bool_exp
  ): [user_comments!]!

  """An aggregate relationship"""
  user_comments_aggregate(
    """distinct select on columns"""
    distinct_on: [user_comments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_comments_order_by!]

    """filter the rows returned"""
    where: user_comments_bool_exp
  ): user_comments_aggregate!

  """An array relationship"""
  user_consents(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): [user_consents!]!

  """An aggregate relationship"""
  user_consents_aggregate(
    """distinct select on columns"""
    distinct_on: [user_consents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_consents_order_by!]

    """filter the rows returned"""
    where: user_consents_bool_exp
  ): user_consents_aggregate!

  """An array relationship"""
  user_registrations(
    """distinct select on columns"""
    distinct_on: [user_registrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_order_by!]

    """filter the rows returned"""
    where: user_registrations_bool_exp
  ): [user_registrations!]!

  """An aggregate relationship"""
  user_registrations_aggregate(
    """distinct select on columns"""
    distinct_on: [user_registrations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_registrations_order_by!]

    """filter the rows returned"""
    where: user_registrations_bool_exp
  ): user_registrations_aggregate!

  """"""
  username: String
}

"""
aggregated selection of "users"
"""
type users_aggregate {
  """"""
  aggregate: users_aggregate_fields

  """"""
  nodes: [users!]!
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
  """"""
  avg: users_avg_fields

  """"""
  count(columns: [users_select_column!], distinct: Boolean): Int!

  """"""
  max: users_max_fields

  """"""
  min: users_min_fields

  """"""
  stddev: users_stddev_fields

  """"""
  stddev_pop: users_stddev_pop_fields

  """"""
  stddev_samp: users_stddev_samp_fields

  """"""
  sum: users_sum_fields

  """"""
  var_pop: users_var_pop_fields

  """"""
  var_samp: users_var_samp_fields

  """"""
  variance: users_variance_fields
}

"""
order by aggregate values of table "users"
"""
input users_aggregate_order_by {
  """"""
  avg: users_avg_order_by

  """"""
  count: order_by

  """"""
  max: users_max_order_by

  """"""
  min: users_min_order_by

  """"""
  stddev: users_stddev_order_by

  """"""
  stddev_pop: users_stddev_pop_order_by

  """"""
  stddev_samp: users_stddev_samp_order_by

  """"""
  sum: users_sum_order_by

  """"""
  var_pop: users_var_pop_order_by

  """"""
  var_samp: users_var_samp_order_by

  """"""
  variance: users_variance_order_by
}

"""
input type for inserting array relation for remote table "users"
"""
input users_arr_rel_insert_input {
  """"""
  data: [users_insert_input!]!

  """on conflict condition"""
  on_conflict: users_on_conflict
}

"""aggregate avg on columns"""
type users_avg_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by avg() on columns of table "users"
"""
input users_avg_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  """"""
  _and: [users_bool_exp!]

  """"""
  _not: users_bool_exp

  """"""
  _or: [users_bool_exp!]

  """"""
  active: Boolean_comparison_exp

  """"""
  birth_date: bpchar_comparison_exp

  """"""
  clean_speak_id: uuid_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  expiry: bigint_comparison_exp

  """"""
  external_identifiers: external_identifiers_bool_exp

  """"""
  failed_login: failed_logins_bool_exp

  """"""
  families: families_bool_exp

  """"""
  first_name: String_comparison_exp

  """"""
  full_name: String_comparison_exp

  """"""
  group_members: group_members_bool_exp

  """"""
  id: uuid_comparison_exp

  """"""
  identities: identities_bool_exp

  """"""
  image_url: String_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_name: String_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  middle_name: String_comparison_exp

  """"""
  mobile_phone: String_comparison_exp

  """"""
  parent_email: String_comparison_exp

  """"""
  previous_passwords: previous_passwords_bool_exp

  """"""
  raw_logins: raw_logins_bool_exp

  """"""
  refresh_tokens: refresh_tokens_bool_exp

  """"""
  tenant: tenants_bool_exp

  """"""
  tenants_id: uuid_comparison_exp

  """"""
  timezone: String_comparison_exp

  """"""
  userActionLogsByActioneeUsersId: user_action_logs_bool_exp

  """"""
  userCommentsByCommenterId: user_comments_bool_exp

  """"""
  userConsentsByUsersId: user_consents_bool_exp

  """"""
  user_action_logs: user_action_logs_bool_exp

  """"""
  user_comments: user_comments_bool_exp

  """"""
  user_consents: user_consents_bool_exp

  """"""
  user_registrations: user_registrations_bool_exp
}

"""
unique or primary key constraints on table "users"
"""
enum users_constraint {
  """unique or primary key constraint"""
  users_pkey
}

"""
input type for incrementing numeric columns in table "users"
"""
input users_inc_input {
  """"""
  expiry: bigint

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
input type for inserting data into table "users"
"""
input users_insert_input {
  """"""
  active: Boolean

  """"""
  birth_date: bpchar

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  expiry: bigint

  """"""
  external_identifiers: external_identifiers_arr_rel_insert_input

  """"""
  failed_login: failed_logins_obj_rel_insert_input

  """"""
  families: families_arr_rel_insert_input

  """"""
  first_name: String

  """"""
  full_name: String

  """"""
  group_members: group_members_arr_rel_insert_input

  """"""
  id: uuid

  """"""
  identities: identities_arr_rel_insert_input

  """"""
  image_url: String

  """"""
  insert_instant: bigint

  """"""
  last_name: String

  """"""
  last_update_instant: bigint

  """"""
  middle_name: String

  """"""
  mobile_phone: String

  """"""
  parent_email: String

  """"""
  previous_passwords: previous_passwords_arr_rel_insert_input

  """"""
  raw_logins: raw_logins_arr_rel_insert_input

  """"""
  refresh_tokens: refresh_tokens_arr_rel_insert_input

  """"""
  tenant: tenants_obj_rel_insert_input

  """"""
  tenants_id: uuid

  """"""
  timezone: String

  """"""
  userActionLogsByActioneeUsersId: user_action_logs_arr_rel_insert_input

  """"""
  userCommentsByCommenterId: user_comments_arr_rel_insert_input

  """"""
  userConsentsByUsersId: user_consents_arr_rel_insert_input

  """"""
  user_action_logs: user_action_logs_arr_rel_insert_input

  """"""
  user_comments: user_comments_arr_rel_insert_input

  """"""
  user_consents: user_consents_arr_rel_insert_input

  """"""
  user_registrations: user_registrations_arr_rel_insert_input
}

"""aggregate max on columns"""
type users_max_fields {
  """"""
  birth_date: bpchar

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  expiry: bigint

  """"""
  first_name: String

  """"""
  full_name: String

  """"""
  id: uuid

  """"""
  image_url: String

  """"""
  insert_instant: bigint

  """"""
  last_name: String

  """"""
  last_update_instant: bigint

  """"""
  middle_name: String

  """"""
  mobile_phone: String

  """"""
  parent_email: String

  """"""
  tenants_id: uuid

  """"""
  timezone: String
}

"""
order by max() on columns of table "users"
"""
input users_max_order_by {
  """"""
  birth_date: order_by

  """"""
  clean_speak_id: order_by

  """"""
  data: order_by

  """"""
  expiry: order_by

  """"""
  first_name: order_by

  """"""
  full_name: order_by

  """"""
  id: order_by

  """"""
  image_url: order_by

  """"""
  insert_instant: order_by

  """"""
  last_name: order_by

  """"""
  last_update_instant: order_by

  """"""
  middle_name: order_by

  """"""
  mobile_phone: order_by

  """"""
  parent_email: order_by

  """"""
  tenants_id: order_by

  """"""
  timezone: order_by
}

"""aggregate min on columns"""
type users_min_fields {
  """"""
  birth_date: bpchar

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  expiry: bigint

  """"""
  first_name: String

  """"""
  full_name: String

  """"""
  id: uuid

  """"""
  image_url: String

  """"""
  insert_instant: bigint

  """"""
  last_name: String

  """"""
  last_update_instant: bigint

  """"""
  middle_name: String

  """"""
  mobile_phone: String

  """"""
  parent_email: String

  """"""
  tenants_id: uuid

  """"""
  timezone: String
}

"""
order by min() on columns of table "users"
"""
input users_min_order_by {
  """"""
  birth_date: order_by

  """"""
  clean_speak_id: order_by

  """"""
  data: order_by

  """"""
  expiry: order_by

  """"""
  first_name: order_by

  """"""
  full_name: order_by

  """"""
  id: order_by

  """"""
  image_url: order_by

  """"""
  insert_instant: order_by

  """"""
  last_name: order_by

  """"""
  last_update_instant: order_by

  """"""
  middle_name: order_by

  """"""
  mobile_phone: order_by

  """"""
  parent_email: order_by

  """"""
  tenants_id: order_by

  """"""
  timezone: order_by
}

"""
response of any mutation on the table "users"
"""
type users_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [users!]!
}

"""
input type for inserting object relation for remote table "users"
"""
input users_obj_rel_insert_input {
  """"""
  data: users_insert_input!

  """on conflict condition"""
  on_conflict: users_on_conflict
}

"""
on conflict condition type for table "users"
"""
input users_on_conflict {
  """"""
  constraint: users_constraint!

  """"""
  update_columns: [users_update_column!]!

  """"""
  where: users_bool_exp
}

"""Ordering options when selecting data from "users"."""
input users_order_by {
  """"""
  active: order_by

  """"""
  birth_date: order_by

  """"""
  clean_speak_id: order_by

  """"""
  data: order_by

  """"""
  expiry: order_by

  """"""
  external_identifiers_aggregate: external_identifiers_aggregate_order_by

  """"""
  failed_login: failed_logins_order_by

  """"""
  families_aggregate: families_aggregate_order_by

  """"""
  first_name: order_by

  """"""
  full_name: order_by

  """"""
  group_members_aggregate: group_members_aggregate_order_by

  """"""
  id: order_by

  """"""
  identities_aggregate: identities_aggregate_order_by

  """"""
  image_url: order_by

  """"""
  insert_instant: order_by

  """"""
  last_name: order_by

  """"""
  last_update_instant: order_by

  """"""
  middle_name: order_by

  """"""
  mobile_phone: order_by

  """"""
  parent_email: order_by

  """"""
  previous_passwords_aggregate: previous_passwords_aggregate_order_by

  """"""
  raw_logins_aggregate: raw_logins_aggregate_order_by

  """"""
  refresh_tokens_aggregate: refresh_tokens_aggregate_order_by

  """"""
  tenant: tenants_order_by

  """"""
  tenants_id: order_by

  """"""
  timezone: order_by

  """"""
  userActionLogsByActioneeUsersId_aggregate: user_action_logs_aggregate_order_by

  """"""
  userCommentsByCommenterId_aggregate: user_comments_aggregate_order_by

  """"""
  userConsentsByUsersId_aggregate: user_consents_aggregate_order_by

  """"""
  user_action_logs_aggregate: user_action_logs_aggregate_order_by

  """"""
  user_comments_aggregate: user_comments_aggregate_order_by

  """"""
  user_consents_aggregate: user_consents_aggregate_order_by

  """"""
  user_registrations_aggregate: user_registrations_aggregate_order_by
}

"""primary key columns input for table: users"""
input users_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
  active

  """column name"""
  birth_date

  """column name"""
  clean_speak_id

  """column name"""
  data

  """column name"""
  expiry

  """column name"""
  first_name

  """column name"""
  full_name

  """column name"""
  id

  """column name"""
  image_url

  """column name"""
  insert_instant

  """column name"""
  last_name

  """column name"""
  last_update_instant

  """column name"""
  middle_name

  """column name"""
  mobile_phone

  """column name"""
  parent_email

  """column name"""
  tenants_id

  """column name"""
  timezone
}

"""
input type for updating data in table "users"
"""
input users_set_input {
  """"""
  active: Boolean

  """"""
  birth_date: bpchar

  """"""
  clean_speak_id: uuid

  """"""
  data: String

  """"""
  expiry: bigint

  """"""
  first_name: String

  """"""
  full_name: String

  """"""
  id: uuid

  """"""
  image_url: String

  """"""
  insert_instant: bigint

  """"""
  last_name: String

  """"""
  last_update_instant: bigint

  """"""
  middle_name: String

  """"""
  mobile_phone: String

  """"""
  parent_email: String

  """"""
  tenants_id: uuid

  """"""
  timezone: String
}

"""aggregate stddev on columns"""
type users_stddev_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev() on columns of table "users"
"""
input users_stddev_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_pop on columns"""
type users_stddev_pop_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_pop() on columns of table "users"
"""
input users_stddev_pop_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate stddev_samp on columns"""
type users_stddev_samp_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by stddev_samp() on columns of table "users"
"""
input users_stddev_samp_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate sum on columns"""
type users_sum_fields {
  """"""
  expiry: bigint

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint
}

"""
order by sum() on columns of table "users"
"""
input users_sum_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""
update columns of table "users"
"""
enum users_update_column {
  """column name"""
  active

  """column name"""
  birth_date

  """column name"""
  clean_speak_id

  """column name"""
  data

  """column name"""
  expiry

  """column name"""
  first_name

  """column name"""
  full_name

  """column name"""
  id

  """column name"""
  image_url

  """column name"""
  insert_instant

  """column name"""
  last_name

  """column name"""
  last_update_instant

  """column name"""
  middle_name

  """column name"""
  mobile_phone

  """column name"""
  parent_email

  """column name"""
  tenants_id

  """column name"""
  timezone
}

"""aggregate var_pop on columns"""
type users_var_pop_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_pop() on columns of table "users"
"""
input users_var_pop_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate var_samp on columns"""
type users_var_samp_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by var_samp() on columns of table "users"
"""
input users_var_samp_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

"""aggregate variance on columns"""
type users_variance_fields {
  """"""
  expiry: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float
}

"""
order by variance() on columns of table "users"
"""
input users_variance_order_by {
  """"""
  expiry: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

"""
columns and relationships of "version"
"""
type version {
  """"""
  version: String!
}

"""
aggregated selection of "version"
"""
type version_aggregate {
  """"""
  aggregate: version_aggregate_fields

  """"""
  nodes: [version!]!
}

"""
aggregate fields of "version"
"""
type version_aggregate_fields {
  """"""
  count(columns: [version_select_column!], distinct: Boolean): Int!

  """"""
  max: version_max_fields

  """"""
  min: version_min_fields
}

"""
Boolean expression to filter rows from the table "version". All fields are combined with a logical 'AND'.
"""
input version_bool_exp {
  """"""
  _and: [version_bool_exp!]

  """"""
  _not: version_bool_exp

  """"""
  _or: [version_bool_exp!]

  """"""
  version: String_comparison_exp
}

"""
input type for inserting data into table "version"
"""
input version_insert_input {
  """"""
  version: String
}

"""aggregate max on columns"""
type version_max_fields {
  """"""
  version: String
}

"""aggregate min on columns"""
type version_min_fields {
  """"""
  version: String
}

"""
response of any mutation on the table "version"
"""
type version_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [version!]!
}

"""Ordering options when selecting data from "version"."""
input version_order_by {
  """"""
  version: order_by
}

"""
select columns of table "version"
"""
enum version_select_column {
  """column name"""
  version
}

"""
input type for updating data in table "version"
"""
input version_set_input {
  """"""
  version: String
}

"""
columns and relationships of "webhooks"
"""
type webhooks {
  """"""
  connect_timeout: Int!

  """"""
  data: String

  """"""
  description: String

  """"""
  global: Boolean!

  """"""
  headers: String

  """"""
  http_authentication_password: String

  """"""
  http_authentication_username: String

  """"""
  id: uuid!

  """"""
  insert_instant: bigint!

  """"""
  last_update_instant: bigint!

  """"""
  read_timeout: Int!

  """"""
  ssl_certificate: String

  """"""
  url: String!

  """An array relationship"""
  webhooks_applications(
    """distinct select on columns"""
    distinct_on: [webhooks_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_applications_order_by!]

    """filter the rows returned"""
    where: webhooks_applications_bool_exp
  ): [webhooks_applications!]!

  """An aggregate relationship"""
  webhooks_applications_aggregate(
    """distinct select on columns"""
    distinct_on: [webhooks_applications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webhooks_applications_order_by!]

    """filter the rows returned"""
    where: webhooks_applications_bool_exp
  ): webhooks_applications_aggregate!
}

"""
aggregated selection of "webhooks"
"""
type webhooks_aggregate {
  """"""
  aggregate: webhooks_aggregate_fields

  """"""
  nodes: [webhooks!]!
}

"""
aggregate fields of "webhooks"
"""
type webhooks_aggregate_fields {
  """"""
  avg: webhooks_avg_fields

  """"""
  count(columns: [webhooks_select_column!], distinct: Boolean): Int!

  """"""
  max: webhooks_max_fields

  """"""
  min: webhooks_min_fields

  """"""
  stddev: webhooks_stddev_fields

  """"""
  stddev_pop: webhooks_stddev_pop_fields

  """"""
  stddev_samp: webhooks_stddev_samp_fields

  """"""
  sum: webhooks_sum_fields

  """"""
  var_pop: webhooks_var_pop_fields

  """"""
  var_samp: webhooks_var_samp_fields

  """"""
  variance: webhooks_variance_fields
}

"""
columns and relationships of "webhooks_applications"
"""
type webhooks_applications {
  """An object relationship"""
  application: applications!

  """"""
  applications_id: uuid!

  """An object relationship"""
  webhook: webhooks!

  """"""
  webhooks_id: uuid!
}

"""
aggregated selection of "webhooks_applications"
"""
type webhooks_applications_aggregate {
  """"""
  aggregate: webhooks_applications_aggregate_fields

  """"""
  nodes: [webhooks_applications!]!
}

"""
aggregate fields of "webhooks_applications"
"""
type webhooks_applications_aggregate_fields {
  """"""
  count(columns: [webhooks_applications_select_column!], distinct: Boolean): Int!

  """"""
  max: webhooks_applications_max_fields

  """"""
  min: webhooks_applications_min_fields
}

"""
order by aggregate values of table "webhooks_applications"
"""
input webhooks_applications_aggregate_order_by {
  """"""
  count: order_by

  """"""
  max: webhooks_applications_max_order_by

  """"""
  min: webhooks_applications_min_order_by
}

"""
input type for inserting array relation for remote table "webhooks_applications"
"""
input webhooks_applications_arr_rel_insert_input {
  """"""
  data: [webhooks_applications_insert_input!]!

  """on conflict condition"""
  on_conflict: webhooks_applications_on_conflict
}

"""
Boolean expression to filter rows from the table "webhooks_applications". All fields are combined with a logical 'AND'.
"""
input webhooks_applications_bool_exp {
  """"""
  _and: [webhooks_applications_bool_exp!]

  """"""
  _not: webhooks_applications_bool_exp

  """"""
  _or: [webhooks_applications_bool_exp!]

  """"""
  application: applications_bool_exp

  """"""
  applications_id: uuid_comparison_exp

  """"""
  webhook: webhooks_bool_exp

  """"""
  webhooks_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "webhooks_applications"
"""
enum webhooks_applications_constraint {
  """unique or primary key constraint"""
  webhooks_applications_pkey
}

"""
input type for inserting data into table "webhooks_applications"
"""
input webhooks_applications_insert_input {
  """"""
  application: applications_obj_rel_insert_input

  """"""
  applications_id: uuid

  """"""
  webhook: webhooks_obj_rel_insert_input

  """"""
  webhooks_id: uuid
}

"""aggregate max on columns"""
type webhooks_applications_max_fields {
  """"""
  applications_id: uuid

  """"""
  webhooks_id: uuid
}

"""
order by max() on columns of table "webhooks_applications"
"""
input webhooks_applications_max_order_by {
  """"""
  applications_id: order_by

  """"""
  webhooks_id: order_by
}

"""aggregate min on columns"""
type webhooks_applications_min_fields {
  """"""
  applications_id: uuid

  """"""
  webhooks_id: uuid
}

"""
order by min() on columns of table "webhooks_applications"
"""
input webhooks_applications_min_order_by {
  """"""
  applications_id: order_by

  """"""
  webhooks_id: order_by
}

"""
response of any mutation on the table "webhooks_applications"
"""
type webhooks_applications_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [webhooks_applications!]!
}

"""
on conflict condition type for table "webhooks_applications"
"""
input webhooks_applications_on_conflict {
  """"""
  constraint: webhooks_applications_constraint!

  """"""
  update_columns: [webhooks_applications_update_column!]!

  """"""
  where: webhooks_applications_bool_exp
}

"""Ordering options when selecting data from "webhooks_applications"."""
input webhooks_applications_order_by {
  """"""
  application: applications_order_by

  """"""
  applications_id: order_by

  """"""
  webhook: webhooks_order_by

  """"""
  webhooks_id: order_by
}

"""primary key columns input for table: webhooks_applications"""
input webhooks_applications_pk_columns_input {
  """"""
  applications_id: uuid!

  """"""
  webhooks_id: uuid!
}

"""
select columns of table "webhooks_applications"
"""
enum webhooks_applications_select_column {
  """column name"""
  applications_id

  """column name"""
  webhooks_id
}

"""
input type for updating data in table "webhooks_applications"
"""
input webhooks_applications_set_input {
  """"""
  applications_id: uuid

  """"""
  webhooks_id: uuid
}

"""
update columns of table "webhooks_applications"
"""
enum webhooks_applications_update_column {
  """column name"""
  applications_id

  """column name"""
  webhooks_id
}

"""aggregate avg on columns"""
type webhooks_avg_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""
Boolean expression to filter rows from the table "webhooks". All fields are combined with a logical 'AND'.
"""
input webhooks_bool_exp {
  """"""
  _and: [webhooks_bool_exp!]

  """"""
  _not: webhooks_bool_exp

  """"""
  _or: [webhooks_bool_exp!]

  """"""
  connect_timeout: Int_comparison_exp

  """"""
  data: String_comparison_exp

  """"""
  description: String_comparison_exp

  """"""
  global: Boolean_comparison_exp

  """"""
  headers: String_comparison_exp

  """"""
  http_authentication_password: String_comparison_exp

  """"""
  http_authentication_username: String_comparison_exp

  """"""
  id: uuid_comparison_exp

  """"""
  insert_instant: bigint_comparison_exp

  """"""
  last_update_instant: bigint_comparison_exp

  """"""
  read_timeout: Int_comparison_exp

  """"""
  ssl_certificate: String_comparison_exp

  """"""
  url: String_comparison_exp

  """"""
  webhooks_applications: webhooks_applications_bool_exp
}

"""
unique or primary key constraints on table "webhooks"
"""
enum webhooks_constraint {
  """unique or primary key constraint"""
  webhooks_pkey
}

"""
input type for incrementing numeric columns in table "webhooks"
"""
input webhooks_inc_input {
  """"""
  connect_timeout: Int

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  read_timeout: Int
}

"""
input type for inserting data into table "webhooks"
"""
input webhooks_insert_input {
  """"""
  connect_timeout: Int

  """"""
  data: String

  """"""
  description: String

  """"""
  global: Boolean

  """"""
  headers: String

  """"""
  http_authentication_password: String

  """"""
  http_authentication_username: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  read_timeout: Int

  """"""
  ssl_certificate: String

  """"""
  url: String

  """"""
  webhooks_applications: webhooks_applications_arr_rel_insert_input
}

"""aggregate max on columns"""
type webhooks_max_fields {
  """"""
  connect_timeout: Int

  """"""
  data: String

  """"""
  description: String

  """"""
  headers: String

  """"""
  http_authentication_password: String

  """"""
  http_authentication_username: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  read_timeout: Int

  """"""
  ssl_certificate: String

  """"""
  url: String
}

"""aggregate min on columns"""
type webhooks_min_fields {
  """"""
  connect_timeout: Int

  """"""
  data: String

  """"""
  description: String

  """"""
  headers: String

  """"""
  http_authentication_password: String

  """"""
  http_authentication_username: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  read_timeout: Int

  """"""
  ssl_certificate: String

  """"""
  url: String
}

"""
response of any mutation on the table "webhooks"
"""
type webhooks_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [webhooks!]!
}

"""
input type for inserting object relation for remote table "webhooks"
"""
input webhooks_obj_rel_insert_input {
  """"""
  data: webhooks_insert_input!

  """on conflict condition"""
  on_conflict: webhooks_on_conflict
}

"""
on conflict condition type for table "webhooks"
"""
input webhooks_on_conflict {
  """"""
  constraint: webhooks_constraint!

  """"""
  update_columns: [webhooks_update_column!]!

  """"""
  where: webhooks_bool_exp
}

"""Ordering options when selecting data from "webhooks"."""
input webhooks_order_by {
  """"""
  connect_timeout: order_by

  """"""
  data: order_by

  """"""
  description: order_by

  """"""
  global: order_by

  """"""
  headers: order_by

  """"""
  http_authentication_password: order_by

  """"""
  http_authentication_username: order_by

  """"""
  id: order_by

  """"""
  insert_instant: order_by

  """"""
  last_update_instant: order_by

  """"""
  read_timeout: order_by

  """"""
  ssl_certificate: order_by

  """"""
  url: order_by

  """"""
  webhooks_applications_aggregate: webhooks_applications_aggregate_order_by
}

"""primary key columns input for table: webhooks"""
input webhooks_pk_columns_input {
  """"""
  id: uuid!
}

"""
select columns of table "webhooks"
"""
enum webhooks_select_column {
  """column name"""
  connect_timeout

  """column name"""
  data

  """column name"""
  description

  """column name"""
  global

  """column name"""
  headers

  """column name"""
  http_authentication_password

  """column name"""
  http_authentication_username

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  read_timeout

  """column name"""
  ssl_certificate

  """column name"""
  url
}

"""
input type for updating data in table "webhooks"
"""
input webhooks_set_input {
  """"""
  connect_timeout: Int

  """"""
  data: String

  """"""
  description: String

  """"""
  global: Boolean

  """"""
  headers: String

  """"""
  http_authentication_password: String

  """"""
  http_authentication_username: String

  """"""
  id: uuid

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  read_timeout: Int

  """"""
  ssl_certificate: String

  """"""
  url: String
}

"""aggregate stddev on columns"""
type webhooks_stddev_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""aggregate stddev_pop on columns"""
type webhooks_stddev_pop_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""aggregate stddev_samp on columns"""
type webhooks_stddev_samp_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""aggregate sum on columns"""
type webhooks_sum_fields {
  """"""
  connect_timeout: Int

  """"""
  insert_instant: bigint

  """"""
  last_update_instant: bigint

  """"""
  read_timeout: Int
}

"""
update columns of table "webhooks"
"""
enum webhooks_update_column {
  """column name"""
  connect_timeout

  """column name"""
  data

  """column name"""
  description

  """column name"""
  global

  """column name"""
  headers

  """column name"""
  http_authentication_password

  """column name"""
  http_authentication_username

  """column name"""
  id

  """column name"""
  insert_instant

  """column name"""
  last_update_instant

  """column name"""
  read_timeout

  """column name"""
  ssl_certificate

  """column name"""
  url
}

"""aggregate var_pop on columns"""
type webhooks_var_pop_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""aggregate var_samp on columns"""
type webhooks_var_samp_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""aggregate variance on columns"""
type webhooks_variance_fields {
  """"""
  connect_timeout: Float

  """"""
  insert_instant: Float

  """"""
  last_update_instant: Float

  """"""
  read_timeout: Float
}

"""
columns and relationships of "Week 17-24"
"""
type week_17_24 {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""
aggregated selection of "Week 17-24"
"""
type week_17_24_aggregate {
  aggregate: week_17_24_aggregate_fields
  nodes: [week_17_24!]!
}

"""
aggregate fields of "Week 17-24"
"""
type week_17_24_aggregate_fields {
  avg: week_17_24_avg_fields
  count(columns: [week_17_24_select_column!], distinct: Boolean): Int!
  max: week_17_24_max_fields
  min: week_17_24_min_fields
  stddev: week_17_24_stddev_fields
  stddev_pop: week_17_24_stddev_pop_fields
  stddev_samp: week_17_24_stddev_samp_fields
  sum: week_17_24_sum_fields
  var_pop: week_17_24_var_pop_fields
  var_samp: week_17_24_var_samp_fields
  variance: week_17_24_variance_fields
}

"""aggregate avg on columns"""
type week_17_24_avg_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "Week 17-24". All fields are combined with a logical 'AND'.
"""
input week_17_24_bool_exp {
  Week_17_20: bigint_comparison_exp
  Week_21_24: bigint_comparison_exp
  _and: [week_17_24_bool_exp!]
  _not: week_17_24_bool_exp
  _or: [week_17_24_bool_exp!]
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "Week 17-24"
"""
input week_17_24_inc_input {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""
input type for inserting data into table "Week 17-24"
"""
input week_17_24_insert_input {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""aggregate max on columns"""
type week_17_24_max_fields {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""aggregate min on columns"""
type week_17_24_min_fields {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""
response of any mutation on the table "Week 17-24"
"""
type week_17_24_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [week_17_24!]!
}

"""Ordering options when selecting data from "Week 17-24"."""
input week_17_24_order_by {
  Week_17_20: order_by
  Week_21_24: order_by
  id: order_by
}

"""
select columns of table "Week 17-24"
"""
enum week_17_24_select_column {
  """column name"""
  Week_17_20

  """column name"""
  Week_21_24

  """column name"""
  id
}

"""
input type for updating data in table "Week 17-24"
"""
input week_17_24_set_input {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""aggregate stddev on columns"""
type week_17_24_stddev_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type week_17_24_stddev_pop_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type week_17_24_stddev_samp_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""aggregate sum on columns"""
type week_17_24_sum_fields {
  Week_17_20: bigint
  Week_21_24: bigint
  id: Int
}

"""aggregate var_pop on columns"""
type week_17_24_var_pop_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""aggregate var_samp on columns"""
type week_17_24_var_samp_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""aggregate variance on columns"""
type week_17_24_variance_fields {
  Week_17_20: Float
  Week_21_24: Float
  id: Float
}

"""
columns and relationships of "Week 1-8"
"""
type week_1_8 {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""
aggregated selection of "Week 1-8"
"""
type week_1_8_aggregate {
  aggregate: week_1_8_aggregate_fields
  nodes: [week_1_8!]!
}

"""
aggregate fields of "Week 1-8"
"""
type week_1_8_aggregate_fields {
  avg: week_1_8_avg_fields
  count(columns: [week_1_8_select_column!], distinct: Boolean): Int!
  max: week_1_8_max_fields
  min: week_1_8_min_fields
  stddev: week_1_8_stddev_fields
  stddev_pop: week_1_8_stddev_pop_fields
  stddev_samp: week_1_8_stddev_samp_fields
  sum: week_1_8_sum_fields
  var_pop: week_1_8_var_pop_fields
  var_samp: week_1_8_var_samp_fields
  variance: week_1_8_variance_fields
}

"""aggregate avg on columns"""
type week_1_8_avg_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "Week 1-8". All fields are combined with a logical 'AND'.
"""
input week_1_8_bool_exp {
  Week_1_4: bigint_comparison_exp
  Week_5_8: bigint_comparison_exp
  _and: [week_1_8_bool_exp!]
  _not: week_1_8_bool_exp
  _or: [week_1_8_bool_exp!]
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "Week 1-8"
"""
input week_1_8_inc_input {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""
input type for inserting data into table "Week 1-8"
"""
input week_1_8_insert_input {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""aggregate max on columns"""
type week_1_8_max_fields {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""aggregate min on columns"""
type week_1_8_min_fields {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""
response of any mutation on the table "Week 1-8"
"""
type week_1_8_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [week_1_8!]!
}

"""Ordering options when selecting data from "Week 1-8"."""
input week_1_8_order_by {
  Week_1_4: order_by
  Week_5_8: order_by
  id: order_by
}

"""
select columns of table "Week 1-8"
"""
enum week_1_8_select_column {
  """column name"""
  Week_1_4

  """column name"""
  Week_5_8

  """column name"""
  id
}

"""
input type for updating data in table "Week 1-8"
"""
input week_1_8_set_input {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""aggregate stddev on columns"""
type week_1_8_stddev_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type week_1_8_stddev_pop_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type week_1_8_stddev_samp_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""aggregate sum on columns"""
type week_1_8_sum_fields {
  Week_1_4: bigint
  Week_5_8: bigint
  id: Int
}

"""aggregate var_pop on columns"""
type week_1_8_var_pop_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""aggregate var_samp on columns"""
type week_1_8_var_samp_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""aggregate variance on columns"""
type week_1_8_variance_fields {
  Week_1_4: Float
  Week_5_8: Float
  id: Float
}

"""
columns and relationships of "Week 9-16"
"""
type week_9_16 {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""
aggregated selection of "Week 9-16"
"""
type week_9_16_aggregate {
  aggregate: week_9_16_aggregate_fields
  nodes: [week_9_16!]!
}

"""
aggregate fields of "Week 9-16"
"""
type week_9_16_aggregate_fields {
  avg: week_9_16_avg_fields
  count(columns: [week_9_16_select_column!], distinct: Boolean): Int!
  max: week_9_16_max_fields
  min: week_9_16_min_fields
  stddev: week_9_16_stddev_fields
  stddev_pop: week_9_16_stddev_pop_fields
  stddev_samp: week_9_16_stddev_samp_fields
  sum: week_9_16_sum_fields
  var_pop: week_9_16_var_pop_fields
  var_samp: week_9_16_var_samp_fields
  variance: week_9_16_variance_fields
}

"""aggregate avg on columns"""
type week_9_16_avg_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "Week 9-16". All fields are combined with a logical 'AND'.
"""
input week_9_16_bool_exp {
  Week_13_16: bigint_comparison_exp
  Week_9_12: bigint_comparison_exp
  _and: [week_9_16_bool_exp!]
  _not: week_9_16_bool_exp
  _or: [week_9_16_bool_exp!]
  id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "Week 9-16"
"""
input week_9_16_inc_input {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""
input type for inserting data into table "Week 9-16"
"""
input week_9_16_insert_input {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""aggregate max on columns"""
type week_9_16_max_fields {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""aggregate min on columns"""
type week_9_16_min_fields {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""
response of any mutation on the table "Week 9-16"
"""
type week_9_16_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [week_9_16!]!
}

"""Ordering options when selecting data from "Week 9-16"."""
input week_9_16_order_by {
  Week_13_16: order_by
  Week_9_12: order_by
  id: order_by
}

"""
select columns of table "Week 9-16"
"""
enum week_9_16_select_column {
  """column name"""
  Week_13_16

  """column name"""
  Week_9_12

  """column name"""
  id
}

"""
input type for updating data in table "Week 9-16"
"""
input week_9_16_set_input {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""aggregate stddev on columns"""
type week_9_16_stddev_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type week_9_16_stddev_pop_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type week_9_16_stddev_samp_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

"""aggregate sum on columns"""
type week_9_16_sum_fields {
  Week_13_16: bigint
  Week_9_12: bigint
  id: Int
}

"""aggregate var_pop on columns"""
type week_9_16_var_pop_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

"""aggregate var_samp on columns"""
type week_9_16_var_samp_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

"""aggregate variance on columns"""
type week_9_16_variance_fields {
  Week_13_16: Float
  Week_9_12: Float
  id: Float
}

